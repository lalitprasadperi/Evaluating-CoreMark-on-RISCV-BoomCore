
coremark.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 a6 3d 08 70 d8    	add    %ah,-0x278ff7c3(%rsi)
 36d:	b3 d8                	mov    $0xd8,%bl
 36f:	34 65                	xor    $0x65,%al
 371:	be 95 58 4f 4d       	mov    $0x4d4f5895,%esi
 376:	e8 83 8c e4 24       	callq  24e48ffe <_end+0x24e40f8e>
 37b:	88                   	.byte 0x88

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0d 00 00 00 01       	or     $0x1000000,%eax
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 3bd <_init-0xc43>
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	73 00                	jae    3e2 <_init-0xc1e>
 3e2:	00 00                	add    %al,(%rax)
 3e4:	12 00                	adc    (%rax),%al
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	2e 00 00             	add    %al,%cs:(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 a5 00 00 00 20    	add    %ah,0x20000000(%rbp)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 18                	add    %bl,(%rax)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 1d 00 00 00 12    	add    %bl,0x12000000(%rip)        # 1200045d <_end+0x11ff83ed>
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 36                	add    %dh,(%rsi)
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 61 00             	add    %ah,0x0(%rcx)
 48a:	00 00                	add    %al,(%rax)
 48c:	12 00                	adc    (%rax),%al
	...
 49e:	00 00                	add    %al,(%rax)
 4a0:	c1 00 00             	roll   $0x0,(%rax)
 4a3:	00 20                	add    %ah,(%rax)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 3d 00 00 00 12    	add    %bh,0x12000000(%rip)        # 120004bd <_end+0x11ff844d>
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 0b                	add    %cl,(%rbx)
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 12                	add    %dl,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 d0                	add    %dl,%al
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 20                	add    %ah,(%rax)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 52 00             	add    %dl,0x0(%rdx)
 502:	00 00                	add    %al,(%rax)
 504:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000518 <.dynstr>:
 518:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 51c:	63 2e                	movslq (%rsi),%ebp
 51e:	73 6f                	jae    58f <_init-0xa71>
 520:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 525:	70 72                	jo     599 <_init-0xa67>
 527:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
 52e:	6b 00 70             	imul   $0x70,(%rax),%eax
 531:	75 74                	jne    5a7 <_init-0xa59>
 533:	73 00                	jae    535 <_init-0xacb>
 535:	5f                   	pop    %rdi
 536:	5f                   	pop    %rdi
 537:	73 74                	jae    5ad <_init-0xa53>
 539:	61                   	(bad)  
 53a:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 53d:	63 68 6b             	movslq 0x6b(%rax),%ebp
 540:	5f                   	pop    %rdi
 541:	66 61                	data16 (bad) 
 543:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 54a:	68 
 54b:	61                   	(bad)  
 54c:	72 00                	jb     54e <_init-0xab2>
 54e:	6d                   	insl   (%dx),%es:(%rdi)
 54f:	65 6d                	gs insl (%dx),%es:(%rdi)
 551:	73 65                	jae    5b8 <_init-0xa48>
 553:	74 00                	je     555 <_init-0xaab>
 555:	6d                   	insl   (%dx),%es:(%rdi)
 556:	61                   	(bad)  
 557:	6c                   	insb   (%dx),%es:(%rdi)
 558:	6c                   	insb   (%dx),%es:(%rdi)
 559:	6f                   	outsl  %ds:(%rsi),(%dx)
 55a:	63 00                	movslq (%rax),%eax
 55c:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 560:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 564:	74 74                	je     5da <_init-0xa26>
 566:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 56d:	78 61                	js     5d0 <_init-0xa30>
 56f:	5f                   	pop    %rdi
 570:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 576:	7a 65                	jp     5dd <_init-0xa23>
 578:	00 5f 5f             	add    %bl,0x5f(%rdi)
 57b:	6c                   	insb   (%dx),%es:(%rdi)
 57c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 583:	72 74                	jb     5f9 <_init-0xa07>
 585:	5f                   	pop    %rdi
 586:	6d                   	insl   (%dx),%es:(%rdi)
 587:	61                   	(bad)  
 588:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 58f:	00 47 4c             	add    %al,0x4c(%rdi)
 592:	49                   	rex.WB
 593:	42                   	rex.X
 594:	43 5f                	rex.XB pop %r15
 596:	32 2e                	xor    (%rsi),%ch
 598:	33 2e                	xor    (%rsi),%ebp
 59a:	34 00                	xor    $0x0,%al
 59c:	47                   	rex.RXB
 59d:	4c                   	rex.WR
 59e:	49                   	rex.WB
 59f:	42                   	rex.X
 5a0:	43 5f                	rex.XB pop %r15
 5a2:	32 2e                	xor    (%rsi),%ch
 5a4:	34 00                	xor    $0x0,%al
 5a6:	47                   	rex.RXB
 5a7:	4c                   	rex.WR
 5a8:	49                   	rex.WB
 5a9:	42                   	rex.X
 5aa:	43 5f                	rex.XB pop %r15
 5ac:	32 2e                	xor    (%rsi),%ch
 5ae:	31 37                	xor    %esi,(%rdi)
 5b0:	00 47 4c             	add    %al,0x4c(%rdi)
 5b3:	49                   	rex.WB
 5b4:	42                   	rex.X
 5b5:	43 5f                	rex.XB pop %r15
 5b7:	32 2e                	xor    (%rsi),%ch
 5b9:	32 2e                	xor    (%rsi),%ch
 5bb:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 5c0:	4d 5f                	rex.WRB pop %r15
 5c2:	64 65 72 65          	fs gs jb 62b <_init-0x9d5>
 5c6:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5cd:	4d 
 5ce:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5d0:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d1:	6e                   	outsb  %ds:(%rsi),(%dx)
 5d2:	65 54                	gs push %rsp
 5d4:	61                   	(bad)  
 5d5:	62                   	(bad)  
 5d6:	6c                   	insb   (%dx),%es:(%rdi)
 5d7:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5db:	67 6d                	insl   (%dx),%es:(%edi)
 5dd:	6f                   	outsl  %ds:(%rsi),(%dx)
 5de:	6e                   	outsb  %ds:(%rsi),(%dx)
 5df:	5f                   	pop    %rdi
 5e0:	73 74                	jae    656 <_init-0x9aa>
 5e2:	61                   	(bad)  
 5e3:	72 74                	jb     659 <_init-0x9a7>
 5e5:	5f                   	pop    %rdi
 5e6:	5f                   	pop    %rdi
 5e7:	00 5f 49             	add    %bl,0x49(%rdi)
 5ea:	54                   	push   %rsp
 5eb:	4d 5f                	rex.WRB pop %r15
 5ed:	72 65                	jb     654 <_init-0x9ac>
 5ef:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5f6:	4d 
 5f7:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5f9:	6f                   	outsl  %ds:(%rsi),(%dx)
 5fa:	6e                   	outsb  %ds:(%rsi),(%dx)
 5fb:	65 54                	gs push %rsp
 5fd:	61                   	(bad)  
 5fe:	62                   	.byte 0x62
 5ff:	6c                   	insb   (%dx),%es:(%rdi)
 600:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000602 <.gnu.version>:
 602:	00 00                	add    %al,(%rax)
 604:	02 00                	add    (%rax),%al
 606:	02 00                	add    (%rax),%al
 608:	00 00                	add    %al,(%rax)
 60a:	02 00                	add    (%rax),%al
 60c:	03 00                	add    (%rax),%eax
 60e:	04 00                	add    $0x0,%al
 610:	02 00                	add    (%rax),%al
 612:	02 00                	add    (%rax),%al
 614:	00 00                	add    %al,(%rax)
 616:	02 00                	add    (%rax),%al
 618:	05 00 00 00 02       	add    $0x2000000,%eax
	...

Disassembly of section .gnu.version_r:

0000000000000620 <.gnu.version_r>:
 620:	01 00                	add    %eax,(%rax)
 622:	04 00                	add    $0x0,%al
 624:	01 00                	add    %eax,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	10 00                	adc    %al,(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	74 19                	je     64b <_init-0x9b5>
 632:	69 09 00 00 05 00    	imul   $0x50000,(%rcx),%ecx
 638:	78 00                	js     63a <_init-0x9c6>
 63a:	00 00                	add    %al,(%rax)
 63c:	10 00                	adc    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	14 69                	adc    $0x69,%al
 642:	69 0d 00 00 04 00 84 	imul   $0x84,0x40000(%rip),%ecx        # 4064c <_end+0x385dc>
 649:	00 00 00 
 64c:	10 00                	adc    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	97                   	xchg   %eax,%edi
 651:	91                   	xchg   %eax,%ecx
 652:	96                   	xchg   %eax,%esi
 653:	06                   	(bad)  
 654:	00 00                	add    %al,(%rax)
 656:	03 00                	add    (%rax),%eax
 658:	8e 00                	mov    (%rax),%es
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	75 1a                	jne    67c <_init-0x984>
 662:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 668:	99                   	cltd   
 669:	00 00                	add    %al,(%rax)
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000670 <.rela.dyn>:
 670:	e8 7c 00 00 00       	callq  6f1 <_init-0x90f>
 675:	00 00                	add    %al,(%rax)
 677:	00 08                	add    %cl,(%rax)
 679:	00 00                	add    %al,(%rax)
 67b:	00 00                	add    %al,(%rax)
 67d:	00 00                	add    %al,(%rax)
 67f:	00 d0                	add    %dl,%al
 681:	1c 00                	sbb    $0x0,%al
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 f0                	add    %dh,%al
 689:	7c 00                	jl     68b <_init-0x975>
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 08                	add    %cl,(%rax)
 691:	00 00                	add    %al,(%rax)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 d0                	add    %dl,%al
 699:	1b 00                	sbb    (%rax),%eax
 69b:	00 00                	add    %al,(%rax)
 69d:	00 00                	add    %al,(%rax)
 69f:	00 f8                	add    %bh,%al
 6a1:	7c 00                	jl     6a3 <_init-0x95d>
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 08                	add    %cl,(%rax)
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 90 1c 00 00 00    	add    %dl,0x1c(%rax)
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 00                	add    %al,(%rax)
 6b9:	7d 00                	jge    6bb <_init-0x945>
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 88 54 00 00 00    	add    %cl,0x54(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 08                	add    %cl,(%rax)
 6d1:	7d 00                	jge    6d3 <_init-0x92d>
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 08                	add    %cl,(%rax)
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 91 54 00 00 00    	add    %dl,0x54(%rcx)
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 10                	add    %dl,(%rax)
 6e9:	7d 00                	jge    6eb <_init-0x915>
 6eb:	00 00                	add    %al,(%rax)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 08                	add    %cl,(%rax)
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 9a 54 00 00 00    	add    %bl,0x54(%rdx)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 18                	add    %bl,(%rax)
 701:	7d 00                	jge    703 <_init-0x8fd>
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 08                	add    %cl,(%rax)
 709:	00 00                	add    %al,(%rax)
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 a3 54 00 00 00    	add    %ah,0x54(%rbx)
 715:	00 00                	add    %al,(%rax)
 717:	00 20                	add    %ah,(%rax)
 719:	7d 00                	jge    71b <_init-0x8e5>
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 08                	add    %cl,(%rax)
 721:	00 00                	add    %al,(%rax)
 723:	00 00                	add    %al,(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 ac 54 00 00 00 00 	add    %ch,0x0(%rsp,%rdx,2)
 72e:	00 00                	add    %al,(%rax)
 730:	28 7d 00             	sub    %bh,0x0(%rbp)
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 08                	add    %cl,(%rax)
 739:	00 00                	add    %al,(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 b5 54 00 00 00    	add    %dh,0x54(%rbp)
 745:	00 00                	add    %al,(%rax)
 747:	00 30                	add    %dh,(%rax)
 749:	7d 00                	jge    74b <_init-0x8b5>
 74b:	00 00                	add    %al,(%rax)
 74d:	00 00                	add    %al,(%rax)
 74f:	00 08                	add    %cl,(%rax)
 751:	00 00                	add    %al,(%rax)
 753:	00 00                	add    %al,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 be 54 00 00 00    	add    %bh,0x54(%rsi)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 38                	add    %bh,(%rax)
 761:	7d 00                	jge    763 <_init-0x89d>
 763:	00 00                	add    %al,(%rax)
 765:	00 00                	add    %al,(%rax)
 767:	00 08                	add    %cl,(%rax)
 769:	00 00                	add    %al,(%rax)
 76b:	00 00                	add    %al,(%rax)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 c7                	add    %al,%bh
 771:	54                   	push   %rsp
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	40 7d 00             	rex jge 77b <_init-0x885>
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 08                	add    %cl,(%rax)
 781:	00 00                	add    %al,(%rax)
 783:	00 00                	add    %al,(%rax)
 785:	00 00                	add    %al,(%rax)
 787:	00 d0                	add    %dl,%al
 789:	54                   	push   %rsp
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	48 7d 00             	rex.W jge 793 <_init-0x86d>
 793:	00 00                	add    %al,(%rax)
 795:	00 00                	add    %al,(%rax)
 797:	00 08                	add    %cl,(%rax)
 799:	00 00                	add    %al,(%rax)
 79b:	00 00                	add    %al,(%rax)
 79d:	00 00                	add    %al,(%rax)
 79f:	00 d9                	add    %bl,%cl
 7a1:	54                   	push   %rsp
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	50                   	push   %rax
 7a9:	7d 00                	jge    7ab <_init-0x855>
 7ab:	00 00                	add    %al,(%rax)
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 08                	add    %cl,(%rax)
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 00                	add    %al,(%rax)
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 e2                	add    %ah,%dl
 7b9:	54                   	push   %rsp
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	58                   	pop    %rax
 7c1:	7d 00                	jge    7c3 <_init-0x83d>
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 08                	add    %cl,(%rax)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 00                	add    %al,(%rax)
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 eb                	add    %ch,%bl
 7d1:	54                   	push   %rsp
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	60                   	(bad)  
 7d9:	7d 00                	jge    7db <_init-0x825>
 7db:	00 00                	add    %al,(%rax)
 7dd:	00 00                	add    %al,(%rax)
 7df:	00 08                	add    %cl,(%rax)
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 00                	add    %al,(%rax)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 f4                	add    %dh,%ah
 7e9:	54                   	push   %rsp
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	68 7d 00 00 00       	pushq  $0x7d
 7f5:	00 00                	add    %al,(%rax)
 7f7:	00 08                	add    %cl,(%rax)
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 00                	add    %al,(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 f9                	add    %bh,%cl
 801:	54                   	push   %rsp
 802:	00 00                	add    %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	70 7d                	jo     887 <_init-0x779>
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	08 00                	or     %al,(%rax)
 812:	00 00                	add    %al,(%rax)
 814:	00 00                	add    %al,(%rax)
 816:	00 00                	add    %al,(%rax)
 818:	fe                   	(bad)  
 819:	54                   	push   %rsp
 81a:	00 00                	add    %al,(%rax)
 81c:	00 00                	add    %al,(%rax)
 81e:	00 00                	add    %al,(%rax)
 820:	78 7d                	js     89f <_init-0x761>
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	08 00                	or     %al,(%rax)
 82a:	00 00                	add    %al,(%rax)
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	03 55 00             	add    0x0(%rbp),%edx
 833:	00 00                	add    %al,(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 08                	add    %cl,(%rax)
 839:	80 00 00             	addb   $0x0,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	08 00                	or     %al,(%rax)
 842:	00 00                	add    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	08 80 00 00 00 00    	or     %al,0x0(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	10 80 00 00 00 00    	adc    %al,0x0(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	08 00                	or     %al,(%rax)
 85a:	00 00                	add    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	57                   	push   %rdi
 861:	54                   	push   %rsp
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	18 80 00 00 00 00    	sbb    %al,0x0(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	08 00                	or     %al,(%rax)
 872:	00 00                	add    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	5e                   	pop    %rsi
 879:	54                   	push   %rsp
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	20 80 00 00 00 00    	and    %al,0x0(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	08 00                	or     %al,(%rax)
 88a:	00 00                	add    %al,(%rax)
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	63 54 00 00          	movslq 0x0(%rax,%rax,1),%edx
 894:	00 00                	add    %al,(%rax)
 896:	00 00                	add    %al,(%rax)
 898:	c8 7f 00 00          	enterq $0x7f,$0x0
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	06                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 03                	add    %al,(%rbx)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 d0                	add    %dl,%al
 8b1:	7f 00                	jg     8b3 <_init-0x74d>
 8b3:	00 00                	add    %al,(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 06                	add    %al,(%rsi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 08                	add    %cl,(%rax)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 d8                	add    %bl,%al
 8c9:	7f 00                	jg     8cb <_init-0x735>
 8cb:	00 00                	add    %al,(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 06                	add    %al,(%rsi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 09                	add    %cl,(%rcx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 e0                	add    %ah,%al
 8e1:	7f 00                	jg     8e3 <_init-0x71d>
 8e3:	00 00                	add    %al,(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 06                	add    %al,(%rsi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 8f6:	00 00                	add    %al,(%rax)
 8f8:	e8 7f 00 00 00       	callq  97c <_init-0x684>
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 06                	add    %al,(%rsi)
 901:	00 00                	add    %al,(%rax)
 903:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 909 <_init-0x6f7>
 909:	00 00                	add    %al,(%rax)
 90b:	00 00                	add    %al,(%rax)
 90d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000910 <.rela.plt>:
 910:	88 7f 00             	mov    %bh,0x0(%rdi)
 913:	00 00                	add    %al,(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	00 07                	add    %al,(%rdi)
 919:	00 00                	add    %al,(%rax)
 91b:	00 01                	add    %al,(%rcx)
	...
 925:	00 00                	add    %al,(%rax)
 927:	00 90 7f 00 00 00    	add    %dl,0x7f(%rax)
 92d:	00 00                	add    %al,(%rax)
 92f:	00 07                	add    %al,(%rdi)
 931:	00 00                	add    %al,(%rax)
 933:	00 02                	add    %al,(%rdx)
	...
 93d:	00 00                	add    %al,(%rax)
 93f:	00 98 7f 00 00 00    	add    %bl,0x7f(%rax)
 945:	00 00                	add    %al,(%rax)
 947:	00 07                	add    %al,(%rdi)
 949:	00 00                	add    %al,(%rax)
 94b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 956:	00 00                	add    %al,(%rax)
 958:	a0 7f 00 00 00 00 00 	movabs 0x70000000000007f,%al
 95f:	00 07 
 961:	00 00                	add    %al,(%rax)
 963:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 969 <_init-0x697>
 969:	00 00                	add    %al,(%rax)
 96b:	00 00                	add    %al,(%rax)
 96d:	00 00                	add    %al,(%rax)
 96f:	00 a8 7f 00 00 00    	add    %ch,0x7f(%rax)
 975:	00 00                	add    %al,(%rax)
 977:	00 07                	add    %al,(%rdi)
 979:	00 00                	add    %al,(%rax)
 97b:	00 06                	add    %al,(%rsi)
	...
 985:	00 00                	add    %al,(%rax)
 987:	00 b0 7f 00 00 00    	add    %dh,0x7f(%rax)
 98d:	00 00                	add    %al,(%rax)
 98f:	00 07                	add    %al,(%rdi)
 991:	00 00                	add    %al,(%rax)
 993:	00 07                	add    %al,(%rdi)
	...
 99d:	00 00                	add    %al,(%rax)
 99f:	00 b8 7f 00 00 00    	add    %bh,0x7f(%rax)
 9a5:	00 00                	add    %al,(%rax)
 9a7:	00 07                	add    %al,(%rdi)
 9a9:	00 00                	add    %al,(%rax)
 9ab:	00 0a                	add    %cl,(%rdx)
	...
 9b5:	00 00                	add    %al,(%rax)
 9b7:	00 c0                	add    %al,%al
 9b9:	7f 00                	jg     9bb <_init-0x645>
 9bb:	00 00                	add    %al,(%rax)
 9bd:	00 00                	add    %al,(%rax)
 9bf:	00 07                	add    %al,(%rdi)
 9c1:	00 00                	add    %al,(%rax)
 9c3:	00 0b                	add    %cl,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c9 6f 00 00 	mov    0x6fc9(%rip),%rax        # 7fd8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 6f 00 00    	pushq  0x6f52(%rip)        # 7f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 6f 00 00 	bnd jmpq *0x6f53(%rip)        # 7f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 2d 6f 00 00 	bnd jmpq *0x6f2d(%rip)        # 7fe8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010c0 <free@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 bd 6e 00 00 	bnd jmpq *0x6ebd(%rip)        # 7f88 <free@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <putchar@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 6e 00 00 	bnd jmpq *0x6eb5(%rip)        # 7f90 <putchar@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <puts@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 6e 00 00 	bnd jmpq *0x6ead(%rip)        # 7f98 <puts@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <clock_gettime@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 6e 00 00 	bnd jmpq *0x6ea5(%rip)        # 7fa0 <clock_gettime@GLIBC_2.17>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 6e 00 00 	bnd jmpq *0x6e9d(%rip)        # 7fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <memset@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 6e 00 00 	bnd jmpq *0x6e95(%rip)        # 7fb0 <memset@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <malloc@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 6e 00 00 	bnd jmpq *0x6e8d(%rip)        # 7fb8 <malloc@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <__printf_chk@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 6e 00 00 	bnd jmpq *0x6e85(%rip)        # 7fc0 <__printf_chk@GLIBC_2.3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001140 <core_bench_list.cold>:
    1140:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    1147:	00 00 00 00 00 
    114c:	0f 0b                	ud2    
    114e:	48 8b 04 25 00 00 00 	mov    0x0,%rax
    1155:	00 
    1156:	0f 0b                	ud2    
    1158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    115f:	00 

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	41 57                	push   %r15
    1166:	41 56                	push   %r14
    1168:	41 55                	push   %r13
    116a:	41 54                	push   %r12
    116c:	55                   	push   %rbp
    116d:	53                   	push   %rbx
    116e:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    1175:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117c:	00 00 
    117e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    1185:	00 
    1186:	31 c0                	xor    %eax,%eax
    1188:	48 8d ac 24 aa 00 00 	lea    0xaa(%rsp),%rbp
    118f:	00 
    1190:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
    1195:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
    119c:	00 
    119d:	48 8d 74 24 34       	lea    0x34(%rsp),%rsi
    11a2:	48 89 ef             	mov    %rbp,%rdi
    11a5:	e8 86 30 00 00       	callq  4230 <portable_init>
    11aa:	bf 01 00 00 00       	mov    $0x1,%edi
    11af:	e8 cc 27 00 00       	callq  3980 <get_seed_32>
    11b4:	bf 02 00 00 00       	mov    $0x2,%edi
    11b9:	66 89 44 24 40       	mov    %ax,0x40(%rsp)
    11be:	e8 bd 27 00 00       	callq  3980 <get_seed_32>
    11c3:	bf 03 00 00 00       	mov    $0x3,%edi
    11c8:	66 89 44 24 42       	mov    %ax,0x42(%rsp)
    11cd:	e8 ae 27 00 00       	callq  3980 <get_seed_32>
    11d2:	bf 04 00 00 00       	mov    $0x4,%edi
    11d7:	66 89 44 24 44       	mov    %ax,0x44(%rsp)
    11dc:	e8 9f 27 00 00       	callq  3980 <get_seed_32>
    11e1:	bf 05 00 00 00       	mov    $0x5,%edi
    11e6:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    11ea:	e8 91 27 00 00       	callq  3980 <get_seed_32>
    11ef:	ba 07 00 00 00       	mov    $0x7,%edx
    11f4:	85 c0                	test   %eax,%eax
    11f6:	0f 44 c2             	cmove  %edx,%eax
    11f9:	89 44 24 70          	mov    %eax,0x70(%rsp)
    11fd:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1204:	ff 00 00 
    1207:	48 85 44 24 40       	test   %rax,0x40(%rsp)
    120c:	75 0f                	jne    121d <main+0xbd>
    120e:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
    1215:	00 
    1216:	66 c7 44 24 44 66 00 	movw   $0x66,0x44(%rsp)
    121d:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1224:	ff 00 00 
    1227:	48 23 44 24 40       	and    0x40(%rsp),%rax
    122c:	48 83 f8 01          	cmp    $0x1,%rax
    1230:	75 0f                	jne    1241 <main+0xe1>
    1232:	c7 44 24 40 15 34 15 	movl   $0x34153415,0x40(%rsp)
    1239:	34 
    123a:	66 c7 44 24 44 66 00 	movw   $0x66,0x44(%rsp)
    1241:	bf 07 00 00 00       	mov    $0x7,%edi
    1246:	e8 35 27 00 00       	callq  3980 <get_seed_32>
    124b:	b9 d0 07 00 00       	mov    $0x7d0,%ecx
    1250:	0f bf f8             	movswl %ax,%edi
    1253:	66 85 c0             	test   %ax,%ax
    1256:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    125b:	48 89 fa             	mov    %rdi,%rdx
    125e:	48 0f 44 f8          	cmove  %rax,%rdi
    1262:	0f 44 d1             	cmove  %ecx,%edx
    1265:	89 54 24 68          	mov    %edx,0x68(%rsp)
    1269:	e8 f2 2e 00 00       	callq  4160 <portable_malloc>
    126e:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    1272:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1277:	49 89 c0             	mov    %rax,%r8
    127a:	31 c0                	xor    %eax,%eax
    127c:	41 89 ca             	mov    %ecx,%r10d
    127f:	89 cf                	mov    %ecx,%edi
    1281:	66 89 84 24 a8 00 00 	mov    %ax,0xa8(%rsp)
    1288:	00 
    1289:	41 89 c9             	mov    %ecx,%r9d
    128c:	41 83 e2 01          	and    $0x1,%r10d
    1290:	83 e7 02             	and    $0x2,%edi
    1293:	83 ff 01             	cmp    $0x1,%edi
    1296:	44 89 d0             	mov    %r10d,%eax
    1299:	66 83 d8 ff          	sbb    $0xffff,%ax
    129d:	41 83 e1 04          	and    $0x4,%r9d
    12a1:	41 83 f9 01          	cmp    $0x1,%r9d
    12a5:	66 83 d8 ff          	sbb    $0xffff,%ax
    12a9:	31 d2                	xor    %edx,%edx
    12ab:	0f b7 f0             	movzwl %ax,%esi
    12ae:	8b 44 24 68          	mov    0x68(%rsp),%eax
    12b2:	f7 f6                	div    %esi
    12b4:	31 d2                	xor    %edx,%edx
    12b6:	89 44 24 68          	mov    %eax,0x68(%rsp)
    12ba:	45 85 d2             	test   %r10d,%r10d
    12bd:	0f 85 10 08 00 00    	jne    1ad3 <main+0x973>
    12c3:	85 ff                	test   %edi,%edi
    12c5:	0f 85 f2 07 00 00    	jne    1abd <main+0x95d>
    12cb:	45 85 c9             	test   %r9d,%r9d
    12ce:	0f 85 d6 07 00 00    	jne    1aaa <main+0x94a>
    12d4:	45 85 d2             	test   %r10d,%r10d
    12d7:	74 1a                	je     12f3 <main+0x193>
    12d9:	0f bf 54 24 40       	movswl 0x40(%rsp),%edx
    12de:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    12e3:	89 c7                	mov    %eax,%edi
    12e5:	e8 f6 11 00 00       	callq  24e0 <core_list_init>
    12ea:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    12ee:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    12f3:	f6 c1 02             	test   $0x2,%cl
    12f6:	0f 85 24 03 00 00    	jne    1620 <main+0x4c0>
    12fc:	83 e1 04             	and    $0x4,%ecx
    12ff:	74 13                	je     1314 <main+0x1b4>
    1301:	0f bf 74 24 40       	movswl 0x40(%rsp),%esi
    1306:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    130b:	8b 7c 24 68          	mov    0x68(%rsp),%edi
    130f:	e8 ec 1f 00 00       	callq  3300 <core_init_state>
    1314:	44 8b 44 24 6c       	mov    0x6c(%rsp),%r8d
    1319:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    131e:	45 85 c0             	test   %r8d,%r8d
    1321:	0f 85 db 00 00 00    	jne    1402 <main+0x2a2>
    1327:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%rsp)
    132e:	00 
    132f:	90                   	nop
    1330:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1334:	31 db                	xor    %ebx,%ebx
    1336:	8d 04 80             	lea    (%rax,%rax,4),%eax
    1339:	01 c0                	add    %eax,%eax
    133b:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    133f:	e8 3c 2e 00 00       	callq  4180 <start_time>
    1344:	44 8b 6c 24 6c       	mov    0x6c(%rsp),%r13d
    1349:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    1350:	00 00 00 00 00 
    1355:	45 85 ed             	test   %r13d,%r13d
    1358:	74 60                	je     13ba <main+0x25a>
    135a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1360:	be 01 00 00 00       	mov    $0x1,%esi
    1365:	4c 89 e7             	mov    %r12,%rdi
    1368:	e8 c3 0c 00 00       	callq  2030 <core_bench_list>
    136d:	0f b7 b4 24 a0 00 00 	movzwl 0xa0(%rsp),%esi
    1374:	00 
    1375:	0f b7 f8             	movzwl %ax,%edi
    1378:	e8 43 27 00 00       	callq  3ac0 <crcu16>
    137d:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1382:	4c 89 e7             	mov    %r12,%rdi
    1385:	66 89 84 24 a0 00 00 	mov    %ax,0xa0(%rsp)
    138c:	00 
    138d:	e8 9e 0c 00 00       	callq  2030 <core_bench_list>
    1392:	0f b7 b4 24 a0 00 00 	movzwl 0xa0(%rsp),%esi
    1399:	00 
    139a:	0f b7 f8             	movzwl %ax,%edi
    139d:	e8 1e 27 00 00       	callq  3ac0 <crcu16>
    13a2:	66 89 84 24 a0 00 00 	mov    %ax,0xa0(%rsp)
    13a9:	00 
    13aa:	85 db                	test   %ebx,%ebx
    13ac:	0f 84 4e 02 00 00    	je     1600 <main+0x4a0>
    13b2:	83 c3 01             	add    $0x1,%ebx
    13b5:	41 39 dd             	cmp    %ebx,%r13d
    13b8:	75 a6                	jne    1360 <main+0x200>
    13ba:	e8 e1 2d 00 00       	callq  41a0 <stop_time>
    13bf:	e8 fc 2d 00 00       	callq  41c0 <get_time>
    13c4:	48 89 c7             	mov    %rax,%rdi
    13c7:	e8 44 2e 00 00       	callq  4210 <time_in_secs>
    13cc:	f2 0f 10 15 9c 40 00 	movsd  0x409c(%rip),%xmm2        # 5470 <_IO_stdin_used+0x470>
    13d3:	00 
    13d4:	66 0f 2f d0          	comisd %xmm0,%xmm2
    13d8:	0f 87 52 ff ff ff    	ja     1330 <main+0x1d0>
    13de:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    13e3:	b8 01 00 00 00       	mov    $0x1,%eax
    13e8:	85 c9                	test   %ecx,%ecx
    13ea:	0f 44 c8             	cmove  %eax,%ecx
    13ed:	b8 0a 00 00 00       	mov    $0xa,%eax
    13f2:	31 d2                	xor    %edx,%edx
    13f4:	f7 f1                	div    %ecx
    13f6:	83 c0 01             	add    $0x1,%eax
    13f9:	0f af 44 24 6c       	imul   0x6c(%rsp),%eax
    13fe:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    1402:	e8 79 2d 00 00       	callq  4180 <start_time>
    1407:	4c 89 e7             	mov    %r12,%rdi
    140a:	e8 e1 15 00 00       	callq  29f0 <iterate>
    140f:	e8 8c 2d 00 00       	callq  41a0 <stop_time>
    1414:	e8 a7 2d 00 00       	callq  41c0 <get_time>
    1419:	0f bf 7c 24 40       	movswl 0x40(%rsp),%edi
    141e:	31 f6                	xor    %esi,%esi
    1420:	49 89 c4             	mov    %rax,%r12
    1423:	e8 88 2b 00 00       	callq  3fb0 <crc16>
    1428:	0f bf 7c 24 42       	movswl 0x42(%rsp),%edi
    142d:	0f b7 f0             	movzwl %ax,%esi
    1430:	e8 7b 2b 00 00       	callq  3fb0 <crc16>
    1435:	0f bf 7c 24 44       	movswl 0x44(%rsp),%edi
    143a:	0f b7 f0             	movzwl %ax,%esi
    143d:	e8 6e 2b 00 00       	callq  3fb0 <crc16>
    1442:	0f bf 7c 24 68       	movswl 0x68(%rsp),%edi
    1447:	0f b7 f0             	movzwl %ax,%esi
    144a:	e8 61 2b 00 00       	callq  3fb0 <crc16>
    144f:	0f b7 d8             	movzwl %ax,%ebx
    1452:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
    1456:	66 3d 05 7b          	cmp    $0x7b05,%ax
    145a:	0f 84 13 07 00 00    	je     1b73 <main+0xa13>
    1460:	0f 87 22 02 00 00    	ja     1688 <main+0x528>
    1466:	66 3d f2 18          	cmp    $0x18f2,%ax
    146a:	0f 84 7f 06 00 00    	je     1aef <main+0x98f>
    1470:	66 3d af 4e          	cmp    $0x4eaf,%ax
    1474:	0f 85 47 07 00 00    	jne    1bc1 <main+0xa61>
    147a:	48 8d 3d e7 3b 00 00 	lea    0x3be7(%rip),%rdi        # 5068 <_IO_stdin_used+0x68>
    1481:	e8 5a fc ff ff       	callq  10e0 <puts@plt>
    1486:	c7 44 24 14 a4 e5 00 	movl   $0xe5a4,0x14(%rsp)
    148d:	00 
    148e:	b8 a4 e5 ff ff       	mov    $0xffffe5a4,%eax
    1493:	c7 44 24 10 08 56 00 	movl   $0x5608,0x10(%rsp)
    149a:	00 
    149b:	66 c7 44 24 2c 08 56 	movw   $0x5608,0x2c(%rsp)
    14a2:	c7 44 24 0c 79 6a 00 	movl   $0x6a79,0xc(%rsp)
    14a9:	00 
    14aa:	66 c7 04 24 79 6a    	movw   $0x6a79,(%rsp)
    14b0:	66 c7 44 24 2e 02 00 	movw   $0x2,0x2e(%rsp)
    14b7:	8b 35 6b 6b 00 00    	mov    0x6b6b(%rip),%esi        # 8028 <default_num_contexts>
    14bd:	45 31 ff             	xor    %r15d,%r15d
    14c0:	45 31 f6             	xor    %r14d,%r14d
    14c3:	45 31 ed             	xor    %r13d,%r13d
    14c6:	85 f6                	test   %esi,%esi
    14c8:	0f 84 e7 06 00 00    	je     1bb5 <main+0xa55>
    14ce:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    14d3:	45 89 f4             	mov    %r14d,%r12d
    14d6:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
    14db:	44 89 fd             	mov    %r15d,%ebp
    14de:	41 89 c7             	mov    %eax,%r15d
    14e1:	eb 2a                	jmp    150d <main+0x3ad>
    14e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    14e8:	48 c1 e0 04          	shl    $0x4,%rax
    14ec:	0f b7 84 04 a8 00 00 	movzwl 0xa8(%rsp,%rax,1),%eax
    14f3:	00 
    14f4:	41 83 c4 01          	add    $0x1,%r12d
    14f8:	01 e8                	add    %ebp,%eax
    14fa:	45 0f b7 ec          	movzwl %r12w,%r13d
    14fe:	44 3b 2d 23 6b 00 00 	cmp    0x6b23(%rip),%r13d        # 8028 <default_num_contexts>
    1505:	89 c5                	mov    %eax,%ebp
    1507:	0f 83 d3 01 00 00    	jae    16e0 <main+0x580>
    150d:	49 63 dd             	movslq %r13d,%rbx
    1510:	48 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%rdx
    1517:	00 
    1518:	31 ff                	xor    %edi,%edi
    151a:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1521:	00 
    1522:	48 29 d8             	sub    %rbx,%rax
    1525:	48 c1 e0 04          	shl    $0x4,%rax
    1529:	66 89 bc 04 a8 00 00 	mov    %di,0xa8(%rsp,%rax,1)
    1530:	00 
    1531:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    1535:	f6 44 04 70 01       	testb  $0x1,0x70(%rsp,%rax,1)
    153a:	74 2f                	je     156b <main+0x40b>
    153c:	0f b7 8c 04 a2 00 00 	movzwl 0xa2(%rsp,%rax,1),%ecx
    1543:	00 
    1544:	66 3b 0c 24          	cmp    (%rsp),%cx
    1548:	74 21                	je     156b <main+0x40b>
    154a:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    154f:	44 89 ea             	mov    %r13d,%edx
    1552:	bf 01 00 00 00       	mov    $0x1,%edi
    1557:	31 c0                	xor    %eax,%eax
    1559:	48 8d 35 98 3b 00 00 	lea    0x3b98(%rip),%rsi        # 50f8 <_IO_stdin_used+0xf8>
    1560:	e8 cb fb ff ff       	callq  1130 <__printf_chk@plt>
    1565:	66 41 83 46 e8 01    	addw   $0x1,-0x18(%r14)
    156b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1572:	00 
    1573:	48 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%rdx
    157a:	00 
    157b:	48 29 d8             	sub    %rbx,%rax
    157e:	48 c1 e0 04          	shl    $0x4,%rax
    1582:	8b 74 04 70          	mov    0x70(%rsp,%rax,1),%esi
    1586:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    158a:	40 f6 c6 02          	test   $0x2,%sil
    158e:	74 34                	je     15c4 <main+0x464>
    1590:	0f b7 8c 04 a4 00 00 	movzwl 0xa4(%rsp,%rax,1),%ecx
    1597:	00 
    1598:	66 3b 4c 24 2c       	cmp    0x2c(%rsp),%cx
    159d:	74 25                	je     15c4 <main+0x464>
    159f:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
    15a4:	44 89 ea             	mov    %r13d,%edx
    15a7:	bf 01 00 00 00       	mov    $0x1,%edi
    15ac:	31 c0                	xor    %eax,%eax
    15ae:	48 8d 35 73 3b 00 00 	lea    0x3b73(%rip),%rsi        # 5128 <_IO_stdin_used+0x128>
    15b5:	e8 76 fb ff ff       	callq  1130 <__printf_chk@plt>
    15ba:	66 41 83 46 e8 01    	addw   $0x1,-0x18(%r14)
    15c0:	41 8b 76 b0          	mov    -0x50(%r14),%esi
    15c4:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    15cb:	00 
    15cc:	48 29 d8             	sub    %rbx,%rax
    15cf:	83 e6 04             	and    $0x4,%esi
    15d2:	0f 84 10 ff ff ff    	je     14e8 <main+0x388>
    15d8:	48 89 c3             	mov    %rax,%rbx
    15db:	48 c1 e3 04          	shl    $0x4,%rbx
    15df:	0f b7 8c 1c a6 00 00 	movzwl 0xa6(%rsp,%rbx,1),%ecx
    15e6:	00 
    15e7:	66 44 39 f9          	cmp    %r15w,%cx
    15eb:	75 63                	jne    1650 <main+0x4f0>
    15ed:	0f b7 84 1c a8 00 00 	movzwl 0xa8(%rsp,%rbx,1),%eax
    15f4:	00 
    15f5:	e9 fa fe ff ff       	jmpq   14f4 <main+0x394>
    15fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1600:	66 89 84 24 a2 00 00 	mov    %ax,0xa2(%rsp)
    1607:	00 
    1608:	41 83 fd 01          	cmp    $0x1,%r13d
    160c:	0f 84 a8 fd ff ff    	je     13ba <main+0x25a>
    1612:	bb 01 00 00 00       	mov    $0x1,%ebx
    1617:	e9 44 fd ff ff       	jmpq   1360 <main+0x200>
    161c:	0f 1f 40 00          	nopl   0x0(%rax)
    1620:	0f bf 54 24 42       	movswl 0x42(%rsp),%edx
    1625:	8b 7c 24 68          	mov    0x68(%rsp),%edi
    1629:	48 8d 8c 24 80 00 00 	lea    0x80(%rsp),%rcx
    1630:	00 
    1631:	0f bf 44 24 40       	movswl 0x40(%rsp),%eax
    1636:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    163b:	c1 e2 10             	shl    $0x10,%edx
    163e:	09 c2                	or     %eax,%edx
    1640:	e8 8b 18 00 00       	callq  2ed0 <core_init_matrix>
    1645:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    1649:	e9 ae fc ff ff       	jmpq   12fc <main+0x19c>
    164e:	66 90                	xchg   %ax,%ax
    1650:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    1655:	44 89 ea             	mov    %r13d,%edx
    1658:	bf 01 00 00 00       	mov    $0x1,%edi
    165d:	31 c0                	xor    %eax,%eax
    165f:	48 8d 35 fa 3a 00 00 	lea    0x3afa(%rip),%rsi        # 5160 <_IO_stdin_used+0x160>
    1666:	e8 c5 fa ff ff       	callq  1130 <__printf_chk@plt>
    166b:	0f b7 84 1c a8 00 00 	movzwl 0xa8(%rsp,%rbx,1),%eax
    1672:	00 
    1673:	83 c0 01             	add    $0x1,%eax
    1676:	66 89 84 1c a8 00 00 	mov    %ax,0xa8(%rsp,%rbx,1)
    167d:	00 
    167e:	e9 71 fe ff ff       	jmpq   14f4 <main+0x394>
    1683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1688:	66 3d 02 8a          	cmp    $0x8a02,%ax
    168c:	0f 84 9f 04 00 00    	je     1b31 <main+0x9d1>
    1692:	66 3d f5 e9          	cmp    $0xe9f5,%ax
    1696:	0f 85 25 05 00 00    	jne    1bc1 <main+0xa61>
    169c:	48 8d 3d f5 39 00 00 	lea    0x39f5(%rip),%rdi        # 5098 <_IO_stdin_used+0x98>
    16a3:	e8 38 fa ff ff       	callq  10e0 <puts@plt>
    16a8:	c7 44 24 14 3a 8e 00 	movl   $0x8e3a,0x14(%rsp)
    16af:	00 
    16b0:	b8 3a 8e ff ff       	mov    $0xffff8e3a,%eax
    16b5:	c7 44 24 10 d7 1f 00 	movl   $0x1fd7,0x10(%rsp)
    16bc:	00 
    16bd:	66 c7 44 24 2c d7 1f 	movw   $0x1fd7,0x2c(%rsp)
    16c4:	c7 44 24 0c 14 e7 00 	movl   $0xe714,0xc(%rsp)
    16cb:	00 
    16cc:	66 c7 04 24 14 e7    	movw   $0xe714,(%rsp)
    16d2:	66 c7 44 24 2e 03 00 	movw   $0x3,0x2e(%rsp)
    16d9:	e9 d9 fd ff ff       	jmpq   14b7 <main+0x357>
    16de:	66 90                	xchg   %ax,%ax
    16e0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    16e5:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    16ea:	89 c3                	mov    %eax,%ebx
    16ec:	e8 5f 2a 00 00       	callq  4150 <check_data_types>
    16f1:	8b 54 24 68          	mov    0x68(%rsp),%edx
    16f5:	bf 01 00 00 00       	mov    $0x1,%edi
    16fa:	48 8d 35 c9 3b 00 00 	lea    0x3bc9(%rip),%rsi        # 52ca <_IO_stdin_used+0x2ca>
    1701:	0f b6 c0             	movzbl %al,%eax
    1704:	01 c3                	add    %eax,%ebx
    1706:	31 c0                	xor    %eax,%eax
    1708:	e8 23 fa ff ff       	callq  1130 <__printf_chk@plt>
    170d:	4c 89 e2             	mov    %r12,%rdx
    1710:	bf 01 00 00 00       	mov    $0x1,%edi
    1715:	31 c0                	xor    %eax,%eax
    1717:	48 8d 35 c4 3b 00 00 	lea    0x3bc4(%rip),%rsi        # 52e2 <_IO_stdin_used+0x2e2>
    171e:	e8 0d fa ff ff       	callq  1130 <__printf_chk@plt>
    1723:	4c 89 e7             	mov    %r12,%rdi
    1726:	e8 e5 2a 00 00       	callq  4210 <time_in_secs>
    172b:	bf 01 00 00 00       	mov    $0x1,%edi
    1730:	b8 01 00 00 00       	mov    $0x1,%eax
    1735:	48 8d 35 be 3b 00 00 	lea    0x3bbe(%rip),%rsi        # 52fa <_IO_stdin_used+0x2fa>
    173c:	e8 ef f9 ff ff       	callq  1130 <__printf_chk@plt>
    1741:	4c 89 e7             	mov    %r12,%rdi
    1744:	e8 c7 2a 00 00       	callq  4210 <time_in_secs>
    1749:	66 0f 2f 05 27 3d 00 	comisd 0x3d27(%rip),%xmm0        # 5478 <_IO_stdin_used+0x478>
    1750:	00 
    1751:	76 44                	jbe    1797 <main+0x637>
    1753:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1757:	0f af 05 ca 68 00 00 	imul   0x68ca(%rip),%eax        # 8028 <default_num_contexts>
    175e:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1762:	4c 89 e7             	mov    %r12,%rdi
    1765:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    176a:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    176f:	e8 9c 2a 00 00       	callq  4210 <time_in_secs>
    1774:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    1779:	bf 01 00 00 00       	mov    $0x1,%edi
    177e:	48 8d 35 8c 3b 00 00 	lea    0x3b8c(%rip),%rsi        # 5311 <_IO_stdin_used+0x311>
    1785:	b8 01 00 00 00       	mov    $0x1,%eax
    178a:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    178e:	66 0f 28 c1          	movapd %xmm1,%xmm0
    1792:	e8 99 f9 ff ff       	callq  1130 <__printf_chk@plt>
    1797:	4c 89 e7             	mov    %r12,%rdi
    179a:	e8 71 2a 00 00       	callq  4210 <time_in_secs>
    179f:	f2 0f 10 0d d9 3c 00 	movsd  0x3cd9(%rip),%xmm1        # 5480 <_IO_stdin_used+0x480>
    17a6:	00 
    17a7:	66 0f 2f c8          	comisd %xmm0,%xmm1
    17ab:	0f 87 56 02 00 00    	ja     1a07 <main+0x8a7>
    17b1:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    17b5:	8b 15 6d 68 00 00    	mov    0x686d(%rip),%edx        # 8028 <default_num_contexts>
    17bb:	bf 01 00 00 00       	mov    $0x1,%edi
    17c0:	48 8d 35 61 3b 00 00 	lea    0x3b61(%rip),%rsi        # 5328 <_IO_stdin_used+0x328>
    17c7:	48 0f af d0          	imul   %rax,%rdx
    17cb:	31 c0                	xor    %eax,%eax
    17cd:	e8 5e f9 ff ff       	callq  1130 <__printf_chk@plt>
    17d2:	48 8d 15 67 3b 00 00 	lea    0x3b67(%rip),%rdx        # 5340 <_IO_stdin_used+0x340>
    17d9:	48 8d 35 69 3b 00 00 	lea    0x3b69(%rip),%rsi        # 5349 <_IO_stdin_used+0x349>
    17e0:	31 c0                	xor    %eax,%eax
    17e2:	bf 01 00 00 00       	mov    $0x1,%edi
    17e7:	e8 44 f9 ff ff       	callq  1130 <__printf_chk@plt>
    17ec:	48 8d 15 6d 3b 00 00 	lea    0x3b6d(%rip),%rdx        # 5360 <_IO_stdin_used+0x360>
    17f3:	48 8d 35 74 3b 00 00 	lea    0x3b74(%rip),%rsi        # 536e <_IO_stdin_used+0x36e>
    17fa:	31 c0                	xor    %eax,%eax
    17fc:	bf 01 00 00 00       	mov    $0x1,%edi
    1801:	e8 2a f9 ff ff       	callq  1130 <__printf_chk@plt>
    1806:	48 8d 15 c3 39 00 00 	lea    0x39c3(%rip),%rdx        # 51d0 <_IO_stdin_used+0x1d0>
    180d:	48 8d 35 71 3b 00 00 	lea    0x3b71(%rip),%rsi        # 5385 <_IO_stdin_used+0x385>
    1814:	31 c0                	xor    %eax,%eax
    1816:	bf 01 00 00 00       	mov    $0x1,%edi
    181b:	e8 10 f9 ff ff       	callq  1130 <__printf_chk@plt>
    1820:	8b 54 24 28          	mov    0x28(%rsp),%edx
    1824:	bf 01 00 00 00       	mov    $0x1,%edi
    1829:	31 c0                	xor    %eax,%eax
    182b:	48 8d 35 6a 3b 00 00 	lea    0x3b6a(%rip),%rsi        # 539c <_IO_stdin_used+0x39c>
    1832:	e8 f9 f8 ff ff       	callq  1130 <__printf_chk@plt>
    1837:	8b 44 24 70          	mov    0x70(%rsp),%eax
    183b:	a8 01                	test   $0x1,%al
    183d:	74 56                	je     1895 <main+0x735>
    183f:	83 3d e2 67 00 00 00 	cmpl   $0x0,0x67e2(%rip)        # 8028 <default_num_contexts>
    1846:	74 4d                	je     1895 <main+0x735>
    1848:	45 31 f6             	xor    %r14d,%r14d
    184b:	31 d2                	xor    %edx,%edx
    184d:	4c 8d 2d 63 3b 00 00 	lea    0x3b63(%rip),%r13        # 53b7 <_IO_stdin_used+0x3b7>
    1854:	0f 1f 40 00          	nopl   0x0(%rax)
    1858:	48 63 ca             	movslq %edx,%rcx
    185b:	41 83 c6 01          	add    $0x1,%r14d
    185f:	4c 89 ee             	mov    %r13,%rsi
    1862:	bf 01 00 00 00       	mov    $0x1,%edi
    1867:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    186e:	00 
    186f:	48 29 c8             	sub    %rcx,%rax
    1872:	48 c1 e0 04          	shl    $0x4,%rax
    1876:	0f b7 8c 04 a2 00 00 	movzwl 0xa2(%rsp,%rax,1),%ecx
    187d:	00 
    187e:	31 c0                	xor    %eax,%eax
    1880:	e8 ab f8 ff ff       	callq  1130 <__printf_chk@plt>
    1885:	41 0f b7 d6          	movzwl %r14w,%edx
    1889:	3b 15 99 67 00 00    	cmp    0x6799(%rip),%edx        # 8028 <default_num_contexts>
    188f:	72 c7                	jb     1858 <main+0x6f8>
    1891:	8b 44 24 70          	mov    0x70(%rsp),%eax
    1895:	a8 02                	test   $0x2,%al
    1897:	74 5c                	je     18f5 <main+0x795>
    1899:	83 3d 88 67 00 00 00 	cmpl   $0x0,0x6788(%rip)        # 8028 <default_num_contexts>
    18a0:	0f 84 3c 02 00 00    	je     1ae2 <main+0x982>
    18a6:	45 31 f6             	xor    %r14d,%r14d
    18a9:	31 d2                	xor    %edx,%edx
    18ab:	4c 8d 2d 21 3b 00 00 	lea    0x3b21(%rip),%r13        # 53d3 <_IO_stdin_used+0x3d3>
    18b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    18b8:	48 63 ca             	movslq %edx,%rcx
    18bb:	41 83 c6 01          	add    $0x1,%r14d
    18bf:	4c 89 ee             	mov    %r13,%rsi
    18c2:	bf 01 00 00 00       	mov    $0x1,%edi
    18c7:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    18ce:	00 
    18cf:	48 29 c8             	sub    %rcx,%rax
    18d2:	48 c1 e0 04          	shl    $0x4,%rax
    18d6:	0f b7 8c 04 a4 00 00 	movzwl 0xa4(%rsp,%rax,1),%ecx
    18dd:	00 
    18de:	31 c0                	xor    %eax,%eax
    18e0:	e8 4b f8 ff ff       	callq  1130 <__printf_chk@plt>
    18e5:	41 0f b7 d6          	movzwl %r14w,%edx
    18e9:	3b 15 39 67 00 00    	cmp    0x6739(%rip),%edx        # 8028 <default_num_contexts>
    18ef:	72 c7                	jb     18b8 <main+0x758>
    18f1:	8b 44 24 70          	mov    0x70(%rsp),%eax
    18f5:	a8 04                	test   $0x4,%al
    18f7:	74 58                	je     1951 <main+0x7f1>
    18f9:	45 31 f6             	xor    %r14d,%r14d
    18fc:	31 d2                	xor    %edx,%edx
    18fe:	83 3d 23 67 00 00 00 	cmpl   $0x0,0x6723(%rip)        # 8028 <default_num_contexts>
    1905:	4c 8d 2d e3 3a 00 00 	lea    0x3ae3(%rip),%r13        # 53ef <_IO_stdin_used+0x3ef>
    190c:	0f 84 97 00 00 00    	je     19a9 <main+0x849>
    1912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1918:	48 63 ca             	movslq %edx,%rcx
    191b:	41 83 c6 01          	add    $0x1,%r14d
    191f:	4c 89 ee             	mov    %r13,%rsi
    1922:	bf 01 00 00 00       	mov    $0x1,%edi
    1927:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    192e:	00 
    192f:	48 29 c8             	sub    %rcx,%rax
    1932:	48 c1 e0 04          	shl    $0x4,%rax
    1936:	0f b7 8c 04 a6 00 00 	movzwl 0xa6(%rsp,%rax,1),%ecx
    193d:	00 
    193e:	31 c0                	xor    %eax,%eax
    1940:	e8 eb f7 ff ff       	callq  1130 <__printf_chk@plt>
    1945:	41 0f b7 d6          	movzwl %r14w,%edx
    1949:	3b 15 d9 66 00 00    	cmp    0x66d9(%rip),%edx        # 8028 <default_num_contexts>
    194f:	72 c7                	jb     1918 <main+0x7b8>
    1951:	8b 0d d1 66 00 00    	mov    0x66d1(%rip),%ecx        # 8028 <default_num_contexts>
    1957:	45 31 f6             	xor    %r14d,%r14d
    195a:	31 d2                	xor    %edx,%edx
    195c:	4c 8d 2d a8 3a 00 00 	lea    0x3aa8(%rip),%r13        # 540b <_IO_stdin_used+0x40b>
    1963:	85 c9                	test   %ecx,%ecx
    1965:	74 42                	je     19a9 <main+0x849>
    1967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    196e:	00 00 
    1970:	48 63 ca             	movslq %edx,%rcx
    1973:	41 83 c6 01          	add    $0x1,%r14d
    1977:	4c 89 ee             	mov    %r13,%rsi
    197a:	bf 01 00 00 00       	mov    $0x1,%edi
    197f:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    1986:	00 
    1987:	48 29 c8             	sub    %rcx,%rax
    198a:	48 c1 e0 04          	shl    $0x4,%rax
    198e:	0f b7 8c 04 a0 00 00 	movzwl 0xa0(%rsp,%rax,1),%ecx
    1995:	00 
    1996:	31 c0                	xor    %eax,%eax
    1998:	e8 93 f7 ff ff       	callq  1130 <__printf_chk@plt>
    199d:	41 0f b7 d6          	movzwl %r14w,%edx
    19a1:	3b 15 81 66 00 00    	cmp    0x6681(%rip),%edx        # 8028 <default_num_contexts>
    19a7:	72 c7                	jb     1970 <main+0x810>
    19a9:	66 85 db             	test   %bx,%bx
    19ac:	74 6d                	je     1a1b <main+0x8bb>
    19ae:	7e 49                	jle    19f9 <main+0x899>
    19b0:	48 8d 3d 90 3a 00 00 	lea    0x3a90(%rip),%rdi        # 5447 <_IO_stdin_used+0x447>
    19b7:	e8 24 f7 ff ff       	callq  10e0 <puts@plt>
    19bc:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    19c1:	e8 aa 27 00 00       	callq  4170 <portable_free>
    19c6:	48 89 ef             	mov    %rbp,%rdi
    19c9:	e8 72 28 00 00       	callq  4240 <portable_fini>
    19ce:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
    19d5:	00 
    19d6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    19dd:	00 00 
    19df:	0f 85 d7 01 00 00    	jne    1bbc <main+0xa5c>
    19e5:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    19ec:	31 c0                	xor    %eax,%eax
    19ee:	5b                   	pop    %rbx
    19ef:	5d                   	pop    %rbp
    19f0:	41 5c                	pop    %r12
    19f2:	41 5d                	pop    %r13
    19f4:	41 5e                	pop    %r14
    19f6:	41 5f                	pop    %r15
    19f8:	c3                   	retq   
    19f9:	48 8d 3d 68 38 00 00 	lea    0x3868(%rip),%rdi        # 5268 <_IO_stdin_used+0x268>
    1a00:	e8 db f6 ff ff       	callq  10e0 <puts@plt>
    1a05:	eb b5                	jmp    19bc <main+0x85c>
    1a07:	48 8d 3d 82 37 00 00 	lea    0x3782(%rip),%rdi        # 5190 <_IO_stdin_used+0x190>
    1a0e:	83 c3 01             	add    $0x1,%ebx
    1a11:	e8 ca f6 ff ff       	callq  10e0 <puts@plt>
    1a16:	e9 96 fd ff ff       	jmpq   17b1 <main+0x651>
    1a1b:	48 8d 3d fe 37 00 00 	lea    0x37fe(%rip),%rdi        # 5220 <_IO_stdin_used+0x220>
    1a22:	e8 b9 f6 ff ff       	callq  10e0 <puts@plt>
    1a27:	66 83 7c 24 2e 03    	cmpw   $0x3,0x2e(%rsp)
    1a2d:	75 8d                	jne    19bc <main+0x85c>
    1a2f:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1a33:	0f af 05 ee 65 00 00 	imul   0x65ee(%rip),%eax        # 8028 <default_num_contexts>
    1a3a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1a3e:	4c 89 e7             	mov    %r12,%rdi
    1a41:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1a46:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    1a4b:	e8 c0 27 00 00       	callq  4210 <time_in_secs>
    1a50:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    1a55:	48 8d 0d 04 39 00 00 	lea    0x3904(%rip),%rcx        # 5360 <_IO_stdin_used+0x360>
    1a5c:	48 8d 15 dd 38 00 00 	lea    0x38dd(%rip),%rdx        # 5340 <_IO_stdin_used+0x340>
    1a63:	48 8d 35 bd 39 00 00 	lea    0x39bd(%rip),%rsi        # 5427 <_IO_stdin_used+0x427>
    1a6a:	bf 01 00 00 00       	mov    $0x1,%edi
    1a6f:	b8 01 00 00 00       	mov    $0x1,%eax
    1a74:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    1a78:	66 0f 28 c1          	movapd %xmm1,%xmm0
    1a7c:	e8 af f6 ff ff       	callq  1130 <__printf_chk@plt>
    1a81:	48 8b 15 90 65 00 00 	mov    0x6590(%rip),%rdx        # 8018 <mem_name+0x8>
    1a88:	48 8d 35 b2 39 00 00 	lea    0x39b2(%rip),%rsi        # 5441 <_IO_stdin_used+0x441>
    1a8f:	31 c0                	xor    %eax,%eax
    1a91:	bf 01 00 00 00       	mov    $0x1,%edi
    1a96:	e8 95 f6 ff ff       	callq  1130 <__printf_chk@plt>
    1a9b:	bf 0a 00 00 00       	mov    $0xa,%edi
    1aa0:	e8 2b f6 ff ff       	callq  10d0 <putchar@plt>
    1aa5:	e9 12 ff ff ff       	jmpq   19bc <main+0x85c>
    1aaa:	0f b7 d2             	movzwl %dx,%edx
    1aad:	0f af d0             	imul   %eax,%edx
    1ab0:	49 01 d0             	add    %rdx,%r8
    1ab3:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
    1ab8:	e9 17 f8 ff ff       	jmpq   12d4 <main+0x174>
    1abd:	0f b7 f2             	movzwl %dx,%esi
    1ac0:	83 c2 01             	add    $0x1,%edx
    1ac3:	0f af f0             	imul   %eax,%esi
    1ac6:	4c 01 c6             	add    %r8,%rsi
    1ac9:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
    1ace:	e9 f8 f7 ff ff       	jmpq   12cb <main+0x16b>
    1ad3:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
    1ad8:	ba 01 00 00 00       	mov    $0x1,%edx
    1add:	e9 e1 f7 ff ff       	jmpq   12c3 <main+0x163>
    1ae2:	a8 04                	test   $0x4,%al
    1ae4:	0f 84 67 fe ff ff    	je     1951 <main+0x7f1>
    1aea:	e9 ba fe ff ff       	jmpq   19a9 <main+0x849>
    1aef:	48 8d 3d d2 35 00 00 	lea    0x35d2(%rip),%rdi        # 50c8 <_IO_stdin_used+0xc8>
    1af6:	e8 e5 f5 ff ff       	callq  10e0 <puts@plt>
    1afb:	c7 44 24 14 84 8d 00 	movl   $0x8d84,0x14(%rsp)
    1b02:	00 
    1b03:	b8 84 8d ff ff       	mov    $0xffff8d84,%eax
    1b08:	c7 44 24 10 47 07 00 	movl   $0x747,0x10(%rsp)
    1b0f:	00 
    1b10:	66 c7 44 24 2c 47 07 	movw   $0x747,0x2c(%rsp)
    1b17:	c7 44 24 0c c1 e3 00 	movl   $0xe3c1,0xc(%rsp)
    1b1e:	00 
    1b1f:	66 c7 04 24 c1 e3    	movw   $0xe3c1,(%rsp)
    1b25:	66 c7 44 24 2e 04 00 	movw   $0x4,0x2e(%rsp)
    1b2c:	e9 86 f9 ff ff       	jmpq   14b7 <main+0x357>
    1b31:	48 8d 3d d0 34 00 00 	lea    0x34d0(%rip),%rdi        # 5008 <_IO_stdin_used+0x8>
    1b38:	e8 a3 f5 ff ff       	callq  10e0 <puts@plt>
    1b3d:	c7 44 24 14 47 5e 00 	movl   $0x5e47,0x14(%rsp)
    1b44:	00 
    1b45:	b8 47 5e 00 00       	mov    $0x5e47,%eax
    1b4a:	c7 44 24 10 52 be 00 	movl   $0xbe52,0x10(%rsp)
    1b51:	00 
    1b52:	66 c7 44 24 2c 52 be 	movw   $0xbe52,0x2c(%rsp)
    1b59:	c7 44 24 0c b0 d4 00 	movl   $0xd4b0,0xc(%rsp)
    1b60:	00 
    1b61:	66 c7 04 24 b0 d4    	movw   $0xd4b0,(%rsp)
    1b67:	66 c7 44 24 2e 00 00 	movw   $0x0,0x2e(%rsp)
    1b6e:	e9 44 f9 ff ff       	jmpq   14b7 <main+0x357>
    1b73:	48 8d 3d be 34 00 00 	lea    0x34be(%rip),%rdi        # 5038 <_IO_stdin_used+0x38>
    1b7a:	e8 61 f5 ff ff       	callq  10e0 <puts@plt>
    1b7f:	c7 44 24 14 bf 39 00 	movl   $0x39bf,0x14(%rsp)
    1b86:	00 
    1b87:	b8 bf 39 00 00       	mov    $0x39bf,%eax
    1b8c:	c7 44 24 10 99 11 00 	movl   $0x1199,0x10(%rsp)
    1b93:	00 
    1b94:	66 c7 44 24 2c 99 11 	movw   $0x1199,0x2c(%rsp)
    1b9b:	c7 44 24 0c 40 33 00 	movl   $0x3340,0xc(%rsp)
    1ba2:	00 
    1ba3:	66 c7 04 24 40 33    	movw   $0x3340,(%rsp)
    1ba9:	66 c7 44 24 2e 01 00 	movw   $0x1,0x2e(%rsp)
    1bb0:	e9 02 f9 ff ff       	jmpq   14b7 <main+0x357>
    1bb5:	31 db                	xor    %ebx,%ebx
    1bb7:	e9 30 fb ff ff       	jmpq   16ec <main+0x58c>
    1bbc:	e8 3f f5 ff ff       	callq  1100 <__stack_chk_fail@plt>
    1bc1:	66 c7 44 24 2e ff ff 	movw   $0xffff,0x2e(%rsp)
    1bc8:	83 cb ff             	or     $0xffffffff,%ebx
    1bcb:	e9 1c fb ff ff       	jmpq   16ec <main+0x58c>

0000000000001bd0 <set_fast_math>:
    1bd0:	f3 0f 1e fa          	endbr64 
    1bd4:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
    1bd9:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
    1be0:	00 
    1be1:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
    1be6:	c3                   	retq   
    1be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1bee:	00 00 

0000000000001bf0 <_start>:
    1bf0:	f3 0f 1e fa          	endbr64 
    1bf4:	31 ed                	xor    %ebp,%ebp
    1bf6:	49 89 d1             	mov    %rdx,%r9
    1bf9:	5e                   	pop    %rsi
    1bfa:	48 89 e2             	mov    %rsp,%rdx
    1bfd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1c01:	50                   	push   %rax
    1c02:	54                   	push   %rsp
    1c03:	4c 8d 05 b6 26 00 00 	lea    0x26b6(%rip),%r8        # 42c0 <__libc_csu_fini>
    1c0a:	48 8d 0d 3f 26 00 00 	lea    0x263f(%rip),%rcx        # 4250 <__libc_csu_init>
    1c11:	48 8d 3d 48 f5 ff ff 	lea    -0xab8(%rip),%rdi        # 1160 <main>
    1c18:	ff 15 b2 63 00 00    	callq  *0x63b2(%rip)        # 7fd0 <__libc_start_main@GLIBC_2.2.5>
    1c1e:	f4                   	hlt    
    1c1f:	90                   	nop

0000000000001c20 <deregister_tm_clones>:
    1c20:	48 8d 3d 09 64 00 00 	lea    0x6409(%rip),%rdi        # 8030 <__TMC_END__>
    1c27:	48 8d 05 02 64 00 00 	lea    0x6402(%rip),%rax        # 8030 <__TMC_END__>
    1c2e:	48 39 f8             	cmp    %rdi,%rax
    1c31:	74 15                	je     1c48 <deregister_tm_clones+0x28>
    1c33:	48 8b 05 8e 63 00 00 	mov    0x638e(%rip),%rax        # 7fc8 <_ITM_deregisterTMCloneTable>
    1c3a:	48 85 c0             	test   %rax,%rax
    1c3d:	74 09                	je     1c48 <deregister_tm_clones+0x28>
    1c3f:	ff e0                	jmpq   *%rax
    1c41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1c48:	c3                   	retq   
    1c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001c50 <register_tm_clones>:
    1c50:	48 8d 3d d9 63 00 00 	lea    0x63d9(%rip),%rdi        # 8030 <__TMC_END__>
    1c57:	48 8d 35 d2 63 00 00 	lea    0x63d2(%rip),%rsi        # 8030 <__TMC_END__>
    1c5e:	48 29 fe             	sub    %rdi,%rsi
    1c61:	48 89 f0             	mov    %rsi,%rax
    1c64:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1c68:	48 c1 f8 03          	sar    $0x3,%rax
    1c6c:	48 01 c6             	add    %rax,%rsi
    1c6f:	48 d1 fe             	sar    %rsi
    1c72:	74 14                	je     1c88 <register_tm_clones+0x38>
    1c74:	48 8b 05 65 63 00 00 	mov    0x6365(%rip),%rax        # 7fe0 <_ITM_registerTMCloneTable>
    1c7b:	48 85 c0             	test   %rax,%rax
    1c7e:	74 08                	je     1c88 <register_tm_clones+0x38>
    1c80:	ff e0                	jmpq   *%rax
    1c82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1c88:	c3                   	retq   
    1c89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001c90 <__do_global_dtors_aux>:
    1c90:	f3 0f 1e fa          	endbr64 
    1c94:	80 3d 95 63 00 00 00 	cmpb   $0x0,0x6395(%rip)        # 8030 <__TMC_END__>
    1c9b:	75 2b                	jne    1cc8 <__do_global_dtors_aux+0x38>
    1c9d:	55                   	push   %rbp
    1c9e:	48 83 3d 42 63 00 00 	cmpq   $0x0,0x6342(%rip)        # 7fe8 <__cxa_finalize@GLIBC_2.2.5>
    1ca5:	00 
    1ca6:	48 89 e5             	mov    %rsp,%rbp
    1ca9:	74 0c                	je     1cb7 <__do_global_dtors_aux+0x27>
    1cab:	48 8b 3d 56 63 00 00 	mov    0x6356(%rip),%rdi        # 8008 <__dso_handle>
    1cb2:	e8 f9 f3 ff ff       	callq  10b0 <__cxa_finalize@plt>
    1cb7:	e8 64 ff ff ff       	callq  1c20 <deregister_tm_clones>
    1cbc:	c6 05 6d 63 00 00 01 	movb   $0x1,0x636d(%rip)        # 8030 <__TMC_END__>
    1cc3:	5d                   	pop    %rbp
    1cc4:	c3                   	retq   
    1cc5:	0f 1f 00             	nopl   (%rax)
    1cc8:	c3                   	retq   
    1cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001cd0 <frame_dummy>:
    1cd0:	f3 0f 1e fa          	endbr64 
    1cd4:	e9 77 ff ff ff       	jmpq   1c50 <register_tm_clones>
    1cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001ce0 <calc_func>:
    1ce0:	f3 0f 1e fa          	endbr64 
    1ce4:	41 55                	push   %r13
    1ce6:	41 54                	push   %r12
    1ce8:	55                   	push   %rbp
    1ce9:	53                   	push   %rbx
    1cea:	48 83 ec 08          	sub    $0x8,%rsp
    1cee:	0f b7 1f             	movzwl (%rdi),%ebx
    1cf1:	84 db                	test   %bl,%bl
    1cf3:	79 13                	jns    1d08 <calc_func+0x28>
    1cf5:	48 83 c4 08          	add    $0x8,%rsp
    1cf9:	89 d8                	mov    %ebx,%eax
    1cfb:	83 e0 7f             	and    $0x7f,%eax
    1cfe:	5b                   	pop    %rbx
    1cff:	5d                   	pop    %rbp
    1d00:	41 5c                	pop    %r12
    1d02:	41 5d                	pop    %r13
    1d04:	c3                   	retq   
    1d05:	0f 1f 00             	nopl   (%rax)
    1d08:	89 d8                	mov    %ebx,%eax
    1d0a:	48 89 f5             	mov    %rsi,%rbp
    1d0d:	89 da                	mov    %ebx,%edx
    1d0f:	49 89 fc             	mov    %rdi,%r12
    1d12:	66 c1 f8 03          	sar    $0x3,%ax
    1d16:	89 c6                	mov    %eax,%esi
    1d18:	83 e0 0f             	and    $0xf,%eax
    1d1b:	83 e6 0f             	and    $0xf,%esi
    1d1e:	c1 e0 04             	shl    $0x4,%eax
    1d21:	09 f0                	or     %esi,%eax
    1d23:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1d27:	66 83 e2 07          	and    $0x7,%dx
    1d2b:	74 63                	je     1d90 <calc_func+0xb0>
    1d2d:	66 83 fa 01          	cmp    $0x1,%dx
    1d31:	75 2d                	jne    1d60 <calc_func+0x80>
    1d33:	44 0f bf c0          	movswl %ax,%r8d
    1d37:	89 f2                	mov    %esi,%edx
    1d39:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    1d3d:	44 89 c6             	mov    %r8d,%esi
    1d40:	e8 5b 11 00 00       	callq  2ea0 <core_bench_matrix>
    1d45:	66 83 7d 64 00       	cmpw   $0x0,0x64(%rbp)
    1d4a:	41 89 c5             	mov    %eax,%r13d
    1d4d:	75 04                	jne    1d53 <calc_func+0x73>
    1d4f:	66 89 45 64          	mov    %ax,0x64(%rbp)
    1d53:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1d57:	eb 0c                	jmp    1d65 <calc_func+0x85>
    1d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1d60:	89 d8                	mov    %ebx,%eax
    1d62:	41 89 dd             	mov    %ebx,%r13d
    1d65:	0f b7 f8             	movzwl %ax,%edi
    1d68:	30 db                	xor    %bl,%bl
    1d6a:	e8 51 1d 00 00       	callq  3ac0 <crcu16>
    1d6f:	66 89 45 60          	mov    %ax,0x60(%rbp)
    1d73:	44 89 e8             	mov    %r13d,%eax
    1d76:	83 e0 7f             	and    $0x7f,%eax
    1d79:	09 c3                	or     %eax,%ebx
    1d7b:	80 cb 80             	or     $0x80,%bl
    1d7e:	66 41 89 1c 24       	mov    %bx,(%r12)
    1d83:	48 83 c4 08          	add    $0x8,%rsp
    1d87:	5b                   	pop    %rbx
    1d88:	5d                   	pop    %rbp
    1d89:	41 5c                	pop    %r12
    1d8b:	41 5d                	pop    %r13
    1d8d:	c3                   	retq   
    1d8e:	66 90                	xchg   %ax,%ax
    1d90:	66 83 f8 22          	cmp    $0x22,%ax
    1d94:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1d9a:	8b 7d 28             	mov    0x28(%rbp),%edi
    1d9d:	41 89 f1             	mov    %esi,%r9d
    1da0:	44 0f 4d c0          	cmovge %eax,%r8d
    1da4:	4c 8b 55 20          	mov    0x20(%rbp),%r10
    1da8:	0f bf 4d 02          	movswl 0x2(%rbp),%ecx
    1dac:	0f bf 55 00          	movswl 0x0(%rbp),%edx
    1db0:	45 0f bf c0          	movswl %r8w,%r8d
    1db4:	4c 89 d6             	mov    %r10,%rsi
    1db7:	e8 d4 19 00 00       	callq  3790 <core_bench_state>
    1dbc:	66 83 7d 66 00       	cmpw   $0x0,0x66(%rbp)
    1dc1:	41 89 c5             	mov    %eax,%r13d
    1dc4:	75 8d                	jne    1d53 <calc_func+0x73>
    1dc6:	66 89 45 66          	mov    %ax,0x66(%rbp)
    1dca:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1dce:	eb 95                	jmp    1d65 <calc_func+0x85>

0000000000001dd0 <cmp_complex>:
    1dd0:	f3 0f 1e fa          	endbr64 
    1dd4:	41 56                	push   %r14
    1dd6:	41 55                	push   %r13
    1dd8:	41 54                	push   %r12
    1dda:	49 89 f4             	mov    %rsi,%r12
    1ddd:	55                   	push   %rbp
    1dde:	53                   	push   %rbx
    1ddf:	0f b7 2f             	movzwl (%rdi),%ebp
    1de2:	48 89 d3             	mov    %rdx,%rbx
    1de5:	40 84 ed             	test   %bpl,%bpl
    1de8:	79 6e                	jns    1e58 <cmp_complex+0x88>
    1dea:	83 e5 7f             	and    $0x7f,%ebp
    1ded:	41 89 ed             	mov    %ebp,%r13d
    1df0:	41 0f b7 2c 24       	movzwl (%r12),%ebp
    1df5:	40 84 ed             	test   %bpl,%bpl
    1df8:	0f 88 b2 00 00 00    	js     1eb0 <cmp_complex+0xe0>
    1dfe:	89 e8                	mov    %ebp,%eax
    1e00:	89 ea                	mov    %ebp,%edx
    1e02:	66 c1 f8 03          	sar    $0x3,%ax
    1e06:	89 c6                	mov    %eax,%esi
    1e08:	83 e0 0f             	and    $0xf,%eax
    1e0b:	83 e6 0f             	and    $0xf,%esi
    1e0e:	c1 e0 04             	shl    $0x4,%eax
    1e11:	09 f0                	or     %esi,%eax
    1e13:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1e17:	66 83 e2 07          	and    $0x7,%dx
    1e1b:	0f 84 27 01 00 00    	je     1f48 <cmp_complex+0x178>
    1e21:	66 83 fa 01          	cmp    $0x1,%dx
    1e25:	0f 84 65 01 00 00    	je     1f90 <cmp_complex+0x1c0>
    1e2b:	89 e8                	mov    %ebp,%eax
    1e2d:	41 89 ee             	mov    %ebp,%r14d
    1e30:	0f b7 f8             	movzwl %ax,%edi
    1e33:	40 30 ed             	xor    %bpl,%bpl
    1e36:	e8 85 1c 00 00       	callq  3ac0 <crcu16>
    1e3b:	44 89 f2             	mov    %r14d,%edx
    1e3e:	83 e2 7f             	and    $0x7f,%edx
    1e41:	66 89 43 60          	mov    %ax,0x60(%rbx)
    1e45:	09 d5                	or     %edx,%ebp
    1e47:	40 80 cd 80          	or     $0x80,%bpl
    1e4b:	66 41 89 2c 24       	mov    %bp,(%r12)
    1e50:	eb 63                	jmp    1eb5 <cmp_complex+0xe5>
    1e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e58:	89 e8                	mov    %ebp,%eax
    1e5a:	49 89 fe             	mov    %rdi,%r14
    1e5d:	66 c1 f8 03          	sar    $0x3,%ax
    1e61:	89 c6                	mov    %eax,%esi
    1e63:	83 e0 0f             	and    $0xf,%eax
    1e66:	83 e6 0f             	and    $0xf,%esi
    1e69:	c1 e0 04             	shl    $0x4,%eax
    1e6c:	09 f0                	or     %esi,%eax
    1e6e:	0f b7 72 60          	movzwl 0x60(%rdx),%esi
    1e72:	89 ea                	mov    %ebp,%edx
    1e74:	66 83 e2 07          	and    $0x7,%dx
    1e78:	0f 84 82 00 00 00    	je     1f00 <cmp_complex+0x130>
    1e7e:	66 83 fa 01          	cmp    $0x1,%dx
    1e82:	75 4c                	jne    1ed0 <cmp_complex+0x100>
    1e84:	44 0f bf c0          	movswl %ax,%r8d
    1e88:	89 f2                	mov    %esi,%edx
    1e8a:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    1e8e:	44 89 c6             	mov    %r8d,%esi
    1e91:	e8 0a 10 00 00       	callq  2ea0 <core_bench_matrix>
    1e96:	66 83 7b 64 00       	cmpw   $0x0,0x64(%rbx)
    1e9b:	41 89 c5             	mov    %eax,%r13d
    1e9e:	75 04                	jne    1ea4 <cmp_complex+0xd4>
    1ea0:	66 89 43 64          	mov    %ax,0x64(%rbx)
    1ea4:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1ea8:	eb 2b                	jmp    1ed5 <cmp_complex+0x105>
    1eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1eb0:	89 ea                	mov    %ebp,%edx
    1eb2:	83 e2 7f             	and    $0x7f,%edx
    1eb5:	41 0f bf c5          	movswl %r13w,%eax
    1eb9:	0f bf d2             	movswl %dx,%edx
    1ebc:	5b                   	pop    %rbx
    1ebd:	5d                   	pop    %rbp
    1ebe:	29 d0                	sub    %edx,%eax
    1ec0:	41 5c                	pop    %r12
    1ec2:	41 5d                	pop    %r13
    1ec4:	41 5e                	pop    %r14
    1ec6:	c3                   	retq   
    1ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1ece:	00 00 
    1ed0:	89 e8                	mov    %ebp,%eax
    1ed2:	41 89 ed             	mov    %ebp,%r13d
    1ed5:	41 83 e5 7f          	and    $0x7f,%r13d
    1ed9:	40 30 ed             	xor    %bpl,%bpl
    1edc:	0f b7 f8             	movzwl %ax,%edi
    1edf:	e8 dc 1b 00 00       	callq  3ac0 <crcu16>
    1ee4:	44 09 ed             	or     %r13d,%ebp
    1ee7:	40 80 cd 80          	or     $0x80,%bpl
    1eeb:	66 89 43 60          	mov    %ax,0x60(%rbx)
    1eef:	66 41 89 2e          	mov    %bp,(%r14)
    1ef3:	e9 f8 fe ff ff       	jmpq   1df0 <cmp_complex+0x20>
    1ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1eff:	00 
    1f00:	66 83 f8 22          	cmp    $0x22,%ax
    1f04:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1f0a:	0f bf 13             	movswl (%rbx),%edx
    1f0d:	8b 7b 28             	mov    0x28(%rbx),%edi
    1f10:	44 0f 4d c0          	cmovge %eax,%r8d
    1f14:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    1f18:	0f bf 4b 02          	movswl 0x2(%rbx),%ecx
    1f1c:	41 89 f1             	mov    %esi,%r9d
    1f1f:	45 0f bf c0          	movswl %r8w,%r8d
    1f23:	4c 89 d6             	mov    %r10,%rsi
    1f26:	e8 65 18 00 00       	callq  3790 <core_bench_state>
    1f2b:	66 83 7b 66 00       	cmpw   $0x0,0x66(%rbx)
    1f30:	41 89 c5             	mov    %eax,%r13d
    1f33:	0f 85 6b ff ff ff    	jne    1ea4 <cmp_complex+0xd4>
    1f39:	66 89 43 66          	mov    %ax,0x66(%rbx)
    1f3d:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1f41:	eb 92                	jmp    1ed5 <cmp_complex+0x105>
    1f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1f48:	66 83 f8 22          	cmp    $0x22,%ax
    1f4c:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1f52:	0f bf 13             	movswl (%rbx),%edx
    1f55:	8b 7b 28             	mov    0x28(%rbx),%edi
    1f58:	44 0f 4d c0          	cmovge %eax,%r8d
    1f5c:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    1f60:	0f bf 4b 02          	movswl 0x2(%rbx),%ecx
    1f64:	41 89 f1             	mov    %esi,%r9d
    1f67:	45 0f bf c0          	movswl %r8w,%r8d
    1f6b:	4c 89 d6             	mov    %r10,%rsi
    1f6e:	e8 1d 18 00 00       	callq  3790 <core_bench_state>
    1f73:	66 83 7b 66 00       	cmpw   $0x0,0x66(%rbx)
    1f78:	41 89 c6             	mov    %eax,%r14d
    1f7b:	75 33                	jne    1fb0 <cmp_complex+0x1e0>
    1f7d:	66 89 43 66          	mov    %ax,0x66(%rbx)
    1f81:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1f85:	e9 a6 fe ff ff       	jmpq   1e30 <cmp_complex+0x60>
    1f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1f90:	44 0f bf c0          	movswl %ax,%r8d
    1f94:	89 f2                	mov    %esi,%edx
    1f96:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    1f9a:	44 89 c6             	mov    %r8d,%esi
    1f9d:	e8 fe 0e 00 00       	callq  2ea0 <core_bench_matrix>
    1fa2:	66 83 7b 64 00       	cmpw   $0x0,0x64(%rbx)
    1fa7:	41 89 c6             	mov    %eax,%r14d
    1faa:	75 04                	jne    1fb0 <cmp_complex+0x1e0>
    1fac:	66 89 43 64          	mov    %ax,0x64(%rbx)
    1fb0:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1fb4:	e9 77 fe ff ff       	jmpq   1e30 <cmp_complex+0x60>
    1fb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001fc0 <cmp_idx>:
    1fc0:	f3 0f 1e fa          	endbr64 
    1fc4:	48 85 d2             	test   %rdx,%rdx
    1fc7:	74 0f                	je     1fd8 <cmp_idx+0x18>
    1fc9:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1fcd:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1fd1:	29 d0                	sub    %edx,%eax
    1fd3:	c3                   	retq   
    1fd4:	0f 1f 40 00          	nopl   0x0(%rax)
    1fd8:	0f b7 07             	movzwl (%rdi),%eax
    1fdb:	89 c2                	mov    %eax,%edx
    1fdd:	66 c1 e8 08          	shr    $0x8,%ax
    1fe1:	30 d2                	xor    %dl,%dl
    1fe3:	09 d0                	or     %edx,%eax
    1fe5:	66 89 07             	mov    %ax,(%rdi)
    1fe8:	0f b7 06             	movzwl (%rsi),%eax
    1feb:	89 c2                	mov    %eax,%edx
    1fed:	66 c1 e8 08          	shr    $0x8,%ax
    1ff1:	30 d2                	xor    %dl,%dl
    1ff3:	09 d0                	or     %edx,%eax
    1ff5:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1ff9:	66 89 06             	mov    %ax,(%rsi)
    1ffc:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    2000:	29 d0                	sub    %edx,%eax
    2002:	c3                   	retq   
    2003:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    200a:	00 00 00 00 
    200e:	66 90                	xchg   %ax,%ax

0000000000002010 <copy_info>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	0f b7 06             	movzwl (%rsi),%eax
    2017:	66 89 07             	mov    %ax,(%rdi)
    201a:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
    201e:	66 89 47 02          	mov    %ax,0x2(%rdi)
    2022:	c3                   	retq   
    2023:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    202a:	00 00 00 00 
    202e:	66 90                	xchg   %ax,%ax

0000000000002030 <core_bench_list>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	41 57                	push   %r15
    2036:	41 56                	push   %r14
    2038:	41 55                	push   %r13
    203a:	49 89 fd             	mov    %rdi,%r13
    203d:	41 54                	push   %r12
    203f:	55                   	push   %rbp
    2040:	53                   	push   %rbx
    2041:	48 83 ec 28          	sub    $0x28,%rsp
    2045:	44 0f b7 5f 04       	movzwl 0x4(%rdi),%r11d
    204a:	4c 8b 7f 38          	mov    0x38(%rdi),%r15
    204e:	66 89 74 24 16       	mov    %si,0x16(%rsp)
    2053:	66 45 85 db          	test   %r11w,%r11w
    2057:	0f 8e 54 04 00 00    	jle    24b1 <core_bench_list+0x481>
    205d:	45 31 c0             	xor    %r8d,%r8d
    2060:	31 db                	xor    %ebx,%ebx
    2062:	45 31 c9             	xor    %r9d,%r9d
    2065:	45 31 d2             	xor    %r10d,%r10d
    2068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    206f:	00 
    2070:	41 0f b6 c0          	movzbl %r8b,%eax
    2074:	66 83 7c 24 16 00    	cmpw   $0x0,0x16(%rsp)
    207a:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
    207f:	0f 88 eb 02 00 00    	js     2370 <core_bench_list+0x340>
    2085:	4d 85 ff             	test   %r15,%r15
    2088:	0f 84 45 04 00 00    	je     24d3 <core_bench_list+0x4a3>
    208e:	4c 89 f8             	mov    %r15,%rax
    2091:	eb 0d                	jmp    20a0 <core_bench_list+0x70>
    2093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2098:	48 8b 00             	mov    (%rax),%rax
    209b:	48 85 c0             	test   %rax,%rax
    209e:	74 0f                	je     20af <core_bench_list+0x7f>
    20a0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    20a4:	0f b7 4c 24 16       	movzwl 0x16(%rsp),%ecx
    20a9:	66 3b 4a 02          	cmp    0x2(%rdx),%cx
    20ad:	75 e9                	jne    2098 <core_bench_list+0x68>
    20af:	31 ff                	xor    %edi,%edi
    20b1:	eb 0b                	jmp    20be <core_bench_list+0x8e>
    20b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    20b8:	4c 89 ff             	mov    %r15,%rdi
    20bb:	49 89 d7             	mov    %rdx,%r15
    20be:	49 8b 17             	mov    (%r15),%rdx
    20c1:	49 89 3f             	mov    %rdi,(%r15)
    20c4:	48 85 d2             	test   %rdx,%rdx
    20c7:	75 ef                	jne    20b8 <core_bench_list+0x88>
    20c9:	48 85 c0             	test   %rax,%rax
    20cc:	0f 84 ce 02 00 00    	je     23a0 <core_bench_list+0x370>
    20d2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    20d6:	41 83 c1 01          	add    $0x1,%r9d
    20da:	0f b7 12             	movzwl (%rdx),%edx
    20dd:	f6 c2 01             	test   $0x1,%dl
    20e0:	74 0a                	je     20ec <core_bench_list+0xbc>
    20e2:	66 c1 fa 09          	sar    $0x9,%dx
    20e6:	83 e2 01             	and    $0x1,%edx
    20e9:	41 01 d2             	add    %edx,%r10d
    20ec:	48 8b 10             	mov    (%rax),%rdx
    20ef:	48 85 d2             	test   %rdx,%rdx
    20f2:	74 0f                	je     2103 <core_bench_list+0xd3>
    20f4:	48 8b 3a             	mov    (%rdx),%rdi
    20f7:	48 89 38             	mov    %rdi,(%rax)
    20fa:	49 8b 07             	mov    (%r15),%rax
    20fd:	48 89 02             	mov    %rax,(%rdx)
    2100:	49 89 17             	mov    %rdx,(%r15)
    2103:	0f b7 44 24 16       	movzwl 0x16(%rsp),%eax
    2108:	66 3d 00 80          	cmp    $0x8000,%ax
    210c:	66 83 d0 00          	adc    $0x0,%ax
    2110:	41 83 c0 01          	add    $0x1,%r8d
    2114:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
    2119:	66 45 39 c3          	cmp    %r8w,%r11w
    211d:	0f 85 4d ff ff ff    	jne    2070 <core_bench_list+0x40>
    2123:	43 8d 04 8a          	lea    (%r10,%r9,4),%eax
    2127:	29 d8                	sub    %ebx,%eax
    2129:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    212e:	66 85 f6             	test   %si,%si
    2131:	0f 8f 82 02 00 00    	jg     23b9 <core_bench_list+0x389>
    2137:	49 8b 07             	mov    (%r15),%rax
    213a:	66 83 7c 24 16 00    	cmpw   $0x0,0x16(%rsp)
    2140:	4c 89 fb             	mov    %r15,%rbx
    2143:	4c 8b 20             	mov    (%rax),%r12
    2146:	48 8b 50 08          	mov    0x8(%rax),%rdx
    214a:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    214f:	48 89 70 08          	mov    %rsi,0x8(%rax)
    2153:	49 8b 34 24          	mov    (%r12),%rsi
    2157:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    215c:	48 89 30             	mov    %rsi,(%rax)
    215f:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    2166:	00 
    2167:	0f 88 5b 01 00 00    	js     22c8 <core_bench_list+0x298>
    216d:	0f 1f 00             	nopl   (%rax)
    2170:	48 8b 43 08          	mov    0x8(%rbx),%rax
    2174:	0f b7 4c 24 16       	movzwl 0x16(%rsp),%ecx
    2179:	66 3b 48 02          	cmp    0x2(%rax),%cx
    217d:	74 11                	je     2190 <core_bench_list+0x160>
    217f:	48 8b 1b             	mov    (%rbx),%rbx
    2182:	48 85 db             	test   %rbx,%rbx
    2185:	75 e9                	jne    2170 <core_bench_list+0x140>
    2187:	49 8b 1f             	mov    (%r15),%rbx
    218a:	48 85 db             	test   %rbx,%rbx
    218d:	74 27                	je     21b6 <core_bench_list+0x186>
    218f:	90                   	nop
    2190:	49 8b 47 08          	mov    0x8(%r15),%rax
    2194:	0f b7 74 24 1e       	movzwl 0x1e(%rsp),%esi
    2199:	0f bf 38             	movswl (%rax),%edi
    219c:	e8 0f 1e 00 00       	callq  3fb0 <crc16>
    21a1:	48 8b 1b             	mov    (%rbx),%rbx
    21a4:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    21a9:	48 85 db             	test   %rbx,%rbx
    21ac:	75 e2                	jne    2190 <core_bench_list+0x160>
    21ae:	49 8b 1f             	mov    (%r15),%rbx
    21b1:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    21b6:	48 8b 43 08          	mov    0x8(%rbx),%rax
    21ba:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    21c0:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    21c5:	48 8b 03             	mov    (%rbx),%rax
    21c8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    21cc:	49 89 04 24          	mov    %rax,(%r12)
    21d0:	4c 89 23             	mov    %r12,(%rbx)
    21d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    21d8:	4c 89 f8             	mov    %r15,%rax
    21db:	45 31 c9             	xor    %r9d,%r9d
    21de:	45 31 ff             	xor    %r15d,%r15d
    21e1:	45 31 db             	xor    %r11d,%r11d
    21e4:	0f 1f 40 00          	nopl   0x0(%rax)
    21e8:	41 83 c3 01          	add    $0x1,%r11d
    21ec:	49 89 c0             	mov    %rax,%r8
    21ef:	31 d2                	xor    %edx,%edx
    21f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    21f8:	4d 8b 00             	mov    (%r8),%r8
    21fb:	83 c2 01             	add    $0x1,%edx
    21fe:	4d 85 c0             	test   %r8,%r8
    2201:	74 05                	je     2208 <core_bench_list+0x1d8>
    2203:	44 39 d2             	cmp    %r10d,%edx
    2206:	7c f0                	jl     21f8 <core_bench_list+0x1c8>
    2208:	48 89 c6             	mov    %rax,%rsi
    220b:	44 89 d7             	mov    %r10d,%edi
    220e:	4c 89 c0             	mov    %r8,%rax
    2211:	eb 75                	jmp    2288 <core_bench_list+0x258>
    2213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2218:	85 ff                	test   %edi,%edi
    221a:	0f 84 e0 00 00 00    	je     2300 <core_bench_list+0x2d0>
    2220:	48 85 c0             	test   %rax,%rax
    2223:	0f 84 d7 00 00 00    	je     2300 <core_bench_list+0x2d0>
    2229:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    222d:	48 8b 58 08          	mov    0x8(%rax),%rbx
    2231:	44 0f b7 45 00       	movzwl 0x0(%rbp),%r8d
    2236:	45 89 c4             	mov    %r8d,%r12d
    2239:	66 41 c1 e8 08       	shr    $0x8,%r8w
    223e:	45 30 e4             	xor    %r12b,%r12b
    2241:	45 09 e0             	or     %r12d,%r8d
    2244:	66 44 89 45 00       	mov    %r8w,0x0(%rbp)
    2249:	44 0f b7 03          	movzwl (%rbx),%r8d
    224d:	45 89 c4             	mov    %r8d,%r12d
    2250:	66 41 c1 e8 08       	shr    $0x8,%r8w
    2255:	45 30 e4             	xor    %r12b,%r12b
    2258:	45 09 e0             	or     %r12d,%r8d
    225b:	66 44 89 03          	mov    %r8w,(%rbx)
    225f:	44 0f bf 45 02       	movswl 0x2(%rbp),%r8d
    2264:	0f bf 5b 02          	movswl 0x2(%rbx),%ebx
    2268:	41 29 d8             	sub    %ebx,%r8d
    226b:	45 85 c0             	test   %r8d,%r8d
    226e:	0f 8e 8c 00 00 00    	jle    2300 <core_bench_list+0x2d0>
    2274:	49 89 c0             	mov    %rax,%r8
    2277:	48 8b 00             	mov    (%rax),%rax
    227a:	83 ef 01             	sub    $0x1,%edi
    227d:	4d 85 c9             	test   %r9,%r9
    2280:	74 76                	je     22f8 <core_bench_list+0x2c8>
    2282:	4d 89 01             	mov    %r8,(%r9)
    2285:	4d 89 c1             	mov    %r8,%r9
    2288:	85 d2                	test   %edx,%edx
    228a:	75 8c                	jne    2218 <core_bench_list+0x1e8>
    228c:	85 ff                	test   %edi,%edi
    228e:	0f 8e 7c 00 00 00    	jle    2310 <core_bench_list+0x2e0>
    2294:	48 85 c0             	test   %rax,%rax
    2297:	75 db                	jne    2274 <core_bench_list+0x244>
    2299:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    22a0:	41 83 fb 01          	cmp    $0x1,%r11d
    22a4:	0f 84 80 00 00 00    	je     232a <core_bench_list+0x2fa>
    22aa:	45 01 d2             	add    %r10d,%r10d
    22ad:	4d 85 ff             	test   %r15,%r15
    22b0:	0f 85 22 ff ff ff    	jne    21d8 <core_bench_list+0x1a8>
    22b6:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    22bd:	00 00 00 00 00 
    22c2:	0f 0b                	ud2    
    22c4:	0f 1f 40 00          	nopl   0x0(%rax)
    22c8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    22cc:	0f b6 00             	movzbl (%rax),%eax
    22cf:	66 39 44 24 1c       	cmp    %ax,0x1c(%rsp)
    22d4:	0f 84 b6 fe ff ff    	je     2190 <core_bench_list+0x160>
    22da:	48 8b 1b             	mov    (%rbx),%rbx
    22dd:	48 85 db             	test   %rbx,%rbx
    22e0:	75 e6                	jne    22c8 <core_bench_list+0x298>
    22e2:	49 8b 1f             	mov    (%r15),%rbx
    22e5:	48 85 db             	test   %rbx,%rbx
    22e8:	0f 85 a2 fe ff ff    	jne    2190 <core_bench_list+0x160>
    22ee:	e9 c3 fe ff ff       	jmpq   21b6 <core_bench_list+0x186>
    22f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    22f8:	4d 89 c7             	mov    %r8,%r15
    22fb:	eb 88                	jmp    2285 <core_bench_list+0x255>
    22fd:	0f 1f 00             	nopl   (%rax)
    2300:	49 89 f0             	mov    %rsi,%r8
    2303:	83 ea 01             	sub    $0x1,%edx
    2306:	48 8b 36             	mov    (%rsi),%rsi
    2309:	e9 6f ff ff ff       	jmpq   227d <core_bench_list+0x24d>
    230e:	66 90                	xchg   %ax,%ax
    2310:	48 85 c0             	test   %rax,%rax
    2313:	0f 85 cf fe ff ff    	jne    21e8 <core_bench_list+0x1b8>
    2319:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    2320:	41 83 fb 01          	cmp    $0x1,%r11d
    2324:	0f 85 80 ff ff ff    	jne    22aa <core_bench_list+0x27a>
    232a:	49 8b 1f             	mov    (%r15),%rbx
    232d:	48 85 db             	test   %rbx,%rbx
    2330:	0f 84 8e 01 00 00    	je     24c4 <core_bench_list+0x494>
    2336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    233d:	00 00 00 
    2340:	49 8b 47 08          	mov    0x8(%r15),%rax
    2344:	0f b7 74 24 1e       	movzwl 0x1e(%rsp),%esi
    2349:	0f bf 38             	movswl (%rax),%edi
    234c:	e8 5f 1c 00 00       	callq  3fb0 <crc16>
    2351:	48 8b 1b             	mov    (%rbx),%rbx
    2354:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    2359:	48 85 db             	test   %rbx,%rbx
    235c:	75 e2                	jne    2340 <core_bench_list+0x310>
    235e:	48 83 c4 28          	add    $0x28,%rsp
    2362:	5b                   	pop    %rbx
    2363:	5d                   	pop    %rbp
    2364:	41 5c                	pop    %r12
    2366:	41 5d                	pop    %r13
    2368:	41 5e                	pop    %r14
    236a:	41 5f                	pop    %r15
    236c:	c3                   	retq   
    236d:	0f 1f 00             	nopl   (%rax)
    2370:	4d 85 ff             	test   %r15,%r15
    2373:	0f 84 55 01 00 00    	je     24ce <core_bench_list+0x49e>
    2379:	4c 89 f8             	mov    %r15,%rax
    237c:	eb 0e                	jmp    238c <core_bench_list+0x35c>
    237e:	66 90                	xchg   %ax,%ax
    2380:	48 8b 00             	mov    (%rax),%rax
    2383:	48 85 c0             	test   %rax,%rax
    2386:	0f 84 23 fd ff ff    	je     20af <core_bench_list+0x7f>
    238c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2390:	0f b6 12             	movzbl (%rdx),%edx
    2393:	66 39 54 24 1c       	cmp    %dx,0x1c(%rsp)
    2398:	75 e6                	jne    2380 <core_bench_list+0x350>
    239a:	e9 10 fd ff ff       	jmpq   20af <core_bench_list+0x7f>
    239f:	90                   	nop
    23a0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    23a4:	83 c3 01             	add    $0x1,%ebx
    23a7:	0f b7 00             	movzwl (%rax),%eax
    23aa:	66 c1 f8 08          	sar    $0x8,%ax
    23ae:	83 e0 01             	and    $0x1,%eax
    23b1:	41 01 c2             	add    %eax,%r10d
    23b4:	e9 4a fd ff ff       	jmpq   2103 <core_bench_list+0xd3>
    23b9:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    23c0:	00 
    23c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23c8:	4d 85 ff             	test   %r15,%r15
    23cb:	0f 84 6f ed ff ff    	je     1140 <core_bench_list.cold>
    23d1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    23d8:	00 00 
    23da:	45 31 f6             	xor    %r14d,%r14d
    23dd:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    23e4:	00 
    23e5:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    23ea:	4c 89 f8             	mov    %r15,%rax
    23ed:	31 ed                	xor    %ebp,%ebp
    23ef:	90                   	nop
    23f0:	48 8b 00             	mov    (%rax),%rax
    23f3:	83 c5 01             	add    $0x1,%ebp
    23f6:	48 85 c0             	test   %rax,%rax
    23f9:	74 06                	je     2401 <core_bench_list+0x3d1>
    23fb:	3b 6c 24 10          	cmp    0x10(%rsp),%ebp
    23ff:	75 ef                	jne    23f0 <core_bench_list+0x3c0>
    2401:	4d 89 fc             	mov    %r15,%r12
    2404:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    2408:	49 89 c7             	mov    %rax,%r15
    240b:	eb 35                	jmp    2442 <core_bench_list+0x412>
    240d:	0f 1f 00             	nopl   (%rax)
    2410:	85 db                	test   %ebx,%ebx
    2412:	74 6c                	je     2480 <core_bench_list+0x450>
    2414:	4d 85 ff             	test   %r15,%r15
    2417:	74 67                	je     2480 <core_bench_list+0x450>
    2419:	49 8b 77 08          	mov    0x8(%r15),%rsi
    241d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    2422:	4c 89 ea             	mov    %r13,%rdx
    2425:	e8 a6 f9 ff ff       	callq  1dd0 <cmp_complex>
    242a:	85 c0                	test   %eax,%eax
    242c:	7e 52                	jle    2480 <core_bench_list+0x450>
    242e:	4c 89 f8             	mov    %r15,%rax
    2431:	4d 8b 3f             	mov    (%r15),%r15
    2434:	83 eb 01             	sub    $0x1,%ebx
    2437:	4d 85 f6             	test   %r14,%r14
    243a:	74 34                	je     2470 <core_bench_list+0x440>
    243c:	49 89 06             	mov    %rax,(%r14)
    243f:	49 89 c6             	mov    %rax,%r14
    2442:	85 ed                	test   %ebp,%ebp
    2444:	75 ca                	jne    2410 <core_bench_list+0x3e0>
    2446:	85 db                	test   %ebx,%ebx
    2448:	7e 46                	jle    2490 <core_bench_list+0x460>
    244a:	4d 85 ff             	test   %r15,%r15
    244d:	75 df                	jne    242e <core_bench_list+0x3fe>
    244f:	83 7c 24 18 01       	cmpl   $0x1,0x18(%rsp)
    2454:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    245b:	74 4a                	je     24a7 <core_bench_list+0x477>
    245d:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    2462:	d1 64 24 10          	shll   0x10(%rsp)
    2466:	e9 5d ff ff ff       	jmpq   23c8 <core_bench_list+0x398>
    246b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2470:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2475:	eb c8                	jmp    243f <core_bench_list+0x40f>
    2477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    247e:	00 00 
    2480:	4c 89 e0             	mov    %r12,%rax
    2483:	83 ed 01             	sub    $0x1,%ebp
    2486:	4d 8b 24 24          	mov    (%r12),%r12
    248a:	eb ab                	jmp    2437 <core_bench_list+0x407>
    248c:	0f 1f 40 00          	nopl   0x0(%rax)
    2490:	4d 85 ff             	test   %r15,%r15
    2493:	0f 85 4c ff ff ff    	jne    23e5 <core_bench_list+0x3b5>
    2499:	83 7c 24 18 01       	cmpl   $0x1,0x18(%rsp)
    249e:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    24a5:	75 b6                	jne    245d <core_bench_list+0x42d>
    24a7:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    24ac:	e9 86 fc ff ff       	jmpq   2137 <core_bench_list+0x107>
    24b1:	31 c0                	xor    %eax,%eax
    24b3:	31 d2                	xor    %edx,%edx
    24b5:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    24ba:	66 89 54 24 1c       	mov    %dx,0x1c(%rsp)
    24bf:	e9 6a fc ff ff       	jmpq   212e <core_bench_list+0xfe>
    24c4:	0f b7 44 24 1e       	movzwl 0x1e(%rsp),%eax
    24c9:	e9 90 fe ff ff       	jmpq   235e <core_bench_list+0x32e>
    24ce:	e9 7b ec ff ff       	jmpq   114e <core_bench_list.cold+0xe>
    24d3:	e9 76 ec ff ff       	jmpq   114e <core_bench_list.cold+0xe>
    24d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    24df:	00 

00000000000024e0 <core_list_init>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	41 89 fb             	mov    %edi,%r11d
    24e7:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
    24ec:	41 57                	push   %r15
    24ee:	48 89 f0             	mov    %rsi,%rax
    24f1:	4c 0f af df          	imul   %rdi,%r11
    24f5:	41 56                	push   %r14
    24f7:	4c 8d 4e 10          	lea    0x10(%rsi),%r9
    24fb:	41 89 d6             	mov    %edx,%r14d
    24fe:	41 55                	push   %r13
    2500:	41 54                	push   %r12
    2502:	41 89 d4             	mov    %edx,%r12d
    2505:	49 c1 eb 24          	shr    $0x24,%r11
    2509:	55                   	push   %rbp
    250a:	41 8d 6b fe          	lea    -0x2(%r11),%ebp
    250e:	53                   	push   %rbx
    250f:	48 89 eb             	mov    %rbp,%rbx
    2512:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    2519:	49 89 eb             	mov    %rbp,%r11
    251c:	48 c1 e3 04          	shl    $0x4,%rbx
    2520:	48 01 f3             	add    %rsi,%rbx
    2523:	48 83 c6 20          	add    $0x20,%rsi
    2527:	48 89 5e e8          	mov    %rbx,-0x18(%rsi)
    252b:	4c 8d 2c ab          	lea    (%rbx,%rbp,4),%r13
    252f:	48 8d 53 04          	lea    0x4(%rbx),%rdx
    2533:	c7 03 80 80 00 00    	movl   $0x8080,(%rbx)
    2539:	48 39 f3             	cmp    %rsi,%rbx
    253c:	0f 86 16 02 00 00    	jbe    2758 <core_list_init+0x278>
    2542:	4c 8d 43 08          	lea    0x8(%rbx),%r8
    2546:	4d 39 c5             	cmp    %r8,%r13
    2549:	0f 86 09 02 00 00    	jbe    2758 <core_list_init+0x278>
    254f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    2556:	00 
    2557:	4c 89 08             	mov    %r9,(%rax)
    255a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    255e:	c7 43 04 ff ff ff 7f 	movl   $0x7fffffff,0x4(%rbx)
    2565:	45 85 db             	test   %r11d,%r11d
    2568:	74 60                	je     25ca <core_list_init+0xea>
    256a:	31 ff                	xor    %edi,%edi
    256c:	0f 1f 40 00          	nopl   0x0(%rax)
    2570:	4c 8d 56 10          	lea    0x10(%rsi),%r10
    2574:	4c 39 d3             	cmp    %r10,%rbx
    2577:	76 49                	jbe    25c2 <core_list_init+0xe2>
    2579:	49 8d 50 04          	lea    0x4(%r8),%rdx
    257d:	49 39 d5             	cmp    %rdx,%r13
    2580:	76 40                	jbe    25c2 <core_list_init+0xe2>
    2582:	44 89 e1             	mov    %r12d,%ecx
    2585:	41 89 ff             	mov    %edi,%r15d
    2588:	4c 89 0e             	mov    %r9,(%rsi)
    258b:	31 f9                	xor    %edi,%ecx
    258d:	41 83 e7 07          	and    $0x7,%r15d
    2591:	48 89 30             	mov    %rsi,(%rax)
    2594:	c1 e1 03             	shl    $0x3,%ecx
    2597:	4c 89 46 08          	mov    %r8,0x8(%rsi)
    259b:	83 e1 78             	and    $0x78,%ecx
    259e:	44 09 f9             	or     %r15d,%ecx
    25a1:	41 89 c9             	mov    %ecx,%r9d
    25a4:	41 c1 e1 08          	shl    $0x8,%r9d
    25a8:	44 09 c9             	or     %r9d,%ecx
    25ab:	49 89 f1             	mov    %rsi,%r9
    25ae:	4c 89 d6             	mov    %r10,%rsi
    25b1:	66 41 89 08          	mov    %cx,(%r8)
    25b5:	b9 ff 7f 00 00       	mov    $0x7fff,%ecx
    25ba:	66 41 89 48 02       	mov    %cx,0x2(%r8)
    25bf:	49 89 d0             	mov    %rdx,%r8
    25c2:	83 c7 01             	add    $0x1,%edi
    25c5:	41 39 fb             	cmp    %edi,%r11d
    25c8:	75 a6                	jne    2570 <core_list_init+0x90>
    25ca:	49 8b 31             	mov    (%r9),%rsi
    25cd:	48 85 f6             	test   %rsi,%rsi
    25d0:	74 63                	je     2635 <core_list_init+0x155>
    25d2:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
    25d7:	b9 01 00 00 00       	mov    $0x1,%ecx
    25dc:	48 0f af ea          	imul   %rdx,%rbp
    25e0:	48 c1 ed 22          	shr    $0x22,%rbp
    25e4:	eb 1f                	jmp    2605 <core_list_init+0x125>
    25e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    25ed:	00 00 00 
    25f0:	48 8b 16             	mov    (%rsi),%rdx
    25f3:	66 89 4f 02          	mov    %cx,0x2(%rdi)
    25f7:	83 c1 01             	add    $0x1,%ecx
    25fa:	48 85 d2             	test   %rdx,%rdx
    25fd:	74 36                	je     2635 <core_list_init+0x155>
    25ff:	49 89 f1             	mov    %rsi,%r9
    2602:	48 89 d6             	mov    %rdx,%rsi
    2605:	49 8b 79 08          	mov    0x8(%r9),%rdi
    2609:	39 cd                	cmp    %ecx,%ebp
    260b:	77 e3                	ja     25f0 <core_list_init+0x110>
    260d:	8d 51 01             	lea    0x1(%rcx),%edx
    2610:	45 89 f0             	mov    %r14d,%r8d
    2613:	c1 e2 08             	shl    $0x8,%edx
    2616:	41 31 c8             	xor    %ecx,%r8d
    2619:	83 c1 01             	add    $0x1,%ecx
    261c:	66 81 e2 00 07       	and    $0x700,%dx
    2621:	44 09 c2             	or     %r8d,%edx
    2624:	66 81 e2 ff 3f       	and    $0x3fff,%dx
    2629:	66 89 57 02          	mov    %dx,0x2(%rdi)
    262d:	48 8b 16             	mov    (%rsi),%rdx
    2630:	48 85 d2             	test   %rdx,%rdx
    2633:	75 ca                	jne    25ff <core_list_init+0x11f>
    2635:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    263b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2640:	48 89 c2             	mov    %rax,%rdx
    2643:	45 31 d2             	xor    %r10d,%r10d
    2646:	31 c0                	xor    %eax,%eax
    2648:	31 db                	xor    %ebx,%ebx
    264a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2650:	83 c3 01             	add    $0x1,%ebx
    2653:	48 89 d6             	mov    %rdx,%rsi
    2656:	31 c9                	xor    %ecx,%ecx
    2658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    265f:	00 
    2660:	48 8b 36             	mov    (%rsi),%rsi
    2663:	83 c1 01             	add    $0x1,%ecx
    2666:	48 85 f6             	test   %rsi,%rsi
    2669:	74 08                	je     2673 <core_list_init+0x193>
    266b:	41 39 cb             	cmp    %ecx,%r11d
    266e:	75 f0                	jne    2660 <core_list_init+0x180>
    2670:	44 89 d9             	mov    %r11d,%ecx
    2673:	48 89 d7             	mov    %rdx,%rdi
    2676:	45 89 d8             	mov    %r11d,%r8d
    2679:	48 89 f2             	mov    %rsi,%rdx
    267c:	eb 6b                	jmp    26e9 <core_list_init+0x209>
    267e:	66 90                	xchg   %ax,%ax
    2680:	45 85 c0             	test   %r8d,%r8d
    2683:	0f 84 bf 00 00 00    	je     2748 <core_list_init+0x268>
    2689:	48 85 d2             	test   %rdx,%rdx
    268c:	0f 84 b6 00 00 00    	je     2748 <core_list_init+0x268>
    2692:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    2696:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    269a:	0f b7 75 00          	movzwl 0x0(%rbp),%esi
    269e:	41 89 f4             	mov    %esi,%r12d
    26a1:	66 c1 ee 08          	shr    $0x8,%si
    26a5:	45 30 e4             	xor    %r12b,%r12b
    26a8:	44 09 e6             	or     %r12d,%esi
    26ab:	66 89 75 00          	mov    %si,0x0(%rbp)
    26af:	41 0f b7 31          	movzwl (%r9),%esi
    26b3:	41 89 f4             	mov    %esi,%r12d
    26b6:	66 c1 ee 08          	shr    $0x8,%si
    26ba:	45 30 e4             	xor    %r12b,%r12b
    26bd:	44 09 e6             	or     %r12d,%esi
    26c0:	66 41 89 31          	mov    %si,(%r9)
    26c4:	0f bf 75 02          	movswl 0x2(%rbp),%esi
    26c8:	45 0f bf 49 02       	movswl 0x2(%r9),%r9d
    26cd:	44 29 ce             	sub    %r9d,%esi
    26d0:	85 f6                	test   %esi,%esi
    26d2:	7e 74                	jle    2748 <core_list_init+0x268>
    26d4:	49 89 d1             	mov    %rdx,%r9
    26d7:	48 8b 12             	mov    (%rdx),%rdx
    26da:	41 83 e8 01          	sub    $0x1,%r8d
    26de:	4d 85 d2             	test   %r10,%r10
    26e1:	74 5d                	je     2740 <core_list_init+0x260>
    26e3:	4d 89 0a             	mov    %r9,(%r10)
    26e6:	4d 89 ca             	mov    %r9,%r10
    26e9:	85 c9                	test   %ecx,%ecx
    26eb:	75 93                	jne    2680 <core_list_init+0x1a0>
    26ed:	45 85 c0             	test   %r8d,%r8d
    26f0:	7e 2e                	jle    2720 <core_list_init+0x240>
    26f2:	48 85 d2             	test   %rdx,%rdx
    26f5:	75 dd                	jne    26d4 <core_list_init+0x1f4>
    26f7:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    26fe:	83 fb 01             	cmp    $0x1,%ebx
    2701:	74 32                	je     2735 <core_list_init+0x255>
    2703:	45 01 db             	add    %r11d,%r11d
    2706:	48 85 c0             	test   %rax,%rax
    2709:	0f 85 31 ff ff ff    	jne    2640 <core_list_init+0x160>
    270f:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    2716:	00 00 00 00 00 
    271b:	0f 0b                	ud2    
    271d:	0f 1f 00             	nopl   (%rax)
    2720:	48 85 d2             	test   %rdx,%rdx
    2723:	0f 85 27 ff ff ff    	jne    2650 <core_list_init+0x170>
    2729:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    2730:	83 fb 01             	cmp    $0x1,%ebx
    2733:	75 ce                	jne    2703 <core_list_init+0x223>
    2735:	5b                   	pop    %rbx
    2736:	5d                   	pop    %rbp
    2737:	41 5c                	pop    %r12
    2739:	41 5d                	pop    %r13
    273b:	41 5e                	pop    %r14
    273d:	41 5f                	pop    %r15
    273f:	c3                   	retq   
    2740:	4c 89 c8             	mov    %r9,%rax
    2743:	eb a1                	jmp    26e6 <core_list_init+0x206>
    2745:	0f 1f 00             	nopl   (%rax)
    2748:	49 89 f9             	mov    %rdi,%r9
    274b:	83 e9 01             	sub    $0x1,%ecx
    274e:	48 8b 3f             	mov    (%rdi),%rdi
    2751:	eb 8b                	jmp    26de <core_list_init+0x1fe>
    2753:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2758:	4c 89 ce             	mov    %r9,%rsi
    275b:	49 89 d0             	mov    %rdx,%r8
    275e:	45 31 c9             	xor    %r9d,%r9d
    2761:	e9 ff fd ff ff       	jmpq   2565 <core_list_init+0x85>
    2766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    276d:	00 00 00 

0000000000002770 <core_list_insert_new>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	48 8b 02             	mov    (%rdx),%rax
    2777:	4c 8d 50 10          	lea    0x10(%rax),%r10
    277b:	4d 39 c2             	cmp    %r8,%r10
    277e:	73 38                	jae    27b8 <core_list_insert_new+0x48>
    2780:	4c 8b 01             	mov    (%rcx),%r8
    2783:	4d 8d 58 04          	lea    0x4(%r8),%r11
    2787:	4d 39 d9             	cmp    %r11,%r9
    278a:	76 2c                	jbe    27b8 <core_list_insert_new+0x48>
    278c:	4c 89 12             	mov    %r10,(%rdx)
    278f:	48 8b 17             	mov    (%rdi),%rdx
    2792:	48 89 10             	mov    %rdx,(%rax)
    2795:	48 89 07             	mov    %rax,(%rdi)
    2798:	4c 89 40 08          	mov    %r8,0x8(%rax)
    279c:	48 83 01 04          	addq   $0x4,(%rcx)
    27a0:	0f b7 0e             	movzwl (%rsi),%ecx
    27a3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    27a7:	66 89 0a             	mov    %cx,(%rdx)
    27aa:	0f b7 4e 02          	movzwl 0x2(%rsi),%ecx
    27ae:	66 89 4a 02          	mov    %cx,0x2(%rdx)
    27b2:	c3                   	retq   
    27b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    27b8:	31 c0                	xor    %eax,%eax
    27ba:	c3                   	retq   
    27bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000027c0 <core_list_remove>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	48 8b 07             	mov    (%rdi),%rax
    27c7:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    27cb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    27cf:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    27d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    27d7:	48 8b 10             	mov    (%rax),%rdx
    27da:	48 89 17             	mov    %rdx,(%rdi)
    27dd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    27e4:	c3                   	retq   
    27e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    27ec:	00 00 00 00 

00000000000027f0 <core_list_undo_remove>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    27f8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    27fc:	48 89 f8             	mov    %rdi,%rax
    27ff:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    2803:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    2807:	48 8b 16             	mov    (%rsi),%rdx
    280a:	48 89 17             	mov    %rdx,(%rdi)
    280d:	48 89 3e             	mov    %rdi,(%rsi)
    2810:	c3                   	retq   
    2811:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    2818:	00 00 00 00 
    281c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002820 <core_list_find>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	0f b7 56 02          	movzwl 0x2(%rsi),%edx
    2828:	66 85 d2             	test   %dx,%dx
    282b:	79 10                	jns    283d <core_list_find+0x1d>
    282d:	eb 19                	jmp    2848 <core_list_find+0x28>
    282f:	90                   	nop
    2830:	48 8b 47 08          	mov    0x8(%rdi),%rax
    2834:	66 3b 50 02          	cmp    0x2(%rax),%dx
    2838:	74 36                	je     2870 <core_list_find+0x50>
    283a:	48 8b 3f             	mov    (%rdi),%rdi
    283d:	48 85 ff             	test   %rdi,%rdi
    2840:	75 ee                	jne    2830 <core_list_find+0x10>
    2842:	31 c0                	xor    %eax,%eax
    2844:	c3                   	retq   
    2845:	0f 1f 00             	nopl   (%rax)
    2848:	48 85 ff             	test   %rdi,%rdi
    284b:	74 f5                	je     2842 <core_list_find+0x22>
    284d:	0f b7 0e             	movzwl (%rsi),%ecx
    2850:	48 89 f8             	mov    %rdi,%rax
    2853:	eb 0b                	jmp    2860 <core_list_find+0x40>
    2855:	0f 1f 00             	nopl   (%rax)
    2858:	48 8b 00             	mov    (%rax),%rax
    285b:	48 85 c0             	test   %rax,%rax
    285e:	74 e4                	je     2844 <core_list_find+0x24>
    2860:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2864:	0f b6 12             	movzbl (%rdx),%edx
    2867:	66 39 ca             	cmp    %cx,%dx
    286a:	75 ec                	jne    2858 <core_list_find+0x38>
    286c:	c3                   	retq   
    286d:	0f 1f 00             	nopl   (%rax)
    2870:	48 89 f8             	mov    %rdi,%rax
    2873:	c3                   	retq   
    2874:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    287b:	00 00 00 00 
    287f:	90                   	nop

0000000000002880 <core_list_reverse>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	48 89 f8             	mov    %rdi,%rax
    2887:	48 85 ff             	test   %rdi,%rdi
    288a:	74 15                	je     28a1 <core_list_reverse+0x21>
    288c:	31 c9                	xor    %ecx,%ecx
    288e:	eb 03                	jmp    2893 <core_list_reverse+0x13>
    2890:	48 89 d0             	mov    %rdx,%rax
    2893:	48 8b 10             	mov    (%rax),%rdx
    2896:	48 89 08             	mov    %rcx,(%rax)
    2899:	48 89 c1             	mov    %rax,%rcx
    289c:	48 85 d2             	test   %rdx,%rdx
    289f:	75 ef                	jne    2890 <core_list_reverse+0x10>
    28a1:	c3                   	retq   
    28a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    28a9:	00 00 00 00 
    28ad:	0f 1f 00             	nopl   (%rax)

00000000000028b0 <core_list_mergesort>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	41 57                	push   %r15
    28b6:	41 56                	push   %r14
    28b8:	41 55                	push   %r13
    28ba:	49 89 d5             	mov    %rdx,%r13
    28bd:	41 54                	push   %r12
    28bf:	55                   	push   %rbp
    28c0:	53                   	push   %rbx
    28c1:	48 89 fb             	mov    %rdi,%rbx
    28c4:	48 83 ec 28          	sub    $0x28,%rsp
    28c8:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    28cd:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%rsp)
    28d4:	00 
    28d5:	48 85 db             	test   %rbx,%rbx
    28d8:	0f 84 fd 00 00 00    	je     29db <core_list_mergesort+0x12b>
    28de:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    28e5:	00 
    28e6:	45 31 ff             	xor    %r15d,%r15d
    28e9:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    28f0:	00 00 
    28f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    28f8:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    28fd:	48 89 d8             	mov    %rbx,%rax
    2900:	45 31 f6             	xor    %r14d,%r14d
    2903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2908:	48 8b 00             	mov    (%rax),%rax
    290b:	41 83 c6 01          	add    $0x1,%r14d
    290f:	48 85 c0             	test   %rax,%rax
    2912:	74 07                	je     291b <core_list_mergesort+0x6b>
    2914:	44 39 74 24 18       	cmp    %r14d,0x18(%rsp)
    2919:	75 ed                	jne    2908 <core_list_mergesort+0x58>
    291b:	49 89 dc             	mov    %rbx,%r12
    291e:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
    2922:	48 89 c3             	mov    %rax,%rbx
    2925:	eb 3d                	jmp    2964 <core_list_mergesort+0xb4>
    2927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    292e:	00 00 
    2930:	85 ed                	test   %ebp,%ebp
    2932:	74 5c                	je     2990 <core_list_mergesort+0xe0>
    2934:	48 85 db             	test   %rbx,%rbx
    2937:	74 57                	je     2990 <core_list_mergesort+0xe0>
    2939:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    293d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    2942:	4c 89 ea             	mov    %r13,%rdx
    2945:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    294a:	ff d0                	callq  *%rax
    294c:	85 c0                	test   %eax,%eax
    294e:	7e 40                	jle    2990 <core_list_mergesort+0xe0>
    2950:	48 89 d8             	mov    %rbx,%rax
    2953:	83 ed 01             	sub    $0x1,%ebp
    2956:	48 8b 1b             	mov    (%rbx),%rbx
    2959:	4d 85 ff             	test   %r15,%r15
    295c:	74 42                	je     29a0 <core_list_mergesort+0xf0>
    295e:	49 89 07             	mov    %rax,(%r15)
    2961:	49 89 c7             	mov    %rax,%r15
    2964:	45 85 f6             	test   %r14d,%r14d
    2967:	75 c7                	jne    2930 <core_list_mergesort+0x80>
    2969:	85 ed                	test   %ebp,%ebp
    296b:	7e 43                	jle    29b0 <core_list_mergesort+0x100>
    296d:	48 85 db             	test   %rbx,%rbx
    2970:	75 de                	jne    2950 <core_list_mergesort+0xa0>
    2972:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    2977:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    297e:	74 47                	je     29c7 <core_list_mergesort+0x117>
    2980:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    2985:	d1 64 24 18          	shll   0x18(%rsp)
    2989:	e9 47 ff ff ff       	jmpq   28d5 <core_list_mergesort+0x25>
    298e:	66 90                	xchg   %ax,%ax
    2990:	4c 89 e0             	mov    %r12,%rax
    2993:	41 83 ee 01          	sub    $0x1,%r14d
    2997:	4d 8b 24 24          	mov    (%r12),%r12
    299b:	4d 85 ff             	test   %r15,%r15
    299e:	75 be                	jne    295e <core_list_mergesort+0xae>
    29a0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    29a5:	eb ba                	jmp    2961 <core_list_mergesort+0xb1>
    29a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    29ae:	00 00 
    29b0:	48 85 db             	test   %rbx,%rbx
    29b3:	0f 85 3f ff ff ff    	jne    28f8 <core_list_mergesort+0x48>
    29b9:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    29be:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    29c5:	75 b9                	jne    2980 <core_list_mergesort+0xd0>
    29c7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    29cc:	48 83 c4 28          	add    $0x28,%rsp
    29d0:	5b                   	pop    %rbx
    29d1:	5d                   	pop    %rbp
    29d2:	41 5c                	pop    %r12
    29d4:	41 5d                	pop    %r13
    29d6:	41 5e                	pop    %r14
    29d8:	41 5f                	pop    %r15
    29da:	c3                   	retq   
    29db:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    29e2:	00 00 00 00 00 
    29e7:	0f 0b                	ud2    
    29e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000029f0 <iterate>:
    29f0:	f3 0f 1e fa          	endbr64 
    29f4:	41 54                	push   %r12
    29f6:	55                   	push   %rbp
    29f7:	53                   	push   %rbx
    29f8:	8b 6f 2c             	mov    0x2c(%rdi),%ebp
    29fb:	48 c7 47 60 00 00 00 	movq   $0x0,0x60(%rdi)
    2a02:	00 
    2a03:	85 ed                	test   %ebp,%ebp
    2a05:	74 51                	je     2a58 <iterate+0x68>
    2a07:	48 89 fb             	mov    %rdi,%rbx
    2a0a:	45 31 e4             	xor    %r12d,%r12d
    2a0d:	0f 1f 00             	nopl   (%rax)
    2a10:	be 01 00 00 00       	mov    $0x1,%esi
    2a15:	48 89 df             	mov    %rbx,%rdi
    2a18:	e8 13 f6 ff ff       	callq  2030 <core_bench_list>
    2a1d:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    2a21:	0f b7 f8             	movzwl %ax,%edi
    2a24:	e8 97 10 00 00       	callq  3ac0 <crcu16>
    2a29:	be ff ff ff ff       	mov    $0xffffffff,%esi
    2a2e:	48 89 df             	mov    %rbx,%rdi
    2a31:	66 89 43 60          	mov    %ax,0x60(%rbx)
    2a35:	e8 f6 f5 ff ff       	callq  2030 <core_bench_list>
    2a3a:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    2a3e:	0f b7 f8             	movzwl %ax,%edi
    2a41:	e8 7a 10 00 00       	callq  3ac0 <crcu16>
    2a46:	66 89 43 60          	mov    %ax,0x60(%rbx)
    2a4a:	45 85 e4             	test   %r12d,%r12d
    2a4d:	74 11                	je     2a60 <iterate+0x70>
    2a4f:	41 83 c4 01          	add    $0x1,%r12d
    2a53:	44 39 e5             	cmp    %r12d,%ebp
    2a56:	75 b8                	jne    2a10 <iterate+0x20>
    2a58:	5b                   	pop    %rbx
    2a59:	31 c0                	xor    %eax,%eax
    2a5b:	5d                   	pop    %rbp
    2a5c:	41 5c                	pop    %r12
    2a5e:	c3                   	retq   
    2a5f:	90                   	nop
    2a60:	66 89 43 62          	mov    %ax,0x62(%rbx)
    2a64:	83 fd 01             	cmp    $0x1,%ebp
    2a67:	74 ef                	je     2a58 <iterate+0x68>
    2a69:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2a6f:	eb 9f                	jmp    2a10 <iterate+0x20>
    2a71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2a78:	00 00 00 
    2a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002a80 <matrix_test>:
    2a80:	f3 0f 1e fa          	endbr64 
    2a84:	41 57                	push   %r15
    2a86:	41 56                	push   %r14
    2a88:	41 55                	push   %r13
    2a8a:	45 89 c5             	mov    %r8d,%r13d
    2a8d:	41 54                	push   %r12
    2a8f:	66 41 81 cd 00 f0    	or     $0xf000,%r13w
    2a95:	55                   	push   %rbp
    2a96:	53                   	push   %rbx
    2a97:	48 83 ec 18          	sub    $0x18,%rsp
    2a9b:	85 ff                	test   %edi,%edi
    2a9d:	0f 84 c5 03 00 00    	je     2e68 <matrix_test+0x3e8>
    2aa3:	49 89 f4             	mov    %rsi,%r12
    2aa6:	49 89 ce             	mov    %rcx,%r14
    2aa9:	45 89 c7             	mov    %r8d,%r15d
    2aac:	45 0f bf c8          	movswl %r8w,%r9d
    2ab0:	48 89 d5             	mov    %rdx,%rbp
    2ab3:	89 fe                	mov    %edi,%esi
    2ab5:	45 31 c0             	xor    %r8d,%r8d
    2ab8:	31 c9                	xor    %ecx,%ecx
    2aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2ac0:	44 89 c0             	mov    %r8d,%eax
    2ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ac8:	89 c2                	mov    %eax,%edx
    2aca:	83 c0 01             	add    $0x1,%eax
    2acd:	66 44 01 7c 55 00    	add    %r15w,0x0(%rbp,%rdx,2)
    2ad3:	39 f0                	cmp    %esi,%eax
    2ad5:	75 f1                	jne    2ac8 <matrix_test+0x48>
    2ad7:	8d 59 01             	lea    0x1(%rcx),%ebx
    2ada:	41 01 f8             	add    %edi,%r8d
    2add:	8d 34 38             	lea    (%rax,%rdi,1),%esi
    2ae0:	39 df                	cmp    %ebx,%edi
    2ae2:	74 0c                	je     2af0 <matrix_test+0x70>
    2ae4:	89 d9                	mov    %ebx,%ecx
    2ae6:	eb d8                	jmp    2ac0 <matrix_test+0x40>
    2ae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2aef:	00 
    2af0:	89 df                	mov    %ebx,%edi
    2af2:	45 31 c0             	xor    %r8d,%r8d
    2af5:	45 31 d2             	xor    %r10d,%r10d
    2af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2aff:	00 
    2b00:	44 89 c0             	mov    %r8d,%eax
    2b03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2b08:	89 c6                	mov    %eax,%esi
    2b0a:	83 c0 01             	add    $0x1,%eax
    2b0d:	0f bf 54 75 00       	movswl 0x0(%rbp,%rsi,2),%edx
    2b12:	41 0f af d1          	imul   %r9d,%edx
    2b16:	41 89 14 b4          	mov    %edx,(%r12,%rsi,4)
    2b1a:	39 c7                	cmp    %eax,%edi
    2b1c:	75 ea                	jne    2b08 <matrix_test+0x88>
    2b1e:	41 8d 42 01          	lea    0x1(%r10),%eax
    2b22:	41 01 d8             	add    %ebx,%r8d
    2b25:	01 df                	add    %ebx,%edi
    2b27:	41 39 ca             	cmp    %ecx,%r10d
    2b2a:	74 0c                	je     2b38 <matrix_test+0xb8>
    2b2c:	41 89 c2             	mov    %eax,%r10d
    2b2f:	eb cf                	jmp    2b00 <matrix_test+0x80>
    2b31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2b38:	45 0f bf ed          	movswl %r13w,%r13d
    2b3c:	41 89 d9             	mov    %ebx,%r9d
    2b3f:	45 31 d2             	xor    %r10d,%r10d
    2b42:	31 ff                	xor    %edi,%edi
    2b44:	31 f6                	xor    %esi,%esi
    2b46:	31 d2                	xor    %edx,%edx
    2b48:	45 31 db             	xor    %r11d,%r11d
    2b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2b50:	44 89 d0             	mov    %r10d,%eax
    2b53:	eb 19                	jmp    2b6e <matrix_test+0xee>
    2b55:	0f 1f 00             	nopl   (%rax)
    2b58:	44 39 c6             	cmp    %r8d,%esi
    2b5b:	41 0f 9f c0          	setg   %r8b
    2b5f:	83 c0 01             	add    $0x1,%eax
    2b62:	45 0f b6 c0          	movzbl %r8b,%r8d
    2b66:	44 01 c7             	add    %r8d,%edi
    2b69:	44 39 c8             	cmp    %r9d,%eax
    2b6c:	74 1d                	je     2b8b <matrix_test+0x10b>
    2b6e:	41 89 f0             	mov    %esi,%r8d
    2b71:	89 c6                	mov    %eax,%esi
    2b73:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
    2b77:	01 f2                	add    %esi,%edx
    2b79:	41 39 d5             	cmp    %edx,%r13d
    2b7c:	7d da                	jge    2b58 <matrix_test+0xd8>
    2b7e:	83 c0 01             	add    $0x1,%eax
    2b81:	83 c7 0a             	add    $0xa,%edi
    2b84:	31 d2                	xor    %edx,%edx
    2b86:	44 39 c8             	cmp    %r9d,%eax
    2b89:	75 e3                	jne    2b6e <matrix_test+0xee>
    2b8b:	45 8d 43 01          	lea    0x1(%r11),%r8d
    2b8f:	44 8d 0c 18          	lea    (%rax,%rbx,1),%r9d
    2b93:	41 01 da             	add    %ebx,%r10d
    2b96:	44 39 d9             	cmp    %r11d,%ecx
    2b99:	74 05                	je     2ba0 <matrix_test+0x120>
    2b9b:	45 89 c3             	mov    %r8d,%r11d
    2b9e:	eb b0                	jmp    2b50 <matrix_test+0xd0>
    2ba0:	0f bf ff             	movswl %di,%edi
    2ba3:	31 f6                	xor    %esi,%esi
    2ba5:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    2ba9:	e8 02 14 00 00       	callq  3fb0 <crc16>
    2bae:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    2bb2:	31 f6                	xor    %esi,%esi
    2bb4:	4c 89 e7             	mov    %r12,%rdi
    2bb7:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2bbc:	48 8d 14 8d 04 00 00 	lea    0x4(,%rcx,4),%rdx
    2bc3:	00 
    2bc4:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    2bc9:	e8 42 e5 ff ff       	callq  1110 <memset@plt>
    2bce:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2bd3:	4d 89 e1             	mov    %r12,%r9
    2bd6:	41 89 d8             	mov    %ebx,%r8d
    2bd9:	45 31 d2             	xor    %r10d,%r10d
    2bdc:	4d 8d 5c 8c 04       	lea    0x4(%r12,%rcx,4),%r11
    2be1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2be8:	4c 89 f1             	mov    %r14,%rcx
    2beb:	44 89 d0             	mov    %r10d,%eax
    2bee:	31 f6                	xor    %esi,%esi
    2bf0:	89 c2                	mov    %eax,%edx
    2bf2:	0f bf 39             	movswl (%rcx),%edi
    2bf5:	83 c0 01             	add    $0x1,%eax
    2bf8:	48 83 c1 02          	add    $0x2,%rcx
    2bfc:	0f bf 54 55 00       	movswl 0x0(%rbp,%rdx,2),%edx
    2c01:	0f af d7             	imul   %edi,%edx
    2c04:	01 d6                	add    %edx,%esi
    2c06:	44 39 c0             	cmp    %r8d,%eax
    2c09:	75 e5                	jne    2bf0 <matrix_test+0x170>
    2c0b:	41 89 31             	mov    %esi,(%r9)
    2c0e:	49 83 c1 04          	add    $0x4,%r9
    2c12:	41 01 da             	add    %ebx,%r10d
    2c15:	44 8d 04 18          	lea    (%rax,%rbx,1),%r8d
    2c19:	4d 39 cb             	cmp    %r9,%r11
    2c1c:	75 ca                	jne    2be8 <matrix_test+0x168>
    2c1e:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2c24:	45 31 c0             	xor    %r8d,%r8d
    2c27:	31 f6                	xor    %esi,%esi
    2c29:	31 c9                	xor    %ecx,%ecx
    2c2b:	31 d2                	xor    %edx,%edx
    2c2d:	45 31 c9             	xor    %r9d,%r9d
    2c30:	31 c0                	xor    %eax,%eax
    2c32:	eb 17                	jmp    2c4b <matrix_test+0x1cb>
    2c34:	0f 1f 40 00          	nopl   0x0(%rax)
    2c38:	39 f9                	cmp    %edi,%ecx
    2c3a:	40 0f 9f c7          	setg   %dil
    2c3e:	83 c0 01             	add    $0x1,%eax
    2c41:	40 0f b6 ff          	movzbl %dil,%edi
    2c45:	01 fe                	add    %edi,%esi
    2c47:	39 c3                	cmp    %eax,%ebx
    2c49:	76 1d                	jbe    2c68 <matrix_test+0x1e8>
    2c4b:	89 cf                	mov    %ecx,%edi
    2c4d:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2c51:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2c55:	01 ca                	add    %ecx,%edx
    2c57:	41 39 d5             	cmp    %edx,%r13d
    2c5a:	7d dc                	jge    2c38 <matrix_test+0x1b8>
    2c5c:	83 c0 01             	add    $0x1,%eax
    2c5f:	83 c6 0a             	add    $0xa,%esi
    2c62:	31 d2                	xor    %edx,%edx
    2c64:	39 c3                	cmp    %eax,%ebx
    2c66:	77 e3                	ja     2c4b <matrix_test+0x1cb>
    2c68:	41 83 c1 01          	add    $0x1,%r9d
    2c6c:	41 01 d8             	add    %ebx,%r8d
    2c6f:	44 39 cb             	cmp    %r9d,%ebx
    2c72:	77 bc                	ja     2c30 <matrix_test+0x1b0>
    2c74:	0f bf fe             	movswl %si,%edi
    2c77:	44 89 d6             	mov    %r10d,%esi
    2c7a:	e8 31 13 00 00       	callq  3fb0 <crc16>
    2c7f:	45 31 c0             	xor    %r8d,%r8d
    2c82:	45 31 db             	xor    %r11d,%r11d
    2c85:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2c8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2c90:	31 d2                	xor    %edx,%edx
    2c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2c98:	42 8d 04 02          	lea    (%rdx,%r8,1),%eax
    2c9c:	89 d6                	mov    %edx,%esi
    2c9e:	31 ff                	xor    %edi,%edi
    2ca0:	4d 8d 0c 84          	lea    (%r12,%rax,4),%r9
    2ca4:	31 c0                	xor    %eax,%eax
    2ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2cad:	00 00 00 
    2cb0:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
    2cb4:	41 89 f2             	mov    %esi,%r10d
    2cb7:	83 c0 01             	add    $0x1,%eax
    2cba:	01 de                	add    %ebx,%esi
    2cbc:	0f bf 4c 4d 00       	movswl 0x0(%rbp,%rcx,2),%ecx
    2cc1:	47 0f bf 14 56       	movswl (%r14,%r10,2),%r10d
    2cc6:	41 0f af ca          	imul   %r10d,%ecx
    2cca:	01 cf                	add    %ecx,%edi
    2ccc:	39 c3                	cmp    %eax,%ebx
    2cce:	77 e0                	ja     2cb0 <matrix_test+0x230>
    2cd0:	83 c2 01             	add    $0x1,%edx
    2cd3:	41 89 39             	mov    %edi,(%r9)
    2cd6:	39 d3                	cmp    %edx,%ebx
    2cd8:	77 be                	ja     2c98 <matrix_test+0x218>
    2cda:	41 83 c3 01          	add    $0x1,%r11d
    2cde:	41 01 d8             	add    %ebx,%r8d
    2ce1:	44 39 db             	cmp    %r11d,%ebx
    2ce4:	77 aa                	ja     2c90 <matrix_test+0x210>
    2ce6:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2cec:	45 31 c0             	xor    %r8d,%r8d
    2cef:	31 f6                	xor    %esi,%esi
    2cf1:	31 c9                	xor    %ecx,%ecx
    2cf3:	31 d2                	xor    %edx,%edx
    2cf5:	45 31 c9             	xor    %r9d,%r9d
    2cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2cff:	00 
    2d00:	31 c0                	xor    %eax,%eax
    2d02:	eb 17                	jmp    2d1b <matrix_test+0x29b>
    2d04:	0f 1f 40 00          	nopl   0x0(%rax)
    2d08:	39 f9                	cmp    %edi,%ecx
    2d0a:	40 0f 9f c7          	setg   %dil
    2d0e:	83 c0 01             	add    $0x1,%eax
    2d11:	40 0f b6 ff          	movzbl %dil,%edi
    2d15:	01 fe                	add    %edi,%esi
    2d17:	39 c3                	cmp    %eax,%ebx
    2d19:	76 1d                	jbe    2d38 <matrix_test+0x2b8>
    2d1b:	89 cf                	mov    %ecx,%edi
    2d1d:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2d21:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2d25:	01 ca                	add    %ecx,%edx
    2d27:	41 39 d5             	cmp    %edx,%r13d
    2d2a:	7d dc                	jge    2d08 <matrix_test+0x288>
    2d2c:	83 c0 01             	add    $0x1,%eax
    2d2f:	83 c6 0a             	add    $0xa,%esi
    2d32:	31 d2                	xor    %edx,%edx
    2d34:	39 c3                	cmp    %eax,%ebx
    2d36:	77 e3                	ja     2d1b <matrix_test+0x29b>
    2d38:	41 83 c1 01          	add    $0x1,%r9d
    2d3c:	41 01 d8             	add    %ebx,%r8d
    2d3f:	44 39 cb             	cmp    %r9d,%ebx
    2d42:	77 bc                	ja     2d00 <matrix_test+0x280>
    2d44:	0f bf fe             	movswl %si,%edi
    2d47:	44 89 d6             	mov    %r10d,%esi
    2d4a:	e8 61 12 00 00       	callq  3fb0 <crc16>
    2d4f:	45 31 c9             	xor    %r9d,%r9d
    2d52:	45 31 db             	xor    %r11d,%r11d
    2d55:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d60:	31 f6                	xor    %esi,%esi
    2d62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d68:	42 8d 04 0e          	lea    (%rsi,%r9,1),%eax
    2d6c:	89 f7                	mov    %esi,%edi
    2d6e:	45 31 c0             	xor    %r8d,%r8d
    2d71:	31 c9                	xor    %ecx,%ecx
    2d73:	4d 8d 14 84          	lea    (%r12,%rax,4),%r10
    2d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2d7e:	00 00 
    2d80:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    2d84:	83 c1 01             	add    $0x1,%ecx
    2d87:	0f bf 54 45 00       	movswl 0x0(%rbp,%rax,2),%edx
    2d8c:	89 f8                	mov    %edi,%eax
    2d8e:	01 df                	add    %ebx,%edi
    2d90:	41 0f bf 04 46       	movswl (%r14,%rax,2),%eax
    2d95:	0f af c2             	imul   %edx,%eax
    2d98:	89 c2                	mov    %eax,%edx
    2d9a:	c1 f8 05             	sar    $0x5,%eax
    2d9d:	c1 fa 02             	sar    $0x2,%edx
    2da0:	83 e0 7f             	and    $0x7f,%eax
    2da3:	83 e2 0f             	and    $0xf,%edx
    2da6:	0f af c2             	imul   %edx,%eax
    2da9:	41 01 c0             	add    %eax,%r8d
    2dac:	39 cb                	cmp    %ecx,%ebx
    2dae:	77 d0                	ja     2d80 <matrix_test+0x300>
    2db0:	83 c6 01             	add    $0x1,%esi
    2db3:	45 89 02             	mov    %r8d,(%r10)
    2db6:	39 f3                	cmp    %esi,%ebx
    2db8:	77 ae                	ja     2d68 <matrix_test+0x2e8>
    2dba:	41 83 c3 01          	add    $0x1,%r11d
    2dbe:	41 01 d9             	add    %ebx,%r9d
    2dc1:	44 39 db             	cmp    %r11d,%ebx
    2dc4:	77 9a                	ja     2d60 <matrix_test+0x2e0>
    2dc6:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2dcc:	45 31 c0             	xor    %r8d,%r8d
    2dcf:	31 f6                	xor    %esi,%esi
    2dd1:	31 c9                	xor    %ecx,%ecx
    2dd3:	31 d2                	xor    %edx,%edx
    2dd5:	45 31 c9             	xor    %r9d,%r9d
    2dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2ddf:	00 
    2de0:	31 c0                	xor    %eax,%eax
    2de2:	eb 17                	jmp    2dfb <matrix_test+0x37b>
    2de4:	0f 1f 40 00          	nopl   0x0(%rax)
    2de8:	39 f9                	cmp    %edi,%ecx
    2dea:	40 0f 9f c7          	setg   %dil
    2dee:	83 c0 01             	add    $0x1,%eax
    2df1:	40 0f b6 ff          	movzbl %dil,%edi
    2df5:	01 fe                	add    %edi,%esi
    2df7:	39 c3                	cmp    %eax,%ebx
    2df9:	76 1d                	jbe    2e18 <matrix_test+0x398>
    2dfb:	89 cf                	mov    %ecx,%edi
    2dfd:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2e01:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2e05:	01 ca                	add    %ecx,%edx
    2e07:	41 39 d5             	cmp    %edx,%r13d
    2e0a:	7d dc                	jge    2de8 <matrix_test+0x368>
    2e0c:	83 c0 01             	add    $0x1,%eax
    2e0f:	83 c6 0a             	add    $0xa,%esi
    2e12:	31 d2                	xor    %edx,%edx
    2e14:	39 c3                	cmp    %eax,%ebx
    2e16:	77 e3                	ja     2dfb <matrix_test+0x37b>
    2e18:	41 83 c1 01          	add    $0x1,%r9d
    2e1c:	41 01 d8             	add    %ebx,%r8d
    2e1f:	44 39 cb             	cmp    %r9d,%ebx
    2e22:	77 bc                	ja     2de0 <matrix_test+0x360>
    2e24:	0f bf fe             	movswl %si,%edi
    2e27:	44 89 d6             	mov    %r10d,%esi
    2e2a:	e8 81 11 00 00       	callq  3fb0 <crc16>
    2e2f:	31 f6                	xor    %esi,%esi
    2e31:	31 ff                	xor    %edi,%edi
    2e33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2e38:	31 d2                	xor    %edx,%edx
    2e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e40:	8d 0c 32             	lea    (%rdx,%rsi,1),%ecx
    2e43:	83 c2 01             	add    $0x1,%edx
    2e46:	66 44 29 7c 4d 00    	sub    %r15w,0x0(%rbp,%rcx,2)
    2e4c:	39 da                	cmp    %ebx,%edx
    2e4e:	72 f0                	jb     2e40 <matrix_test+0x3c0>
    2e50:	83 c7 01             	add    $0x1,%edi
    2e53:	01 de                	add    %ebx,%esi
    2e55:	39 df                	cmp    %ebx,%edi
    2e57:	72 df                	jb     2e38 <matrix_test+0x3b8>
    2e59:	48 83 c4 18          	add    $0x18,%rsp
    2e5d:	5b                   	pop    %rbx
    2e5e:	5d                   	pop    %rbp
    2e5f:	41 5c                	pop    %r12
    2e61:	41 5d                	pop    %r13
    2e63:	41 5e                	pop    %r14
    2e65:	41 5f                	pop    %r15
    2e67:	c3                   	retq   
    2e68:	31 f6                	xor    %esi,%esi
    2e6a:	31 ff                	xor    %edi,%edi
    2e6c:	e8 3f 11 00 00       	callq  3fb0 <crc16>
    2e71:	31 ff                	xor    %edi,%edi
    2e73:	0f b7 f0             	movzwl %ax,%esi
    2e76:	e8 35 11 00 00       	callq  3fb0 <crc16>
    2e7b:	31 ff                	xor    %edi,%edi
    2e7d:	0f b7 f0             	movzwl %ax,%esi
    2e80:	e8 2b 11 00 00       	callq  3fb0 <crc16>
    2e85:	48 83 c4 18          	add    $0x18,%rsp
    2e89:	31 ff                	xor    %edi,%edi
    2e8b:	5b                   	pop    %rbx
    2e8c:	0f b7 f0             	movzwl %ax,%esi
    2e8f:	5d                   	pop    %rbp
    2e90:	41 5c                	pop    %r12
    2e92:	41 5d                	pop    %r13
    2e94:	41 5e                	pop    %r14
    2e96:	41 5f                	pop    %r15
    2e98:	e9 13 11 00 00       	jmpq   3fb0 <crc16>
    2e9d:	0f 1f 00             	nopl   (%rax)

0000000000002ea0 <core_bench_matrix>:
    2ea0:	f3 0f 1e fa          	endbr64 
    2ea4:	55                   	push   %rbp
    2ea5:	41 89 f0             	mov    %esi,%r8d
    2ea8:	0f b7 ea             	movzwl %dx,%ebp
    2eab:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    2eaf:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    2eb3:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    2eb7:	45 0f bf c0          	movswl %r8w,%r8d
    2ebb:	8b 3f                	mov    (%rdi),%edi
    2ebd:	e8 be fb ff ff       	callq  2a80 <matrix_test>
    2ec2:	89 ee                	mov    %ebp,%esi
    2ec4:	5d                   	pop    %rbp
    2ec5:	0f bf f8             	movswl %ax,%edi
    2ec8:	e9 e3 10 00 00       	jmpq   3fb0 <crc16>
    2ecd:	0f 1f 00             	nopl   (%rax)

0000000000002ed0 <core_init_matrix>:
    2ed0:	f3 0f 1e fa          	endbr64 
    2ed4:	85 d2                	test   %edx,%edx
    2ed6:	b8 01 00 00 00       	mov    $0x1,%eax
    2edb:	4c 8d 56 ff          	lea    -0x1(%rsi),%r10
    2edf:	41 57                	push   %r15
    2ee1:	0f 44 d0             	cmove  %eax,%edx
    2ee4:	49 83 e2 fc          	and    $0xfffffffffffffffc,%r10
    2ee8:	41 56                	push   %r14
    2eea:	49 89 cf             	mov    %rcx,%r15
    2eed:	41 55                	push   %r13
    2eef:	49 8d 4a 04          	lea    0x4(%r10),%rcx
    2ef3:	41 54                	push   %r12
    2ef5:	55                   	push   %rbp
    2ef6:	53                   	push   %rbx
    2ef7:	85 ff                	test   %edi,%edi
    2ef9:	0f 84 ec 00 00 00    	je     2feb <core_init_matrix+0x11b>
    2eff:	31 c0                	xor    %eax,%eax
    2f01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2f08:	41 89 c1             	mov    %eax,%r9d
    2f0b:	8d 40 01             	lea    0x1(%rax),%eax
    2f0e:	89 c6                	mov    %eax,%esi
    2f10:	0f af f0             	imul   %eax,%esi
    2f13:	c1 e6 03             	shl    $0x3,%esi
    2f16:	39 f7                	cmp    %esi,%edi
    2f18:	77 ee                	ja     2f08 <core_init_matrix+0x38>
    2f1a:	44 89 c8             	mov    %r9d,%eax
    2f1d:	44 89 4c 24 ec       	mov    %r9d,-0x14(%rsp)
    2f22:	41 0f af c1          	imul   %r9d,%eax
    2f26:	48 01 c0             	add    %rax,%rax
    2f29:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
    2f2e:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    2f32:	45 85 c9             	test   %r9d,%r9d
    2f35:	74 76                	je     2fad <core_init_matrix+0xdd>
    2f37:	45 31 e4             	xor    %r12d,%r12d
    2f3a:	31 ed                	xor    %ebp,%ebp
    2f3c:	bb 01 00 00 00       	mov    $0x1,%ebx
    2f41:	45 31 ed             	xor    %r13d,%r13d
    2f44:	45 8d 71 ff          	lea    -0x1(%r9),%r14d
    2f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2f4f:	00 
    2f50:	45 89 e3             	mov    %r12d,%r11d
    2f53:	89 de                	mov    %ebx,%esi
    2f55:	31 ff                	xor    %edi,%edi
    2f57:	41 29 db             	sub    %ebx,%r11d
    2f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2f60:	0f af d6             	imul   %esi,%edx
    2f63:	45 8d 04 33          	lea    (%r11,%rsi,1),%r8d
    2f67:	83 c7 01             	add    $0x1,%edi
    2f6a:	89 d0                	mov    %edx,%eax
    2f6c:	c1 f8 1f             	sar    $0x1f,%eax
    2f6f:	c1 e8 10             	shr    $0x10,%eax
    2f72:	01 c2                	add    %eax,%edx
    2f74:	0f b7 d2             	movzwl %dx,%edx
    2f77:	29 c2                	sub    %eax,%edx
    2f79:	8d 04 16             	lea    (%rsi,%rdx,1),%eax
    2f7c:	66 43 89 04 42       	mov    %ax,(%r10,%r8,2)
    2f81:	01 f0                	add    %esi,%eax
    2f83:	83 c6 01             	add    $0x1,%esi
    2f86:	66 25 ff 00          	and    $0xff,%ax
    2f8a:	66 42 89 04 41       	mov    %ax,(%rcx,%r8,2)
    2f8f:	44 39 cf             	cmp    %r9d,%edi
    2f92:	72 cc                	jb     2f60 <core_init_matrix+0x90>
    2f94:	45 85 c9             	test   %r9d,%r9d
    2f97:	44 89 e8             	mov    %r13d,%eax
    2f9a:	41 0f 45 c6          	cmovne %r14d,%eax
    2f9e:	83 c5 01             	add    $0x1,%ebp
    2fa1:	45 01 cc             	add    %r9d,%r12d
    2fa4:	8d 5c 03 01          	lea    0x1(%rbx,%rax,1),%ebx
    2fa8:	44 39 cd             	cmp    %r9d,%ebp
    2fab:	72 a3                	jb     2f50 <core_init_matrix+0x80>
    2fad:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
    2fb2:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    2fb7:	66 49 0f 6e ca       	movq   %r10,%xmm1
    2fbc:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    2fc0:	49 8d 44 02 ff       	lea    -0x1(%r10,%rax,1),%rax
    2fc5:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
    2fca:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    2fce:	48 83 c0 04          	add    $0x4,%rax
    2fd2:	49 89 47 18          	mov    %rax,0x18(%r15)
    2fd6:	8b 44 24 ec          	mov    -0x14(%rsp),%eax
    2fda:	5b                   	pop    %rbx
    2fdb:	5d                   	pop    %rbp
    2fdc:	41 89 07             	mov    %eax,(%r15)
    2fdf:	41 5c                	pop    %r12
    2fe1:	44 89 c8             	mov    %r9d,%eax
    2fe4:	41 5d                	pop    %r13
    2fe6:	41 5e                	pop    %r14
    2fe8:	41 5f                	pop    %r15
    2fea:	c3                   	retq   
    2feb:	c7 44 24 ec ff ff ff 	movl   $0xffffffff,-0x14(%rsp)
    2ff2:	ff 
    2ff3:	49 83 c2 06          	add    $0x6,%r10
    2ff7:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
    2ffd:	48 c7 44 24 f0 02 00 	movq   $0x2,-0x10(%rsp)
    3004:	00 00 
    3006:	e9 2c ff ff ff       	jmpq   2f37 <core_init_matrix+0x67>
    300b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003010 <matrix_sum>:
    3010:	f3 0f 1e fa          	endbr64 
    3014:	85 ff                	test   %edi,%edi
    3016:	74 65                	je     307d <matrix_sum+0x6d>
    3018:	55                   	push   %rbp
    3019:	44 0f bf da          	movswl %dx,%r11d
    301d:	41 89 fa             	mov    %edi,%r10d
    3020:	31 ed                	xor    %ebp,%ebp
    3022:	53                   	push   %rbx
    3023:	45 31 c0             	xor    %r8d,%r8d
    3026:	31 db                	xor    %ebx,%ebx
    3028:	31 c9                	xor    %ecx,%ecx
    302a:	31 d2                	xor    %edx,%edx
    302c:	0f 1f 40 00          	nopl   0x0(%rax)
    3030:	89 e8                	mov    %ebp,%eax
    3032:	eb 1a                	jmp    304e <matrix_sum+0x3e>
    3034:	0f 1f 40 00          	nopl   0x0(%rax)
    3038:	41 39 c9             	cmp    %ecx,%r9d
    303b:	41 0f 9c c1          	setl   %r9b
    303f:	83 c0 01             	add    $0x1,%eax
    3042:	45 0f b6 c9          	movzbl %r9b,%r9d
    3046:	45 01 c8             	add    %r9d,%r8d
    3049:	41 39 c2             	cmp    %eax,%r10d
    304c:	74 1d                	je     306b <matrix_sum+0x5b>
    304e:	41 89 c9             	mov    %ecx,%r9d
    3051:	89 c1                	mov    %eax,%ecx
    3053:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
    3056:	01 ca                	add    %ecx,%edx
    3058:	41 39 d3             	cmp    %edx,%r11d
    305b:	7d db                	jge    3038 <matrix_sum+0x28>
    305d:	83 c0 01             	add    $0x1,%eax
    3060:	41 83 c0 0a          	add    $0xa,%r8d
    3064:	31 d2                	xor    %edx,%edx
    3066:	41 39 c2             	cmp    %eax,%r10d
    3069:	75 e3                	jne    304e <matrix_sum+0x3e>
    306b:	83 c3 01             	add    $0x1,%ebx
    306e:	41 01 fa             	add    %edi,%r10d
    3071:	01 fd                	add    %edi,%ebp
    3073:	39 df                	cmp    %ebx,%edi
    3075:	75 b9                	jne    3030 <matrix_sum+0x20>
    3077:	44 89 c0             	mov    %r8d,%eax
    307a:	5b                   	pop    %rbx
    307b:	5d                   	pop    %rbp
    307c:	c3                   	retq   
    307d:	45 31 c0             	xor    %r8d,%r8d
    3080:	44 89 c0             	mov    %r8d,%eax
    3083:	c3                   	retq   
    3084:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    308b:	00 00 00 00 
    308f:	90                   	nop

0000000000003090 <matrix_mul_const>:
    3090:	f3 0f 1e fa          	endbr64 
    3094:	85 ff                	test   %edi,%edi
    3096:	74 40                	je     30d8 <matrix_mul_const+0x48>
    3098:	53                   	push   %rbx
    3099:	44 0f bf d1          	movswl %cx,%r10d
    309d:	41 89 f9             	mov    %edi,%r9d
    30a0:	31 db                	xor    %ebx,%ebx
    30a2:	45 31 db             	xor    %r11d,%r11d
    30a5:	0f 1f 00             	nopl   (%rax)
    30a8:	89 d8                	mov    %ebx,%eax
    30aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    30b0:	41 89 c0             	mov    %eax,%r8d
    30b3:	83 c0 01             	add    $0x1,%eax
    30b6:	42 0f bf 0c 42       	movswl (%rdx,%r8,2),%ecx
    30bb:	41 0f af ca          	imul   %r10d,%ecx
    30bf:	42 89 0c 86          	mov    %ecx,(%rsi,%r8,4)
    30c3:	41 39 c1             	cmp    %eax,%r9d
    30c6:	75 e8                	jne    30b0 <matrix_mul_const+0x20>
    30c8:	41 83 c3 01          	add    $0x1,%r11d
    30cc:	01 fb                	add    %edi,%ebx
    30ce:	41 01 f9             	add    %edi,%r9d
    30d1:	44 39 df             	cmp    %r11d,%edi
    30d4:	75 d2                	jne    30a8 <matrix_mul_const+0x18>
    30d6:	5b                   	pop    %rbx
    30d7:	c3                   	retq   
    30d8:	c3                   	retq   
    30d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000030e0 <matrix_add_const>:
    30e0:	f3 0f 1e fa          	endbr64 
    30e4:	85 ff                	test   %edi,%edi
    30e6:	74 34                	je     311c <matrix_add_const+0x3c>
    30e8:	41 89 d0             	mov    %edx,%r8d
    30eb:	89 f9                	mov    %edi,%ecx
    30ed:	45 31 d2             	xor    %r10d,%r10d
    30f0:	45 31 c9             	xor    %r9d,%r9d
    30f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    30f8:	44 89 d0             	mov    %r10d,%eax
    30fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3100:	89 c2                	mov    %eax,%edx
    3102:	83 c0 01             	add    $0x1,%eax
    3105:	66 44 01 04 56       	add    %r8w,(%rsi,%rdx,2)
    310a:	39 c1                	cmp    %eax,%ecx
    310c:	75 f2                	jne    3100 <matrix_add_const+0x20>
    310e:	41 83 c1 01          	add    $0x1,%r9d
    3112:	41 01 fa             	add    %edi,%r10d
    3115:	01 f9                	add    %edi,%ecx
    3117:	44 39 cf             	cmp    %r9d,%edi
    311a:	75 dc                	jne    30f8 <matrix_add_const+0x18>
    311c:	c3                   	retq   
    311d:	0f 1f 00             	nopl   (%rax)

0000000000003120 <matrix_mul_vect>:
    3120:	f3 0f 1e fa          	endbr64 
    3124:	41 55                	push   %r13
    3126:	41 54                	push   %r12
    3128:	55                   	push   %rbp
    3129:	89 fd                	mov    %edi,%ebp
    312b:	53                   	push   %rbx
    312c:	48 83 ec 08          	sub    $0x8,%rsp
    3130:	85 ff                	test   %edi,%edi
    3132:	74 69                	je     319d <matrix_mul_vect+0x7d>
    3134:	44 8d 6d ff          	lea    -0x1(%rbp),%r13d
    3138:	48 89 f7             	mov    %rsi,%rdi
    313b:	48 89 d3             	mov    %rdx,%rbx
    313e:	31 f6                	xor    %esi,%esi
    3140:	4a 8d 14 ad 04 00 00 	lea    0x4(,%r13,4),%rdx
    3147:	00 
    3148:	49 89 cc             	mov    %rcx,%r12
    314b:	e8 c0 df ff ff       	callq  1110 <memset@plt>
    3150:	41 89 e9             	mov    %ebp,%r9d
    3153:	45 31 d2             	xor    %r10d,%r10d
    3156:	48 89 c1             	mov    %rax,%rcx
    3159:	4e 8d 5c a8 04       	lea    0x4(%rax,%r13,4),%r11
    315e:	66 90                	xchg   %ax,%ax
    3160:	4c 89 e6             	mov    %r12,%rsi
    3163:	44 89 d0             	mov    %r10d,%eax
    3166:	31 ff                	xor    %edi,%edi
    3168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    316f:	00 
    3170:	89 c2                	mov    %eax,%edx
    3172:	44 0f bf 06          	movswl (%rsi),%r8d
    3176:	83 c0 01             	add    $0x1,%eax
    3179:	48 83 c6 02          	add    $0x2,%rsi
    317d:	0f bf 14 53          	movswl (%rbx,%rdx,2),%edx
    3181:	41 0f af d0          	imul   %r8d,%edx
    3185:	01 d7                	add    %edx,%edi
    3187:	41 39 c1             	cmp    %eax,%r9d
    318a:	75 e4                	jne    3170 <matrix_mul_vect+0x50>
    318c:	89 39                	mov    %edi,(%rcx)
    318e:	48 83 c1 04          	add    $0x4,%rcx
    3192:	41 01 ea             	add    %ebp,%r10d
    3195:	41 01 e9             	add    %ebp,%r9d
    3198:	49 39 cb             	cmp    %rcx,%r11
    319b:	75 c3                	jne    3160 <matrix_mul_vect+0x40>
    319d:	48 83 c4 08          	add    $0x8,%rsp
    31a1:	5b                   	pop    %rbx
    31a2:	5d                   	pop    %rbp
    31a3:	41 5c                	pop    %r12
    31a5:	41 5d                	pop    %r13
    31a7:	c3                   	retq   
    31a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    31af:	00 

00000000000031b0 <matrix_mul_matrix>:
    31b0:	f3 0f 1e fa          	endbr64 
    31b4:	85 ff                	test   %edi,%edi
    31b6:	0f 84 91 00 00 00    	je     324d <matrix_mul_matrix+0x9d>
    31bc:	41 56                	push   %r14
    31be:	41 89 f8             	mov    %edi,%r8d
    31c1:	49 89 d3             	mov    %rdx,%r11
    31c4:	49 89 ca             	mov    %rcx,%r10
    31c7:	41 55                	push   %r13
    31c9:	41 89 f9             	mov    %edi,%r9d
    31cc:	45 31 f6             	xor    %r14d,%r14d
    31cf:	41 54                	push   %r12
    31d1:	49 89 f4             	mov    %rsi,%r12
    31d4:	55                   	push   %rbp
    31d5:	31 ed                	xor    %ebp,%ebp
    31d7:	53                   	push   %rbx
    31d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    31df:	00 
    31e0:	31 db                	xor    %ebx,%ebx
    31e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    31e8:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    31eb:	89 d9                	mov    %ebx,%ecx
    31ed:	31 f6                	xor    %esi,%esi
    31ef:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    31f3:	89 e8                	mov    %ebp,%eax
    31f5:	0f 1f 00             	nopl   (%rax)
    31f8:	89 c2                	mov    %eax,%edx
    31fa:	89 cf                	mov    %ecx,%edi
    31fc:	83 c0 01             	add    $0x1,%eax
    31ff:	44 01 c1             	add    %r8d,%ecx
    3202:	41 0f bf 14 53       	movswl (%r11,%rdx,2),%edx
    3207:	41 0f bf 3c 7a       	movswl (%r10,%rdi,2),%edi
    320c:	0f af d7             	imul   %edi,%edx
    320f:	01 d6                	add    %edx,%esi
    3211:	41 39 c1             	cmp    %eax,%r9d
    3214:	75 e2                	jne    31f8 <matrix_mul_matrix+0x48>
    3216:	8d 43 01             	lea    0x1(%rbx),%eax
    3219:	41 89 75 00          	mov    %esi,0x0(%r13)
    321d:	41 39 c0             	cmp    %eax,%r8d
    3220:	74 0e                	je     3230 <matrix_mul_matrix+0x80>
    3222:	89 c3                	mov    %eax,%ebx
    3224:	eb c2                	jmp    31e8 <matrix_mul_matrix+0x38>
    3226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    322d:	00 00 00 
    3230:	41 8d 46 01          	lea    0x1(%r14),%eax
    3234:	44 01 c5             	add    %r8d,%ebp
    3237:	45 01 c1             	add    %r8d,%r9d
    323a:	41 39 de             	cmp    %ebx,%r14d
    323d:	74 05                	je     3244 <matrix_mul_matrix+0x94>
    323f:	41 89 c6             	mov    %eax,%r14d
    3242:	eb 9c                	jmp    31e0 <matrix_mul_matrix+0x30>
    3244:	5b                   	pop    %rbx
    3245:	5d                   	pop    %rbp
    3246:	41 5c                	pop    %r12
    3248:	41 5d                	pop    %r13
    324a:	41 5e                	pop    %r14
    324c:	c3                   	retq   
    324d:	c3                   	retq   
    324e:	66 90                	xchg   %ax,%ax

0000000000003250 <matrix_mul_matrix_bitextract>:
    3250:	f3 0f 1e fa          	endbr64 
    3254:	85 ff                	test   %edi,%edi
    3256:	0f 84 a1 00 00 00    	je     32fd <matrix_mul_matrix_bitextract+0xad>
    325c:	41 56                	push   %r14
    325e:	41 89 f8             	mov    %edi,%r8d
    3261:	49 89 d3             	mov    %rdx,%r11
    3264:	49 89 ca             	mov    %rcx,%r10
    3267:	41 55                	push   %r13
    3269:	41 89 f9             	mov    %edi,%r9d
    326c:	45 31 f6             	xor    %r14d,%r14d
    326f:	41 54                	push   %r12
    3271:	49 89 f4             	mov    %rsi,%r12
    3274:	55                   	push   %rbp
    3275:	31 ed                	xor    %ebp,%ebp
    3277:	53                   	push   %rbx
    3278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    327f:	00 
    3280:	31 db                	xor    %ebx,%ebx
    3282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3288:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    328b:	89 de                	mov    %ebx,%esi
    328d:	89 e9                	mov    %ebp,%ecx
    328f:	31 ff                	xor    %edi,%edi
    3291:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    3295:	0f 1f 00             	nopl   (%rax)
    3298:	89 c8                	mov    %ecx,%eax
    329a:	89 f2                	mov    %esi,%edx
    329c:	83 c1 01             	add    $0x1,%ecx
    329f:	44 01 c6             	add    %r8d,%esi
    32a2:	41 0f bf 14 52       	movswl (%r10,%rdx,2),%edx
    32a7:	41 0f bf 04 43       	movswl (%r11,%rax,2),%eax
    32ac:	0f af c2             	imul   %edx,%eax
    32af:	89 c2                	mov    %eax,%edx
    32b1:	c1 f8 05             	sar    $0x5,%eax
    32b4:	c1 fa 02             	sar    $0x2,%edx
    32b7:	83 e0 7f             	and    $0x7f,%eax
    32ba:	83 e2 0f             	and    $0xf,%edx
    32bd:	0f af c2             	imul   %edx,%eax
    32c0:	01 c7                	add    %eax,%edi
    32c2:	41 39 c9             	cmp    %ecx,%r9d
    32c5:	75 d1                	jne    3298 <matrix_mul_matrix_bitextract+0x48>
    32c7:	8d 43 01             	lea    0x1(%rbx),%eax
    32ca:	41 89 7d 00          	mov    %edi,0x0(%r13)
    32ce:	41 39 c0             	cmp    %eax,%r8d
    32d1:	74 0d                	je     32e0 <matrix_mul_matrix_bitextract+0x90>
    32d3:	89 c3                	mov    %eax,%ebx
    32d5:	eb b1                	jmp    3288 <matrix_mul_matrix_bitextract+0x38>
    32d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    32de:	00 00 
    32e0:	41 8d 46 01          	lea    0x1(%r14),%eax
    32e4:	44 01 c5             	add    %r8d,%ebp
    32e7:	45 01 c1             	add    %r8d,%r9d
    32ea:	41 39 de             	cmp    %ebx,%r14d
    32ed:	74 05                	je     32f4 <matrix_mul_matrix_bitextract+0xa4>
    32ef:	41 89 c6             	mov    %eax,%r14d
    32f2:	eb 8c                	jmp    3280 <matrix_mul_matrix_bitextract+0x30>
    32f4:	5b                   	pop    %rbx
    32f5:	5d                   	pop    %rbp
    32f6:	41 5c                	pop    %r12
    32f8:	41 5d                	pop    %r13
    32fa:	41 5e                	pop    %r14
    32fc:	c3                   	retq   
    32fd:	c3                   	retq   
    32fe:	66 90                	xchg   %ax,%ax

0000000000003300 <core_init_state>:
    3300:	f3 0f 1e fa          	endbr64 
    3304:	44 8d 4f ff          	lea    -0x1(%rdi),%r9d
    3308:	41 56                	push   %r14
    330a:	41 89 fa             	mov    %edi,%r10d
    330d:	31 c0                	xor    %eax,%eax
    330f:	41 54                	push   %r12
    3311:	4c 8d 1d 28 4a 00 00 	lea    0x4a28(%rip),%r11        # 7d40 <floatpat>
    3318:	48 8d 3d 41 4a 00 00 	lea    0x4a41(%rip),%rdi        # 7d60 <intpat>
    331f:	55                   	push   %rbp
    3320:	48 8d 2d d9 49 00 00 	lea    0x49d9(%rip),%rbp        # 7d00 <errpat>
    3327:	53                   	push   %rbx
    3328:	48 8d 1d f1 49 00 00 	lea    0x49f1(%rip),%rbx        # 7d20 <scipat>
    332f:	41 83 f9 01          	cmp    $0x1,%r9d
    3333:	0f 87 a0 00 00 00    	ja     33d9 <core_init_state+0xd9>
    3339:	e9 de 00 00 00       	jmpq   341c <core_init_state+0x11c>
    333e:	66 90                	xchg   %ax,%ax
    3340:	66 83 f9 04          	cmp    $0x4,%cx
    3344:	0f 8f 0e 01 00 00    	jg     3458 <core_init_state+0x158>
    334a:	83 e9 03             	sub    $0x3,%ecx
    334d:	4d 63 c0             	movslq %r8d,%r8
    3350:	66 83 f9 01          	cmp    $0x1,%cx
    3354:	0f 87 e6 00 00 00    	ja     3440 <core_init_state+0x140>
    335a:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
    335e:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    3364:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    336a:	41 01 c4             	add    %eax,%r12d
    336d:	45 39 cc             	cmp    %r9d,%r12d
    3370:	0f 83 a1 00 00 00    	jae    3417 <core_init_state+0x117>
    3376:	44 0f b6 31          	movzbl (%rcx),%r14d
    337a:	44 88 34 02          	mov    %r14b,(%rdx,%rax,1)
    337e:	44 0f b6 71 01       	movzbl 0x1(%rcx),%r14d
    3383:	44 88 74 02 01       	mov    %r14b,0x1(%rdx,%rax,1)
    3388:	44 0f b6 71 02       	movzbl 0x2(%rcx),%r14d
    338d:	44 88 74 02 02       	mov    %r14b,0x2(%rdx,%rax,1)
    3392:	44 0f b6 71 03       	movzbl 0x3(%rcx),%r14d
    3397:	44 88 74 02 03       	mov    %r14b,0x3(%rdx,%rax,1)
    339c:	41 83 f8 04          	cmp    $0x4,%r8d
    33a0:	74 2c                	je     33ce <core_init_state+0xce>
    33a2:	44 0f b6 71 04       	movzbl 0x4(%rcx),%r14d
    33a7:	44 88 74 02 04       	mov    %r14b,0x4(%rdx,%rax,1)
    33ac:	44 0f b6 71 05       	movzbl 0x5(%rcx),%r14d
    33b1:	44 88 74 02 05       	mov    %r14b,0x5(%rdx,%rax,1)
    33b6:	44 0f b6 71 06       	movzbl 0x6(%rcx),%r14d
    33bb:	44 88 74 02 06       	mov    %r14b,0x6(%rdx,%rax,1)
    33c0:	41 83 f8 08          	cmp    $0x8,%r8d
    33c4:	75 08                	jne    33ce <core_init_state+0xce>
    33c6:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    33ca:	88 4c 02 07          	mov    %cl,0x7(%rdx,%rax,1)
    33ce:	48 01 d0             	add    %rdx,%rax
    33d1:	42 c6 04 00 2c       	movb   $0x2c,(%rax,%r8,1)
    33d6:	44 89 e0             	mov    %r12d,%eax
    33d9:	83 c6 01             	add    $0x1,%esi
    33dc:	89 f1                	mov    %esi,%ecx
    33de:	41 89 f0             	mov    %esi,%r8d
    33e1:	66 41 c1 f8 03       	sar    $0x3,%r8w
    33e6:	83 e1 07             	and    $0x7,%ecx
    33e9:	41 83 e0 03          	and    $0x3,%r8d
    33ed:	66 83 f9 07          	cmp    $0x7,%cx
    33f1:	0f 85 49 ff ff ff    	jne    3340 <core_init_state+0x40>
    33f7:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    33fd:	4d 63 c0             	movslq %r8d,%r8
    3400:	41 01 c4             	add    %eax,%r12d
    3403:	4a 8b 4c c5 00       	mov    0x0(%rbp,%r8,8),%rcx
    3408:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    340e:	45 39 cc             	cmp    %r9d,%r12d
    3411:	0f 82 5f ff ff ff    	jb     3376 <core_init_state+0x76>
    3417:	44 39 d0             	cmp    %r10d,%eax
    341a:	73 54                	jae    3470 <core_init_state+0x170>
    341c:	41 29 c1             	sub    %eax,%r9d
    341f:	5b                   	pop    %rbx
    3420:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    3424:	5d                   	pop    %rbp
    3425:	49 83 c1 01          	add    $0x1,%r9
    3429:	41 5c                	pop    %r12
    342b:	31 f6                	xor    %esi,%esi
    342d:	41 5e                	pop    %r14
    342f:	4c 89 ca             	mov    %r9,%rdx
    3432:	e9 d9 dc ff ff       	jmpq   1110 <memset@plt>
    3437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    343e:	00 00 
    3440:	4a 8b 0c c7          	mov    (%rdi,%r8,8),%rcx
    3444:	41 bc 05 00 00 00    	mov    $0x5,%r12d
    344a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    3450:	e9 15 ff ff ff       	jmpq   336a <core_init_state+0x6a>
    3455:	0f 1f 00             	nopl   (%rax)
    3458:	4d 63 c0             	movslq %r8d,%r8
    345b:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    3461:	4a 8b 0c c3          	mov    (%rbx,%r8,8),%rcx
    3465:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    346b:	e9 fa fe ff ff       	jmpq   336a <core_init_state+0x6a>
    3470:	5b                   	pop    %rbx
    3471:	5d                   	pop    %rbp
    3472:	41 5c                	pop    %r12
    3474:	41 5e                	pop    %r14
    3476:	c3                   	retq   
    3477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    347e:	00 00 

0000000000003480 <core_state_transition>:
    3480:	f3 0f 1e fa          	endbr64 
    3484:	48 8b 07             	mov    (%rdi),%rax
    3487:	0f b6 08             	movzbl (%rax),%ecx
    348a:	84 c9                	test   %cl,%cl
    348c:	0f 84 bd 02 00 00    	je     374f <core_state_transition+0x2cf>
    3492:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3496:	80 f9 2c             	cmp    $0x2c,%cl
    3499:	0f 84 85 02 00 00    	je     3724 <core_state_transition+0x2a4>
    349f:	44 8b 16             	mov    (%rsi),%r10d
    34a2:	44 8d 49 d0          	lea    -0x30(%rcx),%r9d
    34a6:	45 8d 42 01          	lea    0x1(%r10),%r8d
    34aa:	41 80 f9 09          	cmp    $0x9,%r9b
    34ae:	0f 87 1c 01 00 00    	ja     35d0 <core_state_transition+0x150>
    34b4:	44 89 06             	mov    %r8d,(%rsi)
    34b7:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    34bb:	84 c9                	test   %cl,%cl
    34bd:	0f 84 a8 01 00 00    	je     366b <core_state_transition+0x1eb>
    34c3:	48 83 c0 02          	add    $0x2,%rax
    34c7:	80 f9 2c             	cmp    $0x2c,%cl
    34ca:	0f 84 98 01 00 00    	je     3668 <core_state_transition+0x1e8>
    34d0:	80 f9 2e             	cmp    $0x2e,%cl
    34d3:	74 30                	je     3505 <core_state_transition+0x85>
    34d5:	83 e9 30             	sub    $0x30,%ecx
    34d8:	80 f9 09             	cmp    $0x9,%cl
    34db:	0f 87 3f 01 00 00    	ja     3620 <core_state_transition+0x1a0>
    34e1:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    34e5:	84 c9                	test   %cl,%cl
    34e7:	0f 84 7b 01 00 00    	je     3668 <core_state_transition+0x1e8>
    34ed:	4c 8d 40 01          	lea    0x1(%rax),%r8
    34f1:	48 89 c2             	mov    %rax,%rdx
    34f4:	80 f9 2c             	cmp    $0x2c,%cl
    34f7:	0f 84 80 02 00 00    	je     377d <core_state_transition+0x2fd>
    34fd:	4c 89 c0             	mov    %r8,%rax
    3500:	80 f9 2e             	cmp    $0x2e,%cl
    3503:	75 d0                	jne    34d5 <core_state_transition+0x55>
    3505:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    3509:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    350e:	45 84 c0             	test   %r8b,%r8b
    3511:	0f 84 59 02 00 00    	je     3770 <core_state_transition+0x2f0>
    3517:	48 8d 48 01          	lea    0x1(%rax),%rcx
    351b:	41 80 f8 2c          	cmp    $0x2c,%r8b
    351f:	0f 84 f2 01 00 00    	je     3717 <core_state_transition+0x297>
    3525:	44 89 c2             	mov    %r8d,%edx
    3528:	83 e2 df             	and    $0xffffffdf,%edx
    352b:	80 fa 45             	cmp    $0x45,%dl
    352e:	0f 85 44 01 00 00    	jne    3678 <core_state_transition+0x1f8>
    3534:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    3538:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    353c:	84 c0                	test   %al,%al
    353e:	0f 84 f4 01 00 00    	je     3738 <core_state_transition+0x2b8>
    3544:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    3548:	3c 2c                	cmp    $0x2c,%al
    354a:	0f 84 eb 01 00 00    	je     373b <core_state_transition+0x2bb>
    3550:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    3554:	83 e8 2b             	sub    $0x2b,%eax
    3557:	45 8d 43 01          	lea    0x1(%r11),%r8d
    355b:	44 89 46 0c          	mov    %r8d,0xc(%rsi)
    355f:	a8 fd                	test   $0xfd,%al
    3561:	75 5c                	jne    35bf <core_state_transition+0x13f>
    3563:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
    3567:	84 c0                	test   %al,%al
    3569:	0f 84 d6 01 00 00    	je     3745 <core_state_transition+0x2c5>
    356f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    3573:	3c 2c                	cmp    $0x2c,%al
    3575:	0f 84 ca 01 00 00    	je     3745 <core_state_transition+0x2c5>
    357b:	44 8b 56 18          	mov    0x18(%rsi),%r10d
    357f:	83 e8 30             	sub    $0x30,%eax
    3582:	45 8d 42 01          	lea    0x1(%r10),%r8d
    3586:	44 89 46 18          	mov    %r8d,0x18(%rsi)
    358a:	3c 09                	cmp    $0x9,%al
    358c:	77 31                	ja     35bf <core_state_transition+0x13f>
    358e:	44 0f b6 41 02       	movzbl 0x2(%rcx),%r8d
    3593:	45 84 c0             	test   %r8b,%r8b
    3596:	0f 84 92 01 00 00    	je     372e <core_state_transition+0x2ae>
    359c:	48 8d 41 03          	lea    0x3(%rcx),%rax
    35a0:	41 80 f8 2c          	cmp    $0x2c,%r8b
    35a4:	0f 84 81 01 00 00    	je     372b <core_state_transition+0x2ab>
    35aa:	41 83 e8 30          	sub    $0x30,%r8d
    35ae:	41 80 f8 09          	cmp    $0x9,%r8b
    35b2:	0f 86 d8 00 00 00    	jbe    3690 <core_state_transition+0x210>
    35b8:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    35bc:	48 89 c2             	mov    %rax,%rdx
    35bf:	48 89 17             	mov    %rdx,(%rdi)
    35c2:	b8 01 00 00 00       	mov    $0x1,%eax
    35c7:	c3                   	retq   
    35c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    35cf:	00 
    35d0:	44 8d 49 d5          	lea    -0x2b(%rcx),%r9d
    35d4:	41 81 e1 fd 00 00 00 	and    $0xfd,%r9d
    35db:	75 53                	jne    3630 <core_state_transition+0x1b0>
    35dd:	44 89 06             	mov    %r8d,(%rsi)
    35e0:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    35e5:	45 84 c0             	test   %r8b,%r8b
    35e8:	0f 84 6b 01 00 00    	je     3759 <core_state_transition+0x2d9>
    35ee:	48 8d 50 02          	lea    0x2(%rax),%rdx
    35f2:	41 80 f8 2c          	cmp    $0x2c,%r8b
    35f6:	0f 84 5d 01 00 00    	je     3759 <core_state_transition+0x2d9>
    35fc:	8b 4e 08             	mov    0x8(%rsi),%ecx
    35ff:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
    3603:	83 c1 01             	add    $0x1,%ecx
    3606:	41 80 f9 09          	cmp    $0x9,%r9b
    360a:	76 44                	jbe    3650 <core_state_transition+0x1d0>
    360c:	41 80 f8 2e          	cmp    $0x2e,%r8b
    3610:	0f 84 ea 00 00 00    	je     3700 <core_state_transition+0x280>
    3616:	89 4e 08             	mov    %ecx,0x8(%rsi)
    3619:	b8 01 00 00 00       	mov    $0x1,%eax
    361e:	eb 0c                	jmp    362c <core_state_transition+0x1ac>
    3620:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    3624:	48 89 c2             	mov    %rax,%rdx
    3627:	b8 01 00 00 00       	mov    $0x1,%eax
    362c:	48 89 17             	mov    %rdx,(%rdi)
    362f:	c3                   	retq   
    3630:	80 f9 2e             	cmp    $0x2e,%cl
    3633:	0f 84 a6 00 00 00    	je     36df <core_state_transition+0x25f>
    3639:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    363d:	b8 01 00 00 00       	mov    $0x1,%eax
    3642:	44 89 06             	mov    %r8d,(%rsi)
    3645:	eb e5                	jmp    362c <core_state_transition+0x1ac>
    3647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    364e:	00 00 
    3650:	89 4e 08             	mov    %ecx,0x8(%rsi)
    3653:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    3657:	84 c9                	test   %cl,%cl
    3659:	74 10                	je     366b <core_state_transition+0x1eb>
    365b:	48 83 c0 03          	add    $0x3,%rax
    365f:	80 f9 2c             	cmp    $0x2c,%cl
    3662:	0f 85 68 fe ff ff    	jne    34d0 <core_state_transition+0x50>
    3668:	48 89 c2             	mov    %rax,%rdx
    366b:	b8 04 00 00 00       	mov    $0x4,%eax
    3670:	eb ba                	jmp    362c <core_state_transition+0x1ac>
    3672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3678:	41 83 e8 30          	sub    $0x30,%r8d
    367c:	41 80 f8 09          	cmp    $0x9,%r8b
    3680:	76 3e                	jbe    36c0 <core_state_transition+0x240>
    3682:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    3686:	48 89 ca             	mov    %rcx,%rdx
    3689:	b8 01 00 00 00       	mov    $0x1,%eax
    368e:	eb 9c                	jmp    362c <core_state_transition+0x1ac>
    3690:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    3695:	45 84 c0             	test   %r8b,%r8b
    3698:	0f 84 8d 00 00 00    	je     372b <core_state_transition+0x2ab>
    369e:	48 8d 48 01          	lea    0x1(%rax),%rcx
    36a2:	48 89 c2             	mov    %rax,%rdx
    36a5:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36a9:	0f 84 b4 00 00 00    	je     3763 <core_state_transition+0x2e3>
    36af:	48 89 c8             	mov    %rcx,%rax
    36b2:	e9 f3 fe ff ff       	jmpq   35aa <core_state_transition+0x12a>
    36b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    36be:	00 00 
    36c0:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    36c5:	45 84 c0             	test   %r8b,%r8b
    36c8:	74 4d                	je     3717 <core_state_transition+0x297>
    36ca:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    36ce:	48 89 c8             	mov    %rcx,%rax
    36d1:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36d5:	74 43                	je     371a <core_state_transition+0x29a>
    36d7:	48 89 d1             	mov    %rdx,%rcx
    36da:	e9 46 fe ff ff       	jmpq   3525 <core_state_transition+0xa5>
    36df:	44 89 06             	mov    %r8d,(%rsi)
    36e2:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    36e7:	45 84 c0             	test   %r8b,%r8b
    36ea:	74 2e                	je     371a <core_state_transition+0x29a>
    36ec:	48 8d 48 02          	lea    0x2(%rax),%rcx
    36f0:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36f4:	74 21                	je     3717 <core_state_transition+0x297>
    36f6:	48 89 d0             	mov    %rdx,%rax
    36f9:	e9 27 fe ff ff       	jmpq   3525 <core_state_transition+0xa5>
    36fe:	66 90                	xchg   %ax,%ax
    3700:	89 4e 08             	mov    %ecx,0x8(%rsi)
    3703:	44 0f b6 40 02       	movzbl 0x2(%rax),%r8d
    3708:	45 84 c0             	test   %r8b,%r8b
    370b:	74 0d                	je     371a <core_state_transition+0x29a>
    370d:	48 8d 48 03          	lea    0x3(%rax),%rcx
    3711:	41 80 f8 2c          	cmp    $0x2c,%r8b
    3715:	75 df                	jne    36f6 <core_state_transition+0x276>
    3717:	48 89 ca             	mov    %rcx,%rdx
    371a:	b8 05 00 00 00       	mov    $0x5,%eax
    371f:	e9 08 ff ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3724:	31 c0                	xor    %eax,%eax
    3726:	e9 01 ff ff ff       	jmpq   362c <core_state_transition+0x1ac>
    372b:	48 89 c2             	mov    %rax,%rdx
    372e:	b8 07 00 00 00       	mov    $0x7,%eax
    3733:	e9 f4 fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3738:	48 89 ca             	mov    %rcx,%rdx
    373b:	b8 03 00 00 00       	mov    $0x3,%eax
    3740:	e9 e7 fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3745:	b8 06 00 00 00       	mov    $0x6,%eax
    374a:	e9 dd fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    374f:	48 89 c2             	mov    %rax,%rdx
    3752:	31 c0                	xor    %eax,%eax
    3754:	e9 d3 fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3759:	b8 02 00 00 00       	mov    $0x2,%eax
    375e:	e9 c9 fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3763:	48 89 ca             	mov    %rcx,%rdx
    3766:	b8 07 00 00 00       	mov    $0x7,%eax
    376b:	e9 bc fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    3770:	48 89 c2             	mov    %rax,%rdx
    3773:	b8 05 00 00 00       	mov    $0x5,%eax
    3778:	e9 af fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    377d:	4c 89 c2             	mov    %r8,%rdx
    3780:	b8 04 00 00 00       	mov    $0x4,%eax
    3785:	e9 a2 fe ff ff       	jmpq   362c <core_state_transition+0x1ac>
    378a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003790 <core_bench_state>:
    3790:	f3 0f 1e fa          	endbr64 
    3794:	41 57                	push   %r15
    3796:	66 0f ef c0          	pxor   %xmm0,%xmm0
    379a:	49 89 f7             	mov    %rsi,%r15
    379d:	41 56                	push   %r14
    379f:	41 89 ce             	mov    %ecx,%r14d
    37a2:	41 55                	push   %r13
    37a4:	41 89 d5             	mov    %edx,%r13d
    37a7:	41 54                	push   %r12
    37a9:	45 89 cc             	mov    %r9d,%r12d
    37ac:	55                   	push   %rbp
    37ad:	89 fd                	mov    %edi,%ebp
    37af:	53                   	push   %rbx
    37b0:	48 83 ec 78          	sub    $0x78,%rsp
    37b4:	0f b6 16             	movzbl (%rsi),%edx
    37b7:	66 44 89 44 24 0e    	mov    %r8w,0xe(%rsp)
    37bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    37c4:	00 00 
    37c6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    37cb:	31 c0                	xor    %eax,%eax
    37cd:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    37d2:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    37d7:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    37dc:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    37e1:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    37e6:	84 d2                	test   %dl,%dl
    37e8:	0f 84 5a 01 00 00    	je     3948 <core_bench_state+0x1b8>
    37ee:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    37f3:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    37f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    37ff:	00 
    3800:	48 89 de             	mov    %rbx,%rsi
    3803:	e8 78 fc ff ff       	callq  3480 <core_state_transition>
    3808:	89 c0                	mov    %eax,%eax
    380a:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    380f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3814:	80 38 00             	cmpb   $0x0,(%rax)
    3817:	75 e7                	jne    3800 <core_bench_state+0x70>
    3819:	89 ed                	mov    %ebp,%ebp
    381b:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3820:	41 0f b6 17          	movzbl (%r15),%edx
    3824:	4c 01 fd             	add    %r15,%rbp
    3827:	4c 39 fd             	cmp    %r15,%rbp
    382a:	0f 86 30 01 00 00    	jbe    3960 <core_bench_state+0x1d0>
    3830:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    3836:	4c 89 f8             	mov    %r15,%rax
    3839:	eb 1f                	jmp    385a <core_bench_state+0xca>
    383b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3840:	44 31 ea             	xor    %r13d,%edx
    3843:	88 10                	mov    %dl,(%rax)
    3845:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    384a:	48 01 c8             	add    %rcx,%rax
    384d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3852:	48 39 c5             	cmp    %rax,%rbp
    3855:	76 15                	jbe    386c <core_bench_state+0xdc>
    3857:	0f b6 10             	movzbl (%rax),%edx
    385a:	80 fa 2c             	cmp    $0x2c,%dl
    385d:	75 e1                	jne    3840 <core_bench_state+0xb0>
    385f:	48 01 c8             	add    %rcx,%rax
    3862:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3867:	48 39 c5             	cmp    %rax,%rbp
    386a:	77 eb                	ja     3857 <core_bench_state+0xc7>
    386c:	41 80 3f 00          	cmpb   $0x0,(%r15)
    3870:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3875:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    387a:	74 34                	je     38b0 <core_bench_state+0x120>
    387c:	0f 1f 40 00          	nopl   0x0(%rax)
    3880:	48 89 de             	mov    %rbx,%rsi
    3883:	e8 f8 fb ff ff       	callq  3480 <core_state_transition>
    3888:	89 c0                	mov    %eax,%eax
    388a:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    388f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3894:	80 38 00             	cmpb   $0x0,(%rax)
    3897:	75 e7                	jne    3880 <core_bench_state+0xf0>
    3899:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    389e:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    38a4:	4c 39 fd             	cmp    %r15,%rbp
    38a7:	76 27                	jbe    38d0 <core_bench_state+0x140>
    38a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    38b0:	41 0f b6 07          	movzbl (%r15),%eax
    38b4:	3c 2c                	cmp    $0x2c,%al
    38b6:	74 78                	je     3930 <core_bench_state+0x1a0>
    38b8:	44 31 f0             	xor    %r14d,%eax
    38bb:	41 88 07             	mov    %al,(%r15)
    38be:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    38c3:	49 01 cf             	add    %rcx,%r15
    38c6:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    38cb:	4c 39 fd             	cmp    %r15,%rbp
    38ce:	77 e0                	ja     38b0 <core_bench_state+0x120>
    38d0:	31 ed                	xor    %ebp,%ebp
    38d2:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    38d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    38de:	00 00 
    38e0:	41 8b 7c 2d 00       	mov    0x0(%r13,%rbp,1),%edi
    38e5:	41 0f b7 f4          	movzwl %r12w,%esi
    38e9:	e8 82 03 00 00       	callq  3c70 <crcu32>
    38ee:	8b 3c 2b             	mov    (%rbx,%rbp,1),%edi
    38f1:	48 83 c5 04          	add    $0x4,%rbp
    38f5:	0f b7 f0             	movzwl %ax,%esi
    38f8:	e8 73 03 00 00       	callq  3c70 <crcu32>
    38fd:	41 89 c4             	mov    %eax,%r12d
    3900:	48 83 fd 20          	cmp    $0x20,%rbp
    3904:	75 da                	jne    38e0 <core_bench_state+0x150>
    3906:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    390b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3912:	00 00 
    3914:	75 57                	jne    396d <core_bench_state+0x1dd>
    3916:	48 83 c4 78          	add    $0x78,%rsp
    391a:	44 89 e0             	mov    %r12d,%eax
    391d:	5b                   	pop    %rbx
    391e:	5d                   	pop    %rbp
    391f:	41 5c                	pop    %r12
    3921:	41 5d                	pop    %r13
    3923:	41 5e                	pop    %r14
    3925:	41 5f                	pop    %r15
    3927:	c3                   	retq   
    3928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    392f:	00 
    3930:	49 01 cf             	add    %rcx,%r15
    3933:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3938:	4c 39 fd             	cmp    %r15,%rbp
    393b:	0f 87 6f ff ff ff    	ja     38b0 <core_bench_state+0x120>
    3941:	eb 8d                	jmp    38d0 <core_bench_state+0x140>
    3943:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3948:	48 01 f5             	add    %rsi,%rbp
    394b:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    3950:	48 39 f5             	cmp    %rsi,%rbp
    3953:	0f 87 d7 fe ff ff    	ja     3830 <core_bench_state+0xa0>
    3959:	e9 72 ff ff ff       	jmpq   38d0 <core_bench_state+0x140>
    395e:	66 90                	xchg   %ax,%ax
    3960:	84 d2                	test   %dl,%dl
    3962:	0f 85 18 ff ff ff    	jne    3880 <core_bench_state+0xf0>
    3968:	e9 63 ff ff ff       	jmpq   38d0 <core_bench_state+0x140>
    396d:	e8 8e d7 ff ff       	callq  1100 <__stack_chk_fail@plt>
    3972:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3979:	00 00 00 
    397c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003980 <get_seed_32>:
    3980:	f3 0f 1e fa          	endbr64 
    3984:	83 ff 05             	cmp    $0x5,%edi
    3987:	77 5e                	ja     39e7 <get_seed_32+0x67>
    3989:	48 8d 15 78 1b 00 00 	lea    0x1b78(%rip),%rdx        # 5508 <_IO_stdin_used+0x508>
    3990:	89 ff                	mov    %edi,%edi
    3992:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    3996:	48 01 d0             	add    %rdx,%rax
    3999:	3e ff e0             	notrack jmpq *%rax
    399c:	0f 1f 40 00          	nopl   0x0(%rax)
    39a0:	8b 05 9a 46 00 00    	mov    0x469a(%rip),%eax        # 8040 <seed5_volatile>
    39a6:	c3                   	retq   
    39a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39ae:	00 00 
    39b0:	8b 05 96 46 00 00    	mov    0x4696(%rip),%eax        # 804c <seed1_volatile>
    39b6:	c3                   	retq   
    39b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39be:	00 00 
    39c0:	8b 05 82 46 00 00    	mov    0x4682(%rip),%eax        # 8048 <seed2_volatile>
    39c6:	c3                   	retq   
    39c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39ce:	00 00 
    39d0:	8b 05 56 46 00 00    	mov    0x4656(%rip),%eax        # 802c <seed3_volatile>
    39d6:	c3                   	retq   
    39d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39de:	00 00 
    39e0:	8b 05 5e 46 00 00    	mov    0x465e(%rip),%eax        # 8044 <seed4_volatile>
    39e6:	c3                   	retq   
    39e7:	31 c0                	xor    %eax,%eax
    39e9:	c3                   	retq   
    39ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000039f0 <crcu8>:
    39f0:	f3 0f 1e fa          	endbr64 
    39f4:	89 f0                	mov    %esi,%eax
    39f6:	41 89 f8             	mov    %edi,%r8d
    39f9:	31 fe                	xor    %edi,%esi
    39fb:	89 f9                	mov    %edi,%ecx
    39fd:	66 d1 e8             	shr    %ax
    3a00:	41 d0 e8             	shr    %r8b
    3a03:	89 c2                	mov    %eax,%edx
    3a05:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3a0a:	83 e6 01             	and    $0x1,%esi
    3a0d:	0f 45 c2             	cmovne %edx,%eax
    3a10:	c0 e9 02             	shr    $0x2,%cl
    3a13:	89 c2                	mov    %eax,%edx
    3a15:	44 31 c0             	xor    %r8d,%eax
    3a18:	66 d1 ea             	shr    %dx
    3a1b:	89 d6                	mov    %edx,%esi
    3a1d:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a22:	a8 01                	test   $0x1,%al
    3a24:	0f 45 d6             	cmovne %esi,%edx
    3a27:	89 fe                	mov    %edi,%esi
    3a29:	40 c0 ee 03          	shr    $0x3,%sil
    3a2d:	89 d0                	mov    %edx,%eax
    3a2f:	31 ca                	xor    %ecx,%edx
    3a31:	66 d1 e8             	shr    %ax
    3a34:	89 c1                	mov    %eax,%ecx
    3a36:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a3b:	83 e2 01             	and    $0x1,%edx
    3a3e:	0f 45 c1             	cmovne %ecx,%eax
    3a41:	89 f9                	mov    %edi,%ecx
    3a43:	c0 e9 04             	shr    $0x4,%cl
    3a46:	89 c2                	mov    %eax,%edx
    3a48:	31 f0                	xor    %esi,%eax
    3a4a:	66 d1 ea             	shr    %dx
    3a4d:	89 d6                	mov    %edx,%esi
    3a4f:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a54:	a8 01                	test   $0x1,%al
    3a56:	0f 45 d6             	cmovne %esi,%edx
    3a59:	89 fe                	mov    %edi,%esi
    3a5b:	40 c0 ee 05          	shr    $0x5,%sil
    3a5f:	89 d0                	mov    %edx,%eax
    3a61:	31 ca                	xor    %ecx,%edx
    3a63:	66 d1 e8             	shr    %ax
    3a66:	89 c1                	mov    %eax,%ecx
    3a68:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a6d:	83 e2 01             	and    $0x1,%edx
    3a70:	0f 45 c1             	cmovne %ecx,%eax
    3a73:	89 f9                	mov    %edi,%ecx
    3a75:	c0 e9 06             	shr    $0x6,%cl
    3a78:	89 c2                	mov    %eax,%edx
    3a7a:	31 f0                	xor    %esi,%eax
    3a7c:	66 d1 ea             	shr    %dx
    3a7f:	89 d6                	mov    %edx,%esi
    3a81:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a86:	a8 01                	test   $0x1,%al
    3a88:	0f 45 d6             	cmovne %esi,%edx
    3a8b:	40 c0 ef 07          	shr    $0x7,%dil
    3a8f:	89 d0                	mov    %edx,%eax
    3a91:	31 ca                	xor    %ecx,%edx
    3a93:	66 d1 e8             	shr    %ax
    3a96:	89 c1                	mov    %eax,%ecx
    3a98:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a9d:	83 e2 01             	and    $0x1,%edx
    3aa0:	0f 45 c1             	cmovne %ecx,%eax
    3aa3:	41 89 c0             	mov    %eax,%r8d
    3aa6:	31 c7                	xor    %eax,%edi
    3aa8:	66 41 d1 e8          	shr    %r8w
    3aac:	44 89 c0             	mov    %r8d,%eax
    3aaf:	66 35 01 a0          	xor    $0xa001,%ax
    3ab3:	83 e7 01             	and    $0x1,%edi
    3ab6:	44 0f 45 c0          	cmovne %eax,%r8d
    3aba:	44 89 c0             	mov    %r8d,%eax
    3abd:	c3                   	retq   
    3abe:	66 90                	xchg   %ax,%ax

0000000000003ac0 <crcu16>:
    3ac0:	f3 0f 1e fa          	endbr64 
    3ac4:	89 f1                	mov    %esi,%ecx
    3ac6:	41 89 f8             	mov    %edi,%r8d
    3ac9:	31 fe                	xor    %edi,%esi
    3acb:	89 f8                	mov    %edi,%eax
    3acd:	66 d1 e9             	shr    %cx
    3ad0:	41 d0 e8             	shr    %r8b
    3ad3:	89 ca                	mov    %ecx,%edx
    3ad5:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3ada:	83 e6 01             	and    $0x1,%esi
    3add:	0f 45 ca             	cmovne %edx,%ecx
    3ae0:	40 c0 ef 02          	shr    $0x2,%dil
    3ae4:	89 ca                	mov    %ecx,%edx
    3ae6:	44 31 c1             	xor    %r8d,%ecx
    3ae9:	66 d1 ea             	shr    %dx
    3aec:	89 d6                	mov    %edx,%esi
    3aee:	66 81 f6 01 a0       	xor    $0xa001,%si
    3af3:	83 e1 01             	and    $0x1,%ecx
    3af6:	0f 45 d6             	cmovne %esi,%edx
    3af9:	89 c6                	mov    %eax,%esi
    3afb:	40 c0 ee 03          	shr    $0x3,%sil
    3aff:	89 d1                	mov    %edx,%ecx
    3b01:	31 fa                	xor    %edi,%edx
    3b03:	66 d1 e9             	shr    %cx
    3b06:	89 cf                	mov    %ecx,%edi
    3b08:	66 81 f7 01 a0       	xor    $0xa001,%di
    3b0d:	83 e2 01             	and    $0x1,%edx
    3b10:	0f 45 cf             	cmovne %edi,%ecx
    3b13:	89 c7                	mov    %eax,%edi
    3b15:	40 c0 ef 04          	shr    $0x4,%dil
    3b19:	89 ca                	mov    %ecx,%edx
    3b1b:	31 f1                	xor    %esi,%ecx
    3b1d:	66 d1 ea             	shr    %dx
    3b20:	89 d6                	mov    %edx,%esi
    3b22:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b27:	83 e1 01             	and    $0x1,%ecx
    3b2a:	0f 45 d6             	cmovne %esi,%edx
    3b2d:	89 c6                	mov    %eax,%esi
    3b2f:	40 c0 ee 05          	shr    $0x5,%sil
    3b33:	89 d1                	mov    %edx,%ecx
    3b35:	31 fa                	xor    %edi,%edx
    3b37:	66 d1 e9             	shr    %cx
    3b3a:	89 cf                	mov    %ecx,%edi
    3b3c:	66 81 f7 01 a0       	xor    $0xa001,%di
    3b41:	83 e2 01             	and    $0x1,%edx
    3b44:	0f 45 cf             	cmovne %edi,%ecx
    3b47:	89 c7                	mov    %eax,%edi
    3b49:	40 c0 ef 06          	shr    $0x6,%dil
    3b4d:	89 ca                	mov    %ecx,%edx
    3b4f:	31 f1                	xor    %esi,%ecx
    3b51:	66 d1 ea             	shr    %dx
    3b54:	89 d6                	mov    %edx,%esi
    3b56:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b5b:	83 e1 01             	and    $0x1,%ecx
    3b5e:	0f 45 d6             	cmovne %esi,%edx
    3b61:	89 c6                	mov    %eax,%esi
    3b63:	40 c0 ee 07          	shr    $0x7,%sil
    3b67:	89 d1                	mov    %edx,%ecx
    3b69:	31 fa                	xor    %edi,%edx
    3b6b:	66 d1 e9             	shr    %cx
    3b6e:	89 cf                	mov    %ecx,%edi
    3b70:	66 81 f7 01 a0       	xor    $0xa001,%di
    3b75:	83 e2 01             	and    $0x1,%edx
    3b78:	0f 45 cf             	cmovne %edi,%ecx
    3b7b:	89 ca                	mov    %ecx,%edx
    3b7d:	31 f1                	xor    %esi,%ecx
    3b7f:	66 d1 ea             	shr    %dx
    3b82:	89 d6                	mov    %edx,%esi
    3b84:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b89:	83 e1 01             	and    $0x1,%ecx
    3b8c:	0f 45 d6             	cmovne %esi,%edx
    3b8f:	66 c1 e8 08          	shr    $0x8,%ax
    3b93:	89 c7                	mov    %eax,%edi
    3b95:	41 89 c0             	mov    %eax,%r8d
    3b98:	89 d6                	mov    %edx,%esi
    3b9a:	31 c2                	xor    %eax,%edx
    3b9c:	40 d0 ef             	shr    %dil
    3b9f:	66 d1 ee             	shr    %si
    3ba2:	89 f1                	mov    %esi,%ecx
    3ba4:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ba9:	83 e2 01             	and    $0x1,%edx
    3bac:	0f 45 f1             	cmovne %ecx,%esi
    3baf:	41 c0 e8 02          	shr    $0x2,%r8b
    3bb3:	89 f1                	mov    %esi,%ecx
    3bb5:	31 fe                	xor    %edi,%esi
    3bb7:	89 c7                	mov    %eax,%edi
    3bb9:	66 d1 e9             	shr    %cx
    3bbc:	89 ca                	mov    %ecx,%edx
    3bbe:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3bc3:	83 e6 01             	and    $0x1,%esi
    3bc6:	0f 45 ca             	cmovne %edx,%ecx
    3bc9:	40 c0 ef 03          	shr    $0x3,%dil
    3bcd:	89 ca                	mov    %ecx,%edx
    3bcf:	44 31 c1             	xor    %r8d,%ecx
    3bd2:	66 d1 ea             	shr    %dx
    3bd5:	89 d6                	mov    %edx,%esi
    3bd7:	66 81 f6 01 a0       	xor    $0xa001,%si
    3bdc:	83 e1 01             	and    $0x1,%ecx
    3bdf:	0f 45 d6             	cmovne %esi,%edx
    3be2:	89 c6                	mov    %eax,%esi
    3be4:	40 c0 ee 04          	shr    $0x4,%sil
    3be8:	89 d1                	mov    %edx,%ecx
    3bea:	31 fa                	xor    %edi,%edx
    3bec:	66 d1 e9             	shr    %cx
    3bef:	89 cf                	mov    %ecx,%edi
    3bf1:	66 81 f7 01 a0       	xor    $0xa001,%di
    3bf6:	83 e2 01             	and    $0x1,%edx
    3bf9:	0f 45 cf             	cmovne %edi,%ecx
    3bfc:	89 c7                	mov    %eax,%edi
    3bfe:	40 c0 ef 05          	shr    $0x5,%dil
    3c02:	89 ca                	mov    %ecx,%edx
    3c04:	31 f1                	xor    %esi,%ecx
    3c06:	66 d1 ea             	shr    %dx
    3c09:	89 d6                	mov    %edx,%esi
    3c0b:	66 81 f6 01 a0       	xor    $0xa001,%si
    3c10:	83 e1 01             	and    $0x1,%ecx
    3c13:	0f 45 d6             	cmovne %esi,%edx
    3c16:	89 c6                	mov    %eax,%esi
    3c18:	40 c0 ee 06          	shr    $0x6,%sil
    3c1c:	89 d1                	mov    %edx,%ecx
    3c1e:	31 fa                	xor    %edi,%edx
    3c20:	66 d1 e9             	shr    %cx
    3c23:	89 cf                	mov    %ecx,%edi
    3c25:	66 81 f7 01 a0       	xor    $0xa001,%di
    3c2a:	83 e2 01             	and    $0x1,%edx
    3c2d:	0f 45 cf             	cmovne %edi,%ecx
    3c30:	c0 e8 07             	shr    $0x7,%al
    3c33:	89 ca                	mov    %ecx,%edx
    3c35:	31 f1                	xor    %esi,%ecx
    3c37:	66 d1 ea             	shr    %dx
    3c3a:	89 d6                	mov    %edx,%esi
    3c3c:	66 81 f6 01 a0       	xor    $0xa001,%si
    3c41:	83 e1 01             	and    $0x1,%ecx
    3c44:	0f 45 d6             	cmovne %esi,%edx
    3c47:	41 89 d0             	mov    %edx,%r8d
    3c4a:	31 d0                	xor    %edx,%eax
    3c4c:	66 41 d1 e8          	shr    %r8w
    3c50:	44 89 c2             	mov    %r8d,%edx
    3c53:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3c58:	a8 01                	test   $0x1,%al
    3c5a:	44 0f 45 c2          	cmovne %edx,%r8d
    3c5e:	44 89 c0             	mov    %r8d,%eax
    3c61:	c3                   	retq   
    3c62:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3c69:	00 00 00 00 
    3c6d:	0f 1f 00             	nopl   (%rax)

0000000000003c70 <crcu32>:
    3c70:	f3 0f 1e fa          	endbr64 
    3c74:	89 f0                	mov    %esi,%eax
    3c76:	89 f9                	mov    %edi,%ecx
    3c78:	31 fe                	xor    %edi,%esi
    3c7a:	66 d1 e8             	shr    %ax
    3c7d:	d0 e9                	shr    %cl
    3c7f:	89 c2                	mov    %eax,%edx
    3c81:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3c86:	83 e6 01             	and    $0x1,%esi
    3c89:	89 fe                	mov    %edi,%esi
    3c8b:	0f 45 c2             	cmovne %edx,%eax
    3c8e:	40 c0 ee 02          	shr    $0x2,%sil
    3c92:	89 c2                	mov    %eax,%edx
    3c94:	31 c8                	xor    %ecx,%eax
    3c96:	66 d1 ea             	shr    %dx
    3c99:	89 d1                	mov    %edx,%ecx
    3c9b:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ca0:	a8 01                	test   $0x1,%al
    3ca2:	0f 45 d1             	cmovne %ecx,%edx
    3ca5:	89 f9                	mov    %edi,%ecx
    3ca7:	c0 e9 03             	shr    $0x3,%cl
    3caa:	89 d0                	mov    %edx,%eax
    3cac:	31 f2                	xor    %esi,%edx
    3cae:	66 d1 e8             	shr    %ax
    3cb1:	89 c6                	mov    %eax,%esi
    3cb3:	66 81 f6 01 a0       	xor    $0xa001,%si
    3cb8:	83 e2 01             	and    $0x1,%edx
    3cbb:	0f 45 c6             	cmovne %esi,%eax
    3cbe:	89 fe                	mov    %edi,%esi
    3cc0:	40 c0 ee 04          	shr    $0x4,%sil
    3cc4:	89 c2                	mov    %eax,%edx
    3cc6:	31 c8                	xor    %ecx,%eax
    3cc8:	66 d1 ea             	shr    %dx
    3ccb:	89 d1                	mov    %edx,%ecx
    3ccd:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3cd2:	a8 01                	test   $0x1,%al
    3cd4:	0f 45 d1             	cmovne %ecx,%edx
    3cd7:	89 f9                	mov    %edi,%ecx
    3cd9:	c0 e9 05             	shr    $0x5,%cl
    3cdc:	89 d0                	mov    %edx,%eax
    3cde:	31 f2                	xor    %esi,%edx
    3ce0:	66 d1 e8             	shr    %ax
    3ce3:	89 c6                	mov    %eax,%esi
    3ce5:	66 81 f6 01 a0       	xor    $0xa001,%si
    3cea:	83 e2 01             	and    $0x1,%edx
    3ced:	0f 45 c6             	cmovne %esi,%eax
    3cf0:	89 fe                	mov    %edi,%esi
    3cf2:	40 c0 ee 06          	shr    $0x6,%sil
    3cf6:	89 c2                	mov    %eax,%edx
    3cf8:	31 c8                	xor    %ecx,%eax
    3cfa:	66 d1 ea             	shr    %dx
    3cfd:	89 d1                	mov    %edx,%ecx
    3cff:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3d04:	a8 01                	test   $0x1,%al
    3d06:	0f 45 d1             	cmovne %ecx,%edx
    3d09:	89 f9                	mov    %edi,%ecx
    3d0b:	c0 e9 07             	shr    $0x7,%cl
    3d0e:	89 d0                	mov    %edx,%eax
    3d10:	31 f2                	xor    %esi,%edx
    3d12:	66 d1 e8             	shr    %ax
    3d15:	89 c6                	mov    %eax,%esi
    3d17:	66 81 f6 01 a0       	xor    $0xa001,%si
    3d1c:	83 e2 01             	and    $0x1,%edx
    3d1f:	0f 45 c6             	cmovne %esi,%eax
    3d22:	89 c2                	mov    %eax,%edx
    3d24:	31 c8                	xor    %ecx,%eax
    3d26:	66 d1 ea             	shr    %dx
    3d29:	89 d1                	mov    %edx,%ecx
    3d2b:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3d30:	a8 01                	test   $0x1,%al
    3d32:	89 f8                	mov    %edi,%eax
    3d34:	0f 45 d1             	cmovne %ecx,%edx
    3d37:	66 c1 e8 08          	shr    $0x8,%ax
    3d3b:	41 89 c0             	mov    %eax,%r8d
    3d3e:	89 d1                	mov    %edx,%ecx
    3d40:	31 c2                	xor    %eax,%edx
    3d42:	41 d0 e8             	shr    %r8b
    3d45:	66 d1 e9             	shr    %cx
    3d48:	89 ce                	mov    %ecx,%esi
    3d4a:	66 81 f6 01 a0       	xor    $0xa001,%si
    3d4f:	83 e2 01             	and    $0x1,%edx
    3d52:	0f 45 ce             	cmovne %esi,%ecx
    3d55:	89 c6                	mov    %eax,%esi
    3d57:	40 c0 ee 02          	shr    $0x2,%sil
    3d5b:	89 ca                	mov    %ecx,%edx
    3d5d:	44 31 c1             	xor    %r8d,%ecx
    3d60:	66 d1 ea             	shr    %dx
    3d63:	41 89 d0             	mov    %edx,%r8d
    3d66:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3d6c:	83 e1 01             	and    $0x1,%ecx
    3d6f:	41 0f 45 d0          	cmovne %r8d,%edx
    3d73:	41 89 c0             	mov    %eax,%r8d
    3d76:	41 c0 e8 03          	shr    $0x3,%r8b
    3d7a:	89 d1                	mov    %edx,%ecx
    3d7c:	31 f2                	xor    %esi,%edx
    3d7e:	66 d1 e9             	shr    %cx
    3d81:	89 ce                	mov    %ecx,%esi
    3d83:	66 81 f6 01 a0       	xor    $0xa001,%si
    3d88:	83 e2 01             	and    $0x1,%edx
    3d8b:	0f 45 ce             	cmovne %esi,%ecx
    3d8e:	89 c6                	mov    %eax,%esi
    3d90:	40 c0 ee 04          	shr    $0x4,%sil
    3d94:	89 ca                	mov    %ecx,%edx
    3d96:	44 31 c1             	xor    %r8d,%ecx
    3d99:	66 d1 ea             	shr    %dx
    3d9c:	41 89 d0             	mov    %edx,%r8d
    3d9f:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3da5:	83 e1 01             	and    $0x1,%ecx
    3da8:	41 0f 45 d0          	cmovne %r8d,%edx
    3dac:	41 89 c0             	mov    %eax,%r8d
    3daf:	41 c0 e8 05          	shr    $0x5,%r8b
    3db3:	89 d1                	mov    %edx,%ecx
    3db5:	31 f2                	xor    %esi,%edx
    3db7:	66 d1 e9             	shr    %cx
    3dba:	89 ce                	mov    %ecx,%esi
    3dbc:	66 81 f6 01 a0       	xor    $0xa001,%si
    3dc1:	83 e2 01             	and    $0x1,%edx
    3dc4:	0f 45 ce             	cmovne %esi,%ecx
    3dc7:	89 c6                	mov    %eax,%esi
    3dc9:	40 c0 ee 06          	shr    $0x6,%sil
    3dcd:	89 ca                	mov    %ecx,%edx
    3dcf:	44 31 c1             	xor    %r8d,%ecx
    3dd2:	66 d1 ea             	shr    %dx
    3dd5:	41 89 d0             	mov    %edx,%r8d
    3dd8:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3dde:	83 e1 01             	and    $0x1,%ecx
    3de1:	41 0f 45 d0          	cmovne %r8d,%edx
    3de5:	c0 e8 07             	shr    $0x7,%al
    3de8:	89 d1                	mov    %edx,%ecx
    3dea:	31 f2                	xor    %esi,%edx
    3dec:	66 d1 e9             	shr    %cx
    3def:	89 ce                	mov    %ecx,%esi
    3df1:	66 81 f6 01 a0       	xor    $0xa001,%si
    3df6:	83 e2 01             	and    $0x1,%edx
    3df9:	0f 45 ce             	cmovne %esi,%ecx
    3dfc:	89 ca                	mov    %ecx,%edx
    3dfe:	31 c8                	xor    %ecx,%eax
    3e00:	66 d1 ea             	shr    %dx
    3e03:	89 d1                	mov    %edx,%ecx
    3e05:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3e0a:	a8 01                	test   $0x1,%al
    3e0c:	0f 45 d1             	cmovne %ecx,%edx
    3e0f:	c1 ef 10             	shr    $0x10,%edi
    3e12:	41 89 f8             	mov    %edi,%r8d
    3e15:	89 fe                	mov    %edi,%esi
    3e17:	89 d1                	mov    %edx,%ecx
    3e19:	31 fa                	xor    %edi,%edx
    3e1b:	41 d0 e8             	shr    %r8b
    3e1e:	66 d1 e9             	shr    %cx
    3e21:	89 c8                	mov    %ecx,%eax
    3e23:	66 35 01 a0          	xor    $0xa001,%ax
    3e27:	83 e2 01             	and    $0x1,%edx
    3e2a:	0f 45 c8             	cmovne %eax,%ecx
    3e2d:	40 c0 ee 02          	shr    $0x2,%sil
    3e31:	89 c8                	mov    %ecx,%eax
    3e33:	44 31 c1             	xor    %r8d,%ecx
    3e36:	66 d1 e8             	shr    %ax
    3e39:	89 c2                	mov    %eax,%edx
    3e3b:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3e40:	83 e1 01             	and    $0x1,%ecx
    3e43:	89 f9                	mov    %edi,%ecx
    3e45:	0f 45 c2             	cmovne %edx,%eax
    3e48:	c0 e9 03             	shr    $0x3,%cl
    3e4b:	89 c2                	mov    %eax,%edx
    3e4d:	31 f0                	xor    %esi,%eax
    3e4f:	66 d1 ea             	shr    %dx
    3e52:	89 d6                	mov    %edx,%esi
    3e54:	66 81 f6 01 a0       	xor    $0xa001,%si
    3e59:	a8 01                	test   $0x1,%al
    3e5b:	0f 45 d6             	cmovne %esi,%edx
    3e5e:	89 fe                	mov    %edi,%esi
    3e60:	40 c0 ee 04          	shr    $0x4,%sil
    3e64:	89 d0                	mov    %edx,%eax
    3e66:	31 ca                	xor    %ecx,%edx
    3e68:	66 d1 e8             	shr    %ax
    3e6b:	89 c1                	mov    %eax,%ecx
    3e6d:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3e72:	83 e2 01             	and    $0x1,%edx
    3e75:	0f 45 c1             	cmovne %ecx,%eax
    3e78:	89 f9                	mov    %edi,%ecx
    3e7a:	c0 e9 05             	shr    $0x5,%cl
    3e7d:	89 c2                	mov    %eax,%edx
    3e7f:	31 f0                	xor    %esi,%eax
    3e81:	66 d1 ea             	shr    %dx
    3e84:	89 d6                	mov    %edx,%esi
    3e86:	66 81 f6 01 a0       	xor    $0xa001,%si
    3e8b:	a8 01                	test   $0x1,%al
    3e8d:	0f 45 d6             	cmovne %esi,%edx
    3e90:	89 fe                	mov    %edi,%esi
    3e92:	40 c0 ee 06          	shr    $0x6,%sil
    3e96:	89 d0                	mov    %edx,%eax
    3e98:	31 ca                	xor    %ecx,%edx
    3e9a:	66 d1 e8             	shr    %ax
    3e9d:	89 c1                	mov    %eax,%ecx
    3e9f:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ea4:	83 e2 01             	and    $0x1,%edx
    3ea7:	0f 45 c1             	cmovne %ecx,%eax
    3eaa:	89 f9                	mov    %edi,%ecx
    3eac:	c0 e9 07             	shr    $0x7,%cl
    3eaf:	89 c2                	mov    %eax,%edx
    3eb1:	31 f0                	xor    %esi,%eax
    3eb3:	66 d1 ea             	shr    %dx
    3eb6:	89 d6                	mov    %edx,%esi
    3eb8:	66 81 f6 01 a0       	xor    $0xa001,%si
    3ebd:	a8 01                	test   $0x1,%al
    3ebf:	0f 45 d6             	cmovne %esi,%edx
    3ec2:	89 d0                	mov    %edx,%eax
    3ec4:	31 ca                	xor    %ecx,%edx
    3ec6:	66 d1 e8             	shr    %ax
    3ec9:	89 c1                	mov    %eax,%ecx
    3ecb:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ed0:	83 e2 01             	and    $0x1,%edx
    3ed3:	0f 45 c1             	cmovne %ecx,%eax
    3ed6:	66 c1 ef 08          	shr    $0x8,%di
    3eda:	89 fe                	mov    %edi,%esi
    3edc:	41 89 f8             	mov    %edi,%r8d
    3edf:	89 c1                	mov    %eax,%ecx
    3ee1:	31 f8                	xor    %edi,%eax
    3ee3:	40 d0 ee             	shr    %sil
    3ee6:	66 d1 e9             	shr    %cx
    3ee9:	89 ca                	mov    %ecx,%edx
    3eeb:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3ef0:	a8 01                	test   $0x1,%al
    3ef2:	0f 45 ca             	cmovne %edx,%ecx
    3ef5:	41 c0 e8 02          	shr    $0x2,%r8b
    3ef9:	89 ca                	mov    %ecx,%edx
    3efb:	31 f1                	xor    %esi,%ecx
    3efd:	89 fe                	mov    %edi,%esi
    3eff:	66 d1 ea             	shr    %dx
    3f02:	89 d0                	mov    %edx,%eax
    3f04:	66 35 01 a0          	xor    $0xa001,%ax
    3f08:	83 e1 01             	and    $0x1,%ecx
    3f0b:	0f 45 d0             	cmovne %eax,%edx
    3f0e:	40 c0 ee 03          	shr    $0x3,%sil
    3f12:	89 d0                	mov    %edx,%eax
    3f14:	44 31 c2             	xor    %r8d,%edx
    3f17:	66 d1 e8             	shr    %ax
    3f1a:	89 c1                	mov    %eax,%ecx
    3f1c:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f21:	83 e2 01             	and    $0x1,%edx
    3f24:	0f 45 c1             	cmovne %ecx,%eax
    3f27:	89 f9                	mov    %edi,%ecx
    3f29:	c0 e9 04             	shr    $0x4,%cl
    3f2c:	89 c2                	mov    %eax,%edx
    3f2e:	31 f0                	xor    %esi,%eax
    3f30:	66 d1 ea             	shr    %dx
    3f33:	89 d6                	mov    %edx,%esi
    3f35:	66 81 f6 01 a0       	xor    $0xa001,%si
    3f3a:	a8 01                	test   $0x1,%al
    3f3c:	0f 45 d6             	cmovne %esi,%edx
    3f3f:	89 fe                	mov    %edi,%esi
    3f41:	40 c0 ee 05          	shr    $0x5,%sil
    3f45:	89 d0                	mov    %edx,%eax
    3f47:	31 ca                	xor    %ecx,%edx
    3f49:	66 d1 e8             	shr    %ax
    3f4c:	89 c1                	mov    %eax,%ecx
    3f4e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f53:	83 e2 01             	and    $0x1,%edx
    3f56:	0f 45 c1             	cmovne %ecx,%eax
    3f59:	89 f9                	mov    %edi,%ecx
    3f5b:	c0 e9 06             	shr    $0x6,%cl
    3f5e:	89 c2                	mov    %eax,%edx
    3f60:	31 f0                	xor    %esi,%eax
    3f62:	66 d1 ea             	shr    %dx
    3f65:	89 d6                	mov    %edx,%esi
    3f67:	66 81 f6 01 a0       	xor    $0xa001,%si
    3f6c:	a8 01                	test   $0x1,%al
    3f6e:	0f 45 d6             	cmovne %esi,%edx
    3f71:	40 c0 ef 07          	shr    $0x7,%dil
    3f75:	89 d0                	mov    %edx,%eax
    3f77:	31 ca                	xor    %ecx,%edx
    3f79:	66 d1 e8             	shr    %ax
    3f7c:	89 c1                	mov    %eax,%ecx
    3f7e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f83:	83 e2 01             	and    $0x1,%edx
    3f86:	0f 45 c1             	cmovne %ecx,%eax
    3f89:	41 89 c0             	mov    %eax,%r8d
    3f8c:	31 c7                	xor    %eax,%edi
    3f8e:	66 41 d1 e8          	shr    %r8w
    3f92:	44 89 c0             	mov    %r8d,%eax
    3f95:	66 35 01 a0          	xor    $0xa001,%ax
    3f99:	83 e7 01             	and    $0x1,%edi
    3f9c:	44 0f 45 c0          	cmovne %eax,%r8d
    3fa0:	44 89 c0             	mov    %r8d,%eax
    3fa3:	c3                   	retq   
    3fa4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3fab:	00 00 00 00 
    3faf:	90                   	nop

0000000000003fb0 <crc16>:
    3fb0:	f3 0f 1e fa          	endbr64 
    3fb4:	89 f2                	mov    %esi,%edx
    3fb6:	89 f9                	mov    %edi,%ecx
    3fb8:	31 fe                	xor    %edi,%esi
    3fba:	66 d1 ea             	shr    %dx
    3fbd:	d0 e9                	shr    %cl
    3fbf:	89 d0                	mov    %edx,%eax
    3fc1:	66 35 01 a0          	xor    $0xa001,%ax
    3fc5:	83 e6 01             	and    $0x1,%esi
    3fc8:	89 fe                	mov    %edi,%esi
    3fca:	0f 45 d0             	cmovne %eax,%edx
    3fcd:	40 c0 ee 02          	shr    $0x2,%sil
    3fd1:	89 d0                	mov    %edx,%eax
    3fd3:	31 ca                	xor    %ecx,%edx
    3fd5:	66 d1 e8             	shr    %ax
    3fd8:	89 c1                	mov    %eax,%ecx
    3fda:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3fdf:	83 e2 01             	and    $0x1,%edx
    3fe2:	0f 45 c1             	cmovne %ecx,%eax
    3fe5:	89 f9                	mov    %edi,%ecx
    3fe7:	c0 e9 03             	shr    $0x3,%cl
    3fea:	89 c2                	mov    %eax,%edx
    3fec:	31 f0                	xor    %esi,%eax
    3fee:	66 d1 ea             	shr    %dx
    3ff1:	89 d6                	mov    %edx,%esi
    3ff3:	66 81 f6 01 a0       	xor    $0xa001,%si
    3ff8:	a8 01                	test   $0x1,%al
    3ffa:	0f 45 d6             	cmovne %esi,%edx
    3ffd:	89 fe                	mov    %edi,%esi
    3fff:	40 c0 ee 04          	shr    $0x4,%sil
    4003:	89 d0                	mov    %edx,%eax
    4005:	31 ca                	xor    %ecx,%edx
    4007:	66 d1 e8             	shr    %ax
    400a:	89 c1                	mov    %eax,%ecx
    400c:	66 81 f1 01 a0       	xor    $0xa001,%cx
    4011:	83 e2 01             	and    $0x1,%edx
    4014:	0f 45 c1             	cmovne %ecx,%eax
    4017:	89 f9                	mov    %edi,%ecx
    4019:	c0 e9 05             	shr    $0x5,%cl
    401c:	89 c2                	mov    %eax,%edx
    401e:	31 f0                	xor    %esi,%eax
    4020:	66 d1 ea             	shr    %dx
    4023:	89 d6                	mov    %edx,%esi
    4025:	66 81 f6 01 a0       	xor    $0xa001,%si
    402a:	a8 01                	test   $0x1,%al
    402c:	0f 45 d6             	cmovne %esi,%edx
    402f:	89 fe                	mov    %edi,%esi
    4031:	40 c0 ee 06          	shr    $0x6,%sil
    4035:	89 d0                	mov    %edx,%eax
    4037:	31 ca                	xor    %ecx,%edx
    4039:	66 d1 e8             	shr    %ax
    403c:	89 c1                	mov    %eax,%ecx
    403e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    4043:	83 e2 01             	and    $0x1,%edx
    4046:	0f 45 c1             	cmovne %ecx,%eax
    4049:	89 f9                	mov    %edi,%ecx
    404b:	c0 e9 07             	shr    $0x7,%cl
    404e:	89 c2                	mov    %eax,%edx
    4050:	31 f0                	xor    %esi,%eax
    4052:	66 d1 ea             	shr    %dx
    4055:	89 d6                	mov    %edx,%esi
    4057:	66 81 f6 01 a0       	xor    $0xa001,%si
    405c:	a8 01                	test   $0x1,%al
    405e:	0f 45 d6             	cmovne %esi,%edx
    4061:	89 d0                	mov    %edx,%eax
    4063:	31 ca                	xor    %ecx,%edx
    4065:	66 d1 e8             	shr    %ax
    4068:	89 c1                	mov    %eax,%ecx
    406a:	66 81 f1 01 a0       	xor    $0xa001,%cx
    406f:	83 e2 01             	and    $0x1,%edx
    4072:	0f 45 c1             	cmovne %ecx,%eax
    4075:	66 c1 ef 08          	shr    $0x8,%di
    4079:	89 fe                	mov    %edi,%esi
    407b:	41 89 f8             	mov    %edi,%r8d
    407e:	89 c1                	mov    %eax,%ecx
    4080:	31 f8                	xor    %edi,%eax
    4082:	40 d0 ee             	shr    %sil
    4085:	66 d1 e9             	shr    %cx
    4088:	89 ca                	mov    %ecx,%edx
    408a:	66 81 f2 01 a0       	xor    $0xa001,%dx
    408f:	a8 01                	test   $0x1,%al
    4091:	0f 45 ca             	cmovne %edx,%ecx
    4094:	41 c0 e8 02          	shr    $0x2,%r8b
    4098:	89 ca                	mov    %ecx,%edx
    409a:	31 f1                	xor    %esi,%ecx
    409c:	89 fe                	mov    %edi,%esi
    409e:	66 d1 ea             	shr    %dx
    40a1:	89 d0                	mov    %edx,%eax
    40a3:	66 35 01 a0          	xor    $0xa001,%ax
    40a7:	83 e1 01             	and    $0x1,%ecx
    40aa:	0f 45 d0             	cmovne %eax,%edx
    40ad:	40 c0 ee 03          	shr    $0x3,%sil
    40b1:	89 d0                	mov    %edx,%eax
    40b3:	44 31 c2             	xor    %r8d,%edx
    40b6:	66 d1 e8             	shr    %ax
    40b9:	89 c1                	mov    %eax,%ecx
    40bb:	66 81 f1 01 a0       	xor    $0xa001,%cx
    40c0:	83 e2 01             	and    $0x1,%edx
    40c3:	0f 45 c1             	cmovne %ecx,%eax
    40c6:	89 f9                	mov    %edi,%ecx
    40c8:	c0 e9 04             	shr    $0x4,%cl
    40cb:	89 c2                	mov    %eax,%edx
    40cd:	31 f0                	xor    %esi,%eax
    40cf:	66 d1 ea             	shr    %dx
    40d2:	89 d6                	mov    %edx,%esi
    40d4:	66 81 f6 01 a0       	xor    $0xa001,%si
    40d9:	a8 01                	test   $0x1,%al
    40db:	0f 45 d6             	cmovne %esi,%edx
    40de:	89 fe                	mov    %edi,%esi
    40e0:	40 c0 ee 05          	shr    $0x5,%sil
    40e4:	89 d0                	mov    %edx,%eax
    40e6:	31 ca                	xor    %ecx,%edx
    40e8:	66 d1 e8             	shr    %ax
    40eb:	89 c1                	mov    %eax,%ecx
    40ed:	66 81 f1 01 a0       	xor    $0xa001,%cx
    40f2:	83 e2 01             	and    $0x1,%edx
    40f5:	0f 45 c1             	cmovne %ecx,%eax
    40f8:	89 f9                	mov    %edi,%ecx
    40fa:	c0 e9 06             	shr    $0x6,%cl
    40fd:	89 c2                	mov    %eax,%edx
    40ff:	31 f0                	xor    %esi,%eax
    4101:	66 d1 ea             	shr    %dx
    4104:	89 d6                	mov    %edx,%esi
    4106:	66 81 f6 01 a0       	xor    $0xa001,%si
    410b:	a8 01                	test   $0x1,%al
    410d:	0f 45 d6             	cmovne %esi,%edx
    4110:	40 c0 ef 07          	shr    $0x7,%dil
    4114:	89 d0                	mov    %edx,%eax
    4116:	31 ca                	xor    %ecx,%edx
    4118:	66 d1 e8             	shr    %ax
    411b:	89 c1                	mov    %eax,%ecx
    411d:	66 81 f1 01 a0       	xor    $0xa001,%cx
    4122:	83 e2 01             	and    $0x1,%edx
    4125:	0f 45 c1             	cmovne %ecx,%eax
    4128:	41 89 c0             	mov    %eax,%r8d
    412b:	31 c7                	xor    %eax,%edi
    412d:	66 41 d1 e8          	shr    %r8w
    4131:	44 89 c0             	mov    %r8d,%eax
    4134:	66 35 01 a0          	xor    $0xa001,%ax
    4138:	83 e7 01             	and    $0x1,%edi
    413b:	44 0f 45 c0          	cmovne %eax,%r8d
    413f:	44 89 c0             	mov    %r8d,%eax
    4142:	c3                   	retq   
    4143:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    414a:	00 00 00 00 
    414e:	66 90                	xchg   %ax,%ax

0000000000004150 <check_data_types>:
    4150:	f3 0f 1e fa          	endbr64 
    4154:	31 c0                	xor    %eax,%eax
    4156:	c3                   	retq   
    4157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    415e:	00 00 

0000000000004160 <portable_malloc>:
    4160:	f3 0f 1e fa          	endbr64 
    4164:	e9 b7 cf ff ff       	jmpq   1120 <malloc@plt>
    4169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004170 <portable_free>:
    4170:	f3 0f 1e fa          	endbr64 
    4174:	e9 47 cf ff ff       	jmpq   10c0 <free@plt>
    4179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004180 <start_time>:
    4180:	f3 0f 1e fa          	endbr64 
    4184:	48 8d 35 d5 3e 00 00 	lea    0x3ed5(%rip),%rsi        # 8060 <start_time_val>
    418b:	31 ff                	xor    %edi,%edi
    418d:	e9 5e cf ff ff       	jmpq   10f0 <clock_gettime@plt>
    4192:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4199:	00 00 00 00 
    419d:	0f 1f 00             	nopl   (%rax)

00000000000041a0 <stop_time>:
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	48 8d 35 a5 3e 00 00 	lea    0x3ea5(%rip),%rsi        # 8050 <stop_time_val>
    41ab:	31 ff                	xor    %edi,%edi
    41ad:	e9 3e cf ff ff       	jmpq   10f0 <clock_gettime@plt>
    41b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    41b9:	00 00 00 00 
    41bd:	0f 1f 00             	nopl   (%rax)

00000000000041c0 <get_time>:
    41c0:	f3 0f 1e fa          	endbr64 
    41c4:	48 8b 35 8d 3e 00 00 	mov    0x3e8d(%rip),%rsi        # 8058 <stop_time_val+0x8>
    41cb:	48 2b 35 96 3e 00 00 	sub    0x3e96(%rip),%rsi        # 8068 <start_time_val+0x8>
    41d2:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    41d9:	de 1b 43 
    41dc:	48 89 f0             	mov    %rsi,%rax
    41df:	48 8b 0d 6a 3e 00 00 	mov    0x3e6a(%rip),%rcx        # 8050 <stop_time_val>
    41e6:	48 c1 fe 3f          	sar    $0x3f,%rsi
    41ea:	48 2b 0d 6f 3e 00 00 	sub    0x3e6f(%rip),%rcx        # 8060 <start_time_val>
    41f1:	48 f7 ea             	imul   %rdx
    41f4:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
    41fb:	48 c1 fa 12          	sar    $0x12,%rdx
    41ff:	48 29 f2             	sub    %rsi,%rdx
    4202:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    4206:	c3                   	retq   
    4207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    420e:	00 00 

0000000000004210 <time_in_secs>:
    4210:	f3 0f 1e fa          	endbr64 
    4214:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4218:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
    421d:	f2 0f 59 05 fb 12 00 	mulsd  0x12fb(%rip),%xmm0        # 5520 <_IO_stdin_used+0x520>
    4224:	00 
    4225:	c3                   	retq   
    4226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    422d:	00 00 00 

0000000000004230 <portable_init>:
    4230:	f3 0f 1e fa          	endbr64 
    4234:	c6 07 01             	movb   $0x1,(%rdi)
    4237:	c3                   	retq   
    4238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    423f:	00 

0000000000004240 <portable_fini>:
    4240:	f3 0f 1e fa          	endbr64 
    4244:	c6 07 00             	movb   $0x0,(%rdi)
    4247:	c3                   	retq   
    4248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    424f:	00 

0000000000004250 <__libc_csu_init>:
    4250:	f3 0f 1e fa          	endbr64 
    4254:	41 57                	push   %r15
    4256:	4c 8d 3d 8b 3a 00 00 	lea    0x3a8b(%rip),%r15        # 7ce8 <__frame_dummy_init_array_entry>
    425d:	41 56                	push   %r14
    425f:	49 89 d6             	mov    %rdx,%r14
    4262:	41 55                	push   %r13
    4264:	49 89 f5             	mov    %rsi,%r13
    4267:	41 54                	push   %r12
    4269:	41 89 fc             	mov    %edi,%r12d
    426c:	55                   	push   %rbp
    426d:	48 8d 2d 84 3a 00 00 	lea    0x3a84(%rip),%rbp        # 7cf8 <__do_global_dtors_aux_fini_array_entry>
    4274:	53                   	push   %rbx
    4275:	4c 29 fd             	sub    %r15,%rbp
    4278:	48 83 ec 08          	sub    $0x8,%rsp
    427c:	e8 7f cd ff ff       	callq  1000 <_init>
    4281:	48 c1 fd 03          	sar    $0x3,%rbp
    4285:	74 1f                	je     42a6 <__libc_csu_init+0x56>
    4287:	31 db                	xor    %ebx,%ebx
    4289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4290:	4c 89 f2             	mov    %r14,%rdx
    4293:	4c 89 ee             	mov    %r13,%rsi
    4296:	44 89 e7             	mov    %r12d,%edi
    4299:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    429d:	48 83 c3 01          	add    $0x1,%rbx
    42a1:	48 39 dd             	cmp    %rbx,%rbp
    42a4:	75 ea                	jne    4290 <__libc_csu_init+0x40>
    42a6:	48 83 c4 08          	add    $0x8,%rsp
    42aa:	5b                   	pop    %rbx
    42ab:	5d                   	pop    %rbp
    42ac:	41 5c                	pop    %r12
    42ae:	41 5d                	pop    %r13
    42b0:	41 5e                	pop    %r14
    42b2:	41 5f                	pop    %r15
    42b4:	c3                   	retq   
    42b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    42bc:	00 00 00 00 

00000000000042c0 <__libc_csu_fini>:
    42c0:	f3 0f 1e fa          	endbr64 
    42c4:	c3                   	retq   

Disassembly of section .fini:

00000000000042c8 <_fini>:
    42c8:	f3 0f 1e fa          	endbr64 
    42cc:	48 83 ec 08          	sub    $0x8,%rsp
    42d0:	48 83 c4 08          	add    $0x8,%rsp
    42d4:	c3                   	retq   

Disassembly of section .rodata:

0000000000005000 <_IO_stdin_used>:
    5000:	01 00                	add    %eax,(%rax)
    5002:	02 00                	add    (%rax),%al
    5004:	00 00                	add    %al,(%rax)
    5006:	00 00                	add    %al,(%rax)
    5008:	36 6b 20 70          	imul   $0x70,%ss:(%rax),%esp
    500c:	65 72 66             	gs jb  5075 <_IO_stdin_used+0x75>
    500f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5010:	72 6d                	jb     507f <_IO_stdin_used+0x7f>
    5012:	61                   	(bad)  
    5013:	6e                   	outsb  %ds:(%rsi),(%dx)
    5014:	63 65 20             	movslq 0x20(%rbp),%esp
    5017:	72 75                	jb     508e <_IO_stdin_used+0x8e>
    5019:	6e                   	outsb  %ds:(%rsi),(%dx)
    501a:	20 70 61             	and    %dh,0x61(%rax)
    501d:	72 61                	jb     5080 <_IO_stdin_used+0x80>
    501f:	6d                   	insl   (%dx),%es:(%rdi)
    5020:	65 74 65             	gs je  5088 <_IO_stdin_used+0x88>
    5023:	72 73                	jb     5098 <_IO_stdin_used+0x98>
    5025:	20 66 6f             	and    %ah,0x6f(%rsi)
    5028:	72 20                	jb     504a <_IO_stdin_used+0x4a>
    502a:	63 6f 72             	movslq 0x72(%rdi),%ebp
    502d:	65 6d                	gs insl (%dx),%es:(%rdi)
    502f:	61                   	(bad)  
    5030:	72 6b                	jb     509d <_IO_stdin_used+0x9d>
    5032:	2e 00 00             	add    %al,%cs:(%rax)
    5035:	00 00                	add    %al,(%rax)
    5037:	00 36                	add    %dh,(%rsi)
    5039:	6b 20 76             	imul   $0x76,(%rax),%esp
    503c:	61                   	(bad)  
    503d:	6c                   	insb   (%dx),%es:(%rdi)
    503e:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    5045:	20 
    5046:	72 75                	jb     50bd <_IO_stdin_used+0xbd>
    5048:	6e                   	outsb  %ds:(%rsi),(%dx)
    5049:	20 70 61             	and    %dh,0x61(%rax)
    504c:	72 61                	jb     50af <_IO_stdin_used+0xaf>
    504e:	6d                   	insl   (%dx),%es:(%rdi)
    504f:	65 74 65             	gs je  50b7 <_IO_stdin_used+0xb7>
    5052:	72 73                	jb     50c7 <_IO_stdin_used+0xc7>
    5054:	20 66 6f             	and    %ah,0x6f(%rsi)
    5057:	72 20                	jb     5079 <_IO_stdin_used+0x79>
    5059:	63 6f 72             	movslq 0x72(%rdi),%ebp
    505c:	65 6d                	gs insl (%dx),%es:(%rdi)
    505e:	61                   	(bad)  
    505f:	72 6b                	jb     50cc <_IO_stdin_used+0xcc>
    5061:	2e 00 00             	add    %al,%cs:(%rax)
    5064:	00 00                	add    %al,(%rax)
    5066:	00 00                	add    %al,(%rax)
    5068:	50                   	push   %rax
    5069:	72 6f                	jb     50da <_IO_stdin_used+0xda>
    506b:	66 69 6c 65 20 67 65 	imul   $0x6567,0x20(%rbp,%riz,2),%bp
    5072:	6e                   	outsb  %ds:(%rsi),(%dx)
    5073:	65 72 61             	gs jb  50d7 <_IO_stdin_used+0xd7>
    5076:	74 69                	je     50e1 <_IO_stdin_used+0xe1>
    5078:	6f                   	outsl  %ds:(%rsi),(%dx)
    5079:	6e                   	outsb  %ds:(%rsi),(%dx)
    507a:	20 72 75             	and    %dh,0x75(%rdx)
    507d:	6e                   	outsb  %ds:(%rsi),(%dx)
    507e:	20 70 61             	and    %dh,0x61(%rax)
    5081:	72 61                	jb     50e4 <_IO_stdin_used+0xe4>
    5083:	6d                   	insl   (%dx),%es:(%rdi)
    5084:	65 74 65             	gs je  50ec <_IO_stdin_used+0xec>
    5087:	72 73                	jb     50fc <_IO_stdin_used+0xfc>
    5089:	20 66 6f             	and    %ah,0x6f(%rsi)
    508c:	72 20                	jb     50ae <_IO_stdin_used+0xae>
    508e:	63 6f 72             	movslq 0x72(%rdi),%ebp
    5091:	65 6d                	gs insl (%dx),%es:(%rdi)
    5093:	61                   	(bad)  
    5094:	72 6b                	jb     5101 <_IO_stdin_used+0x101>
    5096:	2e 00 32             	add    %dh,%cs:(%rdx)
    5099:	4b 20 70 65          	rex.WXB and %sil,0x65(%r8)
    509d:	72 66                	jb     5105 <_IO_stdin_used+0x105>
    509f:	6f                   	outsl  %ds:(%rsi),(%dx)
    50a0:	72 6d                	jb     510f <_IO_stdin_used+0x10f>
    50a2:	61                   	(bad)  
    50a3:	6e                   	outsb  %ds:(%rsi),(%dx)
    50a4:	63 65 20             	movslq 0x20(%rbp),%esp
    50a7:	72 75                	jb     511e <_IO_stdin_used+0x11e>
    50a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    50aa:	20 70 61             	and    %dh,0x61(%rax)
    50ad:	72 61                	jb     5110 <_IO_stdin_used+0x110>
    50af:	6d                   	insl   (%dx),%es:(%rdi)
    50b0:	65 74 65             	gs je  5118 <_IO_stdin_used+0x118>
    50b3:	72 73                	jb     5128 <_IO_stdin_used+0x128>
    50b5:	20 66 6f             	and    %ah,0x6f(%rsi)
    50b8:	72 20                	jb     50da <_IO_stdin_used+0xda>
    50ba:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50bd:	65 6d                	gs insl (%dx),%es:(%rdi)
    50bf:	61                   	(bad)  
    50c0:	72 6b                	jb     512d <_IO_stdin_used+0x12d>
    50c2:	2e 00 00             	add    %al,%cs:(%rax)
    50c5:	00 00                	add    %al,(%rax)
    50c7:	00 32                	add    %dh,(%rdx)
    50c9:	4b 20 76 61          	rex.WXB and %sil,0x61(%r14)
    50cd:	6c                   	insb   (%dx),%es:(%rdi)
    50ce:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    50d5:	20 
    50d6:	72 75                	jb     514d <_IO_stdin_used+0x14d>
    50d8:	6e                   	outsb  %ds:(%rsi),(%dx)
    50d9:	20 70 61             	and    %dh,0x61(%rax)
    50dc:	72 61                	jb     513f <_IO_stdin_used+0x13f>
    50de:	6d                   	insl   (%dx),%es:(%rdi)
    50df:	65 74 65             	gs je  5147 <_IO_stdin_used+0x147>
    50e2:	72 73                	jb     5157 <_IO_stdin_used+0x157>
    50e4:	20 66 6f             	and    %ah,0x6f(%rsi)
    50e7:	72 20                	jb     5109 <_IO_stdin_used+0x109>
    50e9:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50ec:	65 6d                	gs insl (%dx),%es:(%rdi)
    50ee:	61                   	(bad)  
    50ef:	72 6b                	jb     515c <_IO_stdin_used+0x15c>
    50f1:	2e 00 00             	add    %al,%cs:(%rax)
    50f4:	00 00                	add    %al,(%rax)
    50f6:	00 00                	add    %al,(%rax)
    50f8:	5b                   	pop    %rbx
    50f9:	25 75 5d 45 52       	and    $0x52455d75,%eax
    50fe:	52                   	push   %rdx
    50ff:	4f 52                	rex.WRXB push %r10
    5101:	21 20                	and    %esp,(%rax)
    5103:	6c                   	insb   (%dx),%es:(%rdi)
    5104:	69 73 74 20 63 72 63 	imul   $0x63726320,0x74(%rbx),%esi
    510b:	20 30                	and    %dh,(%rax)
    510d:	78 25                	js     5134 <_IO_stdin_used+0x134>
    510f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5112:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c438 <_end+0x6f6843c8>
    5118:	75 6c                	jne    5186 <_IO_stdin_used+0x186>
    511a:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    511e:	20 30                	and    %dh,(%rax)
    5120:	78 25                	js     5147 <_IO_stdin_used+0x147>
    5122:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5125:	0a 00                	or     (%rax),%al
    5127:	00 5b 25             	add    %bl,0x25(%rbx)
    512a:	75 5d                	jne    5189 <_IO_stdin_used+0x189>
    512c:	45 52                	rex.RB push %r10
    512e:	52                   	push   %rdx
    512f:	4f 52                	rex.WRXB push %r10
    5131:	21 20                	and    %esp,(%rax)
    5133:	6d                   	insl   (%dx),%es:(%rdi)
    5134:	61                   	(bad)  
    5135:	74 72                	je     51a9 <_IO_stdin_used+0x1a9>
    5137:	69 78 20 63 72 63 20 	imul   $0x20637263,0x20(%rax),%edi
    513e:	30 78 25             	xor    %bh,0x25(%rax)
    5141:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5144:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c46a <_end+0x6f6843fa>
    514a:	75 6c                	jne    51b8 <_IO_stdin_used+0x1b8>
    514c:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5150:	20 30                	and    %dh,(%rax)
    5152:	78 25                	js     5179 <_IO_stdin_used+0x179>
    5154:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5157:	0a 00                	or     (%rax),%al
    5159:	00 00                	add    %al,(%rax)
    515b:	00 00                	add    %al,(%rax)
    515d:	00 00                	add    %al,(%rax)
    515f:	00 5b 25             	add    %bl,0x25(%rbx)
    5162:	75 5d                	jne    51c1 <_IO_stdin_used+0x1c1>
    5164:	45 52                	rex.RB push %r10
    5166:	52                   	push   %rdx
    5167:	4f 52                	rex.WRXB push %r10
    5169:	21 20                	and    %esp,(%rax)
    516b:	73 74                	jae    51e1 <_IO_stdin_used+0x1e1>
    516d:	61                   	(bad)  
    516e:	74 65                	je     51d5 <_IO_stdin_used+0x1d5>
    5170:	20 63 72             	and    %ah,0x72(%rbx)
    5173:	63 20                	movslq (%rax),%esp
    5175:	30 78 25             	xor    %bh,0x25(%rax)
    5178:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    517b:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c4a1 <_end+0x6f684431>
    5181:	75 6c                	jne    51ef <_IO_stdin_used+0x1ef>
    5183:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5187:	20 30                	and    %dh,(%rax)
    5189:	78 25                	js     51b0 <_IO_stdin_used+0x1b0>
    518b:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    518e:	0a 00                	or     (%rax),%al
    5190:	45 52                	rex.RB push %r10
    5192:	52                   	push   %rdx
    5193:	4f 52                	rex.WRXB push %r10
    5195:	21 20                	and    %esp,(%rax)
    5197:	4d 75 73             	rex.WRB jne 520d <_IO_stdin_used+0x20d>
    519a:	74 20                	je     51bc <_IO_stdin_used+0x1bc>
    519c:	65 78 65             	gs js  5204 <_IO_stdin_used+0x204>
    519f:	63 75 74             	movslq 0x74(%rbp),%esi
    51a2:	65 20 66 6f          	and    %ah,%gs:0x6f(%rsi)
    51a6:	72 20                	jb     51c8 <_IO_stdin_used+0x1c8>
    51a8:	61                   	(bad)  
    51a9:	74 20                	je     51cb <_IO_stdin_used+0x1cb>
    51ab:	6c                   	insb   (%dx),%es:(%rdi)
    51ac:	65 61                	gs (bad) 
    51ae:	73 74                	jae    5224 <_IO_stdin_used+0x224>
    51b0:	20 31                	and    %dh,(%rcx)
    51b2:	30 20                	xor    %ah,(%rax)
    51b4:	73 65                	jae    521b <_IO_stdin_used+0x21b>
    51b6:	63 73 20             	movslq 0x20(%rbx),%esi
    51b9:	66 6f                	outsw  %ds:(%rsi),(%dx)
    51bb:	72 20                	jb     51dd <_IO_stdin_used+0x1dd>
    51bd:	61                   	(bad)  
    51be:	20 76 61             	and    %dh,0x61(%rsi)
    51c1:	6c                   	insb   (%dx),%es:(%rdi)
    51c2:	69 64 20 72 65 73 75 	imul   $0x6c757365,0x72(%rax,%riz,1),%esp
    51c9:	6c 
    51ca:	74 21                	je     51ed <_IO_stdin_used+0x1ed>
    51cc:	00 00                	add    %al,(%rax)
    51ce:	00 00                	add    %al,(%rax)
    51d0:	50                   	push   %rax
    51d1:	6c                   	insb   (%dx),%es:(%rdi)
    51d2:	65 61                	gs (bad) 
    51d4:	73 65                	jae    523b <_IO_stdin_used+0x23b>
    51d6:	20 70 75             	and    %dh,0x75(%rax)
    51d9:	74 20                	je     51fb <_IO_stdin_used+0x1fb>
    51db:	64 61                	fs (bad) 
    51dd:	74 61                	je     5240 <_IO_stdin_used+0x240>
    51df:	20 6d 65             	and    %ch,0x65(%rbp)
    51e2:	6d                   	insl   (%dx),%es:(%rdi)
    51e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    51e4:	72 79                	jb     525f <_IO_stdin_used+0x25f>
    51e6:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    51ea:	61                   	(bad)  
    51eb:	74 69                	je     5256 <_IO_stdin_used+0x256>
    51ed:	6f                   	outsl  %ds:(%rsi),(%dx)
    51ee:	6e                   	outsb  %ds:(%rsi),(%dx)
    51ef:	20 68 65             	and    %ch,0x65(%rax)
    51f2:	72 65                	jb     5259 <_IO_stdin_used+0x259>
    51f4:	0a 09                	or     (%rcx),%cl
    51f6:	09 09                	or     %ecx,(%rcx)
    51f8:	28 65 2e             	sub    %ah,0x2e(%rbp)
    51fb:	67 2e 20 63 6f       	and    %ah,%cs:0x6f(%ebx)
    5200:	64 65 20 69 6e       	fs and %ch,%gs:0x6e(%rcx)
    5205:	20 66 6c             	and    %ah,0x6c(%rsi)
    5208:	61                   	(bad)  
    5209:	73 68                	jae    5273 <_IO_stdin_used+0x273>
    520b:	2c 20                	sub    $0x20,%al
    520d:	64 61                	fs (bad) 
    520f:	74 61                	je     5272 <_IO_stdin_used+0x272>
    5211:	20 6f 6e             	and    %ch,0x6e(%rdi)
    5214:	20 68 65             	and    %ch,0x65(%rax)
    5217:	61                   	(bad)  
    5218:	70 20                	jo     523a <_IO_stdin_used+0x23a>
    521a:	65 74 63             	gs je  5280 <_IO_stdin_used+0x280>
    521d:	29 00                	sub    %eax,(%rax)
    521f:	00 43 6f             	add    %al,0x6f(%rbx)
    5222:	72 72                	jb     5296 <_IO_stdin_used+0x296>
    5224:	65 63 74 20 6f       	movslq %gs:0x6f(%rax,%riz,1),%esi
    5229:	70 65                	jo     5290 <_IO_stdin_used+0x290>
    522b:	72 61                	jb     528e <_IO_stdin_used+0x28e>
    522d:	74 69                	je     5298 <_IO_stdin_used+0x298>
    522f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5230:	6e                   	outsb  %ds:(%rsi),(%dx)
    5231:	20 76 61             	and    %dh,0x61(%rsi)
    5234:	6c                   	insb   (%dx),%es:(%rdi)
    5235:	69 64 61 74 65 64 2e 	imul   $0x202e6465,0x74(%rcx,%riz,2),%esp
    523c:	20 
    523d:	53                   	push   %rbx
    523e:	65 65 20 52 45       	gs and %dl,%gs:0x45(%rdx)
    5243:	41                   	rex.B
    5244:	44                   	rex.R
    5245:	4d                   	rex.WRB
    5246:	45                   	rex.RB
    5247:	2e 6d                	cs insl (%dx),%es:(%rdi)
    5249:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    524d:	72 20                	jb     526f <_IO_stdin_used+0x26f>
    524f:	72 75                	jb     52c6 <_IO_stdin_used+0x2c6>
    5251:	6e                   	outsb  %ds:(%rsi),(%dx)
    5252:	20 61 6e             	and    %ah,0x6e(%rcx)
    5255:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
    5259:	70 6f                	jo     52ca <_IO_stdin_used+0x2ca>
    525b:	72 74                	jb     52d1 <_IO_stdin_used+0x2d1>
    525d:	69 6e 67 20 72 75 6c 	imul   $0x6c757220,0x67(%rsi),%ebp
    5264:	65 73 2e             	gs jae 5295 <_IO_stdin_used+0x295>
    5267:	00 43 61             	add    %al,0x61(%rbx)
    526a:	6e                   	outsb  %ds:(%rsi),(%dx)
    526b:	6e                   	outsb  %ds:(%rsi),(%dx)
    526c:	6f                   	outsl  %ds:(%rsi),(%dx)
    526d:	74 20                	je     528f <_IO_stdin_used+0x28f>
    526f:	76 61                	jbe    52d2 <_IO_stdin_used+0x2d2>
    5271:	6c                   	insb   (%dx),%es:(%rdi)
    5272:	69 64 61 74 65 20 6f 	imul   $0x706f2065,0x74(%rcx,%riz,2),%esp
    5279:	70 
    527a:	65 72 61             	gs jb  52de <_IO_stdin_used+0x2de>
    527d:	74 69                	je     52e8 <_IO_stdin_used+0x2e8>
    527f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5280:	6e                   	outsb  %ds:(%rsi),(%dx)
    5281:	20 66 6f             	and    %ah,0x6f(%rsi)
    5284:	72 20                	jb     52a6 <_IO_stdin_used+0x2a6>
    5286:	74 68                	je     52f0 <_IO_stdin_used+0x2f0>
    5288:	65 73 65             	gs jae 52f0 <_IO_stdin_used+0x2f0>
    528b:	20 73 65             	and    %dh,0x65(%rbx)
    528e:	65 64 20 76 61       	gs and %dh,%fs:0x61(%rsi)
    5293:	6c                   	insb   (%dx),%es:(%rdi)
    5294:	75 65                	jne    52fb <_IO_stdin_used+0x2fb>
    5296:	73 2c                	jae    52c4 <_IO_stdin_used+0x2c4>
    5298:	20 70 6c             	and    %dh,0x6c(%rax)
    529b:	65 61                	gs (bad) 
    529d:	73 65                	jae    5304 <_IO_stdin_used+0x304>
    529f:	20 63 6f             	and    %ah,0x6f(%rbx)
    52a2:	6d                   	insl   (%dx),%es:(%rdi)
    52a3:	70 61                	jo     5306 <_IO_stdin_used+0x306>
    52a5:	72 65                	jb     530c <_IO_stdin_used+0x30c>
    52a7:	20 77 69             	and    %dh,0x69(%rdi)
    52aa:	74 68                	je     5314 <_IO_stdin_used+0x314>
    52ac:	20 72 65             	and    %dh,0x65(%rdx)
    52af:	73 75                	jae    5326 <_IO_stdin_used+0x326>
    52b1:	6c                   	insb   (%dx),%es:(%rdi)
    52b2:	74 73                	je     5327 <_IO_stdin_used+0x327>
    52b4:	20 6f 6e             	and    %ch,0x6e(%rdi)
    52b7:	20 61 20             	and    %ah,0x20(%rcx)
    52ba:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    52be:	6e                   	outsb  %ds:(%rsi),(%dx)
    52bf:	20 70 6c             	and    %dh,0x6c(%rax)
    52c2:	61                   	(bad)  
    52c3:	74 66                	je     532b <_IO_stdin_used+0x32b>
    52c5:	6f                   	outsl  %ds:(%rsi),(%dx)
    52c6:	72 6d                	jb     5335 <_IO_stdin_used+0x335>
    52c8:	2e 00 43 6f          	add    %al,%cs:0x6f(%rbx)
    52cc:	72 65                	jb     5333 <_IO_stdin_used+0x333>
    52ce:	4d 61                	rex.WRB (bad) 
    52d0:	72 6b                	jb     533d <_IO_stdin_used+0x33d>
    52d2:	20 53 69             	and    %dl,0x69(%rbx)
    52d5:	7a 65                	jp     533c <_IO_stdin_used+0x33c>
    52d7:	20 20                	and    %ah,(%rax)
    52d9:	20 20                	and    %ah,(%rax)
    52db:	3a 20                	cmp    (%rax),%ah
    52dd:	25 6c 75 0a 00       	and    $0xa756c,%eax
    52e2:	54                   	push   %rsp
    52e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    52e4:	74 61                	je     5347 <_IO_stdin_used+0x347>
    52e6:	6c                   	insb   (%dx),%es:(%rdi)
    52e7:	20 74 69 63          	and    %dh,0x63(%rcx,%rbp,2)
    52eb:	6b 73 20 20          	imul   $0x20,0x20(%rbx),%esi
    52ef:	20 20                	and    %ah,(%rax)
    52f1:	20 20                	and    %ah,(%rax)
    52f3:	3a 20                	cmp    (%rax),%ah
    52f5:	25 6c 75 0a 00       	and    $0xa756c,%eax
    52fa:	54                   	push   %rsp
    52fb:	6f                   	outsl  %ds:(%rsi),(%dx)
    52fc:	74 61                	je     535f <_IO_stdin_used+0x35f>
    52fe:	6c                   	insb   (%dx),%es:(%rdi)
    52ff:	20 74 69 6d          	and    %dh,0x6d(%rcx,%rbp,2)
    5303:	65 20 28             	and    %ch,%gs:(%rax)
    5306:	73 65                	jae    536d <_IO_stdin_used+0x36d>
    5308:	63 73 29             	movslq 0x29(%rbx),%esi
    530b:	3a 20                	cmp    (%rax),%ah
    530d:	25 66 0a 00 49       	and    $0x49000a66,%eax
    5312:	74 65                	je     5379 <_IO_stdin_used+0x379>
    5314:	72 61                	jb     5377 <_IO_stdin_used+0x377>
    5316:	74 69                	je     5381 <_IO_stdin_used+0x381>
    5318:	6f                   	outsl  %ds:(%rsi),(%dx)
    5319:	6e                   	outsb  %ds:(%rsi),(%dx)
    531a:	73 2f                	jae    534b <_IO_stdin_used+0x34b>
    531c:	53                   	push   %rbx
    531d:	65 63 20             	movslq %gs:(%rax),%esp
    5320:	20 20                	and    %ah,(%rax)
    5322:	3a 20                	cmp    (%rax),%ah
    5324:	25 66 0a 00 49       	and    $0x49000a66,%eax
    5329:	74 65                	je     5390 <_IO_stdin_used+0x390>
    532b:	72 61                	jb     538e <_IO_stdin_used+0x38e>
    532d:	74 69                	je     5398 <_IO_stdin_used+0x398>
    532f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5330:	6e                   	outsb  %ds:(%rsi),(%dx)
    5331:	73 20                	jae    5353 <_IO_stdin_used+0x353>
    5333:	20 20                	and    %ah,(%rax)
    5335:	20 20                	and    %ah,(%rax)
    5337:	20 20                	and    %ah,(%rax)
    5339:	3a 20                	cmp    (%rax),%ah
    533b:	25 6c 75 0a 00       	and    $0xa756c,%eax
    5340:	47                   	rex.RXB
    5341:	43                   	rex.XB
    5342:	43 39 2e             	rex.XB cmp %ebp,(%r14)
    5345:	34 2e                	xor    $0x2e,%al
    5347:	30 00                	xor    %al,(%rax)
    5349:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    534b:	6d                   	insl   (%dx),%es:(%rdi)
    534c:	70 69                	jo     53b7 <_IO_stdin_used+0x3b7>
    534e:	6c                   	insb   (%dx),%es:(%rdi)
    534f:	65 72 20             	gs jb  5372 <_IO_stdin_used+0x372>
    5352:	76 65                	jbe    53b9 <_IO_stdin_used+0x3b9>
    5354:	72 73                	jb     53c9 <_IO_stdin_used+0x3c9>
    5356:	69 6f 6e 20 3a 20 25 	imul   $0x25203a20,0x6e(%rdi),%ebp
    535d:	73 0a                	jae    5369 <_IO_stdin_used+0x369>
    535f:	00 2d 4f 66 61 73    	add    %ch,0x7361664f(%rip)        # 7361b9b4 <_end+0x73613944>
    5365:	74 20                	je     5387 <_IO_stdin_used+0x387>
    5367:	20 20                	and    %ah,(%rax)
    5369:	2d 6c 72 74 00       	sub    $0x74726c,%eax
    536e:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    5370:	6d                   	insl   (%dx),%es:(%rdi)
    5371:	70 69                	jo     53dc <_IO_stdin_used+0x3dc>
    5373:	6c                   	insb   (%dx),%es:(%rdi)
    5374:	65 72 20             	gs jb  5397 <_IO_stdin_used+0x397>
    5377:	66 6c                	data16 insb (%dx),%es:(%rdi)
    5379:	61                   	(bad)  
    537a:	67 73 20             	addr32 jae 539d <_IO_stdin_used+0x39d>
    537d:	20 20                	and    %ah,(%rax)
    537f:	3a 20                	cmp    (%rax),%ah
    5381:	25 73 0a 00 4d       	and    $0x4d000a73,%eax
    5386:	65 6d                	gs insl (%dx),%es:(%rdi)
    5388:	6f                   	outsl  %ds:(%rsi),(%dx)
    5389:	72 79                	jb     5404 <_IO_stdin_used+0x404>
    538b:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    538f:	61                   	(bad)  
    5390:	74 69                	je     53fb <_IO_stdin_used+0x3fb>
    5392:	6f                   	outsl  %ds:(%rsi),(%dx)
    5393:	6e                   	outsb  %ds:(%rsi),(%dx)
    5394:	20 20                	and    %ah,(%rax)
    5396:	3a 20                	cmp    (%rax),%ah
    5398:	25 73 0a 00 73       	and    $0x73000a73,%eax
    539d:	65 65 64 63 72 63    	gs gs movslq %fs:0x63(%rdx),%esi
    53a3:	20 20                	and    %ah,(%rax)
    53a5:	20 20                	and    %ah,(%rax)
    53a7:	20 20                	and    %ah,(%rax)
    53a9:	20 20                	and    %ah,(%rax)
    53ab:	20 20                	and    %ah,(%rax)
    53ad:	3a 20                	cmp    (%rax),%ah
    53af:	30 78 25             	xor    %bh,0x25(%rax)
    53b2:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53b5:	0a 00                	or     (%rax),%al
    53b7:	5b                   	pop    %rbx
    53b8:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53bd:	63 6c 69 73          	movslq 0x73(%rcx,%rbp,2),%ebp
    53c1:	74 20                	je     53e3 <_IO_stdin_used+0x3e3>
    53c3:	20 20                	and    %ah,(%rax)
    53c5:	20 20                	and    %ah,(%rax)
    53c7:	20 20                	and    %ah,(%rax)
    53c9:	3a 20                	cmp    (%rax),%ah
    53cb:	30 78 25             	xor    %bh,0x25(%rax)
    53ce:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53d1:	0a 00                	or     (%rax),%al
    53d3:	5b                   	pop    %rbx
    53d4:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53d9:	63 6d 61             	movslq 0x61(%rbp),%ebp
    53dc:	74 72                	je     5450 <_IO_stdin_used+0x450>
    53de:	69 78 20 20 20 20 20 	imul   $0x20202020,0x20(%rax),%edi
    53e5:	3a 20                	cmp    (%rax),%ah
    53e7:	30 78 25             	xor    %bh,0x25(%rax)
    53ea:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53ed:	0a 00                	or     (%rax),%al
    53ef:	5b                   	pop    %rbx
    53f0:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53f5:	63 73 74             	movslq 0x74(%rbx),%esi
    53f8:	61                   	(bad)  
    53f9:	74 65                	je     5460 <_IO_stdin_used+0x460>
    53fb:	20 20                	and    %ah,(%rax)
    53fd:	20 20                	and    %ah,(%rax)
    53ff:	20 20                	and    %ah,(%rax)
    5401:	3a 20                	cmp    (%rax),%ah
    5403:	30 78 25             	xor    %bh,0x25(%rax)
    5406:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5409:	0a 00                	or     (%rax),%al
    540b:	5b                   	pop    %rbx
    540c:	25 64 5d 63 72       	and    $0x72635d64,%eax
    5411:	63 66 69             	movslq 0x69(%rsi),%esp
    5414:	6e                   	outsb  %ds:(%rsi),(%dx)
    5415:	61                   	(bad)  
    5416:	6c                   	insb   (%dx),%es:(%rdi)
    5417:	20 20                	and    %ah,(%rax)
    5419:	20 20                	and    %ah,(%rax)
    541b:	20 20                	and    %ah,(%rax)
    541d:	3a 20                	cmp    (%rax),%ah
    541f:	30 78 25             	xor    %bh,0x25(%rax)
    5422:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5425:	0a 00                	or     (%rax),%al
    5427:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    5429:	72 65                	jb     5490 <_IO_stdin_used+0x490>
    542b:	4d 61                	rex.WRB (bad) 
    542d:	72 6b                	jb     549a <_IO_stdin_used+0x49a>
    542f:	20 31                	and    %dh,(%rcx)
    5431:	2e 30 20             	xor    %ah,%cs:(%rax)
    5434:	3a 20                	cmp    (%rax),%ah
    5436:	25 66 20 2f 20       	and    $0x202f2066,%eax
    543b:	25 73 20 25 73       	and    $0x73252073,%eax
    5440:	00 20                	add    %ah,(%rax)
    5442:	2f                   	(bad)  
    5443:	20 25 73 00 45 72    	and    %ah,0x72450073(%rip)        # 724554bc <_end+0x7244d44c>
    5449:	72 6f                	jb     54ba <_IO_stdin_used+0x4ba>
    544b:	72 73                	jb     54c0 <_IO_stdin_used+0x4c0>
    544d:	20 64 65 74          	and    %ah,0x74(%rbp,%riz,2)
    5451:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    5456:	00 53 74             	add    %dl,0x74(%rbx)
    5459:	61                   	(bad)  
    545a:	74 69                	je     54c5 <_IO_stdin_used+0x4c5>
    545c:	63 00                	movslq (%rax),%eax
    545e:	48                   	rex.W
    545f:	65 61                	gs (bad) 
    5461:	70 00                	jo     5463 <_IO_stdin_used+0x463>
    5463:	53                   	push   %rbx
    5464:	74 61                	je     54c7 <_IO_stdin_used+0x4c7>
    5466:	63 6b 00             	movslq 0x0(%rbx),%ebp
	...
    5475:	00 f0                	add    %dh,%al
    5477:	3f                   	(bad)  
	...
    5484:	00 00                	add    %al,(%rax)
    5486:	24 40                	and    $0x40,%al
    5488:	54                   	push   %rsp
    5489:	30 2e                	xor    %ch,(%rsi)
    548b:	33 65 2d             	xor    0x2d(%rbp),%esp
    548e:	31 46 00             	xor    %eax,0x0(%rsi)
    5491:	2d 54 2e 54 2b       	sub    $0x2b542e54,%eax
    5496:	2b 54 71 00          	sub    0x0(%rcx,%rsi,2),%edx
    549a:	31 54 33 2e          	xor    %edx,0x2e(%rbx,%rsi,1)
    549e:	34 65                	xor    $0x65,%al
    54a0:	34 7a                	xor    $0x7a,%al
    54a2:	00 33                	add    %dh,(%rbx)
    54a4:	34 2e                	xor    $0x2e,%al
    54a6:	30 65 2d             	xor    %ah,0x2d(%rbp)
    54a9:	54                   	push   %rsp
    54aa:	5e                   	pop    %rsi
    54ab:	00 35 2e 35 30 30    	add    %dh,0x3030352e(%rip)        # 303089df <_end+0x3030096f>
    54b1:	65 2b 33             	sub    %gs:(%rbx),%esi
    54b4:	00 2d 2e 31 32 33    	add    %ch,0x3332312e(%rip)        # 333285e8 <_end+0x33320578>
    54ba:	65 2d 32 00 2d 38    	gs sub $0x382d0032,%eax
    54c0:	37                   	(bad)  
    54c1:	65 2b 38             	sub    %gs:(%rax),%edi
    54c4:	33 32                	xor    (%rdx),%esi
    54c6:	00 2b                	add    %ch,(%rbx)
    54c8:	30 2e                	xor    %ch,(%rsi)
    54ca:	36 65 2d 31 32 00 33 	ss gs sub $0x33003231,%eax
    54d1:	35 2e 35 34 34       	xor    $0x3434352e,%eax
    54d6:	30 30                	xor    %dh,(%rax)
    54d8:	00 2e                	add    %ch,(%rsi)
    54da:	31 32                	xor    %esi,(%rdx)
    54dc:	33 34 35 30 30 00 2d 	xor    0x2d003030(,%rsi,1),%esi
    54e3:	31 31                	xor    %esi,(%rcx)
    54e5:	30 2e                	xor    %ch,(%rsi)
    54e7:	37                   	(bad)  
    54e8:	30 30                	xor    %dh,(%rax)
    54ea:	00 2b                	add    %ch,(%rbx)
    54ec:	30 2e                	xor    %ch,(%rsi)
    54ee:	36 34 34             	ss xor $0x34,%al
    54f1:	30 30                	xor    %dh,(%rax)
    54f3:	00 35 30 31 32 00    	add    %dh,0x323130(%rip)        # 328629 <_end+0x3205b9>
    54f9:	31 32                	xor    %esi,(%rdx)
    54fb:	33 34 00             	xor    (%rax,%rax,1),%esi
    54fe:	2d 38 37 34 00       	sub    $0x343738,%eax
    5503:	2b 31                	sub    (%rcx),%esi
    5505:	32 32                	xor    (%rdx),%dh
    5507:	00 df                	add    %bl,%bh
    5509:	e4 ff                	in     $0xff,%al
    550b:	ff a8 e4 ff ff b8    	ljmp   *-0x4700001c(%rax)
    5511:	e4 ff                	in     $0xff,%al
    5513:	ff c8                	dec    %eax
    5515:	e4 ff                	in     $0xff,%al
    5517:	ff                   	(bad)  
    5518:	d8 e4                	fsub   %st(4),%st
    551a:	ff                   	(bad)  
    551b:	ff 98 e4 ff ff fc    	lcall  *-0x300001c(%rax)
    5521:	a9 f1 d2 4d 62       	test   $0x624dd2f1,%eax
    5526:	50                   	push   %rax
    5527:	3f                   	(bad)  

Disassembly of section .eh_frame_hdr:

0000000000005528 <__GNU_EH_FRAME_HDR>:
    5528:	01 1b                	add    %ebx,(%rbx)
    552a:	03 3b                	add    (%rbx),%edi
    552c:	8c 01                	mov    %es,(%rcx)
    552e:	00 00                	add    %al,(%rax)
    5530:	30 00                	xor    %al,(%rax)
    5532:	00 00                	add    %al,(%rax)
    5534:	f8                   	clc    
    5535:	ba ff ff c0 01       	mov    $0x1c0ffff,%edx
    553a:	00 00                	add    %al,(%rax)
    553c:	88 bb ff ff e8 01    	mov    %bh,0x1e8ffff(%rbx)
    5542:	00 00                	add    %al,(%rax)
    5544:	98                   	cwtl   
    5545:	bb ff ff 00 02       	mov    $0x200ffff,%ebx
    554a:	00 00                	add    %al,(%rax)
    554c:	18 bc ff ff 40 03 00 	sbb    %bh,0x340ff(%rdi,%rdi,8)
    5553:	00 38                	add    %bh,(%rax)
    5555:	bc ff ff 80 04       	mov    $0x480ffff,%esp
    555a:	00 00                	add    %al,(%rax)
    555c:	a8 c6                	test   $0xc6,%al
    555e:	ff                   	(bad)  
    555f:	ff c8                	dec    %eax
    5561:	08 00                	or     %al,(%rax)
    5563:	00 c8                	add    %cl,%al
    5565:	c6                   	(bad)  
    5566:	ff                   	(bad)  
    5567:	ff a8 01 00 00 b8    	ljmp   *-0x47ffffff(%rax)
    556d:	c7                   	(bad)  
    556e:	ff                   	(bad)  
    556f:	ff 18                	lcall  *(%rax)
    5571:	02 00                	add    (%rax),%al
    5573:	00 a8 c8 ff ff 68    	add    %ch,0x68ffffc8(%rax)
    5579:	02 00                	add    (%rax),%al
    557b:	00 98 ca ff ff a8    	add    %bl,-0x57000036(%rax)
    5581:	02 00                	add    (%rax),%al
    5583:	00 e8                	add    %ch,%al
    5585:	ca ff ff             	lret   $0xffff
    5588:	bc 02 00 00 08       	mov    $0x8000002,%esp
    558d:	cb                   	lret   
    558e:	ff                   	(bad)  
    558f:	ff d0                	callq  *%rax
    5591:	02 00                	add    (%rax),%al
    5593:	00 b8 cf ff ff 54    	add    %bh,0x54ffffcf(%rax)
    5599:	03 00                	add    (%rax),%eax
    559b:	00 48 d2             	add    %cl,-0x2e(%rax)
    559e:	ff                   	(bad)  
    559f:	ff 9c 03 00 00 98 d2 	lcall  *-0x2d680000(%rbx,%rax,1)
    55a6:	ff                   	(bad)  
    55a7:	ff b0 03 00 00 c8    	pushq  -0x37fffffd(%rax)
    55ad:	d2 ff                	sar    %cl,%bh
    55af:	ff c4                	inc    %esp
    55b1:	03 00                	add    (%rax),%eax
    55b3:	00 f8                	add    %bh,%al
    55b5:	d2 ff                	sar    %cl,%bh
    55b7:	ff                   	(bad)  
    55b8:	d8 03                	fadds  (%rbx)
    55ba:	00 00                	add    %al,(%rax)
    55bc:	58                   	pop    %rax
    55bd:	d3 ff                	sar    %cl,%edi
    55bf:	ff                   	(bad)  
    55c0:	ec                   	in     (%dx),%al
    55c1:	03 00                	add    (%rax),%eax
    55c3:	00 88 d3 ff ff 00    	add    %cl,0xffffd3(%rax)
    55c9:	04 00                	add    $0x0,%al
    55cb:	00 c8                	add    %cl,%al
    55cd:	d4                   	(bad)  
    55ce:	ff                   	(bad)  
    55cf:	ff 50 04             	callq  *0x4(%rax)
    55d2:	00 00                	add    %al,(%rax)
    55d4:	58                   	pop    %rax
    55d5:	d5                   	(bad)  
    55d6:	ff                   	(bad)  
    55d7:	ff d0                	callq  *%rax
    55d9:	04 00                	add    $0x0,%al
    55db:	00 78 d9             	add    %bh,-0x27(%rax)
    55de:	ff                   	(bad)  
    55df:	ff 34 05 00 00 a8 d9 	pushq  -0x26580000(,%rax,1)
    55e6:	ff                   	(bad)  
    55e7:	ff 50 05             	callq  *0x5(%rax)
    55ea:	00 00                	add    %al,(%rax)
    55ec:	e8 da ff ff 98       	callq  ffffffff990055cb <_end+0xffffffff98ffd55b>
    55f1:	05 00 00 68 db       	add    $0xdb680000,%eax
    55f6:	ff                   	(bad)  
    55f7:	ff c0                	inc    %eax
    55f9:	05 00 00 b8 db       	add    $0xdbb80000,%eax
    55fe:	ff                   	(bad)  
    55ff:	ff                   	(bad)  
    5600:	dc 05 00 00 f8 db    	faddl  -0x24080000(%rip)        # ffffffffdbf85606 <_end+0xffffffffdbf7d596>
    5606:	ff                   	(bad)  
    5607:	ff f0                	push   %rax
    5609:	05 00 00 88 dc       	add    $0xdc880000,%eax
    560e:	ff                   	(bad)  
    560f:	ff 28                	ljmp   *(%rax)
    5611:	06                   	(bad)  
    5612:	00 00                	add    %al,(%rax)
    5614:	28 dd                	sub    %bl,%ch
    5616:	ff                   	(bad)  
    5617:	ff 68 06             	ljmp   *0x6(%rax)
    561a:	00 00                	add    %al,(%rax)
    561c:	d8 dd                	fcomp  %st(5)
    561e:	ff                   	(bad)  
    561f:	ff a8 06 00 00 58    	ljmp   *0x58000006(%rax)
    5625:	df ff                	(bad)  
    5627:	ff                   	(bad)  
    5628:	ec                   	in     (%dx),%al
    5629:	06                   	(bad)  
    562a:	00 00                	add    %al,(%rax)
    562c:	68 e2 ff ff 00       	pushq  $0xffffe2
    5631:	07                   	(bad)  
    5632:	00 00                	add    %al,(%rax)
    5634:	58                   	pop    %rax
    5635:	e4 ff                	in     $0xff,%al
    5637:	ff 50 07             	callq  *0x7(%rax)
    563a:	00 00                	add    %al,(%rax)
    563c:	c8 e4 ff ff          	enterq $0xffe4,$0xff
    5640:	64 07                	fs (bad) 
    5642:	00 00                	add    %al,(%rax)
    5644:	98                   	cwtl   
    5645:	e5 ff                	in     $0xff,%eax
    5647:	ff                   	(bad)  
    5648:	78 07                	js     5651 <__GNU_EH_FRAME_HDR+0x129>
    564a:	00 00                	add    %al,(%rax)
    564c:	48 e7 ff             	rex.W out %eax,$0xff
    564f:	ff 8c 07 00 00 88 ea 	decl   -0x15780000(%rdi,%rax,1)
    5656:	ff                   	(bad)  
    5657:	ff a0 07 00 00 28    	jmpq   *0x28000007(%rax)
    565d:	ec                   	in     (%dx),%al
    565e:	ff                   	(bad)  
    565f:	ff b4 07 00 00 38 ec 	pushq  -0x13c80000(%rdi,%rax,1)
    5666:	ff                   	(bad)  
    5667:	ff c8                	dec    %eax
    5669:	07                   	(bad)  
    566a:	00 00                	add    %al,(%rax)
    566c:	48 ec                	rex.W in (%dx),%al
    566e:	ff                   	(bad)  
    566f:	ff                   	(bad)  
    5670:	dc 07                	faddl  (%rdi)
    5672:	00 00                	add    %al,(%rax)
    5674:	58                   	pop    %rax
    5675:	ec                   	in     (%dx),%al
    5676:	ff                   	(bad)  
    5677:	ff f0                	push   %rax
    5679:	07                   	(bad)  
    567a:	00 00                	add    %al,(%rax)
    567c:	78 ec                	js     566a <__GNU_EH_FRAME_HDR+0x142>
    567e:	ff                   	(bad)  
    567f:	ff 04 08             	incl   (%rax,%rcx,1)
    5682:	00 00                	add    %al,(%rax)
    5684:	98                   	cwtl   
    5685:	ec                   	in     (%dx),%al
    5686:	ff                   	(bad)  
    5687:	ff 18                	lcall  *(%rax)
    5689:	08 00                	or     %al,(%rax)
    568b:	00 e8                	add    %ch,%al
    568d:	ec                   	in     (%dx),%al
    568e:	ff                   	(bad)  
    568f:	ff 2c 08             	ljmp   *(%rax,%rcx,1)
    5692:	00 00                	add    %al,(%rax)
    5694:	08 ed                	or     %ch,%ch
    5696:	ff                   	(bad)  
    5697:	ff 40 08             	incl   0x8(%rax)
    569a:	00 00                	add    %al,(%rax)
    569c:	18 ed                	sbb    %ch,%ch
    569e:	ff                   	(bad)  
    569f:	ff 54 08 00          	callq  *0x0(%rax,%rcx,1)
    56a3:	00 28                	add    %ch,(%rax)
    56a5:	ed                   	in     (%dx),%eax
    56a6:	ff                   	(bad)  
    56a7:	ff 68 08             	ljmp   *0x8(%rax)
    56aa:	00 00                	add    %al,(%rax)
    56ac:	98                   	cwtl   
    56ad:	ed                   	in     (%dx),%eax
    56ae:	ff                   	(bad)  
    56af:	ff                   	.byte 0xff
    56b0:	b0 08                	mov    $0x8,%al
	...

Disassembly of section .eh_frame:

00000000000056b8 <__FRAME_END__-0x74c>:
    56b8:	14 00                	adc    $0x0,%al
    56ba:	00 00                	add    %al,(%rax)
    56bc:	00 00                	add    %al,(%rax)
    56be:	00 00                	add    %al,(%rax)
    56c0:	01 7a 52             	add    %edi,0x52(%rdx)
    56c3:	00 01                	add    %al,(%rcx)
    56c5:	78 10                	js     56d7 <__GNU_EH_FRAME_HDR+0x1af>
    56c7:	01 1b                	add    %ebx,(%rbx)
    56c9:	0c 07                	or     $0x7,%al
    56cb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    56d1:	00 00                	add    %al,(%rax)
    56d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    56d6:	00 00                	add    %al,(%rax)
    56d8:	18 c5                	sbb    %al,%ch
    56da:	ff                   	(bad)  
    56db:	ff 2f                	ljmp   *(%rdi)
    56dd:	00 00                	add    %al,(%rax)
    56df:	00 00                	add    %al,(%rax)
    56e1:	44 07                	rex.R (bad) 
    56e3:	10 00                	adc    %al,(%rax)
    56e5:	00 00                	add    %al,(%rax)
    56e7:	00 24 00             	add    %ah,(%rax,%rax,1)
    56ea:	00 00                	add    %al,(%rax)
    56ec:	34 00                	xor    $0x0,%al
    56ee:	00 00                	add    %al,(%rax)
    56f0:	30 b9 ff ff 90 00    	xor    %bh,0x90ffff(%rcx)
    56f6:	00 00                	add    %al,(%rax)
    56f8:	00 0e                	add    %cl,(%rsi)
    56fa:	10 46 0e             	adc    %al,0xe(%rsi)
    56fd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    5700:	0b 77 08             	or     0x8(%rdi),%esi
    5703:	80 00 3f             	addb   $0x3f,(%rax)
    5706:	1a 3a                	sbb    (%rdx),%bh
    5708:	2a 33                	sub    (%rbx),%dh
    570a:	24 22                	and    $0x22,%al
    570c:	00 00                	add    %al,(%rax)
    570e:	00 00                	add    %al,(%rax)
    5710:	14 00                	adc    $0x0,%al
    5712:	00 00                	add    %al,(%rax)
    5714:	5c                   	pop    %rsp
    5715:	00 00                	add    %al,(%rax)
    5717:	00 98 b9 ff ff 10    	add    %bl,0x10ffffb9(%rax)
	...
    5725:	00 00                	add    %al,(%rax)
    5727:	00 14 00             	add    %dl,(%rax,%rax,1)
    572a:	00 00                	add    %al,(%rax)
    572c:	74 00                	je     572e <__GNU_EH_FRAME_HDR+0x206>
    572e:	00 00                	add    %al,(%rax)
    5730:	90                   	nop
    5731:	b9 ff ff 80 00       	mov    $0x80ffff,%ecx
	...
    573e:	00 00                	add    %al,(%rax)
    5740:	4c 00 00             	rex.WR add %r8b,(%rax)
    5743:	00 8c 00 00 00 98 c5 	add    %cl,-0x3a680000(%rax,%rax,1)
    574a:	ff                   	(bad)  
    574b:	ff f0                	push   %rax
    574d:	00 00                	add    %al,(%rax)
    574f:	00 00                	add    %al,(%rax)
    5751:	46 0e                	rex.RX (bad) 
    5753:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    5759:	8c 03                	mov    %es,(%rbx)
    575b:	41 0e                	rex.B (bad) 
    575d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
    5763:	83 05 44 0e 30 4b 0a 	addl   $0xa,0x4b300e44(%rip)        # 4b3065ae <_end+0x4b2fe53e>
    576a:	0e                   	(bad)  
    576b:	28 46 0e             	sub    %al,0xe(%rsi)
    576e:	20 41 0e             	and    %al,0xe(%rcx)
    5771:	18 42 0e             	sbb    %al,0xe(%rdx)
    5774:	10 42 0e             	adc    %al,0xe(%rdx)
    5777:	08 44 0b 02          	or     %al,0x2(%rbx,%rcx,1)
    577b:	7f 0a                	jg     5787 <__GNU_EH_FRAME_HDR+0x25f>
    577d:	0e                   	(bad)  
    577e:	28 41 0e             	sub    %al,0xe(%rcx)
    5781:	20 41 0e             	and    %al,0xe(%rcx)
    5784:	18 42 0e             	sbb    %al,0xe(%rdx)
    5787:	10 42 0e             	adc    %al,0xe(%rdx)
    578a:	08 43 0b             	or     %al,0xb(%rbx)
    578d:	00 00                	add    %al,(%rax)
    578f:	00 3c 00             	add    %bh,(%rax,%rax,1)
    5792:	00 00                	add    %al,(%rax)
    5794:	dc 00                	faddl  (%rax)
    5796:	00 00                	add    %al,(%rax)
    5798:	38 c6                	cmp    %al,%dh
    579a:	ff                   	(bad)  
    579b:	ff                   	(bad)  
    579c:	e9 01 00 00 00       	jmpq   57a2 <__GNU_EH_FRAME_HDR+0x27a>
    57a1:	46 0e                	rex.RX (bad) 
    57a3:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    57a9:	8d 03                	lea    (%rbx),%eax
    57ab:	42 0e                	rex.X (bad) 
    57ad:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    57b4:	05 41 0e 30 83       	add    $0x83300e41,%eax
    57b9:	06                   	(bad)  
    57ba:	02 de                	add    %dh,%bl
    57bc:	0a 0e                	or     (%rsi),%cl
    57be:	28 41 0e             	sub    %al,0xe(%rcx)
    57c1:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
    57c5:	42 0e                	rex.X (bad) 
    57c7:	10 42 0e             	adc    %al,0xe(%rdx)
    57ca:	08 4a 0b             	or     %cl,0xb(%rdx)
    57cd:	00 00                	add    %al,(%rax)
    57cf:	00 10                	add    %dl,(%rax)
    57d1:	00 00                	add    %al,(%rax)
    57d3:	00 1c 01             	add    %bl,(%rcx,%rax,1)
    57d6:	00 00                	add    %al,(%rax)
    57d8:	e8 c7 ff ff 43       	callq  440057a4 <_end+0x43ffd734>
    57dd:	00 00                	add    %al,(%rax)
    57df:	00 00                	add    %al,(%rax)
    57e1:	00 00                	add    %al,(%rax)
    57e3:	00 10                	add    %dl,(%rax)
    57e5:	00 00                	add    %al,(%rax)
    57e7:	00 30                	add    %dh,(%rax)
    57e9:	01 00                	add    %eax,(%rax)
    57eb:	00 24 c8             	add    %ah,(%rax,%rcx,8)
    57ee:	ff                   	(bad)  
    57ef:	ff 13                	callq  *(%rbx)
    57f1:	00 00                	add    %al,(%rax)
    57f3:	00 00                	add    %al,(%rax)
    57f5:	00 00                	add    %al,(%rax)
    57f7:	00 48 00             	add    %cl,0x0(%rax)
    57fa:	00 00                	add    %al,(%rax)
    57fc:	44 01 00             	add    %r8d,(%rax)
    57ff:	00 30                	add    %dh,(%rax)
    5801:	c8 ff ff a8          	enterq $0xffff,$0xa8
    5805:	04 00                	add    $0x0,%al
    5807:	00 00                	add    %al,(%rax)
    5809:	46 0e                	rex.RX (bad) 
    580b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5811:	8e 03                	mov    (%rbx),%es
    5813:	42 0e                	rex.X (bad) 
    5815:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    581b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306662 <_end+0xffffffff862fe5f2>
    5821:	06                   	(bad)  
    5822:	41 0e                	rex.B (bad) 
    5824:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
    582a:	03 1d 03 0a 0e 38    	add    0x380e0a03(%rip),%ebx        # 380e6233 <_end+0x380de1c3>
    5830:	41 0e                	rex.B (bad) 
    5832:	30 41 0e             	xor    %al,0xe(%rcx)
    5835:	28 42 0e             	sub    %al,0xe(%rdx)
    5838:	20 42 0e             	and    %al,0xe(%rdx)
    583b:	18 42 0e             	sbb    %al,0xe(%rdx)
    583e:	10 42 0e             	adc    %al,0xe(%rdx)
    5841:	08 44 0b 20          	or     %al,0x20(%rbx,%rcx,1)
    5845:	00 00                	add    %al,(%rax)
    5847:	00 00                	add    %al,(%rax)
    5849:	00 00                	add    %al,(%rax)
    584b:	00 01                	add    %al,(%rcx)
    584d:	7a 52                	jp     58a1 <__GNU_EH_FRAME_HDR+0x379>
    584f:	00 01                	add    %al,(%rcx)
    5851:	78 10                	js     5863 <__GNU_EH_FRAME_HDR+0x33b>
    5853:	01 1b                	add    %ebx,(%rbx)
    5855:	0c 07                	or     $0x7,%al
    5857:	08 90 01 0e 60 83    	or     %dl,-0x7c9ff1ff(%rax)
    585d:	07                   	(bad)  
    585e:	86 06                	xchg   %al,(%rsi)
    5860:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38e5cf3 <_end+0x38ddc83>
    5866:	8f 02                	popq   (%rdx)
    5868:	10 00                	adc    %al,(%rax)
    586a:	00 00                	add    %al,(%rax)
    586c:	28 00                	sub    %al,(%rax)
    586e:	00 00                	add    %al,(%rax)
    5870:	d0 b8 ff ff 18 00    	sarb   0x18ffff(%rax)
    5876:	00 00                	add    %al,(%rax)
    5878:	00 00                	add    %al,(%rax)
    587a:	00 00                	add    %al,(%rax)
    587c:	44 00 00             	add    %r8b,(%rax)
    587f:	00 c8                	add    %cl,%al
    5881:	01 00                	add    %eax,(%rax)
    5883:	00 5c cc ff          	add    %bl,-0x1(%rsp,%rcx,8)
    5887:	ff 86 02 00 00 00    	incl   0x2(%rsi)
    588d:	4e 0e                	rex.WRX (bad) 
    588f:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5895:	8e 03                	mov    (%rbx),%es
    5897:	49 0e                	rex.WB (bad) 
    5899:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    589f:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863066ed <_end+0xffffffff862fe67d>
    58a5:	06                   	(bad)  
    58a6:	45 0e                	rex.RB (bad) 
    58a8:	38 83 07 03 27 02    	cmp    %al,0x2270307(%rbx)
    58ae:	0a 0e                	or     (%rsi),%cl
    58b0:	30 41 0e             	xor    %al,0xe(%rcx)
    58b3:	28 42 0e             	sub    %al,0xe(%rdx)
    58b6:	20 42 0e             	and    %al,0xe(%rdx)
    58b9:	18 42 0e             	sbb    %al,0xe(%rdx)
    58bc:	10 42 0e             	adc    %al,0xe(%rdx)
    58bf:	08 41 0b             	or     %al,0xb(%rcx)
    58c2:	00 00                	add    %al,(%rax)
    58c4:	10 00                	adc    %al,(%rax)
    58c6:	00 00                	add    %al,(%rax)
    58c8:	10 02                	adc    %al,(%rdx)
    58ca:	00 00                	add    %al,(%rax)
    58cc:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    58cd:	ce                   	(bad)  
    58ce:	ff                   	(bad)  
    58cf:	ff 4b 00             	decl   0x0(%rbx)
    58d2:	00 00                	add    %al,(%rax)
    58d4:	00 00                	add    %al,(%rax)
    58d6:	00 00                	add    %al,(%rax)
    58d8:	10 00                	adc    %al,(%rax)
    58da:	00 00                	add    %al,(%rax)
    58dc:	24 02                	and    $0x2,%al
    58de:	00 00                	add    %al,(%rax)
    58e0:	e0 ce                	loopne 58b0 <__GNU_EH_FRAME_HDR+0x388>
    58e2:	ff                   	(bad)  
    58e3:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 58e9 <__GNU_EH_FRAME_HDR+0x3c1>
    58e9:	00 00                	add    %al,(%rax)
    58eb:	00 10                	add    %dl,(%rax)
    58ed:	00 00                	add    %al,(%rax)
    58ef:	00 38                	add    %bh,(%rax)
    58f1:	02 00                	add    (%rax),%al
    58f3:	00 fc                	add    %bh,%ah
    58f5:	ce                   	(bad)  
    58f6:	ff                   	(bad)  
    58f7:	ff 21                	jmpq   *(%rcx)
    58f9:	00 00                	add    %al,(%rax)
    58fb:	00 00                	add    %al,(%rax)
    58fd:	00 00                	add    %al,(%rax)
    58ff:	00 10                	add    %dl,(%rax)
    5901:	00 00                	add    %al,(%rax)
    5903:	00 4c 02 00          	add    %cl,0x0(%rdx,%rax,1)
    5907:	00 18                	add    %bl,(%rax)
    5909:	cf                   	iret   
    590a:	ff                   	(bad)  
    590b:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
    590f:	00 00                	add    %al,(%rax)
    5911:	00 00                	add    %al,(%rax)
    5913:	00 10                	add    %dl,(%rax)
    5915:	00 00                	add    %al,(%rax)
    5917:	00 60 02             	add    %ah,0x2(%rax)
    591a:	00 00                	add    %al,(%rax)
    591c:	64 cf                	fs iret 
    591e:	ff                   	(bad)  
    591f:	ff 22                	jmpq   *(%rdx)
    5921:	00 00                	add    %al,(%rax)
    5923:	00 00                	add    %al,(%rax)
    5925:	00 00                	add    %al,(%rax)
    5927:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    592b:	00 74 02 00          	add    %dh,0x0(%rdx,%rax,1)
    592f:	00 80 cf ff ff 39    	add    %al,0x39ffffcf(%rax)
    5935:	01 00                	add    %eax,(%rax)
    5937:	00 00                	add    %al,(%rax)
    5939:	46 0e                	rex.RX (bad) 
    593b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5941:	8e 03                	mov    (%rbx),%es
    5943:	42 0e                	rex.X (bad) 
    5945:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    594b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306792 <_end+0xffffffff862fe722>
    5951:	06                   	(bad)  
    5952:	41 0e                	rex.B (bad) 
    5954:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
    595a:	03 08                	add    (%rax),%ecx
    595c:	01 0a                	add    %ecx,(%rdx)
    595e:	0e                   	(bad)  
    595f:	38 41 0e             	cmp    %al,0xe(%rcx)
    5962:	30 41 0e             	xor    %al,0xe(%rcx)
    5965:	28 42 0e             	sub    %al,0xe(%rdx)
    5968:	20 42 0e             	and    %al,0xe(%rdx)
    596b:	18 42 0e             	sbb    %al,0xe(%rdx)
    596e:	10 42 0e             	adc    %al,0xe(%rdx)
    5971:	08 41 0b             	or     %al,0xb(%rcx)
    5974:	00 00                	add    %al,(%rax)
    5976:	00 00                	add    %al,(%rax)
    5978:	2c 00                	sub    $0x0,%al
    597a:	00 00                	add    %al,(%rax)
    597c:	c4 02 00 00          	(bad)
    5980:	70 d0                	jo     5952 <__GNU_EH_FRAME_HDR+0x42a>
    5982:	ff                   	(bad)  
    5983:	ff 81 00 00 00 00    	incl   0x0(%rcx)
    5989:	46 0e                	rex.RX (bad) 
    598b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    5992:	03 41 0e             	add    0xe(%rcx),%eax
    5995:	20 83 04 02 61 0a    	and    %al,0xa610204(%rbx)
    599b:	0e                   	(bad)  
    599c:	18 43 0e             	sbb    %al,0xe(%rbx)
    599f:	10 42 0e             	adc    %al,0xe(%rdx)
    59a2:	08 42 0b             	or     %al,0xb(%rdx)
    59a5:	00 00                	add    %al,(%rax)
    59a7:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    59ab:	00 f4                	add    %dh,%ah
    59ad:	02 00                	add    (%rax),%al
    59af:	00 b0 b7 ff ff 70    	add    %dh,0x70ffffb7(%rax)
    59b5:	0a 00                	or     (%rax),%al
    59b7:	00 00                	add    %al,(%rax)
    59b9:	46 0e                	rex.RX (bad) 
    59bb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    59c1:	8e 03                	mov    (%rbx),%es
    59c3:	42 0e                	rex.X (bad) 
    59c5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    59cb:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306812 <_end+0xffffffff862fe7a2>
    59d1:	06                   	(bad)  
    59d2:	41 0e                	rex.B (bad) 
    59d4:	38 83 07 47 0e 80    	cmp    %al,-0x7ff1b8f9(%rbx)
    59da:	02 03                	add    (%rbx),%al
    59dc:	77 08                	ja     59e6 <__GNU_EH_FRAME_HDR+0x4be>
    59de:	0a 0e                	or     (%rsi),%cl
    59e0:	38 43 0e             	cmp    %al,0xe(%rbx)
    59e3:	30 41 0e             	xor    %al,0xe(%rcx)
    59e6:	28 42 0e             	sub    %al,0xe(%rdx)
    59e9:	20 42 0e             	and    %al,0xe(%rdx)
    59ec:	18 42 0e             	sbb    %al,0xe(%rdx)
    59ef:	10 42 0e             	adc    %al,0xe(%rdx)
    59f2:	08 41 0b             	or     %al,0xb(%rcx)
    59f5:	00 00                	add    %al,(%rax)
    59f7:	00 60 00             	add    %ah,0x0(%rax)
    59fa:	00 00                	add    %al,(%rax)
    59fc:	44 03 00             	add    (%rax),%r8d
    59ff:	00 80 d0 ff ff 1d    	add    %al,0x1dffffd0(%rax)
    5a05:	04 00                	add    $0x0,%al
    5a07:	00 00                	add    %al,(%rax)
    5a09:	46 0e                	rex.RX (bad) 
    5a0b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5a11:	8e 03                	mov    (%rbx),%es
    5a13:	42 0e                	rex.X (bad) 
    5a15:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5a1b:	8c 05 47 0e 30 86    	mov    %es,-0x79cff1b9(%rip)        # ffffffff86306868 <_end+0xffffffff862fe7f8>
    5a21:	06                   	(bad)  
    5a22:	41 0e                	rex.B (bad) 
    5a24:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
    5a2a:	03 c2                	add    %edx,%eax
    5a2c:	03 0a                	add    (%rdx),%ecx
    5a2e:	0e                   	(bad)  
    5a2f:	38 41 0e             	cmp    %al,0xe(%rcx)
    5a32:	30 41 0e             	xor    %al,0xe(%rcx)
    5a35:	28 42 0e             	sub    %al,0xe(%rdx)
    5a38:	20 42 0e             	and    %al,0xe(%rdx)
    5a3b:	18 42 0e             	sbb    %al,0xe(%rdx)
    5a3e:	10 42 0e             	adc    %al,0xe(%rdx)
    5a41:	08 41 0b             	or     %al,0xb(%rcx)
    5a44:	61                   	(bad)  
    5a45:	0e                   	(bad)  
    5a46:	38 43 0e             	cmp    %al,0xe(%rbx)
    5a49:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
    5a4d:	42 0e                	rex.X (bad) 
    5a4f:	20 42 0e             	and    %al,0xe(%rdx)
    5a52:	18 42 0e             	sbb    %al,0xe(%rdx)
    5a55:	10 42 0e             	adc    %al,0xe(%rdx)
    5a58:	08 00                	or     %al,(%rax)
    5a5a:	00 00                	add    %al,(%rax)
    5a5c:	18 00                	sbb    %al,(%rax)
    5a5e:	00 00                	add    %al,(%rax)
    5a60:	a8 03                	test   $0x3,%al
    5a62:	00 00                	add    %al,(%rax)
    5a64:	3c d4                	cmp    $0xd4,%al
    5a66:	ff                   	(bad)  
    5a67:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 5a6d <__GNU_EH_FRAME_HDR+0x545>
    5a6d:	45 0e                	rex.RB (bad) 
    5a6f:	10 86 02 60 0e 08    	adc    %al,0x80e6002(%rsi)
    5a75:	00 00                	add    %al,(%rax)
    5a77:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    5a7b:	00 c4                	add    %al,%ah
    5a7d:	03 00                	add    (%rax),%eax
    5a7f:	00 50 d4             	add    %dl,-0x2c(%rax)
    5a82:	ff                   	(bad)  
    5a83:	ff                   	(bad)  
    5a84:	3b 01                	cmp    (%rcx),%eax
    5a86:	00 00                	add    %al,(%rax)
    5a88:	00 51 0e             	add    %dl,0xe(%rcx)
    5a8b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5a91:	8e 03                	mov    (%rbx),%es
    5a93:	45 0e                	rex.RB (bad) 
    5a95:	20 8d 04 46 0e 28    	and    %cl,0x280e4604(%rbp)
    5a9b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863068e2 <_end+0xffffffff862fe872>
    5aa1:	06                   	(bad)  
    5aa2:	41 0e                	rex.B (bad) 
    5aa4:	38 83 07 02 e4 0a    	cmp    %al,0xae40207(%rbx)
    5aaa:	0e                   	(bad)  
    5aab:	30 41 0e             	xor    %al,0xe(%rcx)
    5aae:	28 45 0e             	sub    %al,0xe(%rbp)
    5ab1:	20 45 0e             	and    %al,0xe(%rbp)
    5ab4:	18 42 0e             	sbb    %al,0xe(%rdx)
    5ab7:	10 42 0e             	adc    %al,0xe(%rdx)
    5aba:	08 41 0b             	or     %al,0xb(%rcx)
    5abd:	00 00                	add    %al,(%rax)
    5abf:	00 24 00             	add    %ah,(%rax,%rax,1)
    5ac2:	00 00                	add    %al,(%rax)
    5ac4:	0c 04                	or     $0x4,%al
    5ac6:	00 00                	add    %al,(%rax)
    5ac8:	48 d5                	rex.W (bad) 
    5aca:	ff                   	(bad)  
    5acb:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
    5acf:	00 00                	add    %al,(%rax)
    5ad1:	49 0e                	rex.WB (bad) 
    5ad3:	10 86 02 4a 0e 18    	adc    %al,0x180e4a02(%rsi)
    5ad9:	83 03 02             	addl   $0x2,(%rbx)
    5adc:	58                   	pop    %rax
    5add:	0e                   	(bad)  
    5ade:	10 41 0e             	adc    %al,0xe(%rcx)
    5ae1:	08 41 c3             	or     %al,-0x3d(%rcx)
    5ae4:	c6 00 00             	movb   $0x0,(%rax)
    5ae7:	00 18                	add    %bl,(%rax)
    5ae9:	00 00                	add    %al,(%rax)
    5aeb:	00 34 04             	add    %dh,(%rsp,%rax,1)
    5aee:	00 00                	add    %al,(%rax)
    5af0:	a0 d5 ff ff 49 00 00 	movabs 0x49ffffd5,%al
    5af7:	00 00 
    5af9:	49 0e                	rex.WB (bad) 
    5afb:	10 83 02 7e 0e 08    	adc    %al,0x80e7e02(%rbx)
    5b01:	41 c3                	rex.B retq 
    5b03:	00 10                	add    %dl,(%rax)
    5b05:	00 00                	add    %al,(%rax)
    5b07:	00 50 04             	add    %dl,0x4(%rax)
    5b0a:	00 00                	add    %al,(%rax)
    5b0c:	d4                   	(bad)  
    5b0d:	d5                   	(bad)  
    5b0e:	ff                   	(bad)  
    5b0f:	ff                   	(bad)  
    5b10:	3d 00 00 00 00       	cmp    $0x0,%eax
    5b15:	00 00                	add    %al,(%rax)
    5b17:	00 34 00             	add    %dh,(%rax,%rax,1)
    5b1a:	00 00                	add    %al,(%rax)
    5b1c:	64 04 00             	fs add $0x0,%al
    5b1f:	00 00                	add    %al,(%rax)
    5b21:	d6                   	(bad)  
    5b22:	ff                   	(bad)  
    5b23:	ff 88 00 00 00 00    	decl   0x0(%rax)
    5b29:	46 0e                	rex.RX (bad) 
    5b2b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    5b31:	8c 03                	mov    %es,(%rbx)
    5b33:	41 0e                	rex.B (bad) 
    5b35:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
    5b3b:	83 05 44 0e 30 02 71 	addl   $0x71,0x2300e44(%rip)        # 2306986 <_end+0x22fe916>
    5b42:	0e                   	(bad)  
    5b43:	28 41 0e             	sub    %al,0xe(%rcx)
    5b46:	20 41 0e             	and    %al,0xe(%rcx)
    5b49:	18 42 0e             	sbb    %al,0xe(%rdx)
    5b4c:	10 42 0e             	adc    %al,0xe(%rdx)
    5b4f:	08 3c 00             	or     %bh,(%rax,%rax,1)
    5b52:	00 00                	add    %al,(%rax)
    5b54:	9c                   	pushfq 
    5b55:	04 00                	add    $0x0,%al
    5b57:	00 58 d6             	add    %bl,-0x2a(%rax)
    5b5a:	ff                   	(bad)  
    5b5b:	ff 9e 00 00 00 00    	lcall  *0x0(%rsi)
    5b61:	4e 0e                	rex.WRX (bad) 
    5b63:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    5b69:	8d 03                	lea    (%rbx),%eax
    5b6b:	48 0e                	rex.W (bad) 
    5b6d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    5b74:	05 43 0e 30 83       	add    $0x83300e43,%eax
    5b79:	06                   	(bad)  
    5b7a:	02 6d 0e             	add    0xe(%rbp),%ch
    5b7d:	28 41 0e             	sub    %al,0xe(%rcx)
    5b80:	20 42 0e             	and    %al,0xe(%rdx)
    5b83:	18 42 0e             	sbb    %al,0xe(%rdx)
    5b86:	10 42 0e             	adc    %al,0xe(%rdx)
    5b89:	08 41 c3             	or     %al,-0x3d(%rcx)
    5b8c:	c6                   	(bad)  
    5b8d:	cc                   	int3   
    5b8e:	cd ce                	int    $0xce
    5b90:	3c 00                	cmp    $0x0,%al
    5b92:	00 00                	add    %al,(%rax)
    5b94:	dc 04 00             	faddl  (%rax,%rax,1)
    5b97:	00 b8 d6 ff ff ae    	add    %bh,-0x5100002a(%rax)
    5b9d:	00 00                	add    %al,(%rax)
    5b9f:	00 00                	add    %al,(%rax)
    5ba1:	4e 0e                	rex.WRX (bad) 
    5ba3:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    5ba9:	8d 03                	lea    (%rbx),%eax
    5bab:	48 0e                	rex.W (bad) 
    5bad:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    5bb4:	05 43 0e 30 83       	add    $0x83300e43,%eax
    5bb9:	06                   	(bad)  
    5bba:	02 7d 0e             	add    0xe(%rbp),%bh
    5bbd:	28 41 0e             	sub    %al,0xe(%rcx)
    5bc0:	20 42 0e             	and    %al,0xe(%rdx)
    5bc3:	18 42 0e             	sbb    %al,0xe(%rdx)
    5bc6:	10 42 0e             	adc    %al,0xe(%rdx)
    5bc9:	08 41 c3             	or     %al,-0x3d(%rcx)
    5bcc:	c6                   	(bad)  
    5bcd:	cc                   	int3   
    5bce:	cd ce                	int    $0xce
    5bd0:	40 00 00             	add    %al,(%rax)
    5bd3:	00 1c 05 00 00 28 d7 	add    %bl,-0x28d80000(,%rax,1)
    5bda:	ff                   	(bad)  
    5bdb:	ff 77 01             	pushq  0x1(%rdi)
    5bde:	00 00                	add    %al,(%rax)
    5be0:	00 4a 0e             	add    %cl,0xe(%rdx)
    5be3:	10 8e 02 47 0e 18    	adc    %cl,0x180e4702(%rsi)
    5be9:	8c 03                	mov    %es,(%rbx)
    5beb:	4f 0e                	rex.WRXB (bad) 
    5bed:	20 86 04 48 0e 28    	and    %al,0x280e4804(%rsi)
    5bf3:	83 05 02 f8 0a 0e 20 	addl   $0x20,0xe0af802(%rip)        # e0b53fc <_end+0xe0ad38c>
    5bfa:	45 0e                	rex.RB (bad) 
    5bfc:	18 46 0e             	sbb    %al,0xe(%rsi)
    5bff:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
    5c03:	51                   	push   %rcx
    5c04:	0b 71 0e             	or     0xe(%rcx),%esi
    5c07:	20 41 0e             	and    %al,0xe(%rcx)
    5c0a:	18 42 0e             	sbb    %al,0xe(%rdx)
    5c0d:	10 42 0e             	adc    %al,0xe(%rdx)
    5c10:	08 00                	or     %al,(%rax)
    5c12:	00 00                	add    %al,(%rax)
    5c14:	10 00                	adc    %al,(%rax)
    5c16:	00 00                	add    %al,(%rax)
    5c18:	60                   	(bad)  
    5c19:	05 00 00 64 d8       	add    $0xd8640000,%eax
    5c1e:	ff                   	(bad)  
    5c1f:	ff 0a                	decl   (%rdx)
    5c21:	03 00                	add    (%rax),%eax
    5c23:	00 00                	add    %al,(%rax)
    5c25:	00 00                	add    %al,(%rax)
    5c27:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    5c2b:	00 74 05 00          	add    %dh,0x0(%rbp,%rax,1)
    5c2f:	00 60 db             	add    %ah,-0x25(%rax)
    5c32:	ff                   	(bad)  
    5c33:	ff e2                	jmpq   *%rdx
    5c35:	01 00                	add    %eax,(%rax)
    5c37:	00 00                	add    %al,(%rax)
    5c39:	46 0e                	rex.RX (bad) 
    5c3b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5c41:	8e 03                	mov    (%rbx),%es
    5c43:	45 0e                	rex.RB (bad) 
    5c45:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5c4b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86306a95 <_end+0xffffffff862fea25>
    5c51:	06                   	(bad)  
    5c52:	43 0e                	rex.XB (bad) 
    5c54:	38 83 07 44 0e b0    	cmp    %al,-0x4ff1bbf9(%rbx)
    5c5a:	01 03                	add    %eax,(%rbx)
    5c5c:	66 01 0a             	add    %cx,(%rdx)
    5c5f:	0e                   	(bad)  
    5c60:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
    5c64:	41 0e                	rex.B (bad) 
    5c66:	28 42 0e             	sub    %al,0xe(%rdx)
    5c69:	20 42 0e             	and    %al,0xe(%rdx)
    5c6c:	18 42 0e             	sbb    %al,0xe(%rdx)
    5c6f:	10 42 0e             	adc    %al,0xe(%rdx)
    5c72:	08 49 0b             	or     %cl,0xb(%rcx)
    5c75:	00 00                	add    %al,(%rax)
    5c77:	00 10                	add    %dl,(%rax)
    5c79:	00 00                	add    %al,(%rax)
    5c7b:	00 c4                	add    %al,%ah
    5c7d:	05 00 00 00 dd       	add    $0xdd000000,%eax
    5c82:	ff                   	(bad)  
    5c83:	ff 6a 00             	ljmp   *0x0(%rdx)
    5c86:	00 00                	add    %al,(%rax)
    5c88:	00 00                	add    %al,(%rax)
    5c8a:	00 00                	add    %al,(%rax)
    5c8c:	10 00                	adc    %al,(%rax)
    5c8e:	00 00                	add    %al,(%rax)
    5c90:	d8 05 00 00 5c dd    	fadds  -0x22a40000(%rip)        # ffffffffdd5c5c96 <_end+0xffffffffdd5bdc26>
    5c96:	ff                   	(bad)  
    5c97:	ff ce                	dec    %esi
    5c99:	00 00                	add    %al,(%rax)
    5c9b:	00 00                	add    %al,(%rax)
    5c9d:	00 00                	add    %al,(%rax)
    5c9f:	00 10                	add    %dl,(%rax)
    5ca1:	00 00                	add    %al,(%rax)
    5ca3:	00 ec                	add    %ch,%ah
    5ca5:	05 00 00 18 de       	add    $0xde180000,%eax
    5caa:	ff                   	(bad)  
    5cab:	ff a2 01 00 00 00    	jmpq   *0x1(%rdx)
    5cb1:	00 00                	add    %al,(%rax)
    5cb3:	00 10                	add    %dl,(%rax)
    5cb5:	00 00                	add    %al,(%rax)
    5cb7:	00 00                	add    %al,(%rax)
    5cb9:	06                   	(bad)  
    5cba:	00 00                	add    %al,(%rax)
    5cbc:	b4 df                	mov    $0xdf,%ah
    5cbe:	ff                   	(bad)  
    5cbf:	ff 34 03             	pushq  (%rbx,%rax,1)
    5cc2:	00 00                	add    %al,(%rax)
    5cc4:	00 00                	add    %al,(%rax)
    5cc6:	00 00                	add    %al,(%rax)
    5cc8:	10 00                	adc    %al,(%rax)
    5cca:	00 00                	add    %al,(%rax)
    5ccc:	14 06                	adc    $0x6,%al
    5cce:	00 00                	add    %al,(%rax)
    5cd0:	e0 e2                	loopne 5cb4 <__GNU_EH_FRAME_HDR+0x78c>
    5cd2:	ff                   	(bad)  
    5cd3:	ff 93 01 00 00 00    	callq  *0x1(%rbx)
    5cd9:	00 00                	add    %al,(%rax)
    5cdb:	00 10                	add    %dl,(%rax)
    5cdd:	00 00                	add    %al,(%rax)
    5cdf:	00 28                	add    %ch,(%rax)
    5ce1:	06                   	(bad)  
    5ce2:	00 00                	add    %al,(%rax)
    5ce4:	6c                   	insb   (%dx),%es:(%rdi)
    5ce5:	e4 ff                	in     $0xff,%al
    5ce7:	ff 07                	incl   (%rdi)
    5ce9:	00 00                	add    %al,(%rax)
    5ceb:	00 00                	add    %al,(%rax)
    5ced:	00 00                	add    %al,(%rax)
    5cef:	00 10                	add    %dl,(%rax)
    5cf1:	00 00                	add    %al,(%rax)
    5cf3:	00 3c 06             	add    %bh,(%rsi,%rax,1)
    5cf6:	00 00                	add    %al,(%rax)
    5cf8:	68 e4 ff ff 09       	pushq  $0x9ffffe4
    5cfd:	00 00                	add    %al,(%rax)
    5cff:	00 00                	add    %al,(%rax)
    5d01:	00 00                	add    %al,(%rax)
    5d03:	00 10                	add    %dl,(%rax)
    5d05:	00 00                	add    %al,(%rax)
    5d07:	00 50 06             	add    %dl,0x6(%rax)
    5d0a:	00 00                	add    %al,(%rax)
    5d0c:	64 e4 ff             	fs in  $0xff,%al
    5d0f:	ff 09                	decl   (%rcx)
    5d11:	00 00                	add    %al,(%rax)
    5d13:	00 00                	add    %al,(%rax)
    5d15:	00 00                	add    %al,(%rax)
    5d17:	00 10                	add    %dl,(%rax)
    5d19:	00 00                	add    %al,(%rax)
    5d1b:	00 64 06 00          	add    %ah,0x0(%rsi,%rax,1)
    5d1f:	00 60 e4             	add    %ah,-0x1c(%rax)
    5d22:	ff                   	(bad)  
    5d23:	ff 12                	callq  *(%rdx)
    5d25:	00 00                	add    %al,(%rax)
    5d27:	00 00                	add    %al,(%rax)
    5d29:	00 00                	add    %al,(%rax)
    5d2b:	00 10                	add    %dl,(%rax)
    5d2d:	00 00                	add    %al,(%rax)
    5d2f:	00 78 06             	add    %bh,0x6(%rax)
    5d32:	00 00                	add    %al,(%rax)
    5d34:	6c                   	insb   (%dx),%es:(%rdi)
    5d35:	e4 ff                	in     $0xff,%al
    5d37:	ff 12                	callq  *(%rdx)
    5d39:	00 00                	add    %al,(%rax)
    5d3b:	00 00                	add    %al,(%rax)
    5d3d:	00 00                	add    %al,(%rax)
    5d3f:	00 10                	add    %dl,(%rax)
    5d41:	00 00                	add    %al,(%rax)
    5d43:	00 8c 06 00 00 78 e4 	add    %cl,-0x1b880000(%rsi,%rax,1)
    5d4a:	ff                   	(bad)  
    5d4b:	ff 47 00             	incl   0x0(%rdi)
    5d4e:	00 00                	add    %al,(%rax)
    5d50:	00 00                	add    %al,(%rax)
    5d52:	00 00                	add    %al,(%rax)
    5d54:	10 00                	adc    %al,(%rax)
    5d56:	00 00                	add    %al,(%rax)
    5d58:	a0 06 00 00 b4 e4 ff 	movabs 0x16ffffe4b4000006,%al
    5d5f:	ff 16 
    5d61:	00 00                	add    %al,(%rax)
    5d63:	00 00                	add    %al,(%rax)
    5d65:	00 00                	add    %al,(%rax)
    5d67:	00 10                	add    %dl,(%rax)
    5d69:	00 00                	add    %al,(%rax)
    5d6b:	00 b4 06 00 00 c0 e4 	add    %dh,-0x1b400000(%rsi,%rax,1)
    5d72:	ff                   	(bad)  
    5d73:	ff 08                	decl   (%rax)
    5d75:	00 00                	add    %al,(%rax)
    5d77:	00 00                	add    %al,(%rax)
    5d79:	00 00                	add    %al,(%rax)
    5d7b:	00 10                	add    %dl,(%rax)
    5d7d:	00 00                	add    %al,(%rax)
    5d7f:	00 c8                	add    %cl,%al
    5d81:	06                   	(bad)  
    5d82:	00 00                	add    %al,(%rax)
    5d84:	bc e4 ff ff 08       	mov    $0x8ffffe4,%esp
    5d89:	00 00                	add    %al,(%rax)
    5d8b:	00 00                	add    %al,(%rax)
    5d8d:	00 00                	add    %al,(%rax)
    5d8f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    5d93:	00 dc                	add    %bl,%ah
    5d95:	06                   	(bad)  
    5d96:	00 00                	add    %al,(%rax)
    5d98:	b8 e4 ff ff 65       	mov    $0x65ffffe4,%eax
    5d9d:	00 00                	add    %al,(%rax)
    5d9f:	00 00                	add    %al,(%rax)
    5da1:	46 0e                	rex.RX (bad) 
    5da3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5da9:	8e 03                	mov    (%rbx),%es
    5dab:	45 0e                	rex.RB (bad) 
    5dad:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5db3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86306bfd <_end+0xffffffff862feb8d>
    5db9:	06                   	(bad)  
    5dba:	48 0e                	rex.W (bad) 
    5dbc:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    5dc2:	6e                   	outsb  %ds:(%rsi),(%dx)
    5dc3:	0e                   	(bad)  
    5dc4:	38 41 0e             	cmp    %al,0xe(%rcx)
    5dc7:	30 41 0e             	xor    %al,0xe(%rcx)
    5dca:	28 42 0e             	sub    %al,0xe(%rdx)
    5dcd:	20 42 0e             	and    %al,0xe(%rdx)
    5dd0:	18 42 0e             	sbb    %al,0xe(%rdx)
    5dd3:	10 42 0e             	adc    %al,0xe(%rdx)
    5dd6:	08 00                	or     %al,(%rax)
    5dd8:	14 00                	adc    $0x0,%al
    5dda:	00 00                	add    %al,(%rax)
    5ddc:	24 07                	and    $0x7,%al
    5dde:	00 00                	add    %al,(%rax)
    5de0:	e0 e4                	loopne 5dc6 <__GNU_EH_FRAME_HDR+0x89e>
    5de2:	ff                   	(bad)  
    5de3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 5de9 <__GNU_EH_FRAME_HDR+0x8c1>
    5de9:	00 00                	add    %al,(%rax)
    5deb:	00 00                	add    %al,(%rax)
    5ded:	00 00                	add    %al,(%rax)
    5def:	00 10                	add    %dl,(%rax)
    5df1:	00 00                	add    %al,(%rax)
    5df3:	00 3c 07             	add    %bh,(%rdi,%rax,1)
    5df6:	00 00                	add    %al,(%rax)
    5df8:	d8 bd ff ff 17 00    	fdivrs 0x17ffff(%rbp)
    5dfe:	00 00                	add    %al,(%rax)
    5e00:	00 00                	add    %al,(%rax)
	...

0000000000005e04 <__FRAME_END__>:
    5e04:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000007ce8 <__frame_dummy_init_array_entry>:
    7ce8:	d0 1c 00             	rcrb   (%rax,%rax,1)
    7ceb:	00 00                	add    %al,(%rax)
    7ced:	00 00                	add    %al,(%rax)
    7cef:	00 d0                	add    %dl,%al
    7cf1:	1b 00                	sbb    (%rax),%eax
    7cf3:	00 00                	add    %al,(%rax)
    7cf5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000007cf8 <__do_global_dtors_aux_fini_array_entry>:
    7cf8:	90                   	nop
    7cf9:	1c 00                	sbb    $0x0,%al
    7cfb:	00 00                	add    %al,(%rax)
    7cfd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000007d00 <errpat>:
    7d00:	88 54 00 00          	mov    %dl,0x0(%rax,%rax,1)
    7d04:	00 00                	add    %al,(%rax)
    7d06:	00 00                	add    %al,(%rax)
    7d08:	91                   	xchg   %eax,%ecx
    7d09:	54                   	push   %rsp
    7d0a:	00 00                	add    %al,(%rax)
    7d0c:	00 00                	add    %al,(%rax)
    7d0e:	00 00                	add    %al,(%rax)
    7d10:	9a                   	(bad)  
    7d11:	54                   	push   %rsp
    7d12:	00 00                	add    %al,(%rax)
    7d14:	00 00                	add    %al,(%rax)
    7d16:	00 00                	add    %al,(%rax)
    7d18:	a3 54 00 00 00 00 00 	movabs %eax,0xac00000000000054
    7d1f:	00  

0000000000007d20 <scipat>:
    7d20:	ac                   	lods   %ds:(%rsi),%al
    7d21:	54                   	push   %rsp
    7d22:	00 00                	add    %al,(%rax)
    7d24:	00 00                	add    %al,(%rax)
    7d26:	00 00                	add    %al,(%rax)
    7d28:	b5 54                	mov    $0x54,%ch
    7d2a:	00 00                	add    %al,(%rax)
    7d2c:	00 00                	add    %al,(%rax)
    7d2e:	00 00                	add    %al,(%rax)
    7d30:	be 54 00 00 00       	mov    $0x54,%esi
    7d35:	00 00                	add    %al,(%rax)
    7d37:	00 c7                	add    %al,%bh
    7d39:	54                   	push   %rsp
    7d3a:	00 00                	add    %al,(%rax)
    7d3c:	00 00                	add    %al,(%rax)
	...

0000000000007d40 <floatpat>:
    7d40:	d0 54 00 00          	rclb   0x0(%rax,%rax,1)
    7d44:	00 00                	add    %al,(%rax)
    7d46:	00 00                	add    %al,(%rax)
    7d48:	d9 54 00 00          	fsts   0x0(%rax,%rax,1)
    7d4c:	00 00                	add    %al,(%rax)
    7d4e:	00 00                	add    %al,(%rax)
    7d50:	e2 54                	loop   7da6 <_DYNAMIC+0x26>
    7d52:	00 00                	add    %al,(%rax)
    7d54:	00 00                	add    %al,(%rax)
    7d56:	00 00                	add    %al,(%rax)
    7d58:	eb 54                	jmp    7dae <_DYNAMIC+0x2e>
    7d5a:	00 00                	add    %al,(%rax)
    7d5c:	00 00                	add    %al,(%rax)
	...

0000000000007d60 <intpat>:
    7d60:	f4                   	hlt    
    7d61:	54                   	push   %rsp
    7d62:	00 00                	add    %al,(%rax)
    7d64:	00 00                	add    %al,(%rax)
    7d66:	00 00                	add    %al,(%rax)
    7d68:	f9                   	stc    
    7d69:	54                   	push   %rsp
    7d6a:	00 00                	add    %al,(%rax)
    7d6c:	00 00                	add    %al,(%rax)
    7d6e:	00 00                	add    %al,(%rax)
    7d70:	fe                   	(bad)  
    7d71:	54                   	push   %rsp
    7d72:	00 00                	add    %al,(%rax)
    7d74:	00 00                	add    %al,(%rax)
    7d76:	00 00                	add    %al,(%rax)
    7d78:	03 55 00             	add    0x0(%rbp),%edx
    7d7b:	00 00                	add    %al,(%rax)
    7d7d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000007d80 <_DYNAMIC>:
    7d80:	01 00                	add    %eax,(%rax)
    7d82:	00 00                	add    %al,(%rax)
    7d84:	00 00                	add    %al,(%rax)
    7d86:	00 00                	add    %al,(%rax)
    7d88:	01 00                	add    %eax,(%rax)
    7d8a:	00 00                	add    %al,(%rax)
    7d8c:	00 00                	add    %al,(%rax)
    7d8e:	00 00                	add    %al,(%rax)
    7d90:	0c 00                	or     $0x0,%al
    7d92:	00 00                	add    %al,(%rax)
    7d94:	00 00                	add    %al,(%rax)
    7d96:	00 00                	add    %al,(%rax)
    7d98:	00 10                	add    %dl,(%rax)
    7d9a:	00 00                	add    %al,(%rax)
    7d9c:	00 00                	add    %al,(%rax)
    7d9e:	00 00                	add    %al,(%rax)
    7da0:	0d 00 00 00 00       	or     $0x0,%eax
    7da5:	00 00                	add    %al,(%rax)
    7da7:	00 c8                	add    %cl,%al
    7da9:	42 00 00             	rex.X add %al,(%rax)
    7dac:	00 00                	add    %al,(%rax)
    7dae:	00 00                	add    %al,(%rax)
    7db0:	19 00                	sbb    %eax,(%rax)
    7db2:	00 00                	add    %al,(%rax)
    7db4:	00 00                	add    %al,(%rax)
    7db6:	00 00                	add    %al,(%rax)
    7db8:	e8 7c 00 00 00       	callq  7e39 <_DYNAMIC+0xb9>
    7dbd:	00 00                	add    %al,(%rax)
    7dbf:	00 1b                	add    %bl,(%rbx)
    7dc1:	00 00                	add    %al,(%rax)
    7dc3:	00 00                	add    %al,(%rax)
    7dc5:	00 00                	add    %al,(%rax)
    7dc7:	00 10                	add    %dl,(%rax)
    7dc9:	00 00                	add    %al,(%rax)
    7dcb:	00 00                	add    %al,(%rax)
    7dcd:	00 00                	add    %al,(%rax)
    7dcf:	00 1a                	add    %bl,(%rdx)
    7dd1:	00 00                	add    %al,(%rax)
    7dd3:	00 00                	add    %al,(%rax)
    7dd5:	00 00                	add    %al,(%rax)
    7dd7:	00 f8                	add    %bh,%al
    7dd9:	7c 00                	jl     7ddb <_DYNAMIC+0x5b>
    7ddb:	00 00                	add    %al,(%rax)
    7ddd:	00 00                	add    %al,(%rax)
    7ddf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    7de2:	00 00                	add    %al,(%rax)
    7de4:	00 00                	add    %al,(%rax)
    7de6:	00 00                	add    %al,(%rax)
    7de8:	08 00                	or     %al,(%rax)
    7dea:	00 00                	add    %al,(%rax)
    7dec:	00 00                	add    %al,(%rax)
    7dee:	00 00                	add    %al,(%rax)
    7df0:	f5                   	cmc    
    7df1:	fe                   	(bad)  
    7df2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7df5:	00 00                	add    %al,(%rax)
    7df7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    7dfd:	00 00                	add    %al,(%rax)
    7dff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7e05 <_DYNAMIC+0x85>
    7e05:	00 00                	add    %al,(%rax)
    7e07:	00 18                	add    %bl,(%rax)
    7e09:	05 00 00 00 00       	add    $0x0,%eax
    7e0e:	00 00                	add    %al,(%rax)
    7e10:	06                   	(bad)  
    7e11:	00 00                	add    %al,(%rax)
    7e13:	00 00                	add    %al,(%rax)
    7e15:	00 00                	add    %al,(%rax)
    7e17:	00 c8                	add    %cl,%al
    7e19:	03 00                	add    (%rax),%eax
    7e1b:	00 00                	add    %al,(%rax)
    7e1d:	00 00                	add    %al,(%rax)
    7e1f:	00 0a                	add    %cl,(%rdx)
    7e21:	00 00                	add    %al,(%rax)
    7e23:	00 00                	add    %al,(%rax)
    7e25:	00 00                	add    %al,(%rax)
    7e27:	00 ea                	add    %ch,%dl
    7e29:	00 00                	add    %al,(%rax)
    7e2b:	00 00                	add    %al,(%rax)
    7e2d:	00 00                	add    %al,(%rax)
    7e2f:	00 0b                	add    %cl,(%rbx)
    7e31:	00 00                	add    %al,(%rax)
    7e33:	00 00                	add    %al,(%rax)
    7e35:	00 00                	add    %al,(%rax)
    7e37:	00 18                	add    %bl,(%rax)
    7e39:	00 00                	add    %al,(%rax)
    7e3b:	00 00                	add    %al,(%rax)
    7e3d:	00 00                	add    %al,(%rax)
    7e3f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 7e45 <_DYNAMIC+0xc5>
	...
    7e4d:	00 00                	add    %al,(%rax)
    7e4f:	00 03                	add    %al,(%rbx)
    7e51:	00 00                	add    %al,(%rax)
    7e53:	00 00                	add    %al,(%rax)
    7e55:	00 00                	add    %al,(%rax)
    7e57:	00 70 7f             	add    %dh,0x7f(%rax)
    7e5a:	00 00                	add    %al,(%rax)
    7e5c:	00 00                	add    %al,(%rax)
    7e5e:	00 00                	add    %al,(%rax)
    7e60:	02 00                	add    (%rax),%al
    7e62:	00 00                	add    %al,(%rax)
    7e64:	00 00                	add    %al,(%rax)
    7e66:	00 00                	add    %al,(%rax)
    7e68:	c0 00 00             	rolb   $0x0,(%rax)
    7e6b:	00 00                	add    %al,(%rax)
    7e6d:	00 00                	add    %al,(%rax)
    7e6f:	00 14 00             	add    %dl,(%rax,%rax,1)
    7e72:	00 00                	add    %al,(%rax)
    7e74:	00 00                	add    %al,(%rax)
    7e76:	00 00                	add    %al,(%rax)
    7e78:	07                   	(bad)  
    7e79:	00 00                	add    %al,(%rax)
    7e7b:	00 00                	add    %al,(%rax)
    7e7d:	00 00                	add    %al,(%rax)
    7e7f:	00 17                	add    %dl,(%rdi)
    7e81:	00 00                	add    %al,(%rax)
    7e83:	00 00                	add    %al,(%rax)
    7e85:	00 00                	add    %al,(%rax)
    7e87:	00 10                	add    %dl,(%rax)
    7e89:	09 00                	or     %eax,(%rax)
    7e8b:	00 00                	add    %al,(%rax)
    7e8d:	00 00                	add    %al,(%rax)
    7e8f:	00 07                	add    %al,(%rdi)
    7e91:	00 00                	add    %al,(%rax)
    7e93:	00 00                	add    %al,(%rax)
    7e95:	00 00                	add    %al,(%rax)
    7e97:	00 70 06             	add    %dh,0x6(%rax)
    7e9a:	00 00                	add    %al,(%rax)
    7e9c:	00 00                	add    %al,(%rax)
    7e9e:	00 00                	add    %al,(%rax)
    7ea0:	08 00                	or     %al,(%rax)
    7ea2:	00 00                	add    %al,(%rax)
    7ea4:	00 00                	add    %al,(%rax)
    7ea6:	00 00                	add    %al,(%rax)
    7ea8:	a0 02 00 00 00 00 00 	movabs 0x900000000000002,%al
    7eaf:	00 09 
    7eb1:	00 00                	add    %al,(%rax)
    7eb3:	00 00                	add    %al,(%rax)
    7eb5:	00 00                	add    %al,(%rax)
    7eb7:	00 18                	add    %bl,(%rax)
    7eb9:	00 00                	add    %al,(%rax)
    7ebb:	00 00                	add    %al,(%rax)
    7ebd:	00 00                	add    %al,(%rax)
    7ebf:	00 1e                	add    %bl,(%rsi)
    7ec1:	00 00                	add    %al,(%rax)
    7ec3:	00 00                	add    %al,(%rax)
    7ec5:	00 00                	add    %al,(%rax)
    7ec7:	00 08                	add    %cl,(%rax)
    7ec9:	00 00                	add    %al,(%rax)
    7ecb:	00 00                	add    %al,(%rax)
    7ecd:	00 00                	add    %al,(%rax)
    7ecf:	00 fb                	add    %bh,%bl
    7ed1:	ff                   	(bad)  
    7ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ed5:	00 00                	add    %al,(%rax)
    7ed7:	00 01                	add    %al,(%rcx)
    7ed9:	00 00                	add    %al,(%rax)
    7edb:	08 00                	or     %al,(%rax)
    7edd:	00 00                	add    %al,(%rax)
    7edf:	00 fe                	add    %bh,%dh
    7ee1:	ff                   	(bad)  
    7ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ee5:	00 00                	add    %al,(%rax)
    7ee7:	00 20                	add    %ah,(%rax)
    7ee9:	06                   	(bad)  
    7eea:	00 00                	add    %al,(%rax)
    7eec:	00 00                	add    %al,(%rax)
    7eee:	00 00                	add    %al,(%rax)
    7ef0:	ff                   	(bad)  
    7ef1:	ff                   	(bad)  
    7ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ef5:	00 00                	add    %al,(%rax)
    7ef7:	00 01                	add    %al,(%rcx)
    7ef9:	00 00                	add    %al,(%rax)
    7efb:	00 00                	add    %al,(%rax)
    7efd:	00 00                	add    %al,(%rax)
    7eff:	00 f0                	add    %dh,%al
    7f01:	ff                   	(bad)  
    7f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    7f05:	00 00                	add    %al,(%rax)
    7f07:	00 02                	add    %al,(%rdx)
    7f09:	06                   	(bad)  
    7f0a:	00 00                	add    %al,(%rax)
    7f0c:	00 00                	add    %al,(%rax)
    7f0e:	00 00                	add    %al,(%rax)
    7f10:	f9                   	stc    
    7f11:	ff                   	(bad)  
    7f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    7f15:	00 00                	add    %al,(%rax)
    7f17:	00 17                	add    %dl,(%rdi)
	...

Disassembly of section .got:

0000000000007f70 <_GLOBAL_OFFSET_TABLE_>:
    7f70:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
	...
    7f88:	30 10                	xor    %dl,(%rax)
    7f8a:	00 00                	add    %al,(%rax)
    7f8c:	00 00                	add    %al,(%rax)
    7f8e:	00 00                	add    %al,(%rax)
    7f90:	40 10 00             	adc    %al,(%rax)
    7f93:	00 00                	add    %al,(%rax)
    7f95:	00 00                	add    %al,(%rax)
    7f97:	00 50 10             	add    %dl,0x10(%rax)
    7f9a:	00 00                	add    %al,(%rax)
    7f9c:	00 00                	add    %al,(%rax)
    7f9e:	00 00                	add    %al,(%rax)
    7fa0:	60                   	(bad)  
    7fa1:	10 00                	adc    %al,(%rax)
    7fa3:	00 00                	add    %al,(%rax)
    7fa5:	00 00                	add    %al,(%rax)
    7fa7:	00 70 10             	add    %dh,0x10(%rax)
    7faa:	00 00                	add    %al,(%rax)
    7fac:	00 00                	add    %al,(%rax)
    7fae:	00 00                	add    %al,(%rax)
    7fb0:	80 10 00             	adcb   $0x0,(%rax)
    7fb3:	00 00                	add    %al,(%rax)
    7fb5:	00 00                	add    %al,(%rax)
    7fb7:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    7fbd:	00 00                	add    %al,(%rax)
    7fbf:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
	...

Disassembly of section .data:

0000000000008000 <__data_start>:
	...

0000000000008008 <__dso_handle>:
    8008:	08 80 00 00 00 00    	or     %al,0x0(%rax)
	...

0000000000008010 <mem_name>:
    8010:	57                   	push   %rdi
    8011:	54                   	push   %rsp
    8012:	00 00                	add    %al,(%rax)
    8014:	00 00                	add    %al,(%rax)
    8016:	00 00                	add    %al,(%rax)
    8018:	5e                   	pop    %rsi
    8019:	54                   	push   %rsp
    801a:	00 00                	add    %al,(%rax)
    801c:	00 00                	add    %al,(%rax)
    801e:	00 00                	add    %al,(%rax)
    8020:	63 54 00 00          	movslq 0x0(%rax,%rax,1),%edx
    8024:	00 00                	add    %al,(%rax)
	...

0000000000008028 <default_num_contexts>:
    8028:	01 00                	add    %eax,(%rax)
	...

000000000000802c <seed3_volatile>:
    802c:	66 00 00             	data16 add %al,(%rax)
	...

Disassembly of section .bss:

0000000000008030 <completed.8061>:
	...

0000000000008040 <seed5_volatile>:
    8040:	00 00                	add    %al,(%rax)
	...

0000000000008044 <seed4_volatile>:
    8044:	00 00                	add    %al,(%rax)
	...

0000000000008048 <seed2_volatile>:
    8048:	00 00                	add    %al,(%rax)
	...

000000000000804c <seed1_volatile>:
    804c:	00 00                	add    %al,(%rax)
	...

0000000000008050 <stop_time_val>:
	...

0000000000008060 <start_time_val>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x7561f4d8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	d0 1b                	rcrb   (%rbx)
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	17                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	60                   	(bad)  
   1:	00 00                	add    %al,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	8d 00                	lea    (%rax),%eax
   e:	00 00                	add    %al,(%rax)
  10:	0c 06                	or     $0x6,%al
  12:	00 00                	add    %al,(%rax)
  14:	00 34 00             	add    %dh,(%rax,%rax,1)
	...
  27:	00 00                	add    %al,(%rax)
  29:	02 72 00             	add    0x0(%rdx),%dh
  2c:	00 00                	add    %al,(%rax)
  2e:	01 53 01             	add    %edx,0x1(%rbx)
  31:	d0 1b                	rcrb   (%rbx)
  33:	00 00                	add    %al,(%rax)
  35:	00 00                	add    %al,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	17                   	(bad)  
  3a:	00 00                	add    %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 01                	add    %al,(%rcx)
  42:	9c                   	pushfq 
  43:	5c                   	pop    %rsp
  44:	00 00                	add    %al,(%rax)
  46:	00 03                	add    %al,(%rbx)
  48:	00 00                	add    %al,(%rax)
  4a:	00 00                	add    %al,(%rax)
  4c:	01 5e 10             	add    %ebx,0x10(%rsi)
  4f:	5c                   	pop    %rsp
  50:	00 00                	add    %al,(%rax)
  52:	00 06                	add    %al,(%rsi)
	...
  5c:	04 04                	add    $0x4,%al
  5e:	07                   	(bad)  
  5f:	80 00 00             	addb   $0x0,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x30a92a6>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	55                   	push   %rbp
   c:	17                   	(bad)  
   d:	11 01                	adc    %eax,(%rcx)
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 2e                	add    (%rsi),%ch
  15:	01 03                	add    %eax,(%rbx)
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	39 0b                	cmp    %ecx,(%rbx)
  1e:	27                   	(bad)  
  1f:	19 11                	sbb    %edx,(%rcx)
  21:	01 12                	add    %edx,(%rdx)
  23:	07                   	(bad)  
  24:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
  2b:	00 00                	add    %al,(%rax)
  2d:	03 34 00             	add    (%rax,%rax,1),%esi
  30:	03 0e                	add    (%rsi),%ecx
  32:	3a 0b                	cmp    (%rbx),%cl
  34:	3b 0b                	cmp    (%rbx),%ecx
  36:	39 0b                	cmp    %ecx,(%rbx)
  38:	49 13 02             	adc    (%r10),%rax
  3b:	17                   	(bad)  
  3c:	b7 42                	mov    $0x42,%bh
  3e:	17                   	(bad)  
  3f:	00 00                	add    %al,(%rax)
  41:	04 24                	add    $0x24,%al
  43:	00 0b                	add    %cl,(%rbx)
  45:	0b 3e                	or     (%rsi),%edi
  47:	0b 03                	or     (%rbx),%eax
  49:	0e                   	(bad)  
  4a:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	73 00                	jae    2 <_init-0xffe>
   2:	00 00                	add    %al,(%rax)
   4:	03 00                	add    (%rax),%eax
   6:	44 00 00             	add    %r8b,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2e 2e 2f             	cs cs (bad) 
  1e:	2e 2e 2f             	cs cs (bad) 
  21:	2e 2e 2f             	cs cs (bad) 
  24:	73 72                	jae    98 <_init-0xf68>
  26:	63 2f                	movslq (%rdi),%ebp
  28:	6c                   	insb   (%dx),%es:(%rdi)
  29:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  30:	6f                   	outsl  %ds:(%rsi),(%dx)
  31:	6e                   	outsb  %ds:(%rsi),(%dx)
  32:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  38:	38 36                	cmp    %dh,(%rsi)
  3a:	00 00                	add    %al,(%rax)
  3c:	63 72 74             	movslq 0x74(%rdx),%esi
  3f:	66 61                	data16 (bad) 
  41:	73 74                	jae    b7 <_init-0xf49>
  43:	6d                   	insl   (%dx),%es:(%rdi)
  44:	61                   	(bad)  
  45:	74 68                	je     af <_init-0xf51>
  47:	2e 63 00             	movslq %cs:(%rax),%eax
  4a:	01 00                	add    %eax,(%rax)
  4c:	00 00                	add    %al,(%rax)
  4e:	05 01 00 09 02       	add    $0x2090001,%eax
  53:	d0 1b                	rcrb   (%rbx)
  55:	00 00                	add    %al,(%rax)
  57:	00 00                	add    %al,(%rax)
  59:	00 00                	add    %al,(%rax)
  5b:	03 d3                	add    %ebx,%edx
  5d:	00 01                	add    %al,(%rcx)
  5f:	05 03 03 0a 4a       	add    $0x4a0a0303,%eax
  64:	05 18 06 01 05       	add    $0x5010618,%eax
  69:	03 06                	add    (%rsi),%eax
  6b:	59                   	pop    %rcx
  6c:	13 06                	adc    (%rsi),%eax
  6e:	82                   	(bad)  
  6f:	05 01 5a 02 01       	add    $0x1025a01,%eax
  74:	00 01                	add    %al,(%rcx)
  76:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6d                   	insl   (%dx),%es:(%rdi)
   1:	78 63                	js     66 <_init-0xf9a>
   3:	73 72                	jae    77 <_init-0xf89>
   5:	00 2e                	add    %ch,(%rsi)
   7:	2e 2f                	cs (bad) 
   9:	2e 2e 2f             	cs cs (bad) 
   c:	2e 2e 2f             	cs cs (bad) 
   f:	73 72                	jae    83 <_init-0xf7d>
  11:	63 2f                	movslq (%rdi),%ebp
  13:	6c                   	insb   (%dx),%es:(%rdi)
  14:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  1b:	6f                   	outsl  %ds:(%rsi),(%dx)
  1c:	6e                   	outsb  %ds:(%rsi),(%dx)
  1d:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  23:	38 36                	cmp    %dh,(%rsi)
  25:	2f                   	(bad)  
  26:	63 72 74             	movslq 0x74(%rdx),%esi
  29:	66 61                	data16 (bad) 
  2b:	73 74                	jae    a1 <_init-0xf5f>
  2d:	6d                   	insl   (%dx),%es:(%rdi)
  2e:	61                   	(bad)  
  2f:	74 68                	je     99 <_init-0xf67>
  31:	2e 63 00             	movslq %cs:(%rax),%eax
  34:	2f                   	(bad)  
  35:	62                   	(bad)  
  36:	75 69                	jne    a1 <_init-0xf5f>
  38:	6c                   	insb   (%dx),%es:(%rdi)
  39:	64 2f                	fs (bad) 
  3b:	67 63 63 2d          	movslq 0x2d(%ebx),%esp
  3f:	39 2d 39 51 44 4f    	cmp    %ebp,0x4f445139(%rip)        # 4f44517e <_end+0x4f43d10e>
  45:	74 30                	je     77 <_init-0xf89>
  47:	2f                   	(bad)  
  48:	67 63 63 2d          	movslq 0x2d(%ebx),%esp
  4c:	39 2d 39 2e 34 2e    	cmp    %ebp,0x2e342e39(%rip)        # 2e342e8b <_end+0x2e33ae1b>
  52:	30 2f                	xor    %ch,(%rdi)
  54:	62                   	(bad)  
  55:	75 69                	jne    c0 <_init-0xf40>
  57:	6c                   	insb   (%dx),%es:(%rdi)
  58:	64 2f                	fs (bad) 
  5a:	78 38                	js     94 <_init-0xf6c>
  5c:	36 5f                	ss pop %rdi
  5e:	36 34 2d             	ss xor $0x2d,%al
  61:	6c                   	insb   (%dx),%es:(%rdi)
  62:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  69:	75 2f                	jne    9a <_init-0xf66>
  6b:	6c                   	insb   (%dx),%es:(%rdi)
  6c:	69 62 67 63 63 00 73 	imul   $0x73006363,0x67(%rdx),%esp
  73:	65 74 5f             	gs je  d5 <_init-0xf2b>
  76:	66 61                	data16 (bad) 
  78:	73 74                	jae    ee <_init-0xf12>
  7a:	5f                   	pop    %rdi
  7b:	6d                   	insl   (%dx),%es:(%rdi)
  7c:	61                   	(bad)  
  7d:	74 68                	je     e7 <_init-0xf19>
  7f:	00 75 6e             	add    %dh,0x6e(%rbp)
  82:	73 69                	jae    ed <_init-0xf13>
  84:	67 6e                	outsb  %ds:(%esi),(%dx)
  86:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  8b:	74 00                	je     8d <_init-0xf73>
  8d:	47                   	rex.RXB
  8e:	4e 55                	rex.WRX push %rbp
  90:	20 43 31             	and    %al,0x31(%rbx)
  93:	37                   	(bad)  
  94:	20 39                	and    %bh,(%rcx)
  96:	2e 34 2e             	cs xor $0x2e,%al
  99:	30 20                	xor    %ah,(%rax)
  9b:	2d 6d 6c 6f 6e       	sub    $0x6e6f6c6d,%eax
  a0:	67 2d 64 6f 75 62    	addr32 sub $0x62756f64,%eax
  a6:	6c                   	insb   (%dx),%es:(%rdi)
  a7:	65 2d 38 30 20 2d    	gs sub $0x2d203038,%eax
  ad:	6d                   	insl   (%dx),%es:(%rdi)
  ae:	74 75                	je     125 <_init-0xedb>
  b0:	6e                   	outsb  %ds:(%rsi),(%dx)
  b1:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  b7:	72 69                	jb     122 <_init-0xede>
  b9:	63 20                	movslq (%rax),%esp
  bb:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  c0:	68 3d 78 38 36       	pushq  $0x3638783d
  c5:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  ca:	67 20 2d 67 20 2d 67 	and    %ch,0x672d2067(%eip)        # 672d2138 <_end+0x672ca0c8>
  d1:	20 2d 4f 32 20 2d    	and    %ch,0x2d20324f(%rip)        # 2d203326 <_end+0x2d1fb2b6>
  d7:	4f 32 20             	rex.WRXB xor (%r8),%r12b
  da:	2d 4f 32 20 2d       	sub    $0x2d20324f,%eax
  df:	66 62                	data16 (bad) 
  e1:	75 69                	jne    14c <_init-0xeb4>
  e3:	6c                   	insb   (%dx),%es:(%rdi)
  e4:	64 69 6e 67 2d 6c 69 	imul   $0x62696c2d,%fs:0x67(%rsi),%ebp
  eb:	62 
  ec:	67 63 63 20          	movslq 0x20(%ebx),%esp
  f0:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  f5:	73 74                	jae    16b <_init-0xe95>
  f7:	61                   	(bad)  
  f8:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  fb:	70 72                	jo     16f <_init-0xe91>
  fd:	6f                   	outsl  %ds:(%rsi),(%dx)
  fe:	74 65                	je     165 <_init-0xe9b>
 100:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
 104:	20 2d 66 70 69 63    	and    %ch,0x63697066(%rip)        # 63697170 <_end+0x6368f100>
 10a:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 79736276 <_end+0x7972e206>
 110:	6e                   	outsb  %ds:(%rsi),(%dx)
 111:	63 68 72             	movslq 0x72(%rax),%ebp
 114:	6f                   	outsl  %ds:(%rsi),(%dx)
 115:	6e                   	outsb  %ds:(%rsi),(%dx)
 116:	6f                   	outsl  %ds:(%rsi),(%dx)
 117:	75 73                	jne    18c <_init-0xe74>
 119:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
 11e:	6e                   	outsb  %ds:(%rsi),(%dx)
 11f:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
 125:	65 73 20             	gs jae 148 <_init-0xeb8>
 128:	2d 66 73 74 61       	sub    $0x61747366,%eax
 12d:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 130:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
 134:	68 2d 70 72 6f       	pushq  $0x6f72702d
 139:	74 65                	je     1a0 <_init-0xe60>
 13b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 13f:	6e                   	outsb  %ds:(%rsi),(%dx)
 140:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d6664ac <_end+0x2d65e43c>
 146:	70 72                	jo     1ba <_init-0xe46>
 148:	6f                   	outsl  %ds:(%rsi),(%dx)
 149:	74 65                	je     1b0 <_init-0xe50>
 14b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 14f:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
   0:	00 01                	add    %al,(%rcx)
   2:	01 00                	add    %eax,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	d9 1b                	fstps  (%rbx)
   8:	00 00                	add    %al,(%rax)
   a:	00 00                	add    %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	d9 1b                	fstps  (%rbx)
  10:	00 00                	add    %al,(%rax)
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	02 00                	add    (%rax),%al
  18:	91                   	xchg   %eax,%ecx
  19:	74 d9                	je     fffffffffffffff4 <_end+0xffffffffffff7f84>
  1b:	1b 00                	sbb    (%rax),%eax
  1d:	00 00                	add    %al,(%rax)
  1f:	00 00                	add    %al,(%rax)
  21:	00 e1                	add    %ah,%cl
  23:	1b 00                	sbb    (%rax),%eax
  25:	00 00                	add    %al,(%rax)
  27:	00 00                	add    %al,(%rax)
  29:	00 09                	add    %cl,(%rcx)
  2b:	00 91 74 94 04 0a    	add    %dl,0xa049474(%rcx)
  31:	40 80 21 9f          	rex andb $0x9f,(%rcx)
  35:	e1 1b                	loope  52 <_init-0xfae>
  37:	00 00                	add    %al,(%rax)
  39:	00 00                	add    %al,(%rax)
  3b:	00 00                	add    %al,(%rax)
  3d:	e7 1b                	out    %eax,$0x1b
  3f:	00 00                	add    %al,(%rax)
  41:	00 00                	add    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	02 00                	add    (%rax),%al
  47:	91                   	xchg   %eax,%ecx
  48:	74 00                	je     4a <_init-0xfb6>
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	d0 1b                	rcrb   (%rbx)
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	e7 1b                	out    %eax,$0x1b
	...
