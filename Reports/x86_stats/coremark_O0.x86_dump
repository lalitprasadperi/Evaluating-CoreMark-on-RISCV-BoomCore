
coremark.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 9f ae 54 81 21    	add    %bl,0x218154ae(%rdi)
 36d:	52                   	push   %rdx
 36e:	d4                   	(bad)  
 36f:	89 c1                	mov    %eax,%ecx
 371:	2d a6 3c 2b d6       	sub    $0xd62b3ca6,%eax
 376:	a2                   	.byte 0xa2
 377:	b1 6e                	mov    $0x6e,%cl
 379:	44                   	rex.R
 37a:	df                   	.byte 0xdf
 37b:	51                   	push   %rcx

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0c 00                	or     $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	00 00                	add    %al,(%rax)
 3be:	00 00                	add    %al,(%rax)
 3c0:	d1 65 ce             	shll   -0x32(%rbp)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	66 00 00             	data16 add %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 21                	add    %ah,(%rcx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 8c 00 00 00 20 00 	add    %cl,0x200000(%rax,%rax,1)
	...
 426:	00 00                	add    %al,(%rax)
 428:	0b 00                	or     (%rax),%eax
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	37                   	(bad)  
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 10                	add    %dl,(%rax)
 459:	00 00                	add    %al,(%rax)
 45b:	00 12                	add    %dl,(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 29                	add    %ch,(%rcx)
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 48b:	00 12                	add    %dl,(%rdx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 a8 00 00 00 20    	add    %ch,0x20000000(%rax)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 30                	add    %dh,(%rax)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 b7 00 00 00 20    	add    %dh,0x20000000(%rdi)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 45 00             	add    %al,0x0(%rbp)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000500 <.dynstr>:
 500:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 504:	63 2e                	movslq (%rsi),%ebp
 506:	73 6f                	jae    577 <_init-0xa89>
 508:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
 50d:	74 73                	je     582 <_init-0xa7e>
 50f:	00 5f 5f             	add    %bl,0x5f(%rdi)
 512:	73 74                	jae    588 <_init-0xa78>
 514:	61                   	(bad)  
 515:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 518:	63 68 6b             	movslq 0x6b(%rax),%ebp
 51b:	5f                   	pop    %rdi
 51c:	66 61                	data16 (bad) 
 51e:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 525:	68 
 526:	61                   	(bad)  
 527:	72 00                	jb     529 <_init-0xad7>
 529:	70 72                	jo     59d <_init-0xa63>
 52b:	69 6e 74 66 00 6d 61 	imul   $0x616d0066,0x74(%rsi),%ebp
 532:	6c                   	insb   (%dx),%es:(%rdi)
 533:	6c                   	insb   (%dx),%es:(%rdi)
 534:	6f                   	outsl  %ds:(%rsi),(%dx)
 535:	63 00                	movslq (%rax),%eax
 537:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 53b:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 53f:	74 74                	je     5b5 <_init-0xa4b>
 541:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 548:	78 61                	js     5ab <_init-0xa55>
 54a:	5f                   	pop    %rdi
 54b:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 551:	7a 65                	jp     5b8 <_init-0xa48>
 553:	00 5f 5f             	add    %bl,0x5f(%rdi)
 556:	6c                   	insb   (%dx),%es:(%rdi)
 557:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 55e:	72 74                	jb     5d4 <_init-0xa2c>
 560:	5f                   	pop    %rdi
 561:	6d                   	insl   (%dx),%es:(%rdi)
 562:	61                   	(bad)  
 563:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 56a:	00 47 4c             	add    %al,0x4c(%rdi)
 56d:	49                   	rex.WB
 56e:	42                   	rex.X
 56f:	43 5f                	rex.XB pop %r15
 571:	32 2e                	xor    (%rsi),%ch
 573:	34 00                	xor    $0x0,%al
 575:	47                   	rex.RXB
 576:	4c                   	rex.WR
 577:	49                   	rex.WB
 578:	42                   	rex.X
 579:	43 5f                	rex.XB pop %r15
 57b:	32 2e                	xor    (%rsi),%ch
 57d:	31 37                	xor    %esi,(%rdi)
 57f:	00 47 4c             	add    %al,0x4c(%rdi)
 582:	49                   	rex.WB
 583:	42                   	rex.X
 584:	43 5f                	rex.XB pop %r15
 586:	32 2e                	xor    (%rsi),%ch
 588:	32 2e                	xor    (%rsi),%ch
 58a:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 58f:	4d 5f                	rex.WRB pop %r15
 591:	64 65 72 65          	fs gs jb 5fa <_init-0xa06>
 595:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 59c:	4d 
 59d:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 59f:	6f                   	outsl  %ds:(%rsi),(%dx)
 5a0:	6e                   	outsb  %ds:(%rsi),(%dx)
 5a1:	65 54                	gs push %rsp
 5a3:	61                   	(bad)  
 5a4:	62                   	(bad)  
 5a5:	6c                   	insb   (%dx),%es:(%rdi)
 5a6:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5aa:	67 6d                	insl   (%dx),%es:(%edi)
 5ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 5ad:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ae:	5f                   	pop    %rdi
 5af:	73 74                	jae    625 <_init-0x9db>
 5b1:	61                   	(bad)  
 5b2:	72 74                	jb     628 <_init-0x9d8>
 5b4:	5f                   	pop    %rdi
 5b5:	5f                   	pop    %rdi
 5b6:	00 5f 49             	add    %bl,0x49(%rdi)
 5b9:	54                   	push   %rsp
 5ba:	4d 5f                	rex.WRB pop %r15
 5bc:	72 65                	jb     623 <_init-0x9dd>
 5be:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5c5:	4d 
 5c6:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5c8:	6f                   	outsl  %ds:(%rsi),(%dx)
 5c9:	6e                   	outsb  %ds:(%rsi),(%dx)
 5ca:	65 54                	gs push %rsp
 5cc:	61                   	(bad)  
 5cd:	62                   	.byte 0x62
 5ce:	6c                   	insb   (%dx),%es:(%rdi)
 5cf:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000005d2 <.gnu.version>:
 5d2:	00 00                	add    %al,(%rax)
 5d4:	02 00                	add    (%rax),%al
 5d6:	02 00                	add    (%rax),%al
 5d8:	00 00                	add    %al,(%rax)
 5da:	02 00                	add    (%rax),%al
 5dc:	03 00                	add    (%rax),%eax
 5de:	04 00                	add    $0x0,%al
 5e0:	02 00                	add    (%rax),%al
 5e2:	02 00                	add    (%rax),%al
 5e4:	00 00                	add    %al,(%rax)
 5e6:	02 00                	add    (%rax),%al
 5e8:	00 00                	add    %al,(%rax)
 5ea:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000005f0 <.gnu.version_r>:
 5f0:	01 00                	add    %eax,(%rax)
 5f2:	03 00                	add    (%rax),%eax
 5f4:	01 00                	add    %eax,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	10 00                	adc    %al,(%rax)
 5fa:	00 00                	add    %al,(%rax)
 5fc:	00 00                	add    %al,(%rax)
 5fe:	00 00                	add    %al,(%rax)
 600:	14 69                	adc    $0x69,%al
 602:	69 0d 00 00 04 00 6b 	imul   $0x6b,0x40000(%rip),%ecx        # 4060c <_end+0x394dc>
 609:	00 00 00 
 60c:	10 00                	adc    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	97                   	xchg   %eax,%edi
 611:	91                   	xchg   %eax,%ecx
 612:	96                   	xchg   %eax,%esi
 613:	06                   	(bad)  
 614:	00 00                	add    %al,(%rax)
 616:	03 00                	add    (%rax),%eax
 618:	75 00                	jne    61a <_init-0x9e6>
 61a:	00 00                	add    %al,(%rax)
 61c:	10 00                	adc    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	75 1a                	jne    63c <_init-0x9c4>
 622:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 628:	80 00 00             	addb   $0x0,(%rax)
 62b:	00 00                	add    %al,(%rax)
 62d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000630 <.rela.dyn>:
 630:	88 6d 00             	mov    %ch,0x0(%rbp)
 633:	00 00                	add    %al,(%rax)
 635:	00 00                	add    %al,(%rax)
 637:	00 08                	add    %cl,(%rax)
	...
 641:	12 00                	adc    (%rax),%al
 643:	00 00                	add    %al,(%rax)
 645:	00 00                	add    %al,(%rax)
 647:	00 90 6d 00 00 00    	add    %dl,0x6d(%rax)
 64d:	00 00                	add    %al,(%rax)
 64f:	00 08                	add    %cl,(%rax)
 651:	00 00                	add    %al,(%rax)
 653:	00 00                	add    %al,(%rax)
 655:	00 00                	add    %al,(%rax)
 657:	00 c0                	add    %al,%al
 659:	11 00                	adc    %eax,(%rax)
 65b:	00 00                	add    %al,(%rax)
 65d:	00 00                	add    %al,(%rax)
 65f:	00 08                	add    %cl,(%rax)
 661:	70 00                	jo     663 <_init-0x99d>
 663:	00 00                	add    %al,(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 08                	add    %cl,(%rax)
 669:	00 00                	add    %al,(%rax)
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
 66f:	00 08                	add    %cl,(%rax)
 671:	70 00                	jo     673 <_init-0x98d>
 673:	00 00                	add    %al,(%rax)
 675:	00 00                	add    %al,(%rax)
 677:	00 40 70             	add    %al,0x70(%rax)
 67a:	00 00                	add    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	08 00                	or     %al,(%rax)
 682:	00 00                	add    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	08 50 00             	or     %dl,0x0(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 48 70             	add    %cl,0x70(%rax)
 692:	00 00                	add    %al,(%rax)
 694:	00 00                	add    %al,(%rax)
 696:	00 00                	add    %al,(%rax)
 698:	08 00                	or     %al,(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	0f 50                	(bad)  
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	50                   	push   %rax
 6a9:	70 00                	jo     6ab <_init-0x955>
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 08                	add    %cl,(%rax)
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 00                	add    %al,(%rax)
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 14 50             	add    %dl,(%rax,%rdx,2)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	60                   	(bad)  
 6c1:	70 00                	jo     6c3 <_init-0x93d>
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 08                	add    %cl,(%rax)
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 88 54 00 00 00    	add    %cl,0x54(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 68 70             	add    %ch,0x70(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	08 00                	or     %al,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	8d 54 00 00          	lea    0x0(%rax,%rax,1),%edx
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	70 70                	jo     762 <_init-0x89e>
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	92                   	xchg   %eax,%edx
 701:	54                   	push   %rsp
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	78 70                	js     77a <_init-0x886>
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	08 00                	or     %al,(%rax)
 712:	00 00                	add    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	97                   	xchg   %eax,%edi
 719:	54                   	push   %rsp
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	80 70 00 00          	xorb   $0x0,0x0(%rax)
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	08 00                	or     %al,(%rax)
 72a:	00 00                	add    %al,(%rax)
 72c:	00 00                	add    %al,(%rax)
 72e:	00 00                	add    %al,(%rax)
 730:	9c                   	pushfq 
 731:	54                   	push   %rsp
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	88 70 00             	mov    %dh,0x0(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 08                	add    %cl,(%rax)
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 a5 54 00 00 00    	add    %ah,0x54(%rbp)
 74d:	00 00                	add    %al,(%rax)
 74f:	00 90 70 00 00 00    	add    %dl,0x70(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 08                	add    %cl,(%rax)
 759:	00 00                	add    %al,(%rax)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 ae 54 00 00 00    	add    %ch,0x54(%rsi)
 765:	00 00                	add    %al,(%rax)
 767:	00 98 70 00 00 00    	add    %bl,0x70(%rax)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 08                	add    %cl,(%rax)
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
 777:	00 b7 54 00 00 00    	add    %dh,0x54(%rdi)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 a0 70 00 00 00    	add    %ah,0x70(%rax)
 785:	00 00                	add    %al,(%rax)
 787:	00 08                	add    %cl,(%rax)
 789:	00 00                	add    %al,(%rax)
 78b:	00 00                	add    %al,(%rax)
 78d:	00 00                	add    %al,(%rax)
 78f:	00 c0                	add    %al,%al
 791:	54                   	push   %rsp
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	a8 70                	test   $0x70,%al
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	08 00                	or     %al,(%rax)
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	c9                   	leaveq 
 7a9:	54                   	push   %rsp
 7aa:	00 00                	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	b0 70                	mov    $0x70,%al
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	08 00                	or     %al,(%rax)
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	d2 54 00 00          	rclb   %cl,0x0(%rax,%rax,1)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	b8 70 00 00 00       	mov    $0x70,%eax
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 08                	add    %cl,(%rax)
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 db                	add    %bl,%bl
 7d9:	54                   	push   %rsp
 7da:	00 00                	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	c0 70 00 00          	shlb   $0x0,0x0(%rax)
 7e4:	00 00                	add    %al,(%rax)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	08 00                	or     %al,(%rax)
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	e4 54                	in     $0x54,%al
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	c8 70 00 00          	enterq $0x70,$0x0
 7fc:	00 00                	add    %al,(%rax)
 7fe:	00 00                	add    %al,(%rax)
 800:	08 00                	or     %al,(%rax)
 802:	00 00                	add    %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	ed                   	in     (%dx),%eax
 809:	54                   	push   %rsp
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	d0 70 00             	shlb   0x0(%rax)
 813:	00 00                	add    %al,(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 08                	add    %cl,(%rax)
 819:	00 00                	add    %al,(%rax)
 81b:	00 00                	add    %al,(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 f6                	add    %dh,%dh
 821:	54                   	push   %rsp
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	d8 70 00             	fdivs  0x0(%rax)
 82b:	00 00                	add    %al,(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 08                	add    %cl,(%rax)
 831:	00 00                	add    %al,(%rax)
 833:	00 00                	add    %al,(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 ff                	add    %bh,%bh
 839:	54                   	push   %rsp
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	d8 6f 00             	fsubrs 0x0(%rdi)
 843:	00 00                	add    %al,(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	00 06                	add    %al,(%rsi)
 849:	00 00                	add    %al,(%rax)
 84b:	00 03                	add    %al,(%rbx)
	...
 855:	00 00                	add    %al,(%rax)
 857:	00 e0                	add    %ah,%al
 859:	6f                   	outsl  %ds:(%rsi),(%dx)
 85a:	00 00                	add    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	06                   	(bad)  
 861:	00 00                	add    %al,(%rax)
 863:	00 08                	add    %cl,(%rax)
	...
 86d:	00 00                	add    %al,(%rax)
 86f:	00 e8                	add    %ch,%al
 871:	6f                   	outsl  %ds:(%rsi),(%dx)
 872:	00 00                	add    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	06                   	(bad)  
 879:	00 00                	add    %al,(%rax)
 87b:	00 09                	add    %cl,(%rcx)
	...
 885:	00 00                	add    %al,(%rax)
 887:	00 f0                	add    %dh,%al
 889:	6f                   	outsl  %ds:(%rsi),(%dx)
 88a:	00 00                	add    %al,(%rax)
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	06                   	(bad)  
 891:	00 00                	add    %al,(%rax)
 893:	00 0b                	add    %cl,(%rbx)
	...
 89d:	00 00                	add    %al,(%rax)
 89f:	00 f8                	add    %bh,%al
 8a1:	6f                   	outsl  %ds:(%rsi),(%dx)
 8a2:	00 00                	add    %al,(%rax)
 8a4:	00 00                	add    %al,(%rax)
 8a6:	00 00                	add    %al,(%rax)
 8a8:	06                   	(bad)  
 8a9:	00 00                	add    %al,(%rax)
 8ab:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000008b8 <.rela.plt>:
 8b8:	a0 6f 00 00 00 00 00 	movabs 0x70000000000006f,%al
 8bf:	00 07 
 8c1:	00 00                	add    %al,(%rax)
 8c3:	00 01                	add    %al,(%rcx)
	...
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 a8 6f 00 00 00    	add    %ch,0x6f(%rax)
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 07                	add    %al,(%rdi)
 8d9:	00 00                	add    %al,(%rax)
 8db:	00 02                	add    %al,(%rdx)
	...
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 b0 6f 00 00 00    	add    %dh,0x6f(%rax)
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 07                	add    %al,(%rdi)
 8f1:	00 00                	add    %al,(%rax)
 8f3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 8fe:	00 00                	add    %al,(%rax)
 900:	b8 6f 00 00 00       	mov    $0x6f,%eax
 905:	00 00                	add    %al,(%rax)
 907:	00 07                	add    %al,(%rdi)
 909:	00 00                	add    %al,(%rax)
 90b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 911 <_init-0x6ef>
 911:	00 00                	add    %al,(%rax)
 913:	00 00                	add    %al,(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	00 c0                	add    %al,%al
 919:	6f                   	outsl  %ds:(%rsi),(%dx)
 91a:	00 00                	add    %al,(%rax)
 91c:	00 00                	add    %al,(%rax)
 91e:	00 00                	add    %al,(%rax)
 920:	07                   	(bad)  
 921:	00 00                	add    %al,(%rax)
 923:	00 06                	add    %al,(%rsi)
	...
 92d:	00 00                	add    %al,(%rax)
 92f:	00 c8                	add    %cl,%al
 931:	6f                   	outsl  %ds:(%rsi),(%dx)
 932:	00 00                	add    %al,(%rax)
 934:	00 00                	add    %al,(%rax)
 936:	00 00                	add    %al,(%rax)
 938:	07                   	(bad)  
 939:	00 00                	add    %al,(%rax)
 93b:	00 07                	add    %al,(%rdi)
	...
 945:	00 00                	add    %al,(%rax)
 947:	00 d0                	add    %dl,%al
 949:	6f                   	outsl  %ds:(%rsi),(%dx)
 94a:	00 00                	add    %al,(%rax)
 94c:	00 00                	add    %al,(%rax)
 94e:	00 00                	add    %al,(%rax)
 950:	07                   	(bad)  
 951:	00 00                	add    %al,(%rax)
 953:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 5f 00 00 	mov    0x5fd9(%rip),%rax        # 6fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 5f 00 00    	pushq  0x5f6a(%rip)        # 6f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 5f 00 00 	bnd jmpq *0x5f6b(%rip)        # 6f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 5f 00 00 	bnd jmpq *0x5f4d(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <free@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 5e 00 00 	bnd jmpq *0x5ee5(%rip)        # 6fa0 <free@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <putchar@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 5e 00 00 	bnd jmpq *0x5edd(%rip)        # 6fa8 <putchar@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 5e 00 00 	bnd jmpq *0x5ed5(%rip)        # 6fb0 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <clock_gettime@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 5e 00 00 	bnd jmpq *0x5ecd(%rip)        # 6fb8 <clock_gettime@GLIBC_2.17>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__stack_chk_fail@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 5e 00 00 	bnd jmpq *0x5ec5(%rip)        # 6fc0 <__stack_chk_fail@GLIBC_2.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <printf@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 5e 00 00 	bnd jmpq *0x5ebd(%rip)        # 6fc8 <printf@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <malloc@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 5e 00 00 	bnd jmpq *0x5eb5(%rip)        # 6fd0 <malloc@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 e6 31 00 00 	lea    0x31e6(%rip),%r8        # 4320 <__libc_csu_fini>
    113a:	48 8d 0d 6f 31 00 00 	lea    0x316f(%rip),%rcx        # 42b0 <__libc_csu_init>
    1141:	48 8d 3d c5 0c 00 00 	lea    0xcc5(%rip),%rdi        # 1e0d <main>
    1148:	ff 15 92 5e 00 00    	callq  *0x5e92(%rip)        # 6fe0 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d 91 5f 00 00 	lea    0x5f91(%rip),%rdi        # 70e8 <__TMC_END__>
    1157:	48 8d 05 8a 5f 00 00 	lea    0x5f8a(%rip),%rax        # 70e8 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 6e 5e 00 00 	mov    0x5e6e(%rip),%rax        # 6fd8 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 61 5f 00 00 	lea    0x5f61(%rip),%rdi        # 70e8 <__TMC_END__>
    1187:	48 8d 35 5a 5f 00 00 	lea    0x5f5a(%rip),%rsi        # 70e8 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 5e 00 00 	mov    0x5e45(%rip),%rax        # 6ff0 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 25 5f 00 00 00 	cmpb   $0x0,0x5f25(%rip)        # 70f0 <completed.8061>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 5e 00 00 	cmpq   $0x0,0x5e22(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 5e 00 00 	mov    0x5e26(%rip),%rdi        # 7008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 fd 5e 00 00 01 	movb   $0x1,0x5efd(%rip)        # 70f0 <completed.8061>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <calc_func>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 83 ec 20          	sub    $0x20,%rsp
    1215:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1219:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    121d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1221:	0f b7 00             	movzwl (%rax),%eax
    1224:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
    1228:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    122c:	66 c1 f8 07          	sar    $0x7,%ax
    1230:	83 e0 01             	and    $0x1,%eax
    1233:	88 45 f7             	mov    %al,-0x9(%rbp)
    1236:	80 7d f7 00          	cmpb   $0x0,-0x9(%rbp)
    123a:	74 0c                	je     1248 <calc_func+0x3f>
    123c:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    1240:	83 e0 7f             	and    $0x7f,%eax
    1243:	e9 33 01 00 00       	jmpq   137b <calc_func+0x172>
    1248:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    124c:	83 e0 07             	and    $0x7,%eax
    124f:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
    1253:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    1257:	66 c1 f8 03          	sar    $0x3,%ax
    125b:	83 e0 0f             	and    $0xf,%eax
    125e:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
    1262:	0f bf 45 fa          	movswl -0x6(%rbp),%eax
    1266:	c1 e0 04             	shl    $0x4,%eax
    1269:	66 09 45 fa          	or     %ax,-0x6(%rbp)
    126d:	0f bf 45 fe          	movswl -0x2(%rbp),%eax
    1271:	85 c0                	test   %eax,%eax
    1273:	74 0a                	je     127f <calc_func+0x76>
    1275:	83 f8 01             	cmp    $0x1,%eax
    1278:	74 72                	je     12ec <calc_func+0xe3>
    127a:	e9 ad 00 00 00       	jmpq   132c <calc_func+0x123>
    127f:	66 83 7d fa 21       	cmpw   $0x21,-0x6(%rbp)
    1284:	7f 06                	jg     128c <calc_func+0x83>
    1286:	66 c7 45 fa 22 00    	movw   $0x22,-0x6(%rbp)
    128c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1290:	0f b7 40 60          	movzwl 0x60(%rax),%eax
    1294:	44 0f b7 c0          	movzwl %ax,%r8d
    1298:	0f bf 7d fa          	movswl -0x6(%rbp),%edi
    129c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12a0:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    12a4:	0f bf c8             	movswl %ax,%ecx
    12a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12ab:	0f b7 00             	movzwl (%rax),%eax
    12ae:	0f bf d0             	movswl %ax,%edx
    12b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12b5:	48 8b 70 20          	mov    0x20(%rax),%rsi
    12b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12bd:	8b 40 28             	mov    0x28(%rax),%eax
    12c0:	45 89 c1             	mov    %r8d,%r9d
    12c3:	41 89 f8             	mov    %edi,%r8d
    12c6:	89 c7                	mov    %eax,%edi
    12c8:	e8 0e 26 00 00       	callq  38db <core_bench_state>
    12cd:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    12d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12d5:	0f b7 40 66          	movzwl 0x66(%rax),%eax
    12d9:	66 85 c0             	test   %ax,%ax
    12dc:	75 58                	jne    1336 <calc_func+0x12d>
    12de:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    12e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12e6:	66 89 50 66          	mov    %dx,0x66(%rax)
    12ea:	eb 4a                	jmp    1336 <calc_func+0x12d>
    12ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12f0:	0f b7 40 60          	movzwl 0x60(%rax),%eax
    12f4:	0f b7 d0             	movzwl %ax,%edx
    12f7:	0f bf 45 fa          	movswl -0x6(%rbp),%eax
    12fb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    12ff:	48 83 c1 40          	add    $0x40,%rcx
    1303:	89 c6                	mov    %eax,%esi
    1305:	48 89 cf             	mov    %rcx,%rdi
    1308:	e8 4d 1d 00 00       	callq  305a <core_bench_matrix>
    130d:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    1311:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1315:	0f b7 40 64          	movzwl 0x64(%rax),%eax
    1319:	66 85 c0             	test   %ax,%ax
    131c:	75 1b                	jne    1339 <calc_func+0x130>
    131e:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    1322:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1326:	66 89 50 64          	mov    %dx,0x64(%rax)
    132a:	eb 0d                	jmp    1339 <calc_func+0x130>
    132c:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    1330:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    1334:	eb 04                	jmp    133a <calc_func+0x131>
    1336:	90                   	nop
    1337:	eb 01                	jmp    133a <calc_func+0x131>
    1339:	90                   	nop
    133a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    133e:	0f b7 40 60          	movzwl 0x60(%rax),%eax
    1342:	0f b7 d0             	movzwl %ax,%edx
    1345:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    1349:	0f b7 c0             	movzwl %ax,%eax
    134c:	89 d6                	mov    %edx,%esi
    134e:	89 c7                	mov    %eax,%edi
    1350:	e8 33 2d 00 00       	callq  4088 <crcu16>
    1355:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1359:	66 89 42 60          	mov    %ax,0x60(%rdx)
    135d:	66 83 65 f8 7f       	andw   $0x7f,-0x8(%rbp)
    1362:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    1366:	b0 00                	mov    $0x0,%al
    1368:	0c 80                	or     $0x80,%al
    136a:	66 0b 45 f8          	or     -0x8(%rbp),%ax
    136e:	89 c2                	mov    %eax,%edx
    1370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1374:	66 89 10             	mov    %dx,(%rax)
    1377:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    137b:	c9                   	leaveq 
    137c:	c3                   	retq   

000000000000137d <cmp_complex>:
    137d:	f3 0f 1e fa          	endbr64 
    1381:	55                   	push   %rbp
    1382:	48 89 e5             	mov    %rsp,%rbp
    1385:	48 83 ec 30          	sub    $0x30,%rsp
    1389:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    138d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1391:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1399:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    139d:	48 89 d6             	mov    %rdx,%rsi
    13a0:	48 89 c7             	mov    %rax,%rdi
    13a3:	e8 61 fe ff ff       	callq  1209 <calc_func>
    13a8:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
    13ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    13b4:	48 89 d6             	mov    %rdx,%rsi
    13b7:	48 89 c7             	mov    %rax,%rdi
    13ba:	e8 4a fe ff ff       	callq  1209 <calc_func>
    13bf:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
    13c3:	0f bf 55 fc          	movswl -0x4(%rbp),%edx
    13c7:	0f bf 45 fe          	movswl -0x2(%rbp),%eax
    13cb:	29 c2                	sub    %eax,%edx
    13cd:	89 d0                	mov    %edx,%eax
    13cf:	c9                   	leaveq 
    13d0:	c3                   	retq   

00000000000013d1 <cmp_idx>:
    13d1:	f3 0f 1e fa          	endbr64 
    13d5:	55                   	push   %rbp
    13d6:	48 89 e5             	mov    %rsp,%rbp
    13d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    13dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    13e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    13e5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    13ea:	75 3e                	jne    142a <cmp_idx+0x59>
    13ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13f0:	0f b7 00             	movzwl (%rax),%eax
    13f3:	b0 00                	mov    $0x0,%al
    13f5:	89 c2                	mov    %eax,%edx
    13f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13fb:	0f b7 00             	movzwl (%rax),%eax
    13fe:	66 c1 e8 08          	shr    $0x8,%ax
    1402:	09 c2                	or     %eax,%edx
    1404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1408:	66 89 10             	mov    %dx,(%rax)
    140b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    140f:	0f b7 00             	movzwl (%rax),%eax
    1412:	b0 00                	mov    $0x0,%al
    1414:	89 c2                	mov    %eax,%edx
    1416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    141a:	0f b7 00             	movzwl (%rax),%eax
    141d:	66 c1 e8 08          	shr    $0x8,%ax
    1421:	09 c2                	or     %eax,%edx
    1423:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1427:	66 89 10             	mov    %dx,(%rax)
    142a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    142e:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    1432:	0f bf d0             	movswl %ax,%edx
    1435:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1439:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    143d:	98                   	cwtl   
    143e:	29 c2                	sub    %eax,%edx
    1440:	89 d0                	mov    %edx,%eax
    1442:	5d                   	pop    %rbp
    1443:	c3                   	retq   

0000000000001444 <copy_info>:
    1444:	f3 0f 1e fa          	endbr64 
    1448:	55                   	push   %rbp
    1449:	48 89 e5             	mov    %rsp,%rbp
    144c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1454:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1458:	0f b7 10             	movzwl (%rax),%edx
    145b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    145f:	66 89 10             	mov    %dx,(%rax)
    1462:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1466:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    146a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    146e:	66 89 50 02          	mov    %dx,0x2(%rax)
    1472:	90                   	nop
    1473:	5d                   	pop    %rbp
    1474:	c3                   	retq   

0000000000001475 <core_bench_list>:
    1475:	f3 0f 1e fa          	endbr64 
    1479:	55                   	push   %rbp
    147a:	48 89 e5             	mov    %rsp,%rbp
    147d:	48 83 ec 50          	sub    $0x50,%rsp
    1481:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1485:	89 f0                	mov    %esi,%eax
    1487:	66 89 45 b4          	mov    %ax,-0x4c(%rbp)
    148b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1492:	00 00 
    1494:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1498:	31 c0                	xor    %eax,%eax
    149a:	66 c7 45 ca 00 00    	movw   $0x0,-0x36(%rbp)
    14a0:	66 c7 45 cc 00 00    	movw   $0x0,-0x34(%rbp)
    14a6:	66 c7 45 ce 00 00    	movw   $0x0,-0x32(%rbp)
    14ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b0:	48 8b 40 38          	mov    0x38(%rax),%rax
    14b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    14b8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14bc:	0f b7 40 04          	movzwl 0x4(%rax),%eax
    14c0:	66 89 45 d2          	mov    %ax,-0x2e(%rbp)
    14c4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    14cb:	0f b7 45 b4          	movzwl -0x4c(%rbp),%eax
    14cf:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
    14d3:	66 c7 45 d0 00 00    	movw   $0x0,-0x30(%rbp)
    14d9:	e9 f0 00 00 00       	jmpq   15ce <core_bench_list+0x159>
    14de:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
    14e2:	0f b6 c0             	movzbl %al,%eax
    14e5:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
    14e9:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
    14ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14f1:	48 89 d6             	mov    %rdx,%rsi
    14f4:	48 89 c7             	mov    %rax,%rdi
    14f7:	e8 bc 05 00 00       	callq  1ab8 <core_list_find>
    14fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1504:	48 89 c7             	mov    %rax,%rdi
    1507:	e8 2f 06 00 00       	callq  1b3b <core_list_reverse>
    150c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1510:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    1515:	75 26                	jne    153d <core_bench_list+0xc8>
    1517:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
    151b:	83 c0 01             	add    $0x1,%eax
    151e:	66 89 45 ce          	mov    %ax,-0x32(%rbp)
    1522:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1526:	48 8b 00             	mov    (%rax),%rax
    1529:	48 8b 40 08          	mov    0x8(%rax),%rax
    152d:	0f b7 00             	movzwl (%rax),%eax
    1530:	66 c1 f8 08          	sar    $0x8,%ax
    1534:	83 e0 01             	and    $0x1,%eax
    1537:	66 01 45 ca          	add    %ax,-0x36(%rbp)
    153b:	eb 72                	jmp    15af <core_bench_list+0x13a>
    153d:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax
    1541:	83 c0 01             	add    $0x1,%eax
    1544:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
    1548:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    154c:	48 8b 40 08          	mov    0x8(%rax),%rax
    1550:	0f b7 00             	movzwl (%rax),%eax
    1553:	98                   	cwtl   
    1554:	83 e0 01             	and    $0x1,%eax
    1557:	85 c0                	test   %eax,%eax
    1559:	74 16                	je     1571 <core_bench_list+0xfc>
    155b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    155f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1563:	0f b7 00             	movzwl (%rax),%eax
    1566:	66 c1 f8 09          	sar    $0x9,%ax
    156a:	83 e0 01             	and    $0x1,%eax
    156d:	66 01 45 ca          	add    %ax,-0x36(%rbp)
    1571:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1575:	48 8b 00             	mov    (%rax),%rax
    1578:	48 85 c0             	test   %rax,%rax
    157b:	74 32                	je     15af <core_bench_list+0x13a>
    157d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1581:	48 8b 00             	mov    (%rax),%rax
    1584:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1588:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    158c:	48 8b 10             	mov    (%rax),%rdx
    158f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1593:	48 89 10             	mov    %rdx,(%rax)
    1596:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    159a:	48 8b 10             	mov    (%rax),%rdx
    159d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15a1:	48 89 10             	mov    %rdx,(%rax)
    15a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    15ac:	48 89 10             	mov    %rdx,(%rax)
    15af:	0f b7 45 d6          	movzwl -0x2a(%rbp),%eax
    15b3:	66 85 c0             	test   %ax,%ax
    15b6:	78 0b                	js     15c3 <core_bench_list+0x14e>
    15b8:	0f b7 45 d6          	movzwl -0x2a(%rbp),%eax
    15bc:	83 c0 01             	add    $0x1,%eax
    15bf:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
    15c3:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
    15c7:	83 c0 01             	add    $0x1,%eax
    15ca:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
    15ce:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
    15d2:	66 3b 45 d2          	cmp    -0x2e(%rbp),%ax
    15d6:	0f 8c 02 ff ff ff    	jl     14de <core_bench_list+0x69>
    15dc:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax
    15e0:	c1 e0 02             	shl    $0x2,%eax
    15e3:	66 2b 45 ce          	sub    -0x32(%rbp),%ax
    15e7:	66 01 45 ca          	add    %ax,-0x36(%rbp)
    15eb:	66 83 7d b4 00       	cmpw   $0x0,-0x4c(%rbp)
    15f0:	7e 1b                	jle    160d <core_bench_list+0x198>
    15f2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 8d 35 7c fd ff ff 	lea    -0x284(%rip),%rsi        # 137d <cmp_complex>
    1601:	48 89 c7             	mov    %rax,%rdi
    1604:	e8 7b 05 00 00       	callq  1b84 <core_list_mergesort>
    1609:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    160d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1611:	48 8b 00             	mov    (%rax),%rax
    1614:	48 89 c7             	mov    %rax,%rdi
    1617:	e8 e4 03 00 00       	callq  1a00 <core_list_remove>
    161c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1620:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
    1624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1628:	48 89 d6             	mov    %rdx,%rsi
    162b:	48 89 c7             	mov    %rax,%rdi
    162e:	e8 85 04 00 00       	callq  1ab8 <core_list_find>
    1633:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1637:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    163c:	75 35                	jne    1673 <core_bench_list+0x1fe>
    163e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1642:	48 8b 00             	mov    (%rax),%rax
    1645:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1649:	eb 28                	jmp    1673 <core_bench_list+0x1fe>
    164b:	0f b7 55 ca          	movzwl -0x36(%rbp),%edx
    164f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1653:	48 8b 40 08          	mov    0x8(%rax),%rax
    1657:	0f b7 00             	movzwl (%rax),%eax
    165a:	98                   	cwtl   
    165b:	89 d6                	mov    %edx,%esi
    165d:	89 c7                	mov    %eax,%edi
    165f:	e8 be 2a 00 00       	callq  4122 <crc16>
    1664:	66 89 45 ca          	mov    %ax,-0x36(%rbp)
    1668:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    166c:	48 8b 00             	mov    (%rax),%rax
    166f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1673:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1678:	75 d1                	jne    164b <core_bench_list+0x1d6>
    167a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    167e:	48 8b 10             	mov    (%rax),%rdx
    1681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1685:	48 89 d6             	mov    %rdx,%rsi
    1688:	48 89 c7             	mov    %rax,%rdi
    168b:	e8 d1 03 00 00       	callq  1a61 <core_list_undo_remove>
    1690:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1698:	ba 00 00 00 00       	mov    $0x0,%edx
    169d:	48 8d 35 2d fd ff ff 	lea    -0x2d3(%rip),%rsi        # 13d1 <cmp_idx>
    16a4:	48 89 c7             	mov    %rax,%rdi
    16a7:	e8 d8 04 00 00       	callq  1b84 <core_list_mergesort>
    16ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    16b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16b4:	48 8b 00             	mov    (%rax),%rax
    16b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    16bb:	eb 28                	jmp    16e5 <core_bench_list+0x270>
    16bd:	0f b7 55 ca          	movzwl -0x36(%rbp),%edx
    16c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16c5:	48 8b 40 08          	mov    0x8(%rax),%rax
    16c9:	0f b7 00             	movzwl (%rax),%eax
    16cc:	98                   	cwtl   
    16cd:	89 d6                	mov    %edx,%esi
    16cf:	89 c7                	mov    %eax,%edi
    16d1:	e8 4c 2a 00 00       	callq  4122 <crc16>
    16d6:	66 89 45 ca          	mov    %ax,-0x36(%rbp)
    16da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16de:	48 8b 00             	mov    (%rax),%rax
    16e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    16e5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    16ea:	75 d1                	jne    16bd <core_bench_list+0x248>
    16ec:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
    16f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    16f4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    16fb:	00 00 
    16fd:	74 05                	je     1704 <core_bench_list+0x28f>
    16ff:	e8 ec f9 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    1704:	c9                   	leaveq 
    1705:	c3                   	retq   

0000000000001706 <core_list_init>:
    1706:	f3 0f 1e fa          	endbr64 
    170a:	55                   	push   %rbp
    170b:	48 89 e5             	mov    %rsp,%rbp
    170e:	48 83 ec 60          	sub    $0x60,%rsp
    1712:	89 7d ac             	mov    %edi,-0x54(%rbp)
    1715:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1719:	89 d0                	mov    %edx,%eax
    171b:	66 89 45 a8          	mov    %ax,-0x58(%rbp)
    171f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1726:	00 00 
    1728:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    172c:	31 c0                	xor    %eax,%eax
    172e:	c7 45 c4 14 00 00 00 	movl   $0x14,-0x3c(%rbp)
    1735:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1738:	ba 00 00 00 00       	mov    $0x0,%edx
    173d:	f7 75 c4             	divl   -0x3c(%rbp)
    1740:	83 e8 02             	sub    $0x2,%eax
    1743:	89 45 c8             	mov    %eax,-0x38(%rbp)
    1746:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    174a:	8b 55 c8             	mov    -0x38(%rbp),%edx
    174d:	48 c1 e2 04          	shl    $0x4,%rdx
    1751:	48 01 d0             	add    %rdx,%rax
    1754:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1758:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    175c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1760:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1764:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1767:	48 c1 e2 02          	shl    $0x2,%rdx
    176b:	48 01 d0             	add    %rdx,%rax
    176e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1772:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1776:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    177a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    177e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1785:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1789:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    178d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1791:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1795:	48 8b 40 08          	mov    0x8(%rax),%rax
    1799:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)
    179f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    17a3:	48 8b 40 08          	mov    0x8(%rax),%rax
    17a7:	66 c7 00 80 80       	movw   $0x8080,(%rax)
    17ac:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    17b0:	48 83 c0 10          	add    $0x10,%rax
    17b4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    17b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17bc:	48 83 c0 04          	add    $0x4,%rax
    17c0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    17c4:	66 c7 45 ce ff 7f    	movw   $0x7fff,-0x32(%rbp)
    17ca:	66 c7 45 cc ff ff    	movw   $0xffff,-0x34(%rbp)
    17d0:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
    17d4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    17d8:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    17dc:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    17e0:	48 8d 75 cc          	lea    -0x34(%rbp),%rsi
    17e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    17e8:	4d 89 c1             	mov    %r8,%r9
    17eb:	49 89 f8             	mov    %rdi,%r8
    17ee:	48 89 c7             	mov    %rax,%rdi
    17f1:	e8 3f 01 00 00       	callq  1935 <core_list_insert_new>
    17f6:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    17fd:	eb 66                	jmp    1865 <core_list_init+0x15f>
    17ff:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1802:	89 c2                	mov    %eax,%edx
    1804:	0f b7 45 a8          	movzwl -0x58(%rbp),%eax
    1808:	31 d0                	xor    %edx,%eax
    180a:	83 e0 0f             	and    $0xf,%eax
    180d:	66 89 45 bc          	mov    %ax,-0x44(%rbp)
    1811:	0f b7 45 bc          	movzwl -0x44(%rbp),%eax
    1815:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
    181c:	8b 45 c0             	mov    -0x40(%rbp),%eax
    181f:	83 e0 07             	and    $0x7,%eax
    1822:	09 d0                	or     %edx,%eax
    1824:	66 89 45 be          	mov    %ax,-0x42(%rbp)
    1828:	0f b7 45 be          	movzwl -0x42(%rbp),%eax
    182c:	c1 e0 08             	shl    $0x8,%eax
    182f:	89 c2                	mov    %eax,%edx
    1831:	0f b7 45 be          	movzwl -0x42(%rbp),%eax
    1835:	09 d0                	or     %edx,%eax
    1837:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
    183b:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
    183f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    1843:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    1847:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    184b:	48 8d 75 cc          	lea    -0x34(%rbp),%rsi
    184f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1853:	4d 89 c1             	mov    %r8,%r9
    1856:	49 89 f8             	mov    %rdi,%r8
    1859:	48 89 c7             	mov    %rax,%rdi
    185c:	e8 d4 00 00 00       	callq  1935 <core_list_insert_new>
    1861:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    1865:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1868:	3b 45 c8             	cmp    -0x38(%rbp),%eax
    186b:	72 92                	jb     17ff <core_list_init+0xf9>
    186d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1871:	48 8b 00             	mov    (%rax),%rax
    1874:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1878:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    187f:	eb 72                	jmp    18f3 <core_list_init+0x1ed>
    1881:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1884:	89 c2                	mov    %eax,%edx
    1886:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
    188b:	48 0f af c2          	imul   %rdx,%rax
    188f:	48 c1 e8 20          	shr    $0x20,%rax
    1893:	c1 e8 02             	shr    $0x2,%eax
    1896:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    1899:	73 17                	jae    18b2 <core_list_init+0x1ac>
    189b:	8b 45 c0             	mov    -0x40(%rbp),%eax
    189e:	8d 50 01             	lea    0x1(%rax),%edx
    18a1:	89 55 c0             	mov    %edx,-0x40(%rbp)
    18a4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    18a8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    18ac:	66 89 42 02          	mov    %ax,0x2(%rdx)
    18b0:	eb 36                	jmp    18e8 <core_list_init+0x1e2>
    18b2:	8b 45 c0             	mov    -0x40(%rbp),%eax
    18b5:	8d 50 01             	lea    0x1(%rax),%edx
    18b8:	89 55 c0             	mov    %edx,-0x40(%rbp)
    18bb:	89 c2                	mov    %eax,%edx
    18bd:	0f b7 45 a8          	movzwl -0x58(%rbp),%eax
    18c1:	31 d0                	xor    %edx,%eax
    18c3:	66 89 45 ba          	mov    %ax,-0x46(%rbp)
    18c7:	8b 45 c0             	mov    -0x40(%rbp),%eax
    18ca:	c1 e0 08             	shl    $0x8,%eax
    18cd:	66 25 00 07          	and    $0x700,%ax
    18d1:	66 0b 45 ba          	or     -0x46(%rbp),%ax
    18d5:	89 c2                	mov    %eax,%edx
    18d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18db:	48 8b 40 08          	mov    0x8(%rax),%rax
    18df:	66 81 e2 ff 3f       	and    $0x3fff,%dx
    18e4:	66 89 50 02          	mov    %dx,0x2(%rax)
    18e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18ec:	48 8b 00             	mov    (%rax),%rax
    18ef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    18f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18f7:	48 8b 00             	mov    (%rax),%rax
    18fa:	48 85 c0             	test   %rax,%rax
    18fd:	75 82                	jne    1881 <core_list_init+0x17b>
    18ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1903:	ba 00 00 00 00       	mov    $0x0,%edx
    1908:	48 8d 35 c2 fa ff ff 	lea    -0x53e(%rip),%rsi        # 13d1 <cmp_idx>
    190f:	48 89 c7             	mov    %rax,%rdi
    1912:	e8 6d 02 00 00       	callq  1b84 <core_list_mergesort>
    1917:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    191b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    191f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1923:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    192a:	00 00 
    192c:	74 05                	je     1933 <core_list_init+0x22d>
    192e:	e8 bd f7 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    1933:	c9                   	leaveq 
    1934:	c3                   	retq   

0000000000001935 <core_list_insert_new>:
    1935:	f3 0f 1e fa          	endbr64 
    1939:	55                   	push   %rbp
    193a:	48 89 e5             	mov    %rsp,%rbp
    193d:	48 83 ec 40          	sub    $0x40,%rsp
    1941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1945:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1949:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    194d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    1951:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    1955:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    1959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    195d:	48 8b 00             	mov    (%rax),%rax
    1960:	48 83 c0 10          	add    $0x10,%rax
    1964:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    1968:	77 0a                	ja     1974 <core_list_insert_new+0x3f>
    196a:	b8 00 00 00 00       	mov    $0x0,%eax
    196f:	e9 8a 00 00 00       	jmpq   19fe <core_list_insert_new+0xc9>
    1974:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1978:	48 8b 00             	mov    (%rax),%rax
    197b:	48 83 c0 04          	add    $0x4,%rax
    197f:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    1983:	77 07                	ja     198c <core_list_insert_new+0x57>
    1985:	b8 00 00 00 00       	mov    $0x0,%eax
    198a:	eb 72                	jmp    19fe <core_list_insert_new+0xc9>
    198c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1990:	48 8b 00             	mov    (%rax),%rax
    1993:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1997:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    199b:	48 8b 00             	mov    (%rax),%rax
    199e:	48 8d 50 10          	lea    0x10(%rax),%rdx
    19a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19a6:	48 89 10             	mov    %rdx,(%rax)
    19a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19ad:	48 8b 10             	mov    (%rax),%rdx
    19b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19b4:	48 89 10             	mov    %rdx,(%rax)
    19b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19bf:	48 89 10             	mov    %rdx,(%rax)
    19c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    19c6:	48 8b 10             	mov    (%rax),%rdx
    19c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    19d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    19d5:	48 8b 00             	mov    (%rax),%rax
    19d8:	48 8d 50 04          	lea    0x4(%rax),%rdx
    19dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    19e0:	48 89 10             	mov    %rdx,(%rax)
    19e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    19eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    19ef:	48 89 d6             	mov    %rdx,%rsi
    19f2:	48 89 c7             	mov    %rax,%rdi
    19f5:	e8 4a fa ff ff       	callq  1444 <copy_info>
    19fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19fe:	c9                   	leaveq 
    19ff:	c3                   	retq   

0000000000001a00 <core_list_remove>:
    1a00:	f3 0f 1e fa          	endbr64 
    1a04:	55                   	push   %rbp
    1a05:	48 89 e5             	mov    %rsp,%rbp
    1a08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a10:	48 8b 00             	mov    (%rax),%rax
    1a13:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a1b:	48 8b 40 08          	mov    0x8(%rax),%rax
    1a1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a27:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1a2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1a33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a3b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a43:	48 8b 00             	mov    (%rax),%rax
    1a46:	48 8b 10             	mov    (%rax),%rdx
    1a49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4d:	48 89 10             	mov    %rdx,(%rax)
    1a50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1a5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a5f:	5d                   	pop    %rbp
    1a60:	c3                   	retq   

0000000000001a61 <core_list_undo_remove>:
    1a61:	f3 0f 1e fa          	endbr64 
    1a65:	55                   	push   %rbp
    1a66:	48 89 e5             	mov    %rsp,%rbp
    1a69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1a6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1a71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a75:	48 8b 40 08          	mov    0x8(%rax),%rax
    1a79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a81:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1a85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a89:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1a8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a95:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1a99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a9d:	48 8b 10             	mov    (%rax),%rdx
    1aa0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1aa4:	48 89 10             	mov    %rdx,(%rax)
    1aa7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1aab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1aaf:	48 89 10             	mov    %rdx,(%rax)
    1ab2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ab6:	5d                   	pop    %rbp
    1ab7:	c3                   	retq   

0000000000001ab8 <core_list_find>:
    1ab8:	f3 0f 1e fa          	endbr64 
    1abc:	55                   	push   %rbp
    1abd:	48 89 e5             	mov    %rsp,%rbp
    1ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1ac4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1ac8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1acc:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    1ad0:	66 85 c0             	test   %ax,%ax
    1ad3:	78 3e                	js     1b13 <core_list_find+0x5b>
    1ad5:	eb 0b                	jmp    1ae2 <core_list_find+0x2a>
    1ad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1adb:	48 8b 00             	mov    (%rax),%rax
    1ade:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ae2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1ae7:	74 19                	je     1b02 <core_list_find+0x4a>
    1ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aed:	48 8b 40 08          	mov    0x8(%rax),%rax
    1af1:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    1af5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1af9:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    1afd:	66 39 c2             	cmp    %ax,%dx
    1b00:	75 d5                	jne    1ad7 <core_list_find+0x1f>
    1b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b06:	eb 31                	jmp    1b39 <core_list_find+0x81>
    1b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b0c:	48 8b 00             	mov    (%rax),%rax
    1b0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1b13:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1b18:	74 1b                	je     1b35 <core_list_find+0x7d>
    1b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b1e:	48 8b 40 08          	mov    0x8(%rax),%rax
    1b22:	0f b7 00             	movzwl (%rax),%eax
    1b25:	98                   	cwtl   
    1b26:	0f b6 d0             	movzbl %al,%edx
    1b29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b2d:	0f b7 00             	movzwl (%rax),%eax
    1b30:	98                   	cwtl   
    1b31:	39 c2                	cmp    %eax,%edx
    1b33:	75 d3                	jne    1b08 <core_list_find+0x50>
    1b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b39:	5d                   	pop    %rbp
    1b3a:	c3                   	retq   

0000000000001b3b <core_list_reverse>:
    1b3b:	f3 0f 1e fa          	endbr64 
    1b3f:	55                   	push   %rbp
    1b40:	48 89 e5             	mov    %rsp,%rbp
    1b43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1b47:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    1b4e:	00 
    1b4f:	eb 26                	jmp    1b77 <core_list_reverse+0x3c>
    1b51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1b55:	48 8b 00             	mov    (%rax),%rax
    1b58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1b5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1b60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1b64:	48 89 10             	mov    %rdx,(%rax)
    1b67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1b6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1b77:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1b7c:	75 d3                	jne    1b51 <core_list_reverse+0x16>
    1b7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b82:	5d                   	pop    %rbp
    1b83:	c3                   	retq   

0000000000001b84 <core_list_mergesort>:
    1b84:	f3 0f 1e fa          	endbr64 
    1b88:	55                   	push   %rbp
    1b89:	48 89 e5             	mov    %rsp,%rbp
    1b8c:	48 83 ec 60          	sub    $0x60,%rsp
    1b90:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1b94:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    1b98:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1b9c:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    1ba3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1ba7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1bab:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1bb2:	00 
    1bb3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1bba:	00 
    1bbb:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    1bc2:	e9 2d 01 00 00       	jmpq   1cf4 <core_list_mergesort+0x170>
    1bc7:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    1bcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1bcf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1bd3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1bda:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    1be1:	eb 1a                	jmp    1bfd <core_list_mergesort+0x79>
    1be3:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    1be7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1beb:	48 8b 00             	mov    (%rax),%rax
    1bee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1bf2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1bf7:	74 0e                	je     1c07 <core_list_mergesort+0x83>
    1bf9:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    1bfd:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1c00:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    1c03:	7c de                	jl     1be3 <core_list_mergesort+0x5f>
    1c05:	eb 01                	jmp    1c08 <core_list_mergesort+0x84>
    1c07:	90                   	nop
    1c08:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1c0b:	89 45 d8             	mov    %eax,-0x28(%rbp)
    1c0e:	e9 be 00 00 00       	jmpq   1cd1 <core_list_mergesort+0x14d>
    1c13:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1c17:	75 19                	jne    1c32 <core_list_mergesort+0xae>
    1c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c25:	48 8b 00             	mov    (%rax),%rax
    1c28:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1c2c:	83 6d d8 01          	subl   $0x1,-0x28(%rbp)
    1c30:	eb 7b                	jmp    1cad <core_list_mergesort+0x129>
    1c32:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    1c36:	74 07                	je     1c3f <core_list_mergesort+0xbb>
    1c38:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1c3d:	75 19                	jne    1c58 <core_list_mergesort+0xd4>
    1c3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c47:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c4b:	48 8b 00             	mov    (%rax),%rax
    1c4e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1c52:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
    1c56:	eb 55                	jmp    1cad <core_list_mergesort+0x129>
    1c58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c5c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1c60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c64:	48 8b 40 08          	mov    0x8(%rax),%rax
    1c68:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1c6c:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    1c70:	48 89 ce             	mov    %rcx,%rsi
    1c73:	48 89 c7             	mov    %rax,%rdi
    1c76:	41 ff d0             	callq  *%r8
    1c79:	85 c0                	test   %eax,%eax
    1c7b:	7f 19                	jg     1c96 <core_list_mergesort+0x112>
    1c7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c81:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1c89:	48 8b 00             	mov    (%rax),%rax
    1c8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1c90:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
    1c94:	eb 17                	jmp    1cad <core_list_mergesort+0x129>
    1c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca2:	48 8b 00             	mov    (%rax),%rax
    1ca5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1ca9:	83 6d d8 01          	subl   $0x1,-0x28(%rbp)
    1cad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1cb2:	74 0d                	je     1cc1 <core_list_mergesort+0x13d>
    1cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1cb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1cbc:	48 89 10             	mov    %rdx,(%rax)
    1cbf:	eb 08                	jmp    1cc9 <core_list_mergesort+0x145>
    1cc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1cc5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ccd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1cd1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1cd5:	0f 8f 38 ff ff ff    	jg     1c13 <core_list_mergesort+0x8f>
    1cdb:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    1cdf:	7e 0b                	jle    1cec <core_list_mergesort+0x168>
    1ce1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1ce6:	0f 85 27 ff ff ff    	jne    1c13 <core_list_mergesort+0x8f>
    1cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cf0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1cf4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1cf9:	0f 85 c8 fe ff ff    	jne    1bc7 <core_list_mergesort+0x43>
    1cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d03:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1d0a:	83 7d d0 01          	cmpl   $0x1,-0x30(%rbp)
    1d0e:	7f 06                	jg     1d16 <core_list_mergesort+0x192>
    1d10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1d14:	eb 08                	jmp    1d1e <core_list_mergesort+0x19a>
    1d16:	d1 65 cc             	shll   -0x34(%rbp)
    1d19:	e9 85 fe ff ff       	jmpq   1ba3 <core_list_mergesort+0x1f>
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <iterate>:
    1d20:	f3 0f 1e fa          	endbr64 
    1d24:	55                   	push   %rbp
    1d25:	48 89 e5             	mov    %rsp,%rbp
    1d28:	48 83 ec 30          	sub    $0x30,%rsp
    1d2c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1d34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d3c:	8b 40 2c             	mov    0x2c(%rax),%eax
    1d3f:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d46:	66 c7 40 60 00 00    	movw   $0x0,0x60(%rax)
    1d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d50:	66 c7 40 62 00 00    	movw   $0x0,0x62(%rax)
    1d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d5a:	66 c7 40 64 00 00    	movw   $0x0,0x64(%rax)
    1d60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d64:	66 c7 40 66 00 00    	movw   $0x0,0x66(%rax)
    1d6a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1d71:	e9 84 00 00 00       	jmpq   1dfa <iterate+0xda>
    1d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d7a:	be 01 00 00 00       	mov    $0x1,%esi
    1d7f:	48 89 c7             	mov    %rax,%rdi
    1d82:	e8 ee f6 ff ff       	callq  1475 <core_bench_list>
    1d87:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
    1d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d8f:	0f b7 40 60          	movzwl 0x60(%rax),%eax
    1d93:	0f b7 d0             	movzwl %ax,%edx
    1d96:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
    1d9a:	89 d6                	mov    %edx,%esi
    1d9c:	89 c7                	mov    %eax,%edi
    1d9e:	e8 e5 22 00 00       	callq  4088 <crcu16>
    1da3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1da7:	66 89 42 60          	mov    %ax,0x60(%rdx)
    1dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1daf:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1db4:	48 89 c7             	mov    %rax,%rdi
    1db7:	e8 b9 f6 ff ff       	callq  1475 <core_bench_list>
    1dbc:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
    1dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dc4:	0f b7 40 60          	movzwl 0x60(%rax),%eax
    1dc8:	0f b7 d0             	movzwl %ax,%edx
    1dcb:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
    1dcf:	89 d6                	mov    %edx,%esi
    1dd1:	89 c7                	mov    %eax,%edi
    1dd3:	e8 b0 22 00 00       	callq  4088 <crcu16>
    1dd8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ddc:	66 89 42 60          	mov    %ax,0x60(%rdx)
    1de0:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    1de4:	75 10                	jne    1df6 <iterate+0xd6>
    1de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dea:	0f b7 50 60          	movzwl 0x60(%rax),%edx
    1dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1df2:	66 89 50 62          	mov    %dx,0x62(%rax)
    1df6:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    1dfa:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1dfd:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    1e00:	0f 82 70 ff ff ff    	jb     1d76 <iterate+0x56>
    1e06:	b8 00 00 00 00       	mov    $0x0,%eax
    1e0b:	c9                   	leaveq 
    1e0c:	c3                   	retq   

0000000000001e0d <main>:
    1e0d:	f3 0f 1e fa          	endbr64 
    1e11:	55                   	push   %rbp
    1e12:	48 89 e5             	mov    %rsp,%rbp
    1e15:	53                   	push   %rbx
    1e16:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    1e1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1e24:	00 00 
    1e26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1e2a:	31 c0                	xor    %eax,%eax
    1e2c:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
    1e33:	00 00 00 
    1e36:	66 c7 85 3e ff ff ff 	movw   $0x0,-0xc2(%rbp)
    1e3d:	00 00 
    1e3f:	66 c7 85 40 ff ff ff 	movw   $0x0,-0xc0(%rbp)
    1e46:	00 00 
    1e48:	66 c7 85 42 ff ff ff 	movw   $0xffff,-0xbe(%rbp)
    1e4f:	ff ff 
    1e51:	66 c7 85 44 ff ff ff 	movw   $0x0,-0xbc(%rbp)
    1e58:	00 00 
    1e5a:	66 c7 85 46 ff ff ff 	movw   $0x0,-0xba(%rbp)
    1e61:	00 00 
    1e63:	48 8d 95 68 ff ff ff 	lea    -0x98(%rbp),%rdx
    1e6a:	48 8d 85 48 ff ff ff 	lea    -0xb8(%rbp),%rax
    1e71:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    1e78:	48 83 c1 6a          	add    $0x6a,%rcx
    1e7c:	48 89 c6             	mov    %rax,%rsi
    1e7f:	48 89 cf             	mov    %rcx,%rdi
    1e82:	e8 f5 23 00 00       	callq  427c <portable_init>
    1e87:	bf 01 00 00 00       	mov    $0x1,%edi
    1e8c:	e8 00 21 00 00       	callq  3f91 <get_seed_32>
    1e91:	66 89 85 70 ff ff ff 	mov    %ax,-0x90(%rbp)
    1e98:	bf 02 00 00 00       	mov    $0x2,%edi
    1e9d:	e8 ef 20 00 00       	callq  3f91 <get_seed_32>
    1ea2:	66 89 85 72 ff ff ff 	mov    %ax,-0x8e(%rbp)
    1ea9:	bf 03 00 00 00       	mov    $0x3,%edi
    1eae:	e8 de 20 00 00       	callq  3f91 <get_seed_32>
    1eb3:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%rbp)
    1eba:	bf 04 00 00 00       	mov    $0x4,%edi
    1ebf:	e8 cd 20 00 00       	callq  3f91 <get_seed_32>
    1ec4:	89 45 9c             	mov    %eax,-0x64(%rbp)
    1ec7:	bf 05 00 00 00       	mov    $0x5,%edi
    1ecc:	e8 c0 20 00 00       	callq  3f91 <get_seed_32>
    1ed1:	89 45 a0             	mov    %eax,-0x60(%rbp)
    1ed4:	8b 45 a0             	mov    -0x60(%rbp),%eax
    1ed7:	85 c0                	test   %eax,%eax
    1ed9:	75 07                	jne    1ee2 <main+0xd5>
    1edb:	c7 45 a0 07 00 00 00 	movl   $0x7,-0x60(%rbp)
    1ee2:	0f b7 85 70 ff ff ff 	movzwl -0x90(%rbp),%eax
    1ee9:	66 85 c0             	test   %ax,%ax
    1eec:	75 33                	jne    1f21 <main+0x114>
    1eee:	0f b7 85 72 ff ff ff 	movzwl -0x8e(%rbp),%eax
    1ef5:	66 85 c0             	test   %ax,%ax
    1ef8:	75 27                	jne    1f21 <main+0x114>
    1efa:	0f b7 85 74 ff ff ff 	movzwl -0x8c(%rbp),%eax
    1f01:	66 85 c0             	test   %ax,%ax
    1f04:	75 1b                	jne    1f21 <main+0x114>
    1f06:	66 c7 85 70 ff ff ff 	movw   $0x0,-0x90(%rbp)
    1f0d:	00 00 
    1f0f:	66 c7 85 72 ff ff ff 	movw   $0x0,-0x8e(%rbp)
    1f16:	00 00 
    1f18:	66 c7 85 74 ff ff ff 	movw   $0x66,-0x8c(%rbp)
    1f1f:	66 00 
    1f21:	0f b7 85 70 ff ff ff 	movzwl -0x90(%rbp),%eax
    1f28:	66 83 f8 01          	cmp    $0x1,%ax
    1f2c:	75 33                	jne    1f61 <main+0x154>
    1f2e:	0f b7 85 72 ff ff ff 	movzwl -0x8e(%rbp),%eax
    1f35:	66 85 c0             	test   %ax,%ax
    1f38:	75 27                	jne    1f61 <main+0x154>
    1f3a:	0f b7 85 74 ff ff ff 	movzwl -0x8c(%rbp),%eax
    1f41:	66 85 c0             	test   %ax,%ax
    1f44:	75 1b                	jne    1f61 <main+0x154>
    1f46:	66 c7 85 70 ff ff ff 	movw   $0x3415,-0x90(%rbp)
    1f4d:	15 34 
    1f4f:	66 c7 85 72 ff ff ff 	movw   $0x3415,-0x8e(%rbp)
    1f56:	15 34 
    1f58:	66 c7 85 74 ff ff ff 	movw   $0x66,-0x8c(%rbp)
    1f5f:	66 00 
    1f61:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    1f68:	00 00 
    1f6a:	e9 b0 01 00 00       	jmpq   211f <main+0x312>
    1f6f:	bf 07 00 00 00       	mov    $0x7,%edi
    1f74:	e8 18 20 00 00       	callq  3f91 <get_seed_32>
    1f79:	98                   	cwtl   
    1f7a:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    1f80:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
    1f87:	74 2d                	je     1fb6 <main+0x1a9>
    1f89:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    1f90:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
    1f96:	48 63 d0             	movslq %eax,%rdx
    1f99:	48 89 d0             	mov    %rdx,%rax
    1f9c:	48 c1 e0 03          	shl    $0x3,%rax
    1fa0:	48 29 d0             	sub    %rdx,%rax
    1fa3:	48 c1 e0 04          	shl    $0x4,%rax
    1fa7:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    1fab:	48 01 d8             	add    %rbx,%rax
    1fae:	48 83 e8 58          	sub    $0x58,%rax
    1fb2:	89 08                	mov    %ecx,(%rax)
    1fb4:	eb 29                	jmp    1fdf <main+0x1d2>
    1fb6:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    1fbd:	48 63 d0             	movslq %eax,%rdx
    1fc0:	48 89 d0             	mov    %rdx,%rax
    1fc3:	48 c1 e0 03          	shl    $0x3,%rax
    1fc7:	48 29 d0             	sub    %rdx,%rax
    1fca:	48 c1 e0 04          	shl    $0x4,%rax
    1fce:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    1fd2:	48 01 d8             	add    %rbx,%rax
    1fd5:	48 83 e8 58          	sub    $0x58,%rax
    1fd9:	c7 00 d0 07 00 00    	movl   $0x7d0,(%rax)
    1fdf:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    1fe6:	48 63 d0             	movslq %eax,%rdx
    1fe9:	48 89 d0             	mov    %rdx,%rax
    1fec:	48 c1 e0 03          	shl    $0x3,%rax
    1ff0:	48 29 d0             	sub    %rdx,%rax
    1ff3:	48 c1 e0 04          	shl    $0x4,%rax
    1ff7:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    1ffb:	48 01 d8             	add    %rbx,%rax
    1ffe:	48 83 e8 58          	sub    $0x58,%rax
    2002:	8b 00                	mov    (%rax),%eax
    2004:	89 c0                	mov    %eax,%eax
    2006:	0f b7 9d 3c ff ff ff 	movzwl -0xc4(%rbp),%ebx
    200d:	48 89 c7             	mov    %rax,%rdi
    2010:	e8 63 21 00 00       	callq  4178 <portable_malloc>
    2015:	48 89 c1             	mov    %rax,%rcx
    2018:	48 63 d3             	movslq %ebx,%rdx
    201b:	48 89 d0             	mov    %rdx,%rax
    201e:	48 c1 e0 03          	shl    $0x3,%rax
    2022:	48 29 d0             	sub    %rdx,%rax
    2025:	48 c1 e0 04          	shl    $0x4,%rax
    2029:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    202d:	48 01 d8             	add    %rbx,%rax
    2030:	48 83 e8 78          	sub    $0x78,%rax
    2034:	48 89 08             	mov    %rcx,(%rax)
    2037:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    203e:	0f b7 8d 70 ff ff ff 	movzwl -0x90(%rbp),%ecx
    2045:	48 63 d0             	movslq %eax,%rdx
    2048:	48 89 d0             	mov    %rdx,%rax
    204b:	48 c1 e0 03          	shl    $0x3,%rax
    204f:	48 29 d0             	sub    %rdx,%rax
    2052:	48 c1 e0 04          	shl    $0x4,%rax
    2056:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    205a:	48 01 d8             	add    %rbx,%rax
    205d:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
    2061:	66 89 08             	mov    %cx,(%rax)
    2064:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    206b:	0f b7 8d 72 ff ff ff 	movzwl -0x8e(%rbp),%ecx
    2072:	48 63 d0             	movslq %eax,%rdx
    2075:	48 89 d0             	mov    %rdx,%rax
    2078:	48 c1 e0 03          	shl    $0x3,%rax
    207c:	48 29 d0             	sub    %rdx,%rax
    207f:	48 c1 e0 04          	shl    $0x4,%rax
    2083:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2087:	48 01 d8             	add    %rbx,%rax
    208a:	48 83 e8 7e          	sub    $0x7e,%rax
    208e:	66 89 08             	mov    %cx,(%rax)
    2091:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2098:	0f b7 8d 74 ff ff ff 	movzwl -0x8c(%rbp),%ecx
    209f:	48 63 d0             	movslq %eax,%rdx
    20a2:	48 89 d0             	mov    %rdx,%rax
    20a5:	48 c1 e0 03          	shl    $0x3,%rax
    20a9:	48 29 d0             	sub    %rdx,%rax
    20ac:	48 c1 e0 04          	shl    $0x4,%rax
    20b0:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    20b4:	48 01 d8             	add    %rbx,%rax
    20b7:	48 83 e8 7c          	sub    $0x7c,%rax
    20bb:	66 89 08             	mov    %cx,(%rax)
    20be:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    20c5:	48 63 d0             	movslq %eax,%rdx
    20c8:	48 89 d0             	mov    %rdx,%rax
    20cb:	48 c1 e0 03          	shl    $0x3,%rax
    20cf:	48 29 d0             	sub    %rdx,%rax
    20d2:	48 c1 e0 04          	shl    $0x4,%rax
    20d6:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    20da:	48 01 d8             	add    %rbx,%rax
    20dd:	48 83 e8 18          	sub    $0x18,%rax
    20e1:	66 c7 00 00 00       	movw   $0x0,(%rax)
    20e6:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    20ed:	8b 4d a0             	mov    -0x60(%rbp),%ecx
    20f0:	48 63 d0             	movslq %eax,%rdx
    20f3:	48 89 d0             	mov    %rdx,%rax
    20f6:	48 c1 e0 03          	shl    $0x3,%rax
    20fa:	48 29 d0             	sub    %rdx,%rax
    20fd:	48 c1 e0 04          	shl    $0x4,%rax
    2101:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2105:	48 01 d8             	add    %rbx,%rax
    2108:	48 83 e8 50          	sub    $0x50,%rax
    210c:	89 08                	mov    %ecx,(%rax)
    210e:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2115:	83 c0 01             	add    $0x1,%eax
    2118:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    211f:	66 83 bd 3c ff ff ff 	cmpw   $0x0,-0xc4(%rbp)
    2126:	00 
    2127:	0f 84 42 fe ff ff    	je     1f6f <main+0x162>
    212d:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2134:	00 00 
    2136:	eb 3f                	jmp    2177 <main+0x36a>
    2138:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    213f:	ba 01 00 00 00       	mov    $0x1,%edx
    2144:	89 c1                	mov    %eax,%ecx
    2146:	d3 e2                	shl    %cl,%edx
    2148:	89 d0                	mov    %edx,%eax
    214a:	89 c2                	mov    %eax,%edx
    214c:	8b 45 a0             	mov    -0x60(%rbp),%eax
    214f:	21 d0                	and    %edx,%eax
    2151:	85 c0                	test   %eax,%eax
    2153:	74 11                	je     2166 <main+0x359>
    2155:	0f b7 85 40 ff ff ff 	movzwl -0xc0(%rbp),%eax
    215c:	83 c0 01             	add    $0x1,%eax
    215f:	66 89 85 40 ff ff ff 	mov    %ax,-0xc0(%rbp)
    2166:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    216d:	83 c0 01             	add    $0x1,%eax
    2170:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2177:	66 83 bd 3c ff ff ff 	cmpw   $0x2,-0xc4(%rbp)
    217e:	02 
    217f:	76 b7                	jbe    2138 <main+0x32b>
    2181:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2188:	00 00 
    218a:	eb 6b                	jmp    21f7 <main+0x3ea>
    218c:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2193:	48 63 d0             	movslq %eax,%rdx
    2196:	48 89 d0             	mov    %rdx,%rax
    2199:	48 c1 e0 03          	shl    $0x3,%rax
    219d:	48 29 d0             	sub    %rdx,%rax
    21a0:	48 c1 e0 04          	shl    $0x4,%rax
    21a4:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    21a8:	48 01 d8             	add    %rbx,%rax
    21ab:	48 83 e8 58          	sub    $0x58,%rax
    21af:	8b 00                	mov    (%rax),%eax
    21b1:	0f b7 b5 40 ff ff ff 	movzwl -0xc0(%rbp),%esi
    21b8:	0f b7 8d 3c ff ff ff 	movzwl -0xc4(%rbp),%ecx
    21bf:	ba 00 00 00 00       	mov    $0x0,%edx
    21c4:	f7 f6                	div    %esi
    21c6:	89 c6                	mov    %eax,%esi
    21c8:	48 63 d1             	movslq %ecx,%rdx
    21cb:	48 89 d0             	mov    %rdx,%rax
    21ce:	48 c1 e0 03          	shl    $0x3,%rax
    21d2:	48 29 d0             	sub    %rdx,%rax
    21d5:	48 c1 e0 04          	shl    $0x4,%rax
    21d9:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    21dd:	48 01 d8             	add    %rbx,%rax
    21e0:	48 83 e8 58          	sub    $0x58,%rax
    21e4:	89 30                	mov    %esi,(%rax)
    21e6:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    21ed:	83 c0 01             	add    $0x1,%eax
    21f0:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    21f7:	66 83 bd 3c ff ff ff 	cmpw   $0x0,-0xc4(%rbp)
    21fe:	00 
    21ff:	74 8b                	je     218c <main+0x37f>
    2201:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2208:	00 00 
    220a:	e9 be 00 00 00       	jmpq   22cd <main+0x4c0>
    220f:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2216:	ba 01 00 00 00       	mov    $0x1,%edx
    221b:	89 c1                	mov    %eax,%ecx
    221d:	d3 e2                	shl    %cl,%edx
    221f:	89 d0                	mov    %edx,%eax
    2221:	89 c2                	mov    %eax,%edx
    2223:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2226:	21 d0                	and    %edx,%eax
    2228:	85 c0                	test   %eax,%eax
    222a:	0f 84 8c 00 00 00    	je     22bc <main+0x4af>
    2230:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    2237:	00 00 00 
    223a:	eb 66                	jmp    22a2 <main+0x495>
    223c:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx
    2242:	48 89 d0             	mov    %rdx,%rax
    2245:	48 c1 e0 03          	shl    $0x3,%rax
    2249:	48 29 d0             	sub    %rdx,%rax
    224c:	48 c1 e0 04          	shl    $0x4,%rax
    2250:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2254:	48 01 d8             	add    %rbx,%rax
    2257:	48 83 e8 78          	sub    $0x78,%rax
    225b:	48 8b 00             	mov    (%rax),%rax
    225e:	8b 4d 98             	mov    -0x68(%rbp),%ecx
    2261:	0f b7 95 3e ff ff ff 	movzwl -0xc2(%rbp),%edx
    2268:	0f af d1             	imul   %ecx,%edx
    226b:	89 d1                	mov    %edx,%ecx
    226d:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2274:	83 c2 01             	add    $0x1,%edx
    2277:	48 01 c1             	add    %rax,%rcx
    227a:	48 63 f2             	movslq %edx,%rsi
    227d:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx
    2283:	48 89 d0             	mov    %rdx,%rax
    2286:	48 c1 e0 03          	shl    $0x3,%rax
    228a:	48 29 d0             	sub    %rdx,%rax
    228d:	48 01 c0             	add    %rax,%rax
    2290:	48 01 f0             	add    %rsi,%rax
    2293:	48 89 8c c5 78 ff ff 	mov    %rcx,-0x88(%rbp,%rax,8)
    229a:	ff 
    229b:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    22a2:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
    22a9:	74 91                	je     223c <main+0x42f>
    22ab:	0f b7 85 3e ff ff ff 	movzwl -0xc2(%rbp),%eax
    22b2:	83 c0 01             	add    $0x1,%eax
    22b5:	66 89 85 3e ff ff ff 	mov    %ax,-0xc2(%rbp)
    22bc:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    22c3:	83 c0 01             	add    $0x1,%eax
    22c6:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    22cd:	66 83 bd 3c ff ff ff 	cmpw   $0x2,-0xc4(%rbp)
    22d4:	02 
    22d5:	0f 86 34 ff ff ff    	jbe    220f <main+0x402>
    22db:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    22e2:	00 00 
    22e4:	e9 31 02 00 00       	jmpq   251a <main+0x70d>
    22e9:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    22f0:	48 63 d0             	movslq %eax,%rdx
    22f3:	48 89 d0             	mov    %rdx,%rax
    22f6:	48 c1 e0 03          	shl    $0x3,%rax
    22fa:	48 29 d0             	sub    %rdx,%rax
    22fd:	48 c1 e0 04          	shl    $0x4,%rax
    2301:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2305:	48 01 d8             	add    %rbx,%rax
    2308:	48 83 e8 50          	sub    $0x50,%rax
    230c:	8b 00                	mov    (%rax),%eax
    230e:	83 e0 01             	and    $0x1,%eax
    2311:	85 c0                	test   %eax,%eax
    2313:	0f 84 87 00 00 00    	je     23a0 <main+0x593>
    2319:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2320:	48 63 d0             	movslq %eax,%rdx
    2323:	48 89 d0             	mov    %rdx,%rax
    2326:	48 c1 e0 03          	shl    $0x3,%rax
    232a:	48 29 d0             	sub    %rdx,%rax
    232d:	48 c1 e0 04          	shl    $0x4,%rax
    2331:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2335:	48 01 d8             	add    %rbx,%rax
    2338:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
    233c:	0f b7 00             	movzwl (%rax),%eax
    233f:	0f bf f0             	movswl %ax,%esi
    2342:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2349:	48 63 d0             	movslq %eax,%rdx
    234c:	48 89 d0             	mov    %rdx,%rax
    234f:	48 c1 e0 03          	shl    $0x3,%rax
    2353:	48 29 d0             	sub    %rdx,%rax
    2356:	48 c1 e0 04          	shl    $0x4,%rax
    235a:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    235e:	48 01 d8             	add    %rbx,%rax
    2361:	48 83 e8 70          	sub    $0x70,%rax
    2365:	48 8b 08             	mov    (%rax),%rcx
    2368:	8b 45 98             	mov    -0x68(%rbp),%eax
    236b:	0f b7 9d 3c ff ff ff 	movzwl -0xc4(%rbp),%ebx
    2372:	89 f2                	mov    %esi,%edx
    2374:	48 89 ce             	mov    %rcx,%rsi
    2377:	89 c7                	mov    %eax,%edi
    2379:	e8 88 f3 ff ff       	callq  1706 <core_list_init>
    237e:	48 89 c1             	mov    %rax,%rcx
    2381:	48 63 d3             	movslq %ebx,%rdx
    2384:	48 89 d0             	mov    %rdx,%rax
    2387:	48 c1 e0 03          	shl    $0x3,%rax
    238b:	48 29 d0             	sub    %rdx,%rax
    238e:	48 c1 e0 04          	shl    $0x4,%rax
    2392:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2396:	48 01 d8             	add    %rbx,%rax
    2399:	48 83 e8 48          	sub    $0x48,%rax
    239d:	48 89 08             	mov    %rcx,(%rax)
    23a0:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    23a7:	48 63 d0             	movslq %eax,%rdx
    23aa:	48 89 d0             	mov    %rdx,%rax
    23ad:	48 c1 e0 03          	shl    $0x3,%rax
    23b1:	48 29 d0             	sub    %rdx,%rax
    23b4:	48 c1 e0 04          	shl    $0x4,%rax
    23b8:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    23bc:	48 01 d8             	add    %rbx,%rax
    23bf:	48 83 e8 50          	sub    $0x50,%rax
    23c3:	8b 00                	mov    (%rax),%eax
    23c5:	83 e0 02             	and    $0x2,%eax
    23c8:	85 c0                	test   %eax,%eax
    23ca:	0f 84 af 00 00 00    	je     247f <main+0x672>
    23d0:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    23d7:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    23de:	48 63 d0             	movslq %eax,%rdx
    23e1:	48 89 d0             	mov    %rdx,%rax
    23e4:	48 c1 e0 03          	shl    $0x3,%rax
    23e8:	48 29 d0             	sub    %rdx,%rax
    23eb:	48 c1 e0 04          	shl    $0x4,%rax
    23ef:	48 83 c0 40          	add    $0x40,%rax
    23f3:	48 01 c1             	add    %rax,%rcx
    23f6:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    23fd:	48 63 d0             	movslq %eax,%rdx
    2400:	48 89 d0             	mov    %rdx,%rax
    2403:	48 c1 e0 03          	shl    $0x3,%rax
    2407:	48 29 d0             	sub    %rdx,%rax
    240a:	48 c1 e0 04          	shl    $0x4,%rax
    240e:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2412:	48 01 d8             	add    %rbx,%rax
    2415:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
    2419:	0f b7 00             	movzwl (%rax),%eax
    241c:	0f bf f0             	movswl %ax,%esi
    241f:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2426:	48 63 d0             	movslq %eax,%rdx
    2429:	48 89 d0             	mov    %rdx,%rax
    242c:	48 c1 e0 03          	shl    $0x3,%rax
    2430:	48 29 d0             	sub    %rdx,%rax
    2433:	48 c1 e0 04          	shl    $0x4,%rax
    2437:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    243b:	48 01 d8             	add    %rbx,%rax
    243e:	48 83 e8 7e          	sub    $0x7e,%rax
    2442:	0f b7 00             	movzwl (%rax),%eax
    2445:	98                   	cwtl   
    2446:	c1 e0 10             	shl    $0x10,%eax
    2449:	09 c6                	or     %eax,%esi
    244b:	89 f7                	mov    %esi,%edi
    244d:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2454:	48 63 d0             	movslq %eax,%rdx
    2457:	48 89 d0             	mov    %rdx,%rax
    245a:	48 c1 e0 03          	shl    $0x3,%rax
    245e:	48 29 d0             	sub    %rdx,%rax
    2461:	48 c1 e0 04          	shl    $0x4,%rax
    2465:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    2469:	48 01 f0             	add    %rsi,%rax
    246c:	48 83 e8 68          	sub    $0x68,%rax
    2470:	48 8b 30             	mov    (%rax),%rsi
    2473:	8b 45 98             	mov    -0x68(%rbp),%eax
    2476:	89 fa                	mov    %edi,%edx
    2478:	89 c7                	mov    %eax,%edi
    247a:	e8 cc 0d 00 00       	callq  324b <core_init_matrix>
    247f:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2486:	48 63 d0             	movslq %eax,%rdx
    2489:	48 89 d0             	mov    %rdx,%rax
    248c:	48 c1 e0 03          	shl    $0x3,%rax
    2490:	48 29 d0             	sub    %rdx,%rax
    2493:	48 c1 e0 04          	shl    $0x4,%rax
    2497:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    249b:	48 01 f0             	add    %rsi,%rax
    249e:	48 83 e8 50          	sub    $0x50,%rax
    24a2:	8b 00                	mov    (%rax),%eax
    24a4:	83 e0 04             	and    $0x4,%eax
    24a7:	85 c0                	test   %eax,%eax
    24a9:	74 5e                	je     2509 <main+0x6fc>
    24ab:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    24b2:	48 63 d0             	movslq %eax,%rdx
    24b5:	48 89 d0             	mov    %rdx,%rax
    24b8:	48 c1 e0 03          	shl    $0x3,%rax
    24bc:	48 29 d0             	sub    %rdx,%rax
    24bf:	48 c1 e0 04          	shl    $0x4,%rax
    24c3:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    24c7:	48 01 d8             	add    %rbx,%rax
    24ca:	48 83 e8 60          	sub    $0x60,%rax
    24ce:	48 8b 30             	mov    (%rax),%rsi
    24d1:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    24d8:	48 63 d0             	movslq %eax,%rdx
    24db:	48 89 d0             	mov    %rdx,%rax
    24de:	48 c1 e0 03          	shl    $0x3,%rax
    24e2:	48 29 d0             	sub    %rdx,%rax
    24e5:	48 c1 e0 04          	shl    $0x4,%rax
    24e9:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    24ed:	48 01 d8             	add    %rbx,%rax
    24f0:	48 83 c0 80          	add    $0xffffffffffffff80,%rax
    24f4:	0f b7 00             	movzwl (%rax),%eax
    24f7:	0f bf c8             	movswl %ax,%ecx
    24fa:	8b 45 98             	mov    -0x68(%rbp),%eax
    24fd:	48 89 f2             	mov    %rsi,%rdx
    2500:	89 ce                	mov    %ecx,%esi
    2502:	89 c7                	mov    %eax,%edi
    2504:	e8 cf 15 00 00       	callq  3ad8 <core_init_state>
    2509:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2510:	83 c0 01             	add    $0x1,%eax
    2513:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    251a:	66 83 bd 3c ff ff ff 	cmpw   $0x0,-0xc4(%rbp)
    2521:	00 
    2522:	0f 84 c1 fd ff ff    	je     22e9 <main+0x4dc>
    2528:	8b 45 9c             	mov    -0x64(%rbp),%eax
    252b:	85 c0                	test   %eax,%eax
    252d:	0f 85 aa 00 00 00    	jne    25dd <main+0x7d0>
    2533:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2537:	f2 0f 11 85 58 ff ff 	movsd  %xmm0,-0xa8(%rbp)
    253e:	ff 
    253f:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%rbp)
    2546:	eb 41                	jmp    2589 <main+0x77c>
    2548:	8b 55 9c             	mov    -0x64(%rbp),%edx
    254b:	89 d0                	mov    %edx,%eax
    254d:	c1 e0 02             	shl    $0x2,%eax
    2550:	01 d0                	add    %edx,%eax
    2552:	01 c0                	add    %eax,%eax
    2554:	89 45 9c             	mov    %eax,-0x64(%rbp)
    2557:	e8 59 1c 00 00       	callq  41b5 <start_time>
    255c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    2563:	48 89 c7             	mov    %rax,%rdi
    2566:	e8 b5 f7 ff ff       	callq  1d20 <iterate>
    256b:	e8 61 1c 00 00       	callq  41d1 <stop_time>
    2570:	e8 78 1c 00 00       	callq  41ed <get_time>
    2575:	48 89 c7             	mov    %rax,%rdi
    2578:	e8 d5 1c 00 00       	callq  4252 <time_in_secs>
    257d:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2582:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    2589:	f2 0f 10 05 e7 2e 00 	movsd  0x2ee7(%rip),%xmm0        # 5478 <_IO_stdin_used+0x478>
    2590:	00 
    2591:	66 0f 2f 85 58 ff ff 	comisd -0xa8(%rbp),%xmm0
    2598:	ff 
    2599:	77 ad                	ja     2548 <main+0x73b>
    259b:	f2 0f 10 85 58 ff ff 	movsd  -0xa8(%rbp),%xmm0
    25a2:	ff 
    25a3:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    25a8:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    25ae:	83 bd 50 ff ff ff 00 	cmpl   $0x0,-0xb0(%rbp)
    25b5:	75 0a                	jne    25c1 <main+0x7b4>
    25b7:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
    25be:	00 00 00 
    25c1:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
    25c4:	b8 0a 00 00 00       	mov    $0xa,%eax
    25c9:	ba 00 00 00 00       	mov    $0x0,%edx
    25ce:	f7 b5 50 ff ff ff    	divl   -0xb0(%rbp)
    25d4:	83 c0 01             	add    $0x1,%eax
    25d7:	0f af c1             	imul   %ecx,%eax
    25da:	89 45 9c             	mov    %eax,-0x64(%rbp)
    25dd:	e8 d3 1b 00 00       	callq  41b5 <start_time>
    25e2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    25e9:	48 89 c7             	mov    %rax,%rdi
    25ec:	e8 2f f7 ff ff       	callq  1d20 <iterate>
    25f1:	e8 db 1b 00 00       	callq  41d1 <stop_time>
    25f6:	e8 f2 1b 00 00       	callq  41ed <get_time>
    25fb:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    2602:	0f b7 95 46 ff ff ff 	movzwl -0xba(%rbp),%edx
    2609:	0f b7 85 70 ff ff ff 	movzwl -0x90(%rbp),%eax
    2610:	98                   	cwtl   
    2611:	89 d6                	mov    %edx,%esi
    2613:	89 c7                	mov    %eax,%edi
    2615:	e8 08 1b 00 00       	callq  4122 <crc16>
    261a:	66 89 85 46 ff ff ff 	mov    %ax,-0xba(%rbp)
    2621:	0f b7 95 46 ff ff ff 	movzwl -0xba(%rbp),%edx
    2628:	0f b7 85 72 ff ff ff 	movzwl -0x8e(%rbp),%eax
    262f:	98                   	cwtl   
    2630:	89 d6                	mov    %edx,%esi
    2632:	89 c7                	mov    %eax,%edi
    2634:	e8 e9 1a 00 00       	callq  4122 <crc16>
    2639:	66 89 85 46 ff ff ff 	mov    %ax,-0xba(%rbp)
    2640:	0f b7 95 46 ff ff ff 	movzwl -0xba(%rbp),%edx
    2647:	0f b7 85 74 ff ff ff 	movzwl -0x8c(%rbp),%eax
    264e:	98                   	cwtl   
    264f:	89 d6                	mov    %edx,%esi
    2651:	89 c7                	mov    %eax,%edi
    2653:	e8 ca 1a 00 00       	callq  4122 <crc16>
    2658:	66 89 85 46 ff ff ff 	mov    %ax,-0xba(%rbp)
    265f:	0f b7 95 46 ff ff ff 	movzwl -0xba(%rbp),%edx
    2666:	8b 45 98             	mov    -0x68(%rbp),%eax
    2669:	98                   	cwtl   
    266a:	89 d6                	mov    %edx,%esi
    266c:	89 c7                	mov    %eax,%edi
    266e:	e8 af 1a 00 00       	callq  4122 <crc16>
    2673:	66 89 85 46 ff ff ff 	mov    %ax,-0xba(%rbp)
    267a:	0f b7 85 46 ff ff ff 	movzwl -0xba(%rbp),%eax
    2681:	3d f5 e9 00 00       	cmp    $0xe9f5,%eax
    2686:	0f 84 84 00 00 00    	je     2710 <main+0x903>
    268c:	3d f5 e9 00 00       	cmp    $0xe9f5,%eax
    2691:	0f 8f a7 00 00 00    	jg     273e <main+0x931>
    2697:	3d 02 8a 00 00       	cmp    $0x8a02,%eax
    269c:	74 2d                	je     26cb <main+0x8be>
    269e:	3d 02 8a 00 00       	cmp    $0x8a02,%eax
    26a3:	0f 8f 95 00 00 00    	jg     273e <main+0x931>
    26a9:	3d 05 7b 00 00       	cmp    $0x7b05,%eax
    26ae:	74 32                	je     26e2 <main+0x8d5>
    26b0:	3d 05 7b 00 00       	cmp    $0x7b05,%eax
    26b5:	0f 8f 83 00 00 00    	jg     273e <main+0x931>
    26bb:	3d f2 18 00 00       	cmp    $0x18f2,%eax
    26c0:	74 65                	je     2727 <main+0x91a>
    26c2:	3d af 4e 00 00       	cmp    $0x4eaf,%eax
    26c7:	74 30                	je     26f9 <main+0x8ec>
    26c9:	eb 73                	jmp    273e <main+0x931>
    26cb:	66 c7 85 42 ff ff ff 	movw   $0x0,-0xbe(%rbp)
    26d2:	00 00 
    26d4:	48 8d 3d 45 29 00 00 	lea    0x2945(%rip),%rdi        # 5020 <_IO_stdin_used+0x20>
    26db:	e8 f0 e9 ff ff       	callq  10d0 <puts@plt>
    26e0:	eb 66                	jmp    2748 <main+0x93b>
    26e2:	66 c7 85 42 ff ff ff 	movw   $0x1,-0xbe(%rbp)
    26e9:	01 00 
    26eb:	48 8d 3d 5e 29 00 00 	lea    0x295e(%rip),%rdi        # 5050 <_IO_stdin_used+0x50>
    26f2:	e8 d9 e9 ff ff       	callq  10d0 <puts@plt>
    26f7:	eb 4f                	jmp    2748 <main+0x93b>
    26f9:	66 c7 85 42 ff ff ff 	movw   $0x2,-0xbe(%rbp)
    2700:	02 00 
    2702:	48 8d 3d 77 29 00 00 	lea    0x2977(%rip),%rdi        # 5080 <_IO_stdin_used+0x80>
    2709:	e8 c2 e9 ff ff       	callq  10d0 <puts@plt>
    270e:	eb 38                	jmp    2748 <main+0x93b>
    2710:	66 c7 85 42 ff ff ff 	movw   $0x3,-0xbe(%rbp)
    2717:	03 00 
    2719:	48 8d 3d 90 29 00 00 	lea    0x2990(%rip),%rdi        # 50b0 <_IO_stdin_used+0xb0>
    2720:	e8 ab e9 ff ff       	callq  10d0 <puts@plt>
    2725:	eb 21                	jmp    2748 <main+0x93b>
    2727:	66 c7 85 42 ff ff ff 	movw   $0x4,-0xbe(%rbp)
    272e:	04 00 
    2730:	48 8d 3d a9 29 00 00 	lea    0x29a9(%rip),%rdi        # 50e0 <_IO_stdin_used+0xe0>
    2737:	e8 94 e9 ff ff       	callq  10d0 <puts@plt>
    273c:	eb 0a                	jmp    2748 <main+0x93b>
    273e:	66 c7 85 44 ff ff ff 	movw   $0xffff,-0xbc(%rbp)
    2745:	ff ff 
    2747:	90                   	nop
    2748:	66 83 bd 42 ff ff ff 	cmpw   $0x0,-0xbe(%rbp)
    274f:	00 
    2750:	0f 88 f1 03 00 00    	js     2b47 <main+0xd3a>
    2756:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    275d:	00 00 
    275f:	e9 ce 03 00 00       	jmpq   2b32 <main+0xd25>
    2764:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    276b:	48 63 d0             	movslq %eax,%rdx
    276e:	48 89 d0             	mov    %rdx,%rax
    2771:	48 c1 e0 03          	shl    $0x3,%rax
    2775:	48 29 d0             	sub    %rdx,%rax
    2778:	48 c1 e0 04          	shl    $0x4,%rax
    277c:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    2780:	48 01 f0             	add    %rsi,%rax
    2783:	48 83 e8 18          	sub    $0x18,%rax
    2787:	66 c7 00 00 00       	movw   $0x0,(%rax)
    278c:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2793:	48 63 d0             	movslq %eax,%rdx
    2796:	48 89 d0             	mov    %rdx,%rax
    2799:	48 c1 e0 03          	shl    $0x3,%rax
    279d:	48 29 d0             	sub    %rdx,%rax
    27a0:	48 c1 e0 04          	shl    $0x4,%rax
    27a4:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    27a8:	48 01 f0             	add    %rsi,%rax
    27ab:	48 83 e8 50          	sub    $0x50,%rax
    27af:	8b 00                	mov    (%rax),%eax
    27b1:	83 e0 01             	and    $0x1,%eax
    27b4:	85 c0                	test   %eax,%eax
    27b6:	0f 84 ef 00 00 00    	je     28ab <main+0xa9e>
    27bc:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    27c3:	48 63 d0             	movslq %eax,%rdx
    27c6:	48 89 d0             	mov    %rdx,%rax
    27c9:	48 c1 e0 03          	shl    $0x3,%rax
    27cd:	48 29 d0             	sub    %rdx,%rax
    27d0:	48 c1 e0 04          	shl    $0x4,%rax
    27d4:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    27d8:	48 01 d8             	add    %rbx,%rax
    27db:	48 83 e8 1e          	sub    $0x1e,%rax
    27df:	0f b7 10             	movzwl (%rax),%edx
    27e2:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    27e9:	48 98                	cltq   
    27eb:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    27ef:	48 8d 05 1a 48 00 00 	lea    0x481a(%rip),%rax        # 7010 <list_known_crc>
    27f6:	0f b7 04 01          	movzwl (%rcx,%rax,1),%eax
    27fa:	66 39 c2             	cmp    %ax,%dx
    27fd:	0f 84 a8 00 00 00    	je     28ab <main+0xa9e>
    2803:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    280a:	48 98                	cltq   
    280c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2810:	48 8d 05 f9 47 00 00 	lea    0x47f9(%rip),%rax        # 7010 <list_known_crc>
    2817:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    281b:	0f b7 c8             	movzwl %ax,%ecx
    281e:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2825:	48 63 d0             	movslq %eax,%rdx
    2828:	48 89 d0             	mov    %rdx,%rax
    282b:	48 c1 e0 03          	shl    $0x3,%rax
    282f:	48 29 d0             	sub    %rdx,%rax
    2832:	48 c1 e0 04          	shl    $0x4,%rax
    2836:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    283a:	48 01 f0             	add    %rsi,%rax
    283d:	48 83 e8 1e          	sub    $0x1e,%rax
    2841:	0f b7 00             	movzwl (%rax),%eax
    2844:	0f b7 d0             	movzwl %ax,%edx
    2847:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    284e:	89 c6                	mov    %eax,%esi
    2850:	48 8d 3d b9 28 00 00 	lea    0x28b9(%rip),%rdi        # 5110 <_IO_stdin_used+0x110>
    2857:	b8 00 00 00 00       	mov    $0x0,%eax
    285c:	e8 9f e8 ff ff       	callq  1100 <printf@plt>
    2861:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2868:	48 63 ca             	movslq %edx,%rcx
    286b:	48 89 c8             	mov    %rcx,%rax
    286e:	48 c1 e0 03          	shl    $0x3,%rax
    2872:	48 29 c8             	sub    %rcx,%rax
    2875:	48 c1 e0 04          	shl    $0x4,%rax
    2879:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    287d:	48 01 d8             	add    %rbx,%rax
    2880:	48 83 e8 18          	sub    $0x18,%rax
    2884:	0f b7 00             	movzwl (%rax),%eax
    2887:	83 c0 01             	add    $0x1,%eax
    288a:	89 c1                	mov    %eax,%ecx
    288c:	48 63 d2             	movslq %edx,%rdx
    288f:	48 89 d0             	mov    %rdx,%rax
    2892:	48 c1 e0 03          	shl    $0x3,%rax
    2896:	48 29 d0             	sub    %rdx,%rax
    2899:	48 c1 e0 04          	shl    $0x4,%rax
    289d:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    28a1:	48 01 f0             	add    %rsi,%rax
    28a4:	48 83 e8 18          	sub    $0x18,%rax
    28a8:	66 89 08             	mov    %cx,(%rax)
    28ab:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    28b2:	48 63 d0             	movslq %eax,%rdx
    28b5:	48 89 d0             	mov    %rdx,%rax
    28b8:	48 c1 e0 03          	shl    $0x3,%rax
    28bc:	48 29 d0             	sub    %rdx,%rax
    28bf:	48 c1 e0 04          	shl    $0x4,%rax
    28c3:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    28c7:	48 01 d8             	add    %rbx,%rax
    28ca:	48 83 e8 50          	sub    $0x50,%rax
    28ce:	8b 00                	mov    (%rax),%eax
    28d0:	83 e0 02             	and    $0x2,%eax
    28d3:	85 c0                	test   %eax,%eax
    28d5:	0f 84 ef 00 00 00    	je     29ca <main+0xbbd>
    28db:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    28e2:	48 63 d0             	movslq %eax,%rdx
    28e5:	48 89 d0             	mov    %rdx,%rax
    28e8:	48 c1 e0 03          	shl    $0x3,%rax
    28ec:	48 29 d0             	sub    %rdx,%rax
    28ef:	48 c1 e0 04          	shl    $0x4,%rax
    28f3:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    28f7:	48 01 f0             	add    %rsi,%rax
    28fa:	48 83 e8 1c          	sub    $0x1c,%rax
    28fe:	0f b7 10             	movzwl (%rax),%edx
    2901:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    2908:	48 98                	cltq   
    290a:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    290e:	48 8d 05 0b 47 00 00 	lea    0x470b(%rip),%rax        # 7020 <matrix_known_crc>
    2915:	0f b7 04 01          	movzwl (%rcx,%rax,1),%eax
    2919:	66 39 c2             	cmp    %ax,%dx
    291c:	0f 84 a8 00 00 00    	je     29ca <main+0xbbd>
    2922:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    2929:	48 98                	cltq   
    292b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    292f:	48 8d 05 ea 46 00 00 	lea    0x46ea(%rip),%rax        # 7020 <matrix_known_crc>
    2936:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    293a:	0f b7 c8             	movzwl %ax,%ecx
    293d:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2944:	48 63 d0             	movslq %eax,%rdx
    2947:	48 89 d0             	mov    %rdx,%rax
    294a:	48 c1 e0 03          	shl    $0x3,%rax
    294e:	48 29 d0             	sub    %rdx,%rax
    2951:	48 c1 e0 04          	shl    $0x4,%rax
    2955:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2959:	48 01 d8             	add    %rbx,%rax
    295c:	48 83 e8 1c          	sub    $0x1c,%rax
    2960:	0f b7 00             	movzwl (%rax),%eax
    2963:	0f b7 d0             	movzwl %ax,%edx
    2966:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    296d:	89 c6                	mov    %eax,%esi
    296f:	48 8d 3d ca 27 00 00 	lea    0x27ca(%rip),%rdi        # 5140 <_IO_stdin_used+0x140>
    2976:	b8 00 00 00 00       	mov    $0x0,%eax
    297b:	e8 80 e7 ff ff       	callq  1100 <printf@plt>
    2980:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2987:	48 63 ca             	movslq %edx,%rcx
    298a:	48 89 c8             	mov    %rcx,%rax
    298d:	48 c1 e0 03          	shl    $0x3,%rax
    2991:	48 29 c8             	sub    %rcx,%rax
    2994:	48 c1 e0 04          	shl    $0x4,%rax
    2998:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    299c:	48 01 f0             	add    %rsi,%rax
    299f:	48 83 e8 18          	sub    $0x18,%rax
    29a3:	0f b7 00             	movzwl (%rax),%eax
    29a6:	83 c0 01             	add    $0x1,%eax
    29a9:	89 c1                	mov    %eax,%ecx
    29ab:	48 63 d2             	movslq %edx,%rdx
    29ae:	48 89 d0             	mov    %rdx,%rax
    29b1:	48 c1 e0 03          	shl    $0x3,%rax
    29b5:	48 29 d0             	sub    %rdx,%rax
    29b8:	48 c1 e0 04          	shl    $0x4,%rax
    29bc:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    29c0:	48 01 d8             	add    %rbx,%rax
    29c3:	48 83 e8 18          	sub    $0x18,%rax
    29c7:	66 89 08             	mov    %cx,(%rax)
    29ca:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    29d1:	48 63 d0             	movslq %eax,%rdx
    29d4:	48 89 d0             	mov    %rdx,%rax
    29d7:	48 c1 e0 03          	shl    $0x3,%rax
    29db:	48 29 d0             	sub    %rdx,%rax
    29de:	48 c1 e0 04          	shl    $0x4,%rax
    29e2:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    29e6:	48 01 f0             	add    %rsi,%rax
    29e9:	48 83 e8 50          	sub    $0x50,%rax
    29ed:	8b 00                	mov    (%rax),%eax
    29ef:	83 e0 04             	and    $0x4,%eax
    29f2:	85 c0                	test   %eax,%eax
    29f4:	0f 84 ef 00 00 00    	je     2ae9 <main+0xcdc>
    29fa:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2a01:	48 63 d0             	movslq %eax,%rdx
    2a04:	48 89 d0             	mov    %rdx,%rax
    2a07:	48 c1 e0 03          	shl    $0x3,%rax
    2a0b:	48 29 d0             	sub    %rdx,%rax
    2a0e:	48 c1 e0 04          	shl    $0x4,%rax
    2a12:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    2a16:	48 01 f8             	add    %rdi,%rax
    2a19:	48 83 e8 1a          	sub    $0x1a,%rax
    2a1d:	0f b7 10             	movzwl (%rax),%edx
    2a20:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    2a27:	48 98                	cltq   
    2a29:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    2a2d:	48 8d 05 fc 45 00 00 	lea    0x45fc(%rip),%rax        # 7030 <state_known_crc>
    2a34:	0f b7 04 01          	movzwl (%rcx,%rax,1),%eax
    2a38:	66 39 c2             	cmp    %ax,%dx
    2a3b:	0f 84 a8 00 00 00    	je     2ae9 <main+0xcdc>
    2a41:	0f bf 85 42 ff ff ff 	movswl -0xbe(%rbp),%eax
    2a48:	48 98                	cltq   
    2a4a:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    2a4e:	48 8d 05 db 45 00 00 	lea    0x45db(%rip),%rax        # 7030 <state_known_crc>
    2a55:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    2a59:	0f b7 c8             	movzwl %ax,%ecx
    2a5c:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2a63:	48 63 d0             	movslq %eax,%rdx
    2a66:	48 89 d0             	mov    %rdx,%rax
    2a69:	48 c1 e0 03          	shl    $0x3,%rax
    2a6d:	48 29 d0             	sub    %rdx,%rax
    2a70:	48 c1 e0 04          	shl    $0x4,%rax
    2a74:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2a78:	48 01 d8             	add    %rbx,%rax
    2a7b:	48 83 e8 1a          	sub    $0x1a,%rax
    2a7f:	0f b7 00             	movzwl (%rax),%eax
    2a82:	0f b7 d0             	movzwl %ax,%edx
    2a85:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2a8c:	89 c6                	mov    %eax,%esi
    2a8e:	48 8d 3d e3 26 00 00 	lea    0x26e3(%rip),%rdi        # 5178 <_IO_stdin_used+0x178>
    2a95:	b8 00 00 00 00       	mov    $0x0,%eax
    2a9a:	e8 61 e6 ff ff       	callq  1100 <printf@plt>
    2a9f:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2aa6:	48 63 ca             	movslq %edx,%rcx
    2aa9:	48 89 c8             	mov    %rcx,%rax
    2aac:	48 c1 e0 03          	shl    $0x3,%rax
    2ab0:	48 29 c8             	sub    %rcx,%rax
    2ab3:	48 c1 e0 04          	shl    $0x4,%rax
    2ab7:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    2abb:	48 01 f0             	add    %rsi,%rax
    2abe:	48 83 e8 18          	sub    $0x18,%rax
    2ac2:	0f b7 00             	movzwl (%rax),%eax
    2ac5:	83 c0 01             	add    $0x1,%eax
    2ac8:	89 c1                	mov    %eax,%ecx
    2aca:	48 63 d2             	movslq %edx,%rdx
    2acd:	48 89 d0             	mov    %rdx,%rax
    2ad0:	48 c1 e0 03          	shl    $0x3,%rax
    2ad4:	48 29 d0             	sub    %rdx,%rax
    2ad7:	48 c1 e0 04          	shl    $0x4,%rax
    2adb:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    2adf:	48 01 f8             	add    %rdi,%rax
    2ae2:	48 83 e8 18          	sub    $0x18,%rax
    2ae6:	66 89 08             	mov    %cx,(%rax)
    2ae9:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2af0:	48 63 d0             	movslq %eax,%rdx
    2af3:	48 89 d0             	mov    %rdx,%rax
    2af6:	48 c1 e0 03          	shl    $0x3,%rax
    2afa:	48 29 d0             	sub    %rdx,%rax
    2afd:	48 c1 e0 04          	shl    $0x4,%rax
    2b01:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2b05:	48 01 d8             	add    %rbx,%rax
    2b08:	48 83 e8 18          	sub    $0x18,%rax
    2b0c:	0f b7 00             	movzwl (%rax),%eax
    2b0f:	89 c2                	mov    %eax,%edx
    2b11:	0f b7 85 44 ff ff ff 	movzwl -0xbc(%rbp),%eax
    2b18:	01 d0                	add    %edx,%eax
    2b1a:	66 89 85 44 ff ff ff 	mov    %ax,-0xbc(%rbp)
    2b21:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2b28:	83 c0 01             	add    $0x1,%eax
    2b2b:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2b32:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2b39:	8b 05 a5 45 00 00    	mov    0x45a5(%rip),%eax        # 70e4 <default_num_contexts>
    2b3f:	39 c2                	cmp    %eax,%edx
    2b41:	0f 82 1d fc ff ff    	jb     2764 <main+0x957>
    2b47:	e8 04 16 00 00       	callq  4150 <check_data_types>
    2b4c:	0f b6 d0             	movzbl %al,%edx
    2b4f:	0f b7 85 44 ff ff ff 	movzwl -0xbc(%rbp),%eax
    2b56:	01 d0                	add    %edx,%eax
    2b58:	66 89 85 44 ff ff ff 	mov    %ax,-0xbc(%rbp)
    2b5f:	8b 45 98             	mov    -0x68(%rbp),%eax
    2b62:	89 c0                	mov    %eax,%eax
    2b64:	48 89 c6             	mov    %rax,%rsi
    2b67:	48 8d 3d 3a 26 00 00 	lea    0x263a(%rip),%rdi        # 51a8 <_IO_stdin_used+0x1a8>
    2b6e:	b8 00 00 00 00       	mov    $0x0,%eax
    2b73:	e8 88 e5 ff ff       	callq  1100 <printf@plt>
    2b78:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2b7f:	48 89 c6             	mov    %rax,%rsi
    2b82:	48 8d 3d 37 26 00 00 	lea    0x2637(%rip),%rdi        # 51c0 <_IO_stdin_used+0x1c0>
    2b89:	b8 00 00 00 00       	mov    $0x0,%eax
    2b8e:	e8 6d e5 ff ff       	callq  1100 <printf@plt>
    2b93:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2b9a:	48 89 c7             	mov    %rax,%rdi
    2b9d:	e8 b0 16 00 00       	callq  4252 <time_in_secs>
    2ba2:	48 8d 3d 2f 26 00 00 	lea    0x262f(%rip),%rdi        # 51d8 <_IO_stdin_used+0x1d8>
    2ba9:	b8 01 00 00 00       	mov    $0x1,%eax
    2bae:	e8 4d e5 ff ff       	callq  1100 <printf@plt>
    2bb3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2bba:	48 89 c7             	mov    %rax,%rdi
    2bbd:	e8 90 16 00 00       	callq  4252 <time_in_secs>
    2bc2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2bc6:	66 0f 2f c1          	comisd %xmm1,%xmm0
    2bca:	76 6f                	jbe    2c3b <main+0xe2e>
    2bcc:	8b 55 9c             	mov    -0x64(%rbp),%edx
    2bcf:	8b 05 0f 45 00 00    	mov    0x450f(%rip),%eax        # 70e4 <default_num_contexts>
    2bd5:	0f af c2             	imul   %edx,%eax
    2bd8:	89 c0                	mov    %eax,%eax
    2bda:	48 85 c0             	test   %rax,%rax
    2bdd:	78 0f                	js     2bee <main+0xde1>
    2bdf:	f2 48 0f 2a e0       	cvtsi2sd %rax,%xmm4
    2be4:	f2 0f 11 a5 28 ff ff 	movsd  %xmm4,-0xd8(%rbp)
    2beb:	ff 
    2bec:	eb 1d                	jmp    2c0b <main+0xdfe>
    2bee:	48 89 c2             	mov    %rax,%rdx
    2bf1:	48 d1 ea             	shr    %rdx
    2bf4:	83 e0 01             	and    $0x1,%eax
    2bf7:	48 09 c2             	or     %rax,%rdx
    2bfa:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2bff:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2c03:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
    2c0a:	ff 
    2c0b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2c12:	48 89 c7             	mov    %rax,%rdi
    2c15:	e8 38 16 00 00       	callq  4252 <time_in_secs>
    2c1a:	f2 0f 10 95 28 ff ff 	movsd  -0xd8(%rbp),%xmm2
    2c21:	ff 
    2c22:	f2 0f 5e d0          	divsd  %xmm0,%xmm2
    2c26:	66 0f 28 c2          	movapd %xmm2,%xmm0
    2c2a:	48 8d 3d be 25 00 00 	lea    0x25be(%rip),%rdi        # 51ef <_IO_stdin_used+0x1ef>
    2c31:	b8 01 00 00 00       	mov    $0x1,%eax
    2c36:	e8 c5 e4 ff ff       	callq  1100 <printf@plt>
    2c3b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2c42:	48 89 c7             	mov    %rax,%rdi
    2c45:	e8 08 16 00 00       	callq  4252 <time_in_secs>
    2c4a:	f2 0f 10 0d 2e 28 00 	movsd  0x282e(%rip),%xmm1        # 5480 <_IO_stdin_used+0x480>
    2c51:	00 
    2c52:	66 0f 2f c8          	comisd %xmm0,%xmm1
    2c56:	76 1d                	jbe    2c75 <main+0xe68>
    2c58:	48 8d 3d a9 25 00 00 	lea    0x25a9(%rip),%rdi        # 5208 <_IO_stdin_used+0x208>
    2c5f:	e8 6c e4 ff ff       	callq  10d0 <puts@plt>
    2c64:	0f b7 85 44 ff ff ff 	movzwl -0xbc(%rbp),%eax
    2c6b:	83 c0 01             	add    $0x1,%eax
    2c6e:	66 89 85 44 ff ff ff 	mov    %ax,-0xbc(%rbp)
    2c75:	8b 05 69 44 00 00    	mov    0x4469(%rip),%eax        # 70e4 <default_num_contexts>
    2c7b:	89 c2                	mov    %eax,%edx
    2c7d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    2c80:	89 c0                	mov    %eax,%eax
    2c82:	48 0f af c2          	imul   %rdx,%rax
    2c86:	48 89 c6             	mov    %rax,%rsi
    2c89:	48 8d 3d b5 25 00 00 	lea    0x25b5(%rip),%rdi        # 5245 <_IO_stdin_used+0x245>
    2c90:	b8 00 00 00 00       	mov    $0x0,%eax
    2c95:	e8 66 e4 ff ff       	callq  1100 <printf@plt>
    2c9a:	48 8d 35 bc 25 00 00 	lea    0x25bc(%rip),%rsi        # 525d <_IO_stdin_used+0x25d>
    2ca1:	48 8d 3d be 25 00 00 	lea    0x25be(%rip),%rdi        # 5266 <_IO_stdin_used+0x266>
    2ca8:	b8 00 00 00 00       	mov    $0x0,%eax
    2cad:	e8 4e e4 ff ff       	callq  1100 <printf@plt>
    2cb2:	48 8d 35 c4 25 00 00 	lea    0x25c4(%rip),%rsi        # 527d <_IO_stdin_used+0x27d>
    2cb9:	48 8d 3d c8 25 00 00 	lea    0x25c8(%rip),%rdi        # 5288 <_IO_stdin_used+0x288>
    2cc0:	b8 00 00 00 00       	mov    $0x0,%eax
    2cc5:	e8 36 e4 ff ff       	callq  1100 <printf@plt>
    2cca:	48 8d 35 cf 25 00 00 	lea    0x25cf(%rip),%rsi        # 52a0 <_IO_stdin_used+0x2a0>
    2cd1:	48 8d 3d 17 26 00 00 	lea    0x2617(%rip),%rdi        # 52ef <_IO_stdin_used+0x2ef>
    2cd8:	b8 00 00 00 00       	mov    $0x0,%eax
    2cdd:	e8 1e e4 ff ff       	callq  1100 <printf@plt>
    2ce2:	0f b7 85 46 ff ff ff 	movzwl -0xba(%rbp),%eax
    2ce9:	89 c6                	mov    %eax,%esi
    2ceb:	48 8d 3d 14 26 00 00 	lea    0x2614(%rip),%rdi        # 5306 <_IO_stdin_used+0x306>
    2cf2:	b8 00 00 00 00       	mov    $0x0,%eax
    2cf7:	e8 04 e4 ff ff       	callq  1100 <printf@plt>
    2cfc:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2cff:	83 e0 01             	and    $0x1,%eax
    2d02:	85 c0                	test   %eax,%eax
    2d04:	74 70                	je     2d76 <main+0xf69>
    2d06:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2d0d:	00 00 
    2d0f:	eb 54                	jmp    2d65 <main+0xf58>
    2d11:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2d18:	48 63 d0             	movslq %eax,%rdx
    2d1b:	48 89 d0             	mov    %rdx,%rax
    2d1e:	48 c1 e0 03          	shl    $0x3,%rax
    2d22:	48 29 d0             	sub    %rdx,%rax
    2d25:	48 c1 e0 04          	shl    $0x4,%rax
    2d29:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    2d2d:	48 01 f0             	add    %rsi,%rax
    2d30:	48 83 e8 1e          	sub    $0x1e,%rax
    2d34:	0f b7 00             	movzwl (%rax),%eax
    2d37:	0f b7 d0             	movzwl %ax,%edx
    2d3a:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2d41:	89 c6                	mov    %eax,%esi
    2d43:	48 8d 3d d7 25 00 00 	lea    0x25d7(%rip),%rdi        # 5321 <_IO_stdin_used+0x321>
    2d4a:	b8 00 00 00 00       	mov    $0x0,%eax
    2d4f:	e8 ac e3 ff ff       	callq  1100 <printf@plt>
    2d54:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2d5b:	83 c0 01             	add    $0x1,%eax
    2d5e:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2d65:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2d6c:	8b 05 72 43 00 00    	mov    0x4372(%rip),%eax        # 70e4 <default_num_contexts>
    2d72:	39 c2                	cmp    %eax,%edx
    2d74:	72 9b                	jb     2d11 <main+0xf04>
    2d76:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2d79:	83 e0 02             	and    $0x2,%eax
    2d7c:	85 c0                	test   %eax,%eax
    2d7e:	74 70                	je     2df0 <main+0xfe3>
    2d80:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2d87:	00 00 
    2d89:	eb 54                	jmp    2ddf <main+0xfd2>
    2d8b:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2d92:	48 63 d0             	movslq %eax,%rdx
    2d95:	48 89 d0             	mov    %rdx,%rax
    2d98:	48 c1 e0 03          	shl    $0x3,%rax
    2d9c:	48 29 d0             	sub    %rdx,%rax
    2d9f:	48 c1 e0 04          	shl    $0x4,%rax
    2da3:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    2da7:	48 01 f8             	add    %rdi,%rax
    2daa:	48 83 e8 1c          	sub    $0x1c,%rax
    2dae:	0f b7 00             	movzwl (%rax),%eax
    2db1:	0f b7 d0             	movzwl %ax,%edx
    2db4:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2dbb:	89 c6                	mov    %eax,%esi
    2dbd:	48 8d 3d 79 25 00 00 	lea    0x2579(%rip),%rdi        # 533d <_IO_stdin_used+0x33d>
    2dc4:	b8 00 00 00 00       	mov    $0x0,%eax
    2dc9:	e8 32 e3 ff ff       	callq  1100 <printf@plt>
    2dce:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2dd5:	83 c0 01             	add    $0x1,%eax
    2dd8:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2ddf:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2de6:	8b 05 f8 42 00 00    	mov    0x42f8(%rip),%eax        # 70e4 <default_num_contexts>
    2dec:	39 c2                	cmp    %eax,%edx
    2dee:	72 9b                	jb     2d8b <main+0xf7e>
    2df0:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2df3:	83 e0 04             	and    $0x4,%eax
    2df6:	85 c0                	test   %eax,%eax
    2df8:	74 70                	je     2e6a <main+0x105d>
    2dfa:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2e01:	00 00 
    2e03:	eb 54                	jmp    2e59 <main+0x104c>
    2e05:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2e0c:	48 63 d0             	movslq %eax,%rdx
    2e0f:	48 89 d0             	mov    %rdx,%rax
    2e12:	48 c1 e0 03          	shl    $0x3,%rax
    2e16:	48 29 d0             	sub    %rdx,%rax
    2e19:	48 c1 e0 04          	shl    $0x4,%rax
    2e1d:	48 8d 5d f0          	lea    -0x10(%rbp),%rbx
    2e21:	48 01 d8             	add    %rbx,%rax
    2e24:	48 83 e8 1a          	sub    $0x1a,%rax
    2e28:	0f b7 00             	movzwl (%rax),%eax
    2e2b:	0f b7 d0             	movzwl %ax,%edx
    2e2e:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2e35:	89 c6                	mov    %eax,%esi
    2e37:	48 8d 3d 1b 25 00 00 	lea    0x251b(%rip),%rdi        # 5359 <_IO_stdin_used+0x359>
    2e3e:	b8 00 00 00 00       	mov    $0x0,%eax
    2e43:	e8 b8 e2 ff ff       	callq  1100 <printf@plt>
    2e48:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2e4f:	83 c0 01             	add    $0x1,%eax
    2e52:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2e59:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2e60:	8b 05 7e 42 00 00    	mov    0x427e(%rip),%eax        # 70e4 <default_num_contexts>
    2e66:	39 c2                	cmp    %eax,%edx
    2e68:	72 9b                	jb     2e05 <main+0xff8>
    2e6a:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2e71:	00 00 
    2e73:	eb 54                	jmp    2ec9 <main+0x10bc>
    2e75:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2e7c:	48 63 d0             	movslq %eax,%rdx
    2e7f:	48 89 d0             	mov    %rdx,%rax
    2e82:	48 c1 e0 03          	shl    $0x3,%rax
    2e86:	48 29 d0             	sub    %rdx,%rax
    2e89:	48 c1 e0 04          	shl    $0x4,%rax
    2e8d:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    2e91:	48 01 f0             	add    %rsi,%rax
    2e94:	48 83 e8 20          	sub    $0x20,%rax
    2e98:	0f b7 00             	movzwl (%rax),%eax
    2e9b:	0f b7 d0             	movzwl %ax,%edx
    2e9e:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2ea5:	89 c6                	mov    %eax,%esi
    2ea7:	48 8d 3d c7 24 00 00 	lea    0x24c7(%rip),%rdi        # 5375 <_IO_stdin_used+0x375>
    2eae:	b8 00 00 00 00       	mov    $0x0,%eax
    2eb3:	e8 48 e2 ff ff       	callq  1100 <printf@plt>
    2eb8:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2ebf:	83 c0 01             	add    $0x1,%eax
    2ec2:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    2ec9:	0f b7 95 3c ff ff ff 	movzwl -0xc4(%rbp),%edx
    2ed0:	8b 05 0e 42 00 00    	mov    0x420e(%rip),%eax        # 70e4 <default_num_contexts>
    2ed6:	39 c2                	cmp    %eax,%edx
    2ed8:	72 9b                	jb     2e75 <main+0x1068>
    2eda:	66 83 bd 44 ff ff ff 	cmpw   $0x0,-0xbc(%rbp)
    2ee1:	00 
    2ee2:	0f 85 bc 00 00 00    	jne    2fa4 <main+0x1197>
    2ee8:	48 8d 3d a9 24 00 00 	lea    0x24a9(%rip),%rdi        # 5398 <_IO_stdin_used+0x398>
    2eef:	e8 dc e1 ff ff       	callq  10d0 <puts@plt>
    2ef4:	66 83 bd 42 ff ff ff 	cmpw   $0x3,-0xbe(%rbp)
    2efb:	03 
    2efc:	0f 85 a2 00 00 00    	jne    2fa4 <main+0x1197>
    2f02:	8b 55 9c             	mov    -0x64(%rbp),%edx
    2f05:	8b 05 d9 41 00 00    	mov    0x41d9(%rip),%eax        # 70e4 <default_num_contexts>
    2f0b:	0f af c2             	imul   %edx,%eax
    2f0e:	89 c0                	mov    %eax,%eax
    2f10:	48 85 c0             	test   %rax,%rax
    2f13:	78 0f                	js     2f24 <main+0x1117>
    2f15:	f2 48 0f 2a e8       	cvtsi2sd %rax,%xmm5
    2f1a:	f2 0f 11 ad 28 ff ff 	movsd  %xmm5,-0xd8(%rbp)
    2f21:	ff 
    2f22:	eb 1d                	jmp    2f41 <main+0x1134>
    2f24:	48 89 c2             	mov    %rax,%rdx
    2f27:	48 d1 ea             	shr    %rdx
    2f2a:	83 e0 01             	and    $0x1,%eax
    2f2d:	48 09 c2             	or     %rax,%rdx
    2f30:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2f35:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2f39:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
    2f40:	ff 
    2f41:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    2f48:	48 89 c7             	mov    %rax,%rdi
    2f4b:	e8 02 13 00 00       	callq  4252 <time_in_secs>
    2f50:	f2 0f 10 9d 28 ff ff 	movsd  -0xd8(%rbp),%xmm3
    2f57:	ff 
    2f58:	f2 0f 5e d8          	divsd  %xmm0,%xmm3
    2f5c:	66 0f 28 c3          	movapd %xmm3,%xmm0
    2f60:	48 8d 15 16 23 00 00 	lea    0x2316(%rip),%rdx        # 527d <_IO_stdin_used+0x27d>
    2f67:	48 8d 35 ef 22 00 00 	lea    0x22ef(%rip),%rsi        # 525d <_IO_stdin_used+0x25d>
    2f6e:	48 8d 3d 6b 24 00 00 	lea    0x246b(%rip),%rdi        # 53e0 <_IO_stdin_used+0x3e0>
    2f75:	b8 01 00 00 00       	mov    $0x1,%eax
    2f7a:	e8 81 e1 ff ff       	callq  1100 <printf@plt>
    2f7f:	48 8b 05 c2 40 00 00 	mov    0x40c2(%rip),%rax        # 7048 <mem_name+0x8>
    2f86:	48 89 c6             	mov    %rax,%rsi
    2f89:	48 8d 3d 6a 24 00 00 	lea    0x246a(%rip),%rdi        # 53fa <_IO_stdin_used+0x3fa>
    2f90:	b8 00 00 00 00       	mov    $0x0,%eax
    2f95:	e8 66 e1 ff ff       	callq  1100 <printf@plt>
    2f9a:	bf 0a 00 00 00       	mov    $0xa,%edi
    2f9f:	e8 1c e1 ff ff       	callq  10c0 <putchar@plt>
    2fa4:	66 83 bd 44 ff ff ff 	cmpw   $0x0,-0xbc(%rbp)
    2fab:	00 
    2fac:	7e 0c                	jle    2fba <main+0x11ad>
    2fae:	48 8d 3d 4b 24 00 00 	lea    0x244b(%rip),%rdi        # 5400 <_IO_stdin_used+0x400>
    2fb5:	e8 16 e1 ff ff       	callq  10d0 <puts@plt>
    2fba:	66 83 bd 44 ff ff ff 	cmpw   $0x0,-0xbc(%rbp)
    2fc1:	00 
    2fc2:	79 0c                	jns    2fd0 <main+0x11c3>
    2fc4:	48 8d 3d 45 24 00 00 	lea    0x2445(%rip),%rdi        # 5410 <_IO_stdin_used+0x410>
    2fcb:	e8 00 e1 ff ff       	callq  10d0 <puts@plt>
    2fd0:	66 c7 85 3c ff ff ff 	movw   $0x0,-0xc4(%rbp)
    2fd7:	00 00 
    2fd9:	eb 3f                	jmp    301a <main+0x120d>
    2fdb:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    2fe2:	48 63 d0             	movslq %eax,%rdx
    2fe5:	48 89 d0             	mov    %rdx,%rax
    2fe8:	48 c1 e0 03          	shl    $0x3,%rax
    2fec:	48 29 d0             	sub    %rdx,%rax
    2fef:	48 c1 e0 04          	shl    $0x4,%rax
    2ff3:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
    2ff7:	48 01 f8             	add    %rdi,%rax
    2ffa:	48 83 e8 78          	sub    $0x78,%rax
    2ffe:	48 8b 00             	mov    (%rax),%rax
    3001:	48 89 c7             	mov    %rax,%rdi
    3004:	e8 8d 11 00 00       	callq  4196 <portable_free>
    3009:	0f b7 85 3c ff ff ff 	movzwl -0xc4(%rbp),%eax
    3010:	83 c0 01             	add    $0x1,%eax
    3013:	66 89 85 3c ff ff ff 	mov    %ax,-0xc4(%rbp)
    301a:	66 83 bd 3c ff ff ff 	cmpw   $0x0,-0xc4(%rbp)
    3021:	00 
    3022:	74 b7                	je     2fdb <main+0x11ce>
    3024:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    302b:	48 83 c0 6a          	add    $0x6a,%rax
    302f:	48 89 c7             	mov    %rax,%rdi
    3032:	e8 63 12 00 00       	callq  429a <portable_fini>
    3037:	b8 00 00 00 00       	mov    $0x0,%eax
    303c:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3040:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    3047:	00 00 
    3049:	74 05                	je     3050 <main+0x1243>
    304b:	e8 a0 e0 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    3050:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    3057:	5b                   	pop    %rbx
    3058:	5d                   	pop    %rbp
    3059:	c3                   	retq   

000000000000305a <core_bench_matrix>:
    305a:	f3 0f 1e fa          	endbr64 
    305e:	55                   	push   %rbp
    305f:	48 89 e5             	mov    %rsp,%rbp
    3062:	53                   	push   %rbx
    3063:	48 83 ec 38          	sub    $0x38,%rsp
    3067:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    306b:	89 f1                	mov    %esi,%ecx
    306d:	89 d0                	mov    %edx,%eax
    306f:	89 ca                	mov    %ecx,%edx
    3071:	66 89 55 c4          	mov    %dx,-0x3c(%rbp)
    3075:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
    3079:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    307d:	8b 00                	mov    (%rax),%eax
    307f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3082:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3086:	48 8b 40 18          	mov    0x18(%rax),%rax
    308a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    308e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3092:	48 8b 40 08          	mov    0x8(%rax),%rax
    3096:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    309a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    309e:	48 8b 40 10          	mov    0x10(%rax),%rax
    30a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    30a6:	0f b7 45 c4          	movzwl -0x3c(%rbp),%eax
    30aa:	66 89 45 d2          	mov    %ax,-0x2e(%rbp)
    30ae:	0f b7 5d c0          	movzwl -0x40(%rbp),%ebx
    30b2:	0f bf 7d d2          	movswl -0x2e(%rbp),%edi
    30b6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    30ba:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    30be:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    30c2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    30c5:	41 89 f8             	mov    %edi,%r8d
    30c8:	89 c7                	mov    %eax,%edi
    30ca:	e8 19 00 00 00       	callq  30e8 <matrix_test>
    30cf:	98                   	cwtl   
    30d0:	89 de                	mov    %ebx,%esi
    30d2:	89 c7                	mov    %eax,%edi
    30d4:	e8 49 10 00 00       	callq  4122 <crc16>
    30d9:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
    30dd:	0f b7 45 c0          	movzwl -0x40(%rbp),%eax
    30e1:	48 83 c4 38          	add    $0x38,%rsp
    30e5:	5b                   	pop    %rbx
    30e6:	5d                   	pop    %rbp
    30e7:	c3                   	retq   

00000000000030e8 <matrix_test>:
    30e8:	f3 0f 1e fa          	endbr64 
    30ec:	55                   	push   %rbp
    30ed:	48 89 e5             	mov    %rsp,%rbp
    30f0:	53                   	push   %rbx
    30f1:	48 83 ec 38          	sub    $0x38,%rsp
    30f5:	89 7d dc             	mov    %edi,-0x24(%rbp)
    30f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    30fc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    3100:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    3104:	44 89 c0             	mov    %r8d,%eax
    3107:	66 89 45 d8          	mov    %ax,-0x28(%rbp)
    310b:	66 c7 45 ec 00 00    	movw   $0x0,-0x14(%rbp)
    3111:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3115:	66 0d 00 f0          	or     $0xf000,%ax
    3119:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
    311d:	0f bf 55 d8          	movswl -0x28(%rbp),%edx
    3121:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3125:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3128:	48 89 ce             	mov    %rcx,%rsi
    312b:	89 c7                	mov    %eax,%edi
    312d:	e8 07 04 00 00       	callq  3539 <matrix_add_const>
    3132:	0f bf 4d d8          	movswl -0x28(%rbp),%ecx
    3136:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    313a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    313e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3141:	89 c7                	mov    %eax,%edi
    3143:	e8 5f 03 00 00       	callq  34a7 <matrix_mul_const>
    3148:	0f b7 5d ec          	movzwl -0x14(%rbp),%ebx
    314c:	0f bf 55 ee          	movswl -0x12(%rbp),%edx
    3150:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3154:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3157:	48 89 ce             	mov    %rcx,%rsi
    315a:	89 c7                	mov    %eax,%edi
    315c:	e8 7f 02 00 00       	callq  33e0 <matrix_sum>
    3161:	98                   	cwtl   
    3162:	89 de                	mov    %ebx,%esi
    3164:	89 c7                	mov    %eax,%edi
    3166:	e8 b7 0f 00 00       	callq  4122 <crc16>
    316b:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    316f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    3173:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3177:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    317b:	8b 45 dc             	mov    -0x24(%rbp),%eax
    317e:	89 c7                	mov    %eax,%edi
    3180:	e8 3e 04 00 00       	callq  35c3 <matrix_mul_vect>
    3185:	0f b7 5d ec          	movzwl -0x14(%rbp),%ebx
    3189:	0f bf 55 ee          	movswl -0x12(%rbp),%edx
    318d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3191:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3194:	48 89 ce             	mov    %rcx,%rsi
    3197:	89 c7                	mov    %eax,%edi
    3199:	e8 42 02 00 00       	callq  33e0 <matrix_sum>
    319e:	98                   	cwtl   
    319f:	89 de                	mov    %ebx,%esi
    31a1:	89 c7                	mov    %eax,%edi
    31a3:	e8 7a 0f 00 00       	callq  4122 <crc16>
    31a8:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    31ac:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    31b0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    31b4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    31b8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    31bb:	89 c7                	mov    %eax,%edi
    31bd:	e8 c5 04 00 00       	callq  3687 <matrix_mul_matrix>
    31c2:	0f b7 5d ec          	movzwl -0x14(%rbp),%ebx
    31c6:	0f bf 55 ee          	movswl -0x12(%rbp),%edx
    31ca:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    31ce:	8b 45 dc             	mov    -0x24(%rbp),%eax
    31d1:	48 89 ce             	mov    %rcx,%rsi
    31d4:	89 c7                	mov    %eax,%edi
    31d6:	e8 05 02 00 00       	callq  33e0 <matrix_sum>
    31db:	98                   	cwtl   
    31dc:	89 de                	mov    %ebx,%esi
    31de:	89 c7                	mov    %eax,%edi
    31e0:	e8 3d 0f 00 00       	callq  4122 <crc16>
    31e5:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    31e9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    31ed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    31f1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    31f5:	8b 45 dc             	mov    -0x24(%rbp),%eax
    31f8:	89 c7                	mov    %eax,%edi
    31fa:	e8 a3 05 00 00       	callq  37a2 <matrix_mul_matrix_bitextract>
    31ff:	0f b7 5d ec          	movzwl -0x14(%rbp),%ebx
    3203:	0f bf 55 ee          	movswl -0x12(%rbp),%edx
    3207:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    320b:	8b 45 dc             	mov    -0x24(%rbp),%eax
    320e:	48 89 ce             	mov    %rcx,%rsi
    3211:	89 c7                	mov    %eax,%edi
    3213:	e8 c8 01 00 00       	callq  33e0 <matrix_sum>
    3218:	98                   	cwtl   
    3219:	89 de                	mov    %ebx,%esi
    321b:	89 c7                	mov    %eax,%edi
    321d:	e8 00 0f 00 00       	callq  4122 <crc16>
    3222:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    3226:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    322a:	f7 d8                	neg    %eax
    322c:	0f bf d0             	movswl %ax,%edx
    322f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3233:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3236:	48 89 ce             	mov    %rcx,%rsi
    3239:	89 c7                	mov    %eax,%edi
    323b:	e8 f9 02 00 00       	callq  3539 <matrix_add_const>
    3240:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
    3244:	48 83 c4 38          	add    $0x38,%rsp
    3248:	5b                   	pop    %rbx
    3249:	5d                   	pop    %rbp
    324a:	c3                   	retq   

000000000000324b <core_init_matrix>:
    324b:	f3 0f 1e fa          	endbr64 
    324f:	55                   	push   %rbp
    3250:	48 89 e5             	mov    %rsp,%rbp
    3253:	89 7d cc             	mov    %edi,-0x34(%rbp)
    3256:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    325a:	89 55 c8             	mov    %edx,-0x38(%rbp)
    325d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    3261:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3268:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
    326f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3276:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    327d:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    3281:	75 19                	jne    329c <core_init_matrix+0x51>
    3283:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    328a:	eb 10                	jmp    329c <core_init_matrix+0x51>
    328c:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    3290:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3293:	0f af c0             	imul   %eax,%eax
    3296:	c1 e0 03             	shl    $0x3,%eax
    3299:	89 45 e8             	mov    %eax,-0x18(%rbp)
    329c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    329f:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    32a2:	72 e8                	jb     328c <core_init_matrix+0x41>
    32a4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    32a7:	83 e8 01             	sub    $0x1,%eax
    32aa:	89 45 ec             	mov    %eax,-0x14(%rbp)
    32ad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    32b1:	48 83 e8 01          	sub    $0x1,%rax
    32b5:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    32b9:	48 83 c0 04          	add    $0x4,%rax
    32bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    32c1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    32c4:	0f af c0             	imul   %eax,%eax
    32c7:	89 c0                	mov    %eax,%eax
    32c9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    32cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    32d1:	48 01 d0             	add    %rdx,%rax
    32d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    32d8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    32df:	e9 a0 00 00 00       	jmpq   3384 <core_init_matrix+0x139>
    32e4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    32eb:	e9 84 00 00 00       	jmpq   3374 <core_init_matrix+0x129>
    32f0:	8b 45 e0             	mov    -0x20(%rbp),%eax
    32f3:	0f af 45 c8          	imul   -0x38(%rbp),%eax
    32f7:	99                   	cltd   
    32f8:	c1 ea 10             	shr    $0x10,%edx
    32fb:	01 d0                	add    %edx,%eax
    32fd:	0f b7 c0             	movzwl %ax,%eax
    3300:	29 d0                	sub    %edx,%eax
    3302:	89 45 c8             	mov    %eax,-0x38(%rbp)
    3305:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3308:	89 c2                	mov    %eax,%edx
    330a:	8b 45 e0             	mov    -0x20(%rbp),%eax
    330d:	01 d0                	add    %edx,%eax
    330f:	66 89 45 de          	mov    %ax,-0x22(%rbp)
    3313:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3316:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    331a:	89 c2                	mov    %eax,%edx
    331c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    331f:	01 d0                	add    %edx,%eax
    3321:	89 c0                	mov    %eax,%eax
    3323:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    3327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    332b:	48 01 c2             	add    %rax,%rdx
    332e:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
    3332:	66 89 02             	mov    %ax,(%rdx)
    3335:	8b 45 e0             	mov    -0x20(%rbp),%eax
    3338:	89 c2                	mov    %eax,%edx
    333a:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
    333e:	01 d0                	add    %edx,%eax
    3340:	66 89 45 de          	mov    %ax,-0x22(%rbp)
    3344:	66 81 65 de ff 00    	andw   $0xff,-0x22(%rbp)
    334a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    334d:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3351:	89 c2                	mov    %eax,%edx
    3353:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3356:	01 d0                	add    %edx,%eax
    3358:	89 c0                	mov    %eax,%eax
    335a:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    335e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3362:	48 01 c2             	add    %rax,%rdx
    3365:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
    3369:	66 89 02             	mov    %ax,(%rdx)
    336c:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    3370:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    3374:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3377:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    337a:	0f 82 70 ff ff ff    	jb     32f0 <core_init_matrix+0xa5>
    3380:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    3384:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3387:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    338a:	0f 82 54 ff ff ff    	jb     32e4 <core_init_matrix+0x99>
    3390:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3394:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3398:	48 89 50 08          	mov    %rdx,0x8(%rax)
    339c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    33a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    33a4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    33a8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    33ab:	0f af c0             	imul   %eax,%eax
    33ae:	89 c0                	mov    %eax,%eax
    33b0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    33b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33b8:	48 01 d0             	add    %rdx,%rax
    33bb:	48 83 e8 01          	sub    $0x1,%rax
    33bf:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    33c3:	48 83 c0 04          	add    $0x4,%rax
    33c7:	48 89 c2             	mov    %rax,%rdx
    33ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    33ce:	48 89 50 18          	mov    %rdx,0x18(%rax)
    33d2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    33d5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    33d9:	89 10                	mov    %edx,(%rax)
    33db:	8b 45 ec             	mov    -0x14(%rbp),%eax
    33de:	5d                   	pop    %rbp
    33df:	c3                   	retq   

00000000000033e0 <matrix_sum>:
    33e0:	f3 0f 1e fa          	endbr64 
    33e4:	55                   	push   %rbp
    33e5:	48 89 e5             	mov    %rsp,%rbp
    33e8:	89 7d dc             	mov    %edi,-0x24(%rbp)
    33eb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    33ef:	89 d0                	mov    %edx,%eax
    33f1:	66 89 45 d8          	mov    %ax,-0x28(%rbp)
    33f5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    33fc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3403:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    340a:	66 c7 45 ea 00 00    	movw   $0x0,-0x16(%rbp)
    3410:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3417:	eb 7c                	jmp    3495 <matrix_sum+0xb5>
    3419:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3420:	eb 67                	jmp    3489 <matrix_sum+0xa9>
    3422:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3425:	0f af 45 dc          	imul   -0x24(%rbp),%eax
    3429:	89 c2                	mov    %eax,%edx
    342b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    342e:	01 d0                	add    %edx,%eax
    3430:	89 c0                	mov    %eax,%eax
    3432:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3439:	00 
    343a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    343e:	48 01 d0             	add    %rdx,%rax
    3441:	8b 00                	mov    (%rax),%eax
    3443:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3446:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3449:	01 45 ec             	add    %eax,-0x14(%rbp)
    344c:	0f bf 45 d8          	movswl -0x28(%rbp),%eax
    3450:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    3453:	7e 14                	jle    3469 <matrix_sum+0x89>
    3455:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
    3459:	83 c0 0a             	add    $0xa,%eax
    345c:	66 89 45 ea          	mov    %ax,-0x16(%rbp)
    3460:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3467:	eb 16                	jmp    347f <matrix_sum+0x9f>
    3469:	8b 45 fc             	mov    -0x4(%rbp),%eax
    346c:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    346f:	0f 9f c0             	setg   %al
    3472:	0f b6 d0             	movzbl %al,%edx
    3475:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
    3479:	01 d0                	add    %edx,%eax
    347b:	66 89 45 ea          	mov    %ax,-0x16(%rbp)
    347f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3482:	89 45 f0             	mov    %eax,-0x10(%rbp)
    3485:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3489:	8b 45 f8             	mov    -0x8(%rbp),%eax
    348c:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    348f:	72 91                	jb     3422 <matrix_sum+0x42>
    3491:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3495:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3498:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    349b:	0f 82 78 ff ff ff    	jb     3419 <matrix_sum+0x39>
    34a1:	0f b7 45 ea          	movzwl -0x16(%rbp),%eax
    34a5:	5d                   	pop    %rbp
    34a6:	c3                   	retq   

00000000000034a7 <matrix_mul_const>:
    34a7:	f3 0f 1e fa          	endbr64 
    34ab:	55                   	push   %rbp
    34ac:	48 89 e5             	mov    %rsp,%rbp
    34af:	89 7d ec             	mov    %edi,-0x14(%rbp)
    34b2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    34b6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    34ba:	89 c8                	mov    %ecx,%eax
    34bc:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
    34c0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    34c7:	eb 64                	jmp    352d <matrix_mul_const+0x86>
    34c9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34d0:	eb 4f                	jmp    3521 <matrix_mul_const+0x7a>
    34d2:	8b 45 f8             	mov    -0x8(%rbp),%eax
    34d5:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    34d9:	89 c2                	mov    %eax,%edx
    34db:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34de:	01 d0                	add    %edx,%eax
    34e0:	89 c0                	mov    %eax,%eax
    34e2:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    34e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    34ea:	48 01 d0             	add    %rdx,%rax
    34ed:	0f b7 00             	movzwl (%rax),%eax
    34f0:	0f bf f0             	movswl %ax,%esi
    34f3:	0f bf 4d e8          	movswl -0x18(%rbp),%ecx
    34f7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    34fa:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    34fe:	89 c2                	mov    %eax,%edx
    3500:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3503:	01 d0                	add    %edx,%eax
    3505:	89 c0                	mov    %eax,%eax
    3507:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    350e:	00 
    350f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3513:	48 01 c2             	add    %rax,%rdx
    3516:	89 f0                	mov    %esi,%eax
    3518:	0f af c1             	imul   %ecx,%eax
    351b:	89 02                	mov    %eax,(%rdx)
    351d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3521:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3524:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3527:	72 a9                	jb     34d2 <matrix_mul_const+0x2b>
    3529:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    352d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3530:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3533:	72 94                	jb     34c9 <matrix_mul_const+0x22>
    3535:	90                   	nop
    3536:	90                   	nop
    3537:	5d                   	pop    %rbp
    3538:	c3                   	retq   

0000000000003539 <matrix_add_const>:
    3539:	f3 0f 1e fa          	endbr64 
    353d:	55                   	push   %rbp
    353e:	48 89 e5             	mov    %rsp,%rbp
    3541:	89 7d ec             	mov    %edi,-0x14(%rbp)
    3544:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3548:	89 d0                	mov    %edx,%eax
    354a:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
    354e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3555:	eb 60                	jmp    35b7 <matrix_add_const+0x7e>
    3557:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    355e:	eb 4b                	jmp    35ab <matrix_add_const+0x72>
    3560:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3563:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3567:	89 c2                	mov    %eax,%edx
    3569:	8b 45 fc             	mov    -0x4(%rbp),%eax
    356c:	01 d0                	add    %edx,%eax
    356e:	89 c0                	mov    %eax,%eax
    3570:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    3574:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3578:	48 01 d0             	add    %rdx,%rax
    357b:	0f b7 00             	movzwl (%rax),%eax
    357e:	89 c2                	mov    %eax,%edx
    3580:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
    3584:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    3587:	8b 45 f8             	mov    -0x8(%rbp),%eax
    358a:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    358e:	89 c2                	mov    %eax,%edx
    3590:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3593:	01 d0                	add    %edx,%eax
    3595:	89 c0                	mov    %eax,%eax
    3597:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    359b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    359f:	48 01 d0             	add    %rdx,%rax
    35a2:	89 ca                	mov    %ecx,%edx
    35a4:	66 89 10             	mov    %dx,(%rax)
    35a7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    35ab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    35ae:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    35b1:	72 ad                	jb     3560 <matrix_add_const+0x27>
    35b3:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    35b7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    35ba:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    35bd:	72 98                	jb     3557 <matrix_add_const+0x1e>
    35bf:	90                   	nop
    35c0:	90                   	nop
    35c1:	5d                   	pop    %rbp
    35c2:	c3                   	retq   

00000000000035c3 <matrix_mul_vect>:
    35c3:	f3 0f 1e fa          	endbr64 
    35c7:	55                   	push   %rbp
    35c8:	48 89 e5             	mov    %rsp,%rbp
    35cb:	89 7d ec             	mov    %edi,-0x14(%rbp)
    35ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    35d2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    35d6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    35da:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    35e1:	e9 91 00 00 00       	jmpq   3677 <matrix_mul_vect+0xb4>
    35e6:	8b 45 f8             	mov    -0x8(%rbp),%eax
    35e9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    35f0:	00 
    35f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    35f5:	48 01 d0             	add    %rdx,%rax
    35f8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    35fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3605:	eb 64                	jmp    366b <matrix_mul_vect+0xa8>
    3607:	8b 45 f8             	mov    -0x8(%rbp),%eax
    360a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3611:	00 
    3612:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3616:	48 01 d0             	add    %rdx,%rax
    3619:	8b 08                	mov    (%rax),%ecx
    361b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    361e:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3622:	89 c2                	mov    %eax,%edx
    3624:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3627:	01 d0                	add    %edx,%eax
    3629:	89 c0                	mov    %eax,%eax
    362b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    362f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3633:	48 01 d0             	add    %rdx,%rax
    3636:	0f b7 00             	movzwl (%rax),%eax
    3639:	0f bf d0             	movswl %ax,%edx
    363c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    363f:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    3643:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3647:	48 01 f0             	add    %rsi,%rax
    364a:	0f b7 00             	movzwl (%rax),%eax
    364d:	98                   	cwtl   
    364e:	0f af d0             	imul   %eax,%edx
    3651:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3654:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
    365b:	00 
    365c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3660:	48 01 f0             	add    %rsi,%rax
    3663:	01 ca                	add    %ecx,%edx
    3665:	89 10                	mov    %edx,(%rax)
    3667:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    366b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    366e:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3671:	72 94                	jb     3607 <matrix_mul_vect+0x44>
    3673:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3677:	8b 45 f8             	mov    -0x8(%rbp),%eax
    367a:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    367d:	0f 82 63 ff ff ff    	jb     35e6 <matrix_mul_vect+0x23>
    3683:	90                   	nop
    3684:	90                   	nop
    3685:	5d                   	pop    %rbp
    3686:	c3                   	retq   

0000000000003687 <matrix_mul_matrix>:
    3687:	f3 0f 1e fa          	endbr64 
    368b:	55                   	push   %rbp
    368c:	48 89 e5             	mov    %rsp,%rbp
    368f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    3692:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3696:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    369a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    369e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    36a5:	e9 e8 00 00 00       	jmpq   3792 <matrix_mul_matrix+0x10b>
    36aa:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    36b1:	e9 cc 00 00 00       	jmpq   3782 <matrix_mul_matrix+0xfb>
    36b6:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36b9:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    36bd:	89 c2                	mov    %eax,%edx
    36bf:	8b 45 f8             	mov    -0x8(%rbp),%eax
    36c2:	01 d0                	add    %edx,%eax
    36c4:	89 c0                	mov    %eax,%eax
    36c6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    36cd:	00 
    36ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    36d2:	48 01 d0             	add    %rdx,%rax
    36d5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    36db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    36e2:	e9 8b 00 00 00       	jmpq   3772 <matrix_mul_matrix+0xeb>
    36e7:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36ea:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    36ee:	89 c2                	mov    %eax,%edx
    36f0:	8b 45 f8             	mov    -0x8(%rbp),%eax
    36f3:	01 d0                	add    %edx,%eax
    36f5:	89 c0                	mov    %eax,%eax
    36f7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    36fe:	00 
    36ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3703:	48 01 d0             	add    %rdx,%rax
    3706:	8b 08                	mov    (%rax),%ecx
    3708:	8b 45 f4             	mov    -0xc(%rbp),%eax
    370b:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    370f:	89 c2                	mov    %eax,%edx
    3711:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3714:	01 d0                	add    %edx,%eax
    3716:	89 c0                	mov    %eax,%eax
    3718:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    371c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3720:	48 01 d0             	add    %rdx,%rax
    3723:	0f b7 00             	movzwl (%rax),%eax
    3726:	0f bf d0             	movswl %ax,%edx
    3729:	8b 45 fc             	mov    -0x4(%rbp),%eax
    372c:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3730:	89 c6                	mov    %eax,%esi
    3732:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3735:	01 f0                	add    %esi,%eax
    3737:	89 c0                	mov    %eax,%eax
    3739:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    373d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3741:	48 01 f0             	add    %rsi,%rax
    3744:	0f b7 00             	movzwl (%rax),%eax
    3747:	98                   	cwtl   
    3748:	0f af d0             	imul   %eax,%edx
    374b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    374e:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3752:	89 c6                	mov    %eax,%esi
    3754:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3757:	01 f0                	add    %esi,%eax
    3759:	89 c0                	mov    %eax,%eax
    375b:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
    3762:	00 
    3763:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3767:	48 01 f0             	add    %rsi,%rax
    376a:	01 ca                	add    %ecx,%edx
    376c:	89 10                	mov    %edx,(%rax)
    376e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3772:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3775:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3778:	0f 82 69 ff ff ff    	jb     36e7 <matrix_mul_matrix+0x60>
    377e:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3782:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3785:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3788:	0f 82 28 ff ff ff    	jb     36b6 <matrix_mul_matrix+0x2f>
    378e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3792:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3795:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    3798:	0f 82 0c ff ff ff    	jb     36aa <matrix_mul_matrix+0x23>
    379e:	90                   	nop
    379f:	90                   	nop
    37a0:	5d                   	pop    %rbp
    37a1:	c3                   	retq   

00000000000037a2 <matrix_mul_matrix_bitextract>:
    37a2:	f3 0f 1e fa          	endbr64 
    37a6:	55                   	push   %rbp
    37a7:	48 89 e5             	mov    %rsp,%rbp
    37aa:	89 7d ec             	mov    %edi,-0x14(%rbp)
    37ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    37b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    37b5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    37b9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    37c0:	e9 06 01 00 00       	jmpq   38cb <matrix_mul_matrix_bitextract+0x129>
    37c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    37cc:	e9 ea 00 00 00       	jmpq   38bb <matrix_mul_matrix_bitextract+0x119>
    37d1:	8b 45 f0             	mov    -0x10(%rbp),%eax
    37d4:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    37d8:	89 c2                	mov    %eax,%edx
    37da:	8b 45 f4             	mov    -0xc(%rbp),%eax
    37dd:	01 d0                	add    %edx,%eax
    37df:	89 c0                	mov    %eax,%eax
    37e1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    37e8:	00 
    37e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    37ed:	48 01 d0             	add    %rdx,%rax
    37f0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    37f6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    37fd:	e9 a9 00 00 00       	jmpq   38ab <matrix_mul_matrix_bitextract+0x109>
    3802:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3805:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    3809:	89 c2                	mov    %eax,%edx
    380b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    380e:	01 d0                	add    %edx,%eax
    3810:	89 c0                	mov    %eax,%eax
    3812:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    3816:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    381a:	48 01 d0             	add    %rdx,%rax
    381d:	0f b7 00             	movzwl (%rax),%eax
    3820:	0f bf d0             	movswl %ax,%edx
    3823:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    382a:	89 c1                	mov    %eax,%ecx
    382c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    382f:	01 c8                	add    %ecx,%eax
    3831:	89 c0                	mov    %eax,%eax
    3833:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
    3837:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    383b:	48 01 c8             	add    %rcx,%rax
    383e:	0f b7 00             	movzwl (%rax),%eax
    3841:	98                   	cwtl   
    3842:	0f af c2             	imul   %edx,%eax
    3845:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3848:	8b 45 f0             	mov    -0x10(%rbp),%eax
    384b:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    384f:	89 c2                	mov    %eax,%edx
    3851:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3854:	01 d0                	add    %edx,%eax
    3856:	89 c0                	mov    %eax,%eax
    3858:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    385f:	00 
    3860:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3864:	48 01 d0             	add    %rdx,%rax
    3867:	8b 00                	mov    (%rax),%eax
    3869:	89 c1                	mov    %eax,%ecx
    386b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    386e:	c1 f8 02             	sar    $0x2,%eax
    3871:	83 e0 0f             	and    $0xf,%eax
    3874:	89 c2                	mov    %eax,%edx
    3876:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3879:	c1 f8 05             	sar    $0x5,%eax
    387c:	83 e0 7f             	and    $0x7f,%eax
    387f:	0f af c2             	imul   %edx,%eax
    3882:	01 c1                	add    %eax,%ecx
    3884:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3887:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    388b:	89 c2                	mov    %eax,%edx
    388d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3890:	01 d0                	add    %edx,%eax
    3892:	89 c0                	mov    %eax,%eax
    3894:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    389b:	00 
    389c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    38a0:	48 01 d0             	add    %rdx,%rax
    38a3:	89 ca                	mov    %ecx,%edx
    38a5:	89 10                	mov    %edx,(%rax)
    38a7:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    38ab:	8b 45 f8             	mov    -0x8(%rbp),%eax
    38ae:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    38b1:	0f 82 4b ff ff ff    	jb     3802 <matrix_mul_matrix_bitextract+0x60>
    38b7:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    38bb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    38be:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    38c1:	0f 82 0a ff ff ff    	jb     37d1 <matrix_mul_matrix_bitextract+0x2f>
    38c7:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    38cb:	8b 45 f0             	mov    -0x10(%rbp),%eax
    38ce:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    38d1:	0f 82 ee fe ff ff    	jb     37c5 <matrix_mul_matrix_bitextract+0x23>
    38d7:	90                   	nop
    38d8:	90                   	nop
    38d9:	5d                   	pop    %rbp
    38da:	c3                   	retq   

00000000000038db <core_bench_state>:
    38db:	f3 0f 1e fa          	endbr64 
    38df:	55                   	push   %rbp
    38e0:	48 89 e5             	mov    %rsp,%rbp
    38e3:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    38ea:	89 7d 8c             	mov    %edi,-0x74(%rbp)
    38ed:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    38f1:	89 c8                	mov    %ecx,%eax
    38f3:	44 89 c6             	mov    %r8d,%esi
    38f6:	44 89 c9             	mov    %r9d,%ecx
    38f9:	66 89 55 88          	mov    %dx,-0x78(%rbp)
    38fd:	66 89 85 7c ff ff ff 	mov    %ax,-0x84(%rbp)
    3904:	89 f0                	mov    %esi,%eax
    3906:	66 89 85 78 ff ff ff 	mov    %ax,-0x88(%rbp)
    390d:	89 c8                	mov    %ecx,%eax
    390f:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%rbp)
    3916:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    391d:	00 00 
    391f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3923:	31 c0                	xor    %eax,%eax
    3925:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3929:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    392d:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    3934:	eb 1d                	jmp    3953 <core_bench_state+0x78>
    3936:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3939:	c7 44 85 d0 00 00 00 	movl   $0x0,-0x30(%rbp,%rax,4)
    3940:	00 
    3941:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3944:	8b 54 85 d0          	mov    -0x30(%rbp,%rax,4),%edx
    3948:	8b 45 9c             	mov    -0x64(%rbp),%eax
    394b:	89 54 85 b0          	mov    %edx,-0x50(%rbp,%rax,4)
    394f:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    3953:	83 7d 9c 07          	cmpl   $0x7,-0x64(%rbp)
    3957:	76 dd                	jbe    3936 <core_bench_state+0x5b>
    3959:	eb 27                	jmp    3982 <core_bench_state+0xa7>
    395b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    395f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3963:	48 89 d6             	mov    %rdx,%rsi
    3966:	48 89 c7             	mov    %rax,%rdi
    3969:	e8 67 03 00 00       	callq  3cd5 <core_state_transition>
    396e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    3971:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    3974:	8b 44 85 b0          	mov    -0x50(%rbp,%rax,4),%eax
    3978:	8d 50 01             	lea    0x1(%rax),%edx
    397b:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    397e:	89 54 85 b0          	mov    %edx,-0x50(%rbp,%rax,4)
    3982:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3986:	0f b6 00             	movzbl (%rax),%eax
    3989:	84 c0                	test   %al,%al
    398b:	75 ce                	jne    395b <core_bench_state+0x80>
    398d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3991:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3995:	eb 33                	jmp    39ca <core_bench_state+0xef>
    3997:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    399b:	0f b6 00             	movzbl (%rax),%eax
    399e:	3c 2c                	cmp    $0x2c,%al
    39a0:	74 15                	je     39b7 <core_bench_state+0xdc>
    39a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    39a6:	0f b6 10             	movzbl (%rax),%edx
    39a9:	0f b7 45 88          	movzwl -0x78(%rbp),%eax
    39ad:	89 c1                	mov    %eax,%ecx
    39af:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    39b3:	31 ca                	xor    %ecx,%edx
    39b5:	88 10                	mov    %dl,(%rax)
    39b7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    39bb:	48 0f bf 85 78 ff ff 	movswq -0x88(%rbp),%rax
    39c2:	ff 
    39c3:	48 01 d0             	add    %rdx,%rax
    39c6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    39ca:	8b 55 8c             	mov    -0x74(%rbp),%edx
    39cd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    39d1:	48 01 c2             	add    %rax,%rdx
    39d4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    39d8:	48 39 c2             	cmp    %rax,%rdx
    39db:	77 ba                	ja     3997 <core_bench_state+0xbc>
    39dd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    39e1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    39e5:	eb 27                	jmp    3a0e <core_bench_state+0x133>
    39e7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    39eb:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    39ef:	48 89 d6             	mov    %rdx,%rsi
    39f2:	48 89 c7             	mov    %rax,%rdi
    39f5:	e8 db 02 00 00       	callq  3cd5 <core_state_transition>
    39fa:	89 45 a0             	mov    %eax,-0x60(%rbp)
    39fd:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3a00:	8b 44 85 b0          	mov    -0x50(%rbp,%rax,4),%eax
    3a04:	8d 50 01             	lea    0x1(%rax),%edx
    3a07:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3a0a:	89 54 85 b0          	mov    %edx,-0x50(%rbp,%rax,4)
    3a0e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a12:	0f b6 00             	movzbl (%rax),%eax
    3a15:	84 c0                	test   %al,%al
    3a17:	75 ce                	jne    39e7 <core_bench_state+0x10c>
    3a19:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3a1d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3a21:	eb 36                	jmp    3a59 <core_bench_state+0x17e>
    3a23:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a27:	0f b6 00             	movzbl (%rax),%eax
    3a2a:	3c 2c                	cmp    $0x2c,%al
    3a2c:	74 18                	je     3a46 <core_bench_state+0x16b>
    3a2e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a32:	0f b6 10             	movzbl (%rax),%edx
    3a35:	0f b7 85 7c ff ff ff 	movzwl -0x84(%rbp),%eax
    3a3c:	89 c1                	mov    %eax,%ecx
    3a3e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a42:	31 ca                	xor    %ecx,%edx
    3a44:	88 10                	mov    %dl,(%rax)
    3a46:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    3a4a:	48 0f bf 85 78 ff ff 	movswq -0x88(%rbp),%rax
    3a51:	ff 
    3a52:	48 01 d0             	add    %rdx,%rax
    3a55:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3a59:	8b 55 8c             	mov    -0x74(%rbp),%edx
    3a5c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3a60:	48 01 c2             	add    %rax,%rdx
    3a63:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a67:	48 39 c2             	cmp    %rax,%rdx
    3a6a:	77 b7                	ja     3a23 <core_bench_state+0x148>
    3a6c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    3a73:	eb 40                	jmp    3ab5 <core_bench_state+0x1da>
    3a75:	0f b7 95 74 ff ff ff 	movzwl -0x8c(%rbp),%edx
    3a7c:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3a7f:	8b 44 85 b0          	mov    -0x50(%rbp,%rax,4),%eax
    3a83:	89 d6                	mov    %edx,%esi
    3a85:	89 c7                	mov    %eax,%edi
    3a87:	e8 4e 06 00 00       	callq  40da <crcu32>
    3a8c:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%rbp)
    3a93:	0f b7 95 74 ff ff ff 	movzwl -0x8c(%rbp),%edx
    3a9a:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3a9d:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    3aa1:	89 d6                	mov    %edx,%esi
    3aa3:	89 c7                	mov    %eax,%edi
    3aa5:	e8 30 06 00 00       	callq  40da <crcu32>
    3aaa:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%rbp)
    3ab1:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    3ab5:	83 7d 9c 07          	cmpl   $0x7,-0x64(%rbp)
    3ab9:	76 ba                	jbe    3a75 <core_bench_state+0x19a>
    3abb:	0f b7 85 74 ff ff ff 	movzwl -0x8c(%rbp),%eax
    3ac2:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    3ac6:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    3acd:	00 00 
    3acf:	74 05                	je     3ad6 <core_bench_state+0x1fb>
    3ad1:	e8 1a d6 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    3ad6:	c9                   	leaveq 
    3ad7:	c3                   	retq   

0000000000003ad8 <core_init_state>:
    3ad8:	f3 0f 1e fa          	endbr64 
    3adc:	55                   	push   %rbp
    3add:	48 89 e5             	mov    %rsp,%rbp
    3ae0:	89 7d dc             	mov    %edi,-0x24(%rbp)
    3ae3:	89 f0                	mov    %esi,%eax
    3ae5:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    3ae9:	66 89 45 d8          	mov    %ax,-0x28(%rbp)
    3aed:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3af4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3afb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3b02:	00 
    3b03:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
    3b07:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3b0e:	e9 65 01 00 00       	jmpq   3c78 <core_init_state+0x1a0>
    3b13:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    3b17:	74 55                	je     3b6e <core_init_state+0x96>
    3b19:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3b20:	eb 23                	jmp    3b45 <core_init_state+0x6d>
    3b22:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b29:	48 01 d0             	add    %rdx,%rax
    3b2c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    3b2f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3b32:	48 01 d1             	add    %rdx,%rcx
    3b35:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3b39:	48 01 ca             	add    %rcx,%rdx
    3b3c:	0f b6 00             	movzbl (%rax),%eax
    3b3f:	88 02                	mov    %al,(%rdx)
    3b41:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3b45:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3b48:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    3b4b:	72 d5                	jb     3b22 <core_init_state+0x4a>
    3b4d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3b50:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3b53:	48 01 c2             	add    %rax,%rdx
    3b56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b5a:	48 01 d0             	add    %rdx,%rax
    3b5d:	c6 00 2c             	movb   $0x2c,(%rax)
    3b60:	8b 55 f0             	mov    -0x10(%rbp),%edx
    3b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3b66:	01 d0                	add    %edx,%eax
    3b68:	83 c0 01             	add    $0x1,%eax
    3b6b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    3b6e:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3b72:	83 c0 01             	add    $0x1,%eax
    3b75:	66 89 45 d8          	mov    %ax,-0x28(%rbp)
    3b79:	0f bf 45 d8          	movswl -0x28(%rbp),%eax
    3b7d:	83 e0 07             	and    $0x7,%eax
    3b80:	83 f8 07             	cmp    $0x7,%eax
    3b83:	0f 84 c0 00 00 00    	je     3c49 <core_init_state+0x171>
    3b89:	83 f8 07             	cmp    $0x7,%eax
    3b8c:	0f 8f e5 00 00 00    	jg     3c77 <core_init_state+0x19f>
    3b92:	83 f8 06             	cmp    $0x6,%eax
    3b95:	0f 8f dc 00 00 00    	jg     3c77 <core_init_state+0x19f>
    3b9b:	83 f8 05             	cmp    $0x5,%eax
    3b9e:	7d 7b                	jge    3c1b <core_init_state+0x143>
    3ba0:	83 f8 02             	cmp    $0x2,%eax
    3ba3:	7f 09                	jg     3bae <core_init_state+0xd6>
    3ba5:	85 c0                	test   %eax,%eax
    3ba7:	79 13                	jns    3bbc <core_init_state+0xe4>
    3ba9:	e9 c9 00 00 00       	jmpq   3c77 <core_init_state+0x19f>
    3bae:	83 e8 03             	sub    $0x3,%eax
    3bb1:	83 f8 01             	cmp    $0x1,%eax
    3bb4:	0f 87 bd 00 00 00    	ja     3c77 <core_init_state+0x19f>
    3bba:	eb 31                	jmp    3bed <core_init_state+0x115>
    3bbc:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3bc0:	66 c1 f8 03          	sar    $0x3,%ax
    3bc4:	98                   	cwtl   
    3bc5:	83 e0 03             	and    $0x3,%eax
    3bc8:	48 98                	cltq   
    3bca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3bd1:	00 
    3bd2:	48 8d 05 87 34 00 00 	lea    0x3487(%rip),%rax        # 7060 <intpat>
    3bd9:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    3bdd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3be1:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
    3be8:	e9 8b 00 00 00       	jmpq   3c78 <core_init_state+0x1a0>
    3bed:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3bf1:	66 c1 f8 03          	sar    $0x3,%ax
    3bf5:	98                   	cwtl   
    3bf6:	83 e0 03             	and    $0x3,%eax
    3bf9:	48 98                	cltq   
    3bfb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3c02:	00 
    3c03:	48 8d 05 76 34 00 00 	lea    0x3476(%rip),%rax        # 7080 <floatpat>
    3c0a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    3c0e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c12:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
    3c19:	eb 5d                	jmp    3c78 <core_init_state+0x1a0>
    3c1b:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3c1f:	66 c1 f8 03          	sar    $0x3,%ax
    3c23:	98                   	cwtl   
    3c24:	83 e0 03             	and    $0x3,%eax
    3c27:	48 98                	cltq   
    3c29:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3c30:	00 
    3c31:	48 8d 05 68 34 00 00 	lea    0x3468(%rip),%rax        # 70a0 <scipat>
    3c38:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    3c3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c40:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
    3c47:	eb 2f                	jmp    3c78 <core_init_state+0x1a0>
    3c49:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
    3c4d:	66 c1 f8 03          	sar    $0x3,%ax
    3c51:	98                   	cwtl   
    3c52:	83 e0 03             	and    $0x3,%eax
    3c55:	48 98                	cltq   
    3c57:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3c5e:	00 
    3c5f:	48 8d 05 5a 34 00 00 	lea    0x345a(%rip),%rax        # 70c0 <errpat>
    3c66:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    3c6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c6e:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%rbp)
    3c75:	eb 01                	jmp    3c78 <core_init_state+0x1a0>
    3c77:	90                   	nop
    3c78:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3c7b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3c7e:	01 d0                	add    %edx,%eax
    3c80:	83 c0 01             	add    $0x1,%eax
    3c83:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    3c86:	0f 87 87 fe ff ff    	ja     3b13 <core_init_state+0x3b>
    3c8c:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    3c90:	eb 11                	jmp    3ca3 <core_init_state+0x1cb>
    3c92:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3c95:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c99:	48 01 d0             	add    %rdx,%rax
    3c9c:	c6 00 00             	movb   $0x0,(%rax)
    3c9f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    3ca3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3ca6:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    3ca9:	72 e7                	jb     3c92 <core_init_state+0x1ba>
    3cab:	90                   	nop
    3cac:	90                   	nop
    3cad:	5d                   	pop    %rbp
    3cae:	c3                   	retq   

0000000000003caf <ee_isdigit>:
    3caf:	f3 0f 1e fa          	endbr64 
    3cb3:	55                   	push   %rbp
    3cb4:	48 89 e5             	mov    %rsp,%rbp
    3cb7:	89 f8                	mov    %edi,%eax
    3cb9:	88 45 ec             	mov    %al,-0x14(%rbp)
    3cbc:	80 7d ec 2f          	cmpb   $0x2f,-0x14(%rbp)
    3cc0:	0f 97 c2             	seta   %dl
    3cc3:	80 7d ec 39          	cmpb   $0x39,-0x14(%rbp)
    3cc7:	0f 96 c0             	setbe  %al
    3cca:	21 d0                	and    %edx,%eax
    3ccc:	88 45 ff             	mov    %al,-0x1(%rbp)
    3ccf:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    3cd3:	5d                   	pop    %rbp
    3cd4:	c3                   	retq   

0000000000003cd5 <core_state_transition>:
    3cd5:	f3 0f 1e fa          	endbr64 
    3cd9:	55                   	push   %rbp
    3cda:	48 89 e5             	mov    %rsp,%rbp
    3cdd:	48 83 ec 20          	sub    $0x20,%rsp
    3ce1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3ce5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ced:	48 8b 00             	mov    (%rax),%rax
    3cf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3cf4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3cfb:	e9 6c 02 00 00       	jmpq   3f6c <core_state_transition+0x297>
    3d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d04:	0f b6 00             	movzbl (%rax),%eax
    3d07:	88 45 f3             	mov    %al,-0xd(%rbp)
    3d0a:	80 7d f3 2c          	cmpb   $0x2c,-0xd(%rbp)
    3d0e:	75 0a                	jne    3d1a <core_state_transition+0x45>
    3d10:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    3d15:	e9 67 02 00 00       	jmpq   3f81 <core_state_transition+0x2ac>
    3d1a:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
    3d1e:	0f 87 39 02 00 00    	ja     3f5d <core_state_transition+0x288>
    3d24:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3d27:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3d2e:	00 
    3d2f:	48 8d 05 d2 17 00 00 	lea    0x17d2(%rip),%rax        # 5508 <_IO_stdin_used+0x508>
    3d36:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3d39:	48 98                	cltq   
    3d3b:	48 8d 15 c6 17 00 00 	lea    0x17c6(%rip),%rdx        # 5508 <_IO_stdin_used+0x508>
    3d42:	48 01 d0             	add    %rdx,%rax
    3d45:	3e ff e0             	notrack jmpq *%rax
    3d48:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3d4c:	89 c7                	mov    %eax,%edi
    3d4e:	e8 5c ff ff ff       	callq  3caf <ee_isdigit>
    3d53:	84 c0                	test   %al,%al
    3d55:	74 09                	je     3d60 <core_state_transition+0x8b>
    3d57:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%rbp)
    3d5e:	eb 3a                	jmp    3d9a <core_state_transition+0xc5>
    3d60:	80 7d f3 2b          	cmpb   $0x2b,-0xd(%rbp)
    3d64:	74 06                	je     3d6c <core_state_transition+0x97>
    3d66:	80 7d f3 2d          	cmpb   $0x2d,-0xd(%rbp)
    3d6a:	75 09                	jne    3d75 <core_state_transition+0xa0>
    3d6c:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%rbp)
    3d73:	eb 25                	jmp    3d9a <core_state_transition+0xc5>
    3d75:	80 7d f3 2e          	cmpb   $0x2e,-0xd(%rbp)
    3d79:	75 09                	jne    3d84 <core_state_transition+0xaf>
    3d7b:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
    3d82:	eb 16                	jmp    3d9a <core_state_transition+0xc5>
    3d84:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3d8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3d8f:	48 83 c0 04          	add    $0x4,%rax
    3d93:	8b 10                	mov    (%rax),%edx
    3d95:	83 c2 01             	add    $0x1,%edx
    3d98:	89 10                	mov    %edx,(%rax)
    3d9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3d9e:	8b 00                	mov    (%rax),%eax
    3da0:	8d 50 01             	lea    0x1(%rax),%edx
    3da3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3da7:	89 10                	mov    %edx,(%rax)
    3da9:	e9 b9 01 00 00       	jmpq   3f67 <core_state_transition+0x292>
    3dae:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3db2:	89 c7                	mov    %eax,%edi
    3db4:	e8 f6 fe ff ff       	callq  3caf <ee_isdigit>
    3db9:	84 c0                	test   %al,%al
    3dbb:	74 1b                	je     3dd8 <core_state_transition+0x103>
    3dbd:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%rbp)
    3dc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3dc8:	48 83 c0 08          	add    $0x8,%rax
    3dcc:	8b 10                	mov    (%rax),%edx
    3dce:	83 c2 01             	add    $0x1,%edx
    3dd1:	89 10                	mov    %edx,(%rax)
    3dd3:	e9 8f 01 00 00       	jmpq   3f67 <core_state_transition+0x292>
    3dd8:	80 7d f3 2e          	cmpb   $0x2e,-0xd(%rbp)
    3ddc:	75 1b                	jne    3df9 <core_state_transition+0x124>
    3dde:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
    3de5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3de9:	48 83 c0 08          	add    $0x8,%rax
    3ded:	8b 10                	mov    (%rax),%edx
    3def:	83 c2 01             	add    $0x1,%edx
    3df2:	89 10                	mov    %edx,(%rax)
    3df4:	e9 6e 01 00 00       	jmpq   3f67 <core_state_transition+0x292>
    3df9:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3e00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e04:	48 83 c0 08          	add    $0x8,%rax
    3e08:	8b 10                	mov    (%rax),%edx
    3e0a:	83 c2 01             	add    $0x1,%edx
    3e0d:	89 10                	mov    %edx,(%rax)
    3e0f:	e9 53 01 00 00       	jmpq   3f67 <core_state_transition+0x292>
    3e14:	80 7d f3 2e          	cmpb   $0x2e,-0xd(%rbp)
    3e18:	75 1b                	jne    3e35 <core_state_transition+0x160>
    3e1a:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
    3e21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e25:	48 83 c0 10          	add    $0x10,%rax
    3e29:	8b 10                	mov    (%rax),%edx
    3e2b:	83 c2 01             	add    $0x1,%edx
    3e2e:	89 10                	mov    %edx,(%rax)
    3e30:	e9 2b 01 00 00       	jmpq   3f60 <core_state_transition+0x28b>
    3e35:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3e39:	89 c7                	mov    %eax,%edi
    3e3b:	e8 6f fe ff ff       	callq  3caf <ee_isdigit>
    3e40:	84 c0                	test   %al,%al
    3e42:	0f 85 18 01 00 00    	jne    3f60 <core_state_transition+0x28b>
    3e48:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3e4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e53:	48 83 c0 10          	add    $0x10,%rax
    3e57:	8b 10                	mov    (%rax),%edx
    3e59:	83 c2 01             	add    $0x1,%edx
    3e5c:	89 10                	mov    %edx,(%rax)
    3e5e:	e9 fd 00 00 00       	jmpq   3f60 <core_state_transition+0x28b>
    3e63:	80 7d f3 45          	cmpb   $0x45,-0xd(%rbp)
    3e67:	74 06                	je     3e6f <core_state_transition+0x19a>
    3e69:	80 7d f3 65          	cmpb   $0x65,-0xd(%rbp)
    3e6d:	75 1b                	jne    3e8a <core_state_transition+0x1b5>
    3e6f:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%rbp)
    3e76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e7a:	48 83 c0 14          	add    $0x14,%rax
    3e7e:	8b 10                	mov    (%rax),%edx
    3e80:	83 c2 01             	add    $0x1,%edx
    3e83:	89 10                	mov    %edx,(%rax)
    3e85:	e9 d9 00 00 00       	jmpq   3f63 <core_state_transition+0x28e>
    3e8a:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3e8e:	89 c7                	mov    %eax,%edi
    3e90:	e8 1a fe ff ff       	callq  3caf <ee_isdigit>
    3e95:	84 c0                	test   %al,%al
    3e97:	0f 85 c6 00 00 00    	jne    3f63 <core_state_transition+0x28e>
    3e9d:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3ea4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ea8:	48 83 c0 14          	add    $0x14,%rax
    3eac:	8b 10                	mov    (%rax),%edx
    3eae:	83 c2 01             	add    $0x1,%edx
    3eb1:	89 10                	mov    %edx,(%rax)
    3eb3:	e9 ab 00 00 00       	jmpq   3f63 <core_state_transition+0x28e>
    3eb8:	80 7d f3 2b          	cmpb   $0x2b,-0xd(%rbp)
    3ebc:	74 06                	je     3ec4 <core_state_transition+0x1ef>
    3ebe:	80 7d f3 2d          	cmpb   $0x2d,-0xd(%rbp)
    3ec2:	75 1b                	jne    3edf <core_state_transition+0x20a>
    3ec4:	c7 45 f4 06 00 00 00 	movl   $0x6,-0xc(%rbp)
    3ecb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ecf:	48 83 c0 0c          	add    $0xc,%rax
    3ed3:	8b 10                	mov    (%rax),%edx
    3ed5:	83 c2 01             	add    $0x1,%edx
    3ed8:	89 10                	mov    %edx,(%rax)
    3eda:	e9 88 00 00 00       	jmpq   3f67 <core_state_transition+0x292>
    3edf:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3ee6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3eea:	48 83 c0 0c          	add    $0xc,%rax
    3eee:	8b 10                	mov    (%rax),%edx
    3ef0:	83 c2 01             	add    $0x1,%edx
    3ef3:	89 10                	mov    %edx,(%rax)
    3ef5:	eb 70                	jmp    3f67 <core_state_transition+0x292>
    3ef7:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3efb:	89 c7                	mov    %eax,%edi
    3efd:	e8 ad fd ff ff       	callq  3caf <ee_isdigit>
    3f02:	84 c0                	test   %al,%al
    3f04:	74 18                	je     3f1e <core_state_transition+0x249>
    3f06:	c7 45 f4 07 00 00 00 	movl   $0x7,-0xc(%rbp)
    3f0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f11:	48 83 c0 18          	add    $0x18,%rax
    3f15:	8b 10                	mov    (%rax),%edx
    3f17:	83 c2 01             	add    $0x1,%edx
    3f1a:	89 10                	mov    %edx,(%rax)
    3f1c:	eb 49                	jmp    3f67 <core_state_transition+0x292>
    3f1e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f29:	48 83 c0 18          	add    $0x18,%rax
    3f2d:	8b 10                	mov    (%rax),%edx
    3f2f:	83 c2 01             	add    $0x1,%edx
    3f32:	89 10                	mov    %edx,(%rax)
    3f34:	eb 31                	jmp    3f67 <core_state_transition+0x292>
    3f36:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    3f3a:	89 c7                	mov    %eax,%edi
    3f3c:	e8 6e fd ff ff       	callq  3caf <ee_isdigit>
    3f41:	84 c0                	test   %al,%al
    3f43:	75 21                	jne    3f66 <core_state_transition+0x291>
    3f45:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    3f4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f50:	48 83 c0 04          	add    $0x4,%rax
    3f54:	8b 10                	mov    (%rax),%edx
    3f56:	83 c2 01             	add    $0x1,%edx
    3f59:	89 10                	mov    %edx,(%rax)
    3f5b:	eb 09                	jmp    3f66 <core_state_transition+0x291>
    3f5d:	90                   	nop
    3f5e:	eb 07                	jmp    3f67 <core_state_transition+0x292>
    3f60:	90                   	nop
    3f61:	eb 04                	jmp    3f67 <core_state_transition+0x292>
    3f63:	90                   	nop
    3f64:	eb 01                	jmp    3f67 <core_state_transition+0x292>
    3f66:	90                   	nop
    3f67:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    3f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f70:	0f b6 00             	movzbl (%rax),%eax
    3f73:	84 c0                	test   %al,%al
    3f75:	74 0a                	je     3f81 <core_state_transition+0x2ac>
    3f77:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
    3f7b:	0f 85 7f fd ff ff    	jne    3d00 <core_state_transition+0x2b>
    3f81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f89:	48 89 10             	mov    %rdx,(%rax)
    3f8c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3f8f:	c9                   	leaveq 
    3f90:	c3                   	retq   

0000000000003f91 <get_seed_32>:
    3f91:	f3 0f 1e fa          	endbr64 
    3f95:	55                   	push   %rbp
    3f96:	48 89 e5             	mov    %rsp,%rbp
    3f99:	89 7d ec             	mov    %edi,-0x14(%rbp)
    3f9c:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    3fa0:	77 5b                	ja     3ffd <get_seed_32+0x6c>
    3fa2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3fa5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3fac:	00 
    3fad:	48 8d 05 74 15 00 00 	lea    0x1574(%rip),%rax        # 5528 <_IO_stdin_used+0x528>
    3fb4:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3fb7:	48 98                	cltq   
    3fb9:	48 8d 15 68 15 00 00 	lea    0x1568(%rip),%rdx        # 5528 <_IO_stdin_used+0x528>
    3fc0:	48 01 d0             	add    %rdx,%rax
    3fc3:	3e ff e0             	notrack jmpq *%rax
    3fc6:	8b 05 34 31 00 00    	mov    0x3134(%rip),%eax        # 7100 <seed1_volatile>
    3fcc:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3fcf:	eb 34                	jmp    4005 <get_seed_32+0x74>
    3fd1:	8b 05 2d 31 00 00    	mov    0x312d(%rip),%eax        # 7104 <seed2_volatile>
    3fd7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3fda:	eb 29                	jmp    4005 <get_seed_32+0x74>
    3fdc:	8b 05 fe 30 00 00    	mov    0x30fe(%rip),%eax        # 70e0 <seed3_volatile>
    3fe2:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3fe5:	eb 1e                	jmp    4005 <get_seed_32+0x74>
    3fe7:	8b 05 1b 31 00 00    	mov    0x311b(%rip),%eax        # 7108 <seed4_volatile>
    3fed:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3ff0:	eb 13                	jmp    4005 <get_seed_32+0x74>
    3ff2:	8b 05 14 31 00 00    	mov    0x3114(%rip),%eax        # 710c <seed5_volatile>
    3ff8:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3ffb:	eb 08                	jmp    4005 <get_seed_32+0x74>
    3ffd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4004:	90                   	nop
    4005:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4008:	5d                   	pop    %rbp
    4009:	c3                   	retq   

000000000000400a <crcu8>:
    400a:	f3 0f 1e fa          	endbr64 
    400e:	55                   	push   %rbp
    400f:	48 89 e5             	mov    %rsp,%rbp
    4012:	89 fa                	mov    %edi,%edx
    4014:	89 f0                	mov    %esi,%eax
    4016:	88 55 ec             	mov    %dl,-0x14(%rbp)
    4019:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
    401d:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
    4021:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    4025:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
    4029:	c6 45 fd 00          	movb   $0x0,-0x3(%rbp)
    402d:	eb 4d                	jmp    407c <crcu8+0x72>
    402f:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
    4033:	89 c2                	mov    %eax,%edx
    4035:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
    4039:	31 d0                	xor    %edx,%eax
    403b:	83 e0 01             	and    $0x1,%eax
    403e:	88 45 ff             	mov    %al,-0x1(%rbp)
    4041:	d0 6d ec             	shrb   -0x14(%rbp)
    4044:	80 7d ff 01          	cmpb   $0x1,-0x1(%rbp)
    4048:	75 0c                	jne    4056 <crcu8+0x4c>
    404a:	66 81 75 e8 02 40    	xorw   $0x4002,-0x18(%rbp)
    4050:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
    4054:	eb 04                	jmp    405a <crcu8+0x50>
    4056:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
    405a:	66 d1 6d e8          	shrw   -0x18(%rbp)
    405e:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    4062:	74 08                	je     406c <crcu8+0x62>
    4064:	66 81 4d e8 00 80    	orw    $0x8000,-0x18(%rbp)
    406a:	eb 06                	jmp    4072 <crcu8+0x68>
    406c:	66 81 65 e8 ff 7f    	andw   $0x7fff,-0x18(%rbp)
    4072:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
    4076:	83 c0 01             	add    $0x1,%eax
    4079:	88 45 fd             	mov    %al,-0x3(%rbp)
    407c:	80 7d fd 07          	cmpb   $0x7,-0x3(%rbp)
    4080:	76 ad                	jbe    402f <crcu8+0x25>
    4082:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
    4086:	5d                   	pop    %rbp
    4087:	c3                   	retq   

0000000000004088 <crcu16>:
    4088:	f3 0f 1e fa          	endbr64 
    408c:	55                   	push   %rbp
    408d:	48 89 e5             	mov    %rsp,%rbp
    4090:	48 83 ec 08          	sub    $0x8,%rsp
    4094:	89 fa                	mov    %edi,%edx
    4096:	89 f0                	mov    %esi,%eax
    4098:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    409c:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    40a0:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    40a4:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    40a8:	0f b6 c0             	movzbl %al,%eax
    40ab:	89 d6                	mov    %edx,%esi
    40ad:	89 c7                	mov    %eax,%edi
    40af:	e8 56 ff ff ff       	callq  400a <crcu8>
    40b4:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    40b8:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    40bc:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    40c0:	66 c1 e8 08          	shr    $0x8,%ax
    40c4:	0f b6 c0             	movzbl %al,%eax
    40c7:	89 d6                	mov    %edx,%esi
    40c9:	89 c7                	mov    %eax,%edi
    40cb:	e8 3a ff ff ff       	callq  400a <crcu8>
    40d0:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    40d4:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    40d8:	c9                   	leaveq 
    40d9:	c3                   	retq   

00000000000040da <crcu32>:
    40da:	f3 0f 1e fa          	endbr64 
    40de:	55                   	push   %rbp
    40df:	48 89 e5             	mov    %rsp,%rbp
    40e2:	48 83 ec 10          	sub    $0x10,%rsp
    40e6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    40e9:	89 f0                	mov    %esi,%eax
    40eb:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    40ef:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    40f3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    40f6:	98                   	cwtl   
    40f7:	89 d6                	mov    %edx,%esi
    40f9:	89 c7                	mov    %eax,%edi
    40fb:	e8 22 00 00 00       	callq  4122 <crc16>
    4100:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    4104:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    4108:	8b 45 fc             	mov    -0x4(%rbp),%eax
    410b:	c1 e8 10             	shr    $0x10,%eax
    410e:	98                   	cwtl   
    410f:	89 d6                	mov    %edx,%esi
    4111:	89 c7                	mov    %eax,%edi
    4113:	e8 0a 00 00 00       	callq  4122 <crc16>
    4118:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    411c:	0f b7 45 f8          	movzwl -0x8(%rbp),%eax
    4120:	c9                   	leaveq 
    4121:	c3                   	retq   

0000000000004122 <crc16>:
    4122:	f3 0f 1e fa          	endbr64 
    4126:	55                   	push   %rbp
    4127:	48 89 e5             	mov    %rsp,%rbp
    412a:	48 83 ec 08          	sub    $0x8,%rsp
    412e:	89 fa                	mov    %edi,%edx
    4130:	89 f0                	mov    %esi,%eax
    4132:	66 89 55 fc          	mov    %dx,-0x4(%rbp)
    4136:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
    413a:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
    413e:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    4142:	0f b7 c0             	movzwl %ax,%eax
    4145:	89 d6                	mov    %edx,%esi
    4147:	89 c7                	mov    %eax,%edi
    4149:	e8 3a ff ff ff       	callq  4088 <crcu16>
    414e:	c9                   	leaveq 
    414f:	c3                   	retq   

0000000000004150 <check_data_types>:
    4150:	f3 0f 1e fa          	endbr64 
    4154:	55                   	push   %rbp
    4155:	48 89 e5             	mov    %rsp,%rbp
    4158:	48 83 ec 10          	sub    $0x10,%rsp
    415c:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    4160:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    4164:	74 0c                	je     4172 <check_data_types+0x22>
    4166:	48 8d 3d d3 13 00 00 	lea    0x13d3(%rip),%rdi        # 5540 <_IO_stdin_used+0x540>
    416d:	e8 5e cf ff ff       	callq  10d0 <puts@plt>
    4172:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    4176:	c9                   	leaveq 
    4177:	c3                   	retq   

0000000000004178 <portable_malloc>:
    4178:	f3 0f 1e fa          	endbr64 
    417c:	55                   	push   %rbp
    417d:	48 89 e5             	mov    %rsp,%rbp
    4180:	48 83 ec 10          	sub    $0x10,%rsp
    4184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    418c:	48 89 c7             	mov    %rax,%rdi
    418f:	e8 7c cf ff ff       	callq  1110 <malloc@plt>
    4194:	c9                   	leaveq 
    4195:	c3                   	retq   

0000000000004196 <portable_free>:
    4196:	f3 0f 1e fa          	endbr64 
    419a:	55                   	push   %rbp
    419b:	48 89 e5             	mov    %rsp,%rbp
    419e:	48 83 ec 10          	sub    $0x10,%rsp
    41a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41aa:	48 89 c7             	mov    %rax,%rdi
    41ad:	e8 fe ce ff ff       	callq  10b0 <free@plt>
    41b2:	90                   	nop
    41b3:	c9                   	leaveq 
    41b4:	c3                   	retq   

00000000000041b5 <start_time>:
    41b5:	f3 0f 1e fa          	endbr64 
    41b9:	55                   	push   %rbp
    41ba:	48 89 e5             	mov    %rsp,%rbp
    41bd:	48 8d 35 4c 2f 00 00 	lea    0x2f4c(%rip),%rsi        # 7110 <start_time_val>
    41c4:	bf 00 00 00 00       	mov    $0x0,%edi
    41c9:	e8 12 cf ff ff       	callq  10e0 <clock_gettime@plt>
    41ce:	90                   	nop
    41cf:	5d                   	pop    %rbp
    41d0:	c3                   	retq   

00000000000041d1 <stop_time>:
    41d1:	f3 0f 1e fa          	endbr64 
    41d5:	55                   	push   %rbp
    41d6:	48 89 e5             	mov    %rsp,%rbp
    41d9:	48 8d 35 40 2f 00 00 	lea    0x2f40(%rip),%rsi        # 7120 <stop_time_val>
    41e0:	bf 00 00 00 00       	mov    $0x0,%edi
    41e5:	e8 f6 ce ff ff       	callq  10e0 <clock_gettime@plt>
    41ea:	90                   	nop
    41eb:	5d                   	pop    %rbp
    41ec:	c3                   	retq   

00000000000041ed <get_time>:
    41ed:	f3 0f 1e fa          	endbr64 
    41f1:	55                   	push   %rbp
    41f2:	48 89 e5             	mov    %rsp,%rbp
    41f5:	48 8b 15 24 2f 00 00 	mov    0x2f24(%rip),%rdx        # 7120 <stop_time_val>
    41fc:	48 8b 05 0d 2f 00 00 	mov    0x2f0d(%rip),%rax        # 7110 <start_time_val>
    4203:	48 29 c2             	sub    %rax,%rdx
    4206:	48 89 d0             	mov    %rdx,%rax
    4209:	48 69 f0 e8 03 00 00 	imul   $0x3e8,%rax,%rsi
    4210:	48 8b 15 11 2f 00 00 	mov    0x2f11(%rip),%rdx        # 7128 <stop_time_val+0x8>
    4217:	48 8b 05 fa 2e 00 00 	mov    0x2efa(%rip),%rax        # 7118 <start_time_val+0x8>
    421e:	48 89 d1             	mov    %rdx,%rcx
    4221:	48 29 c1             	sub    %rax,%rcx
    4224:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    422b:	de 1b 43 
    422e:	48 89 c8             	mov    %rcx,%rax
    4231:	48 f7 ea             	imul   %rdx
    4234:	48 c1 fa 12          	sar    $0x12,%rdx
    4238:	48 89 c8             	mov    %rcx,%rax
    423b:	48 c1 f8 3f          	sar    $0x3f,%rax
    423f:	48 29 c2             	sub    %rax,%rdx
    4242:	48 89 d0             	mov    %rdx,%rax
    4245:	48 01 f0             	add    %rsi,%rax
    4248:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    424c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4250:	5d                   	pop    %rbp
    4251:	c3                   	retq   

0000000000004252 <time_in_secs>:
    4252:	f3 0f 1e fa          	endbr64 
    4256:	55                   	push   %rbp
    4257:	48 89 e5             	mov    %rsp,%rbp
    425a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    425e:	f2 48 0f 2a 45 e8    	cvtsi2sdq -0x18(%rbp),%xmm0
    4264:	f2 0f 10 0d 0c 13 00 	movsd  0x130c(%rip),%xmm1        # 5578 <_IO_stdin_used+0x578>
    426b:	00 
    426c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    4270:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    4275:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    427a:	5d                   	pop    %rbp
    427b:	c3                   	retq   

000000000000427c <portable_init>:
    427c:	f3 0f 1e fa          	endbr64 
    4280:	55                   	push   %rbp
    4281:	48 89 e5             	mov    %rsp,%rbp
    4284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4288:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    428c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4294:	c6 00 01             	movb   $0x1,(%rax)
    4297:	90                   	nop
    4298:	5d                   	pop    %rbp
    4299:	c3                   	retq   

000000000000429a <portable_fini>:
    429a:	f3 0f 1e fa          	endbr64 
    429e:	55                   	push   %rbp
    429f:	48 89 e5             	mov    %rsp,%rbp
    42a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42aa:	c6 00 00             	movb   $0x0,(%rax)
    42ad:	90                   	nop
    42ae:	5d                   	pop    %rbp
    42af:	c3                   	retq   

00000000000042b0 <__libc_csu_init>:
    42b0:	f3 0f 1e fa          	endbr64 
    42b4:	41 57                	push   %r15
    42b6:	4c 8d 3d cb 2a 00 00 	lea    0x2acb(%rip),%r15        # 6d88 <__frame_dummy_init_array_entry>
    42bd:	41 56                	push   %r14
    42bf:	49 89 d6             	mov    %rdx,%r14
    42c2:	41 55                	push   %r13
    42c4:	49 89 f5             	mov    %rsi,%r13
    42c7:	41 54                	push   %r12
    42c9:	41 89 fc             	mov    %edi,%r12d
    42cc:	55                   	push   %rbp
    42cd:	48 8d 2d bc 2a 00 00 	lea    0x2abc(%rip),%rbp        # 6d90 <__do_global_dtors_aux_fini_array_entry>
    42d4:	53                   	push   %rbx
    42d5:	4c 29 fd             	sub    %r15,%rbp
    42d8:	48 83 ec 08          	sub    $0x8,%rsp
    42dc:	e8 1f cd ff ff       	callq  1000 <_init>
    42e1:	48 c1 fd 03          	sar    $0x3,%rbp
    42e5:	74 1f                	je     4306 <__libc_csu_init+0x56>
    42e7:	31 db                	xor    %ebx,%ebx
    42e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42f0:	4c 89 f2             	mov    %r14,%rdx
    42f3:	4c 89 ee             	mov    %r13,%rsi
    42f6:	44 89 e7             	mov    %r12d,%edi
    42f9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    42fd:	48 83 c3 01          	add    $0x1,%rbx
    4301:	48 39 dd             	cmp    %rbx,%rbp
    4304:	75 ea                	jne    42f0 <__libc_csu_init+0x40>
    4306:	48 83 c4 08          	add    $0x8,%rsp
    430a:	5b                   	pop    %rbx
    430b:	5d                   	pop    %rbp
    430c:	41 5c                	pop    %r12
    430e:	41 5d                	pop    %r13
    4310:	41 5e                	pop    %r14
    4312:	41 5f                	pop    %r15
    4314:	c3                   	retq   
    4315:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    431c:	00 00 00 00 

0000000000004320 <__libc_csu_fini>:
    4320:	f3 0f 1e fa          	endbr64 
    4324:	c3                   	retq   

Disassembly of section .fini:

0000000000004328 <_fini>:
    4328:	f3 0f 1e fa          	endbr64 
    432c:	48 83 ec 08          	sub    $0x8,%rsp
    4330:	48 83 c4 08          	add    $0x8,%rsp
    4334:	c3                   	retq   

Disassembly of section .rodata:

0000000000005000 <_IO_stdin_used>:
    5000:	01 00                	add    %eax,(%rax)
    5002:	02 00                	add    (%rax),%al
    5004:	00 00                	add    %al,(%rax)
    5006:	00 00                	add    %al,(%rax)
    5008:	53                   	push   %rbx
    5009:	74 61                	je     506c <_IO_stdin_used+0x6c>
    500b:	74 69                	je     5076 <_IO_stdin_used+0x76>
    500d:	63 00                	movslq (%rax),%eax
    500f:	48                   	rex.W
    5010:	65 61                	gs (bad) 
    5012:	70 00                	jo     5014 <_IO_stdin_used+0x14>
    5014:	53                   	push   %rbx
    5015:	74 61                	je     5078 <_IO_stdin_used+0x78>
    5017:	63 6b 00             	movslq 0x0(%rbx),%ebp
    501a:	00 00                	add    %al,(%rax)
    501c:	00 00                	add    %al,(%rax)
    501e:	00 00                	add    %al,(%rax)
    5020:	36 6b 20 70          	imul   $0x70,%ss:(%rax),%esp
    5024:	65 72 66             	gs jb  508d <_IO_stdin_used+0x8d>
    5027:	6f                   	outsl  %ds:(%rsi),(%dx)
    5028:	72 6d                	jb     5097 <_IO_stdin_used+0x97>
    502a:	61                   	(bad)  
    502b:	6e                   	outsb  %ds:(%rsi),(%dx)
    502c:	63 65 20             	movslq 0x20(%rbp),%esp
    502f:	72 75                	jb     50a6 <_IO_stdin_used+0xa6>
    5031:	6e                   	outsb  %ds:(%rsi),(%dx)
    5032:	20 70 61             	and    %dh,0x61(%rax)
    5035:	72 61                	jb     5098 <_IO_stdin_used+0x98>
    5037:	6d                   	insl   (%dx),%es:(%rdi)
    5038:	65 74 65             	gs je  50a0 <_IO_stdin_used+0xa0>
    503b:	72 73                	jb     50b0 <_IO_stdin_used+0xb0>
    503d:	20 66 6f             	and    %ah,0x6f(%rsi)
    5040:	72 20                	jb     5062 <_IO_stdin_used+0x62>
    5042:	63 6f 72             	movslq 0x72(%rdi),%ebp
    5045:	65 6d                	gs insl (%dx),%es:(%rdi)
    5047:	61                   	(bad)  
    5048:	72 6b                	jb     50b5 <_IO_stdin_used+0xb5>
    504a:	2e 00 00             	add    %al,%cs:(%rax)
    504d:	00 00                	add    %al,(%rax)
    504f:	00 36                	add    %dh,(%rsi)
    5051:	6b 20 76             	imul   $0x76,(%rax),%esp
    5054:	61                   	(bad)  
    5055:	6c                   	insb   (%dx),%es:(%rdi)
    5056:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    505d:	20 
    505e:	72 75                	jb     50d5 <_IO_stdin_used+0xd5>
    5060:	6e                   	outsb  %ds:(%rsi),(%dx)
    5061:	20 70 61             	and    %dh,0x61(%rax)
    5064:	72 61                	jb     50c7 <_IO_stdin_used+0xc7>
    5066:	6d                   	insl   (%dx),%es:(%rdi)
    5067:	65 74 65             	gs je  50cf <_IO_stdin_used+0xcf>
    506a:	72 73                	jb     50df <_IO_stdin_used+0xdf>
    506c:	20 66 6f             	and    %ah,0x6f(%rsi)
    506f:	72 20                	jb     5091 <_IO_stdin_used+0x91>
    5071:	63 6f 72             	movslq 0x72(%rdi),%ebp
    5074:	65 6d                	gs insl (%dx),%es:(%rdi)
    5076:	61                   	(bad)  
    5077:	72 6b                	jb     50e4 <_IO_stdin_used+0xe4>
    5079:	2e 00 00             	add    %al,%cs:(%rax)
    507c:	00 00                	add    %al,(%rax)
    507e:	00 00                	add    %al,(%rax)
    5080:	50                   	push   %rax
    5081:	72 6f                	jb     50f2 <_IO_stdin_used+0xf2>
    5083:	66 69 6c 65 20 67 65 	imul   $0x6567,0x20(%rbp,%riz,2),%bp
    508a:	6e                   	outsb  %ds:(%rsi),(%dx)
    508b:	65 72 61             	gs jb  50ef <_IO_stdin_used+0xef>
    508e:	74 69                	je     50f9 <_IO_stdin_used+0xf9>
    5090:	6f                   	outsl  %ds:(%rsi),(%dx)
    5091:	6e                   	outsb  %ds:(%rsi),(%dx)
    5092:	20 72 75             	and    %dh,0x75(%rdx)
    5095:	6e                   	outsb  %ds:(%rsi),(%dx)
    5096:	20 70 61             	and    %dh,0x61(%rax)
    5099:	72 61                	jb     50fc <_IO_stdin_used+0xfc>
    509b:	6d                   	insl   (%dx),%es:(%rdi)
    509c:	65 74 65             	gs je  5104 <_IO_stdin_used+0x104>
    509f:	72 73                	jb     5114 <_IO_stdin_used+0x114>
    50a1:	20 66 6f             	and    %ah,0x6f(%rsi)
    50a4:	72 20                	jb     50c6 <_IO_stdin_used+0xc6>
    50a6:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50a9:	65 6d                	gs insl (%dx),%es:(%rdi)
    50ab:	61                   	(bad)  
    50ac:	72 6b                	jb     5119 <_IO_stdin_used+0x119>
    50ae:	2e 00 32             	add    %dh,%cs:(%rdx)
    50b1:	4b 20 70 65          	rex.WXB and %sil,0x65(%r8)
    50b5:	72 66                	jb     511d <_IO_stdin_used+0x11d>
    50b7:	6f                   	outsl  %ds:(%rsi),(%dx)
    50b8:	72 6d                	jb     5127 <_IO_stdin_used+0x127>
    50ba:	61                   	(bad)  
    50bb:	6e                   	outsb  %ds:(%rsi),(%dx)
    50bc:	63 65 20             	movslq 0x20(%rbp),%esp
    50bf:	72 75                	jb     5136 <_IO_stdin_used+0x136>
    50c1:	6e                   	outsb  %ds:(%rsi),(%dx)
    50c2:	20 70 61             	and    %dh,0x61(%rax)
    50c5:	72 61                	jb     5128 <_IO_stdin_used+0x128>
    50c7:	6d                   	insl   (%dx),%es:(%rdi)
    50c8:	65 74 65             	gs je  5130 <_IO_stdin_used+0x130>
    50cb:	72 73                	jb     5140 <_IO_stdin_used+0x140>
    50cd:	20 66 6f             	and    %ah,0x6f(%rsi)
    50d0:	72 20                	jb     50f2 <_IO_stdin_used+0xf2>
    50d2:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50d5:	65 6d                	gs insl (%dx),%es:(%rdi)
    50d7:	61                   	(bad)  
    50d8:	72 6b                	jb     5145 <_IO_stdin_used+0x145>
    50da:	2e 00 00             	add    %al,%cs:(%rax)
    50dd:	00 00                	add    %al,(%rax)
    50df:	00 32                	add    %dh,(%rdx)
    50e1:	4b 20 76 61          	rex.WXB and %sil,0x61(%r14)
    50e5:	6c                   	insb   (%dx),%es:(%rdi)
    50e6:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    50ed:	20 
    50ee:	72 75                	jb     5165 <_IO_stdin_used+0x165>
    50f0:	6e                   	outsb  %ds:(%rsi),(%dx)
    50f1:	20 70 61             	and    %dh,0x61(%rax)
    50f4:	72 61                	jb     5157 <_IO_stdin_used+0x157>
    50f6:	6d                   	insl   (%dx),%es:(%rdi)
    50f7:	65 74 65             	gs je  515f <_IO_stdin_used+0x15f>
    50fa:	72 73                	jb     516f <_IO_stdin_used+0x16f>
    50fc:	20 66 6f             	and    %ah,0x6f(%rsi)
    50ff:	72 20                	jb     5121 <_IO_stdin_used+0x121>
    5101:	63 6f 72             	movslq 0x72(%rdi),%ebp
    5104:	65 6d                	gs insl (%dx),%es:(%rdi)
    5106:	61                   	(bad)  
    5107:	72 6b                	jb     5174 <_IO_stdin_used+0x174>
    5109:	2e 00 00             	add    %al,%cs:(%rax)
    510c:	00 00                	add    %al,(%rax)
    510e:	00 00                	add    %al,(%rax)
    5110:	5b                   	pop    %rbx
    5111:	25 75 5d 45 52       	and    $0x52455d75,%eax
    5116:	52                   	push   %rdx
    5117:	4f 52                	rex.WRXB push %r10
    5119:	21 20                	and    %esp,(%rax)
    511b:	6c                   	insb   (%dx),%es:(%rdi)
    511c:	69 73 74 20 63 72 63 	imul   $0x63726320,0x74(%rbx),%esi
    5123:	20 30                	and    %dh,(%rax)
    5125:	78 25                	js     514c <_IO_stdin_used+0x14c>
    5127:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    512a:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c450 <_end+0x6f685320>
    5130:	75 6c                	jne    519e <_IO_stdin_used+0x19e>
    5132:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5136:	20 30                	and    %dh,(%rax)
    5138:	78 25                	js     515f <_IO_stdin_used+0x15f>
    513a:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    513d:	0a 00                	or     (%rax),%al
    513f:	00 5b 25             	add    %bl,0x25(%rbx)
    5142:	75 5d                	jne    51a1 <_IO_stdin_used+0x1a1>
    5144:	45 52                	rex.RB push %r10
    5146:	52                   	push   %rdx
    5147:	4f 52                	rex.WRXB push %r10
    5149:	21 20                	and    %esp,(%rax)
    514b:	6d                   	insl   (%dx),%es:(%rdi)
    514c:	61                   	(bad)  
    514d:	74 72                	je     51c1 <_IO_stdin_used+0x1c1>
    514f:	69 78 20 63 72 63 20 	imul   $0x20637263,0x20(%rax),%edi
    5156:	30 78 25             	xor    %bh,0x25(%rax)
    5159:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    515c:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c482 <_end+0x6f685352>
    5162:	75 6c                	jne    51d0 <_IO_stdin_used+0x1d0>
    5164:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5168:	20 30                	and    %dh,(%rax)
    516a:	78 25                	js     5191 <_IO_stdin_used+0x191>
    516c:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    516f:	0a 00                	or     (%rax),%al
    5171:	00 00                	add    %al,(%rax)
    5173:	00 00                	add    %al,(%rax)
    5175:	00 00                	add    %al,(%rax)
    5177:	00 5b 25             	add    %bl,0x25(%rbx)
    517a:	75 5d                	jne    51d9 <_IO_stdin_used+0x1d9>
    517c:	45 52                	rex.RB push %r10
    517e:	52                   	push   %rdx
    517f:	4f 52                	rex.WRXB push %r10
    5181:	21 20                	and    %esp,(%rax)
    5183:	73 74                	jae    51f9 <_IO_stdin_used+0x1f9>
    5185:	61                   	(bad)  
    5186:	74 65                	je     51ed <_IO_stdin_used+0x1ed>
    5188:	20 63 72             	and    %ah,0x72(%rbx)
    518b:	63 20                	movslq (%rax),%esp
    518d:	30 78 25             	xor    %bh,0x25(%rax)
    5190:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5193:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c4b9 <_end+0x6f685389>
    5199:	75 6c                	jne    5207 <_IO_stdin_used+0x207>
    519b:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    519f:	20 30                	and    %dh,(%rax)
    51a1:	78 25                	js     51c8 <_IO_stdin_used+0x1c8>
    51a3:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    51a6:	0a 00                	or     (%rax),%al
    51a8:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    51aa:	72 65                	jb     5211 <_IO_stdin_used+0x211>
    51ac:	4d 61                	rex.WRB (bad) 
    51ae:	72 6b                	jb     521b <_IO_stdin_used+0x21b>
    51b0:	20 53 69             	and    %dl,0x69(%rbx)
    51b3:	7a 65                	jp     521a <_IO_stdin_used+0x21a>
    51b5:	20 20                	and    %ah,(%rax)
    51b7:	20 20                	and    %ah,(%rax)
    51b9:	3a 20                	cmp    (%rax),%ah
    51bb:	25 6c 75 0a 00       	and    $0xa756c,%eax
    51c0:	54                   	push   %rsp
    51c1:	6f                   	outsl  %ds:(%rsi),(%dx)
    51c2:	74 61                	je     5225 <_IO_stdin_used+0x225>
    51c4:	6c                   	insb   (%dx),%es:(%rdi)
    51c5:	20 74 69 63          	and    %dh,0x63(%rcx,%rbp,2)
    51c9:	6b 73 20 20          	imul   $0x20,0x20(%rbx),%esi
    51cd:	20 20                	and    %ah,(%rax)
    51cf:	20 20                	and    %ah,(%rax)
    51d1:	3a 20                	cmp    (%rax),%ah
    51d3:	25 6c 75 0a 00       	and    $0xa756c,%eax
    51d8:	54                   	push   %rsp
    51d9:	6f                   	outsl  %ds:(%rsi),(%dx)
    51da:	74 61                	je     523d <_IO_stdin_used+0x23d>
    51dc:	6c                   	insb   (%dx),%es:(%rdi)
    51dd:	20 74 69 6d          	and    %dh,0x6d(%rcx,%rbp,2)
    51e1:	65 20 28             	and    %ch,%gs:(%rax)
    51e4:	73 65                	jae    524b <_IO_stdin_used+0x24b>
    51e6:	63 73 29             	movslq 0x29(%rbx),%esi
    51e9:	3a 20                	cmp    (%rax),%ah
    51eb:	25 66 0a 00 49       	and    $0x49000a66,%eax
    51f0:	74 65                	je     5257 <_IO_stdin_used+0x257>
    51f2:	72 61                	jb     5255 <_IO_stdin_used+0x255>
    51f4:	74 69                	je     525f <_IO_stdin_used+0x25f>
    51f6:	6f                   	outsl  %ds:(%rsi),(%dx)
    51f7:	6e                   	outsb  %ds:(%rsi),(%dx)
    51f8:	73 2f                	jae    5229 <_IO_stdin_used+0x229>
    51fa:	53                   	push   %rbx
    51fb:	65 63 20             	movslq %gs:(%rax),%esp
    51fe:	20 20                	and    %ah,(%rax)
    5200:	3a 20                	cmp    (%rax),%ah
    5202:	25 66 0a 00 00       	and    $0xa66,%eax
    5207:	00 45 52             	add    %al,0x52(%rbp)
    520a:	52                   	push   %rdx
    520b:	4f 52                	rex.WRXB push %r10
    520d:	21 20                	and    %esp,(%rax)
    520f:	4d 75 73             	rex.WRB jne 5285 <_IO_stdin_used+0x285>
    5212:	74 20                	je     5234 <_IO_stdin_used+0x234>
    5214:	65 78 65             	gs js  527c <_IO_stdin_used+0x27c>
    5217:	63 75 74             	movslq 0x74(%rbp),%esi
    521a:	65 20 66 6f          	and    %ah,%gs:0x6f(%rsi)
    521e:	72 20                	jb     5240 <_IO_stdin_used+0x240>
    5220:	61                   	(bad)  
    5221:	74 20                	je     5243 <_IO_stdin_used+0x243>
    5223:	6c                   	insb   (%dx),%es:(%rdi)
    5224:	65 61                	gs (bad) 
    5226:	73 74                	jae    529c <_IO_stdin_used+0x29c>
    5228:	20 31                	and    %dh,(%rcx)
    522a:	30 20                	xor    %ah,(%rax)
    522c:	73 65                	jae    5293 <_IO_stdin_used+0x293>
    522e:	63 73 20             	movslq 0x20(%rbx),%esi
    5231:	66 6f                	outsw  %ds:(%rsi),(%dx)
    5233:	72 20                	jb     5255 <_IO_stdin_used+0x255>
    5235:	61                   	(bad)  
    5236:	20 76 61             	and    %dh,0x61(%rsi)
    5239:	6c                   	insb   (%dx),%es:(%rdi)
    523a:	69 64 20 72 65 73 75 	imul   $0x6c757365,0x72(%rax,%riz,1),%esp
    5241:	6c 
    5242:	74 21                	je     5265 <_IO_stdin_used+0x265>
    5244:	00 49 74             	add    %cl,0x74(%rcx)
    5247:	65 72 61             	gs jb  52ab <_IO_stdin_used+0x2ab>
    524a:	74 69                	je     52b5 <_IO_stdin_used+0x2b5>
    524c:	6f                   	outsl  %ds:(%rsi),(%dx)
    524d:	6e                   	outsb  %ds:(%rsi),(%dx)
    524e:	73 20                	jae    5270 <_IO_stdin_used+0x270>
    5250:	20 20                	and    %ah,(%rax)
    5252:	20 20                	and    %ah,(%rax)
    5254:	20 20                	and    %ah,(%rax)
    5256:	3a 20                	cmp    (%rax),%ah
    5258:	25 6c 75 0a 00       	and    $0xa756c,%eax
    525d:	47                   	rex.RXB
    525e:	43                   	rex.XB
    525f:	43 39 2e             	rex.XB cmp %ebp,(%r14)
    5262:	34 2e                	xor    $0x2e,%al
    5264:	30 00                	xor    %al,(%rax)
    5266:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    5268:	6d                   	insl   (%dx),%es:(%rdi)
    5269:	70 69                	jo     52d4 <_IO_stdin_used+0x2d4>
    526b:	6c                   	insb   (%dx),%es:(%rdi)
    526c:	65 72 20             	gs jb  528f <_IO_stdin_used+0x28f>
    526f:	76 65                	jbe    52d6 <_IO_stdin_used+0x2d6>
    5271:	72 73                	jb     52e6 <_IO_stdin_used+0x2e6>
    5273:	69 6f 6e 20 3a 20 25 	imul   $0x25203a20,0x6e(%rdi),%ebp
    527a:	73 0a                	jae    5286 <_IO_stdin_used+0x286>
    527c:	00 2d 4f 30 20 20    	add    %ch,0x2020304f(%rip)        # 202082d1 <_end+0x202011a1>
    5282:	20 2d 6c 72 74 00    	and    %ch,0x74726c(%rip)        # 74c4f4 <_end+0x7453c4>
    5288:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    528a:	6d                   	insl   (%dx),%es:(%rdi)
    528b:	70 69                	jo     52f6 <_IO_stdin_used+0x2f6>
    528d:	6c                   	insb   (%dx),%es:(%rdi)
    528e:	65 72 20             	gs jb  52b1 <_IO_stdin_used+0x2b1>
    5291:	66 6c                	data16 insb (%dx),%es:(%rdi)
    5293:	61                   	(bad)  
    5294:	67 73 20             	addr32 jae 52b7 <_IO_stdin_used+0x2b7>
    5297:	20 20                	and    %ah,(%rax)
    5299:	3a 20                	cmp    (%rax),%ah
    529b:	25 73 0a 00 00       	and    $0xa73,%eax
    52a0:	50                   	push   %rax
    52a1:	6c                   	insb   (%dx),%es:(%rdi)
    52a2:	65 61                	gs (bad) 
    52a4:	73 65                	jae    530b <_IO_stdin_used+0x30b>
    52a6:	20 70 75             	and    %dh,0x75(%rax)
    52a9:	74 20                	je     52cb <_IO_stdin_used+0x2cb>
    52ab:	64 61                	fs (bad) 
    52ad:	74 61                	je     5310 <_IO_stdin_used+0x310>
    52af:	20 6d 65             	and    %ch,0x65(%rbp)
    52b2:	6d                   	insl   (%dx),%es:(%rdi)
    52b3:	6f                   	outsl  %ds:(%rsi),(%dx)
    52b4:	72 79                	jb     532f <_IO_stdin_used+0x32f>
    52b6:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    52ba:	61                   	(bad)  
    52bb:	74 69                	je     5326 <_IO_stdin_used+0x326>
    52bd:	6f                   	outsl  %ds:(%rsi),(%dx)
    52be:	6e                   	outsb  %ds:(%rsi),(%dx)
    52bf:	20 68 65             	and    %ch,0x65(%rax)
    52c2:	72 65                	jb     5329 <_IO_stdin_used+0x329>
    52c4:	0a 09                	or     (%rcx),%cl
    52c6:	09 09                	or     %ecx,(%rcx)
    52c8:	28 65 2e             	sub    %ah,0x2e(%rbp)
    52cb:	67 2e 20 63 6f       	and    %ah,%cs:0x6f(%ebx)
    52d0:	64 65 20 69 6e       	fs and %ch,%gs:0x6e(%rcx)
    52d5:	20 66 6c             	and    %ah,0x6c(%rsi)
    52d8:	61                   	(bad)  
    52d9:	73 68                	jae    5343 <_IO_stdin_used+0x343>
    52db:	2c 20                	sub    $0x20,%al
    52dd:	64 61                	fs (bad) 
    52df:	74 61                	je     5342 <_IO_stdin_used+0x342>
    52e1:	20 6f 6e             	and    %ch,0x6e(%rdi)
    52e4:	20 68 65             	and    %ch,0x65(%rax)
    52e7:	61                   	(bad)  
    52e8:	70 20                	jo     530a <_IO_stdin_used+0x30a>
    52ea:	65 74 63             	gs je  5350 <_IO_stdin_used+0x350>
    52ed:	29 00                	sub    %eax,(%rax)
    52ef:	4d                   	rex.WRB
    52f0:	65 6d                	gs insl (%dx),%es:(%rdi)
    52f2:	6f                   	outsl  %ds:(%rsi),(%dx)
    52f3:	72 79                	jb     536e <_IO_stdin_used+0x36e>
    52f5:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    52f9:	61                   	(bad)  
    52fa:	74 69                	je     5365 <_IO_stdin_used+0x365>
    52fc:	6f                   	outsl  %ds:(%rsi),(%dx)
    52fd:	6e                   	outsb  %ds:(%rsi),(%dx)
    52fe:	20 20                	and    %ah,(%rax)
    5300:	3a 20                	cmp    (%rax),%ah
    5302:	25 73 0a 00 73       	and    $0x73000a73,%eax
    5307:	65 65 64 63 72 63    	gs gs movslq %fs:0x63(%rdx),%esi
    530d:	20 20                	and    %ah,(%rax)
    530f:	20 20                	and    %ah,(%rax)
    5311:	20 20                	and    %ah,(%rax)
    5313:	20 20                	and    %ah,(%rax)
    5315:	20 20                	and    %ah,(%rax)
    5317:	3a 20                	cmp    (%rax),%ah
    5319:	30 78 25             	xor    %bh,0x25(%rax)
    531c:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    531f:	0a 00                	or     (%rax),%al
    5321:	5b                   	pop    %rbx
    5322:	25 64 5d 63 72       	and    $0x72635d64,%eax
    5327:	63 6c 69 73          	movslq 0x73(%rcx,%rbp,2),%ebp
    532b:	74 20                	je     534d <_IO_stdin_used+0x34d>
    532d:	20 20                	and    %ah,(%rax)
    532f:	20 20                	and    %ah,(%rax)
    5331:	20 20                	and    %ah,(%rax)
    5333:	3a 20                	cmp    (%rax),%ah
    5335:	30 78 25             	xor    %bh,0x25(%rax)
    5338:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    533b:	0a 00                	or     (%rax),%al
    533d:	5b                   	pop    %rbx
    533e:	25 64 5d 63 72       	and    $0x72635d64,%eax
    5343:	63 6d 61             	movslq 0x61(%rbp),%ebp
    5346:	74 72                	je     53ba <_IO_stdin_used+0x3ba>
    5348:	69 78 20 20 20 20 20 	imul   $0x20202020,0x20(%rax),%edi
    534f:	3a 20                	cmp    (%rax),%ah
    5351:	30 78 25             	xor    %bh,0x25(%rax)
    5354:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5357:	0a 00                	or     (%rax),%al
    5359:	5b                   	pop    %rbx
    535a:	25 64 5d 63 72       	and    $0x72635d64,%eax
    535f:	63 73 74             	movslq 0x74(%rbx),%esi
    5362:	61                   	(bad)  
    5363:	74 65                	je     53ca <_IO_stdin_used+0x3ca>
    5365:	20 20                	and    %ah,(%rax)
    5367:	20 20                	and    %ah,(%rax)
    5369:	20 20                	and    %ah,(%rax)
    536b:	3a 20                	cmp    (%rax),%ah
    536d:	30 78 25             	xor    %bh,0x25(%rax)
    5370:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5373:	0a 00                	or     (%rax),%al
    5375:	5b                   	pop    %rbx
    5376:	25 64 5d 63 72       	and    $0x72635d64,%eax
    537b:	63 66 69             	movslq 0x69(%rsi),%esp
    537e:	6e                   	outsb  %ds:(%rsi),(%dx)
    537f:	61                   	(bad)  
    5380:	6c                   	insb   (%dx),%es:(%rdi)
    5381:	20 20                	and    %ah,(%rax)
    5383:	20 20                	and    %ah,(%rax)
    5385:	20 20                	and    %ah,(%rax)
    5387:	3a 20                	cmp    (%rax),%ah
    5389:	30 78 25             	xor    %bh,0x25(%rax)
    538c:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    538f:	0a 00                	or     (%rax),%al
    5391:	00 00                	add    %al,(%rax)
    5393:	00 00                	add    %al,(%rax)
    5395:	00 00                	add    %al,(%rax)
    5397:	00 43 6f             	add    %al,0x6f(%rbx)
    539a:	72 72                	jb     540e <_IO_stdin_used+0x40e>
    539c:	65 63 74 20 6f       	movslq %gs:0x6f(%rax,%riz,1),%esi
    53a1:	70 65                	jo     5408 <_IO_stdin_used+0x408>
    53a3:	72 61                	jb     5406 <_IO_stdin_used+0x406>
    53a5:	74 69                	je     5410 <_IO_stdin_used+0x410>
    53a7:	6f                   	outsl  %ds:(%rsi),(%dx)
    53a8:	6e                   	outsb  %ds:(%rsi),(%dx)
    53a9:	20 76 61             	and    %dh,0x61(%rsi)
    53ac:	6c                   	insb   (%dx),%es:(%rdi)
    53ad:	69 64 61 74 65 64 2e 	imul   $0x202e6465,0x74(%rcx,%riz,2),%esp
    53b4:	20 
    53b5:	53                   	push   %rbx
    53b6:	65 65 20 52 45       	gs and %dl,%gs:0x45(%rdx)
    53bb:	41                   	rex.B
    53bc:	44                   	rex.R
    53bd:	4d                   	rex.WRB
    53be:	45                   	rex.RB
    53bf:	2e 6d                	cs insl (%dx),%es:(%rdi)
    53c1:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    53c5:	72 20                	jb     53e7 <_IO_stdin_used+0x3e7>
    53c7:	72 75                	jb     543e <_IO_stdin_used+0x43e>
    53c9:	6e                   	outsb  %ds:(%rsi),(%dx)
    53ca:	20 61 6e             	and    %ah,0x6e(%rcx)
    53cd:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
    53d1:	70 6f                	jo     5442 <_IO_stdin_used+0x442>
    53d3:	72 74                	jb     5449 <_IO_stdin_used+0x449>
    53d5:	69 6e 67 20 72 75 6c 	imul   $0x6c757220,0x67(%rsi),%ebp
    53dc:	65 73 2e             	gs jae 540d <_IO_stdin_used+0x40d>
    53df:	00 43 6f             	add    %al,0x6f(%rbx)
    53e2:	72 65                	jb     5449 <_IO_stdin_used+0x449>
    53e4:	4d 61                	rex.WRB (bad) 
    53e6:	72 6b                	jb     5453 <_IO_stdin_used+0x453>
    53e8:	20 31                	and    %dh,(%rcx)
    53ea:	2e 30 20             	xor    %ah,%cs:(%rax)
    53ed:	3a 20                	cmp    (%rax),%ah
    53ef:	25 66 20 2f 20       	and    $0x202f2066,%eax
    53f4:	25 73 20 25 73       	and    $0x73252073,%eax
    53f9:	00 20                	add    %ah,(%rax)
    53fb:	2f                   	(bad)  
    53fc:	20 25 73 00 45 72    	and    %ah,0x72450073(%rip)        # 72455475 <_end+0x7244e345>
    5402:	72 6f                	jb     5473 <_IO_stdin_used+0x473>
    5404:	72 73                	jb     5479 <_IO_stdin_used+0x479>
    5406:	20 64 65 74          	and    %ah,0x74(%rbp,%riz,2)
    540a:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    540f:	00 43 61             	add    %al,0x61(%rbx)
    5412:	6e                   	outsb  %ds:(%rsi),(%dx)
    5413:	6e                   	outsb  %ds:(%rsi),(%dx)
    5414:	6f                   	outsl  %ds:(%rsi),(%dx)
    5415:	74 20                	je     5437 <_IO_stdin_used+0x437>
    5417:	76 61                	jbe    547a <_IO_stdin_used+0x47a>
    5419:	6c                   	insb   (%dx),%es:(%rdi)
    541a:	69 64 61 74 65 20 6f 	imul   $0x706f2065,0x74(%rcx,%riz,2),%esp
    5421:	70 
    5422:	65 72 61             	gs jb  5486 <_IO_stdin_used+0x486>
    5425:	74 69                	je     5490 <_IO_stdin_used+0x490>
    5427:	6f                   	outsl  %ds:(%rsi),(%dx)
    5428:	6e                   	outsb  %ds:(%rsi),(%dx)
    5429:	20 66 6f             	and    %ah,0x6f(%rsi)
    542c:	72 20                	jb     544e <_IO_stdin_used+0x44e>
    542e:	74 68                	je     5498 <_IO_stdin_used+0x498>
    5430:	65 73 65             	gs jae 5498 <_IO_stdin_used+0x498>
    5433:	20 73 65             	and    %dh,0x65(%rbx)
    5436:	65 64 20 76 61       	gs and %dh,%fs:0x61(%rsi)
    543b:	6c                   	insb   (%dx),%es:(%rdi)
    543c:	75 65                	jne    54a3 <_IO_stdin_used+0x4a3>
    543e:	73 2c                	jae    546c <_IO_stdin_used+0x46c>
    5440:	20 70 6c             	and    %dh,0x6c(%rax)
    5443:	65 61                	gs (bad) 
    5445:	73 65                	jae    54ac <_IO_stdin_used+0x4ac>
    5447:	20 63 6f             	and    %ah,0x6f(%rbx)
    544a:	6d                   	insl   (%dx),%es:(%rdi)
    544b:	70 61                	jo     54ae <_IO_stdin_used+0x4ae>
    544d:	72 65                	jb     54b4 <_IO_stdin_used+0x4b4>
    544f:	20 77 69             	and    %dh,0x69(%rdi)
    5452:	74 68                	je     54bc <_IO_stdin_used+0x4bc>
    5454:	20 72 65             	and    %dh,0x65(%rdx)
    5457:	73 75                	jae    54ce <_IO_stdin_used+0x4ce>
    5459:	6c                   	insb   (%dx),%es:(%rdi)
    545a:	74 73                	je     54cf <_IO_stdin_used+0x4cf>
    545c:	20 6f 6e             	and    %ch,0x6e(%rdi)
    545f:	20 61 20             	and    %ah,0x20(%rcx)
    5462:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    5466:	6e                   	outsb  %ds:(%rsi),(%dx)
    5467:	20 70 6c             	and    %dh,0x6c(%rax)
    546a:	61                   	(bad)  
    546b:	74 66                	je     54d3 <_IO_stdin_used+0x4d3>
    546d:	6f                   	outsl  %ds:(%rsi),(%dx)
    546e:	72 6d                	jb     54dd <_IO_stdin_used+0x4dd>
    5470:	2e 00 00             	add    %al,%cs:(%rax)
	...
    547b:	00 00                	add    %al,(%rax)
    547d:	00 f0                	add    %dh,%al
    547f:	3f                   	(bad)  
    5480:	00 00                	add    %al,(%rax)
    5482:	00 00                	add    %al,(%rax)
    5484:	00 00                	add    %al,(%rax)
    5486:	24 40                	and    $0x40,%al
    5488:	35 30 31 32 00       	xor    $0x323130,%eax
    548d:	31 32                	xor    %esi,(%rdx)
    548f:	33 34 00             	xor    (%rax,%rax,1),%esi
    5492:	2d 38 37 34 00       	sub    $0x343738,%eax
    5497:	2b 31                	sub    (%rcx),%esi
    5499:	32 32                	xor    (%rdx),%dh
    549b:	00 33                	add    %dh,(%rbx)
    549d:	35 2e 35 34 34       	xor    $0x3434352e,%eax
    54a2:	30 30                	xor    %dh,(%rax)
    54a4:	00 2e                	add    %ch,(%rsi)
    54a6:	31 32                	xor    %esi,(%rdx)
    54a8:	33 34 35 30 30 00 2d 	xor    0x2d003030(,%rsi,1),%esi
    54af:	31 31                	xor    %esi,(%rcx)
    54b1:	30 2e                	xor    %ch,(%rsi)
    54b3:	37                   	(bad)  
    54b4:	30 30                	xor    %dh,(%rax)
    54b6:	00 2b                	add    %ch,(%rbx)
    54b8:	30 2e                	xor    %ch,(%rsi)
    54ba:	36 34 34             	ss xor $0x34,%al
    54bd:	30 30                	xor    %dh,(%rax)
    54bf:	00 35 2e 35 30 30    	add    %dh,0x3030352e(%rip)        # 303089f3 <_end+0x303018c3>
    54c5:	65 2b 33             	sub    %gs:(%rbx),%esi
    54c8:	00 2d 2e 31 32 33    	add    %ch,0x3332312e(%rip)        # 333285fc <_end+0x333214cc>
    54ce:	65 2d 32 00 2d 38    	gs sub $0x382d0032,%eax
    54d4:	37                   	(bad)  
    54d5:	65 2b 38             	sub    %gs:(%rax),%edi
    54d8:	33 32                	xor    (%rdx),%esi
    54da:	00 2b                	add    %ch,(%rbx)
    54dc:	30 2e                	xor    %ch,(%rsi)
    54de:	36 65 2d 31 32 00 54 	ss gs sub $0x54003231,%eax
    54e5:	30 2e                	xor    %ch,(%rsi)
    54e7:	33 65 2d             	xor    0x2d(%rbp),%esp
    54ea:	31 46 00             	xor    %eax,0x0(%rsi)
    54ed:	2d 54 2e 54 2b       	sub    $0x2b542e54,%eax
    54f2:	2b 54 71 00          	sub    0x0(%rcx,%rsi,2),%edx
    54f6:	31 54 33 2e          	xor    %edx,0x2e(%rbx,%rsi,1)
    54fa:	34 65                	xor    $0x65,%al
    54fc:	34 7a                	xor    $0x7a,%al
    54fe:	00 33                	add    %dh,(%rbx)
    5500:	34 2e                	xor    $0x2e,%al
    5502:	30 65 2d             	xor    %ah,0x2d(%rbp)
    5505:	54                   	push   %rsp
    5506:	5e                   	pop    %rsi
    5507:	00 40 e8             	add    %al,-0x18(%rax)
    550a:	ff                   	(bad)  
    550b:	ff 55 ea             	callq  *-0x16(%rbp)
    550e:	ff                   	(bad)  
    550f:	ff a6 e8 ff ff b0    	jmpq   *-0x4f000018(%rsi)
    5515:	e9 ff ff 0c e9       	jmpq   ffffffffe90d5519 <_end+0xffffffffe90ce3e9>
    551a:	ff                   	(bad)  
    551b:	ff 5b e9             	lcall  *-0x17(%rbx)
    551e:	ff                   	(bad)  
    551f:	ff                   	(bad)  
    5520:	ef                   	out    %eax,(%dx)
    5521:	e9 ff ff 2e ea       	jmpq   ffffffffea2f5525 <_end+0xffffffffea2ee3f5>
    5526:	ff                   	(bad)  
    5527:	ff d5                	callq  *%rbp
    5529:	ea                   	(bad)  
    552a:	ff                   	(bad)  
    552b:	ff 9e ea ff ff a9    	lcall  *-0x56000016(%rsi)
    5531:	ea                   	(bad)  
    5532:	ff                   	(bad)  
    5533:	ff b4 ea ff ff bf ea 	pushq  -0x15400001(%rdx,%rbp,8)
    553a:	ff                   	(bad)  
    553b:	ff ca                	dec    %edx
    553d:	ea                   	(bad)  
    553e:	ff                   	(bad)  
    553f:	ff 45 52             	incl   0x52(%rbp)
    5542:	52                   	push   %rdx
    5543:	4f 52                	rex.WRXB push %r10
    5545:	3a 20                	cmp    (%rax),%ah
    5547:	50                   	push   %rax
    5548:	6c                   	insb   (%dx),%es:(%rdi)
    5549:	65 61                	gs (bad) 
    554b:	73 65                	jae    55b2 <__GNU_EH_FRAME_HDR+0x32>
    554d:	20 6d 6f             	and    %ch,0x6f(%rbp)
    5550:	64 69 66 79 20 74 68 	imul   $0x65687420,%fs:0x79(%rsi),%esp
    5557:	65 
    5558:	20 64 61 74          	and    %ah,0x74(%rcx,%riz,2)
    555c:	61                   	(bad)  
    555d:	74 79                	je     55d8 <__GNU_EH_FRAME_HDR+0x58>
    555f:	70 65                	jo     55c6 <__GNU_EH_FRAME_HDR+0x46>
    5561:	73 20                	jae    5583 <__GNU_EH_FRAME_HDR+0x3>
    5563:	69 6e 20 63 6f 72 65 	imul   $0x65726f63,0x20(%rsi),%ebp
    556a:	5f                   	pop    %rdi
    556b:	70 6f                	jo     55dc <__GNU_EH_FRAME_HDR+0x5c>
    556d:	72 74                	jb     55e3 <__GNU_EH_FRAME_HDR+0x63>
    556f:	6d                   	insl   (%dx),%es:(%rdi)
    5570:	65 2e 68 21 00 00 00 	gs cs pushq $0x21
    5577:	00 00                	add    %al,(%rax)
    5579:	00 00                	add    %al,(%rax)
    557b:	00 00                	add    %al,(%rax)
    557d:	40                   	rex
    557e:	8f                   	.byte 0x8f
    557f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000005580 <__GNU_EH_FRAME_HDR>:
    5580:	01 1b                	add    %ebx,(%rbx)
    5582:	03 3b                	add    (%rbx),%edi
    5584:	84 01                	test   %al,(%rcx)
    5586:	00 00                	add    %al,(%rax)
    5588:	2f                   	(bad)  
    5589:	00 00                	add    %al,(%rax)
    558b:	00 a0 ba ff ff b8    	add    %ah,-0x47000046(%rax)
    5591:	01 00                	add    %eax,(%rax)
    5593:	00 20                	add    %ah,(%rax)
    5595:	bb ff ff e0 01       	mov    $0x1e0ffff,%ebx
    559a:	00 00                	add    %al,(%rax)
    559c:	30 bb ff ff f8 01    	xor    %bh,0x1f8ffff(%rbx)
    55a2:	00 00                	add    %al,(%rax)
    55a4:	a0 bb ff ff a0 01 00 	movabs 0x89000001a0ffffbb,%al
    55ab:	00 89 
    55ad:	bc ff ff 10 02       	mov    $0x210ffff,%esp
    55b2:	00 00                	add    %al,(%rax)
    55b4:	fd                   	std    
    55b5:	bd ff ff 30 02       	mov    $0x230ffff,%ebp
    55ba:	00 00                	add    %al,(%rax)
    55bc:	51                   	push   %rcx
    55bd:	be ff ff 50 02       	mov    $0x250ffff,%esi
    55c2:	00 00                	add    %al,(%rax)
    55c4:	c4                   	(bad)  
    55c5:	be ff ff 70 02       	mov    $0x270ffff,%esi
    55ca:	00 00                	add    %al,(%rax)
    55cc:	f5                   	cmc    
    55cd:	be ff ff 90 02       	mov    $0x290ffff,%esi
    55d2:	00 00                	add    %al,(%rax)
    55d4:	86 c1                	xchg   %al,%cl
    55d6:	ff                   	(bad)  
    55d7:	ff b0 02 00 00 b5    	pushq  -0x4afffffe(%rax)
    55dd:	c3                   	retq   
    55de:	ff                   	(bad)  
    55df:	ff d0                	callq  *%rax
    55e1:	02 00                	add    (%rax),%al
    55e3:	00 80 c4 ff ff f0    	add    %al,-0xf00003c(%rax)
    55e9:	02 00                	add    (%rax),%al
    55eb:	00 e1                	add    %ah,%cl
    55ed:	c4                   	(bad)  
    55ee:	ff                   	(bad)  
    55ef:	ff 10                	callq  *(%rax)
    55f1:	03 00                	add    (%rax),%eax
    55f3:	00 38                	add    %bh,(%rax)
    55f5:	c5 ff ff             	(bad)  
    55f8:	30 03                	xor    %al,(%rbx)
    55fa:	00 00                	add    %al,(%rax)
    55fc:	bb c5 ff ff 50       	mov    $0x50ffffc5,%ebx
    5601:	03 00                	add    (%rax),%eax
    5603:	00 04 c6             	add    %al,(%rsi,%rax,8)
    5606:	ff                   	(bad)  
    5607:	ff 70 03             	pushq  0x3(%rax)
    560a:	00 00                	add    %al,(%rax)
    560c:	a0 c7 ff ff 90 03 00 	movabs 0x8d00000390ffffc7,%al
    5613:	00 8d 
    5615:	c8 ff ff b0          	enterq $0xffff,$0xb0
    5619:	03 00                	add    (%rax),%eax
    561b:	00 da                	add    %bl,%dl
    561d:	da ff                	(bad)  
    561f:	ff                   	(bad)  
    5620:	d8 03                	fadds  (%rbx)
    5622:	00 00                	add    %al,(%rax)
    5624:	68 db ff ff fc       	pushq  $0xfffffffffcffffdb
    5629:	03 00                	add    (%rax),%eax
    562b:	00 cb                	add    %cl,%bl
    562d:	dc ff                	fdivr  %st,%st(7)
    562f:	ff 20                	jmpq   *(%rax)
    5631:	04 00                	add    $0x0,%al
    5633:	00 60 de             	add    %ah,-0x22(%rax)
    5636:	ff                   	(bad)  
    5637:	ff 40 04             	incl   0x4(%rax)
    563a:	00 00                	add    %al,(%rax)
    563c:	27                   	(bad)  
    563d:	df ff                	(bad)  
    563f:	ff 60 04             	jmpq   *0x4(%rax)
    5642:	00 00                	add    %al,(%rax)
    5644:	b9 df ff ff 80       	mov    $0x80ffffdf,%ecx
    5649:	04 00                	add    $0x0,%al
    564b:	00 43 e0             	add    %al,-0x20(%rbx)
    564e:	ff                   	(bad)  
    564f:	ff a0 04 00 00 07    	jmpq   *0x7000004(%rax)
    5655:	e1 ff                	loope  5656 <__GNU_EH_FRAME_HDR+0xd6>
    5657:	ff c0                	inc    %eax
    5659:	04 00                	add    $0x0,%al
    565b:	00 22                	add    %ah,(%rdx)
    565d:	e2 ff                	loop   565e <__GNU_EH_FRAME_HDR+0xde>
    565f:	ff e0                	jmpq   *%rax
    5661:	04 00                	add    $0x0,%al
    5663:	00 5b e3             	add    %bl,-0x1d(%rbx)
    5666:	ff                   	(bad)  
    5667:	ff 00                	incl   (%rax)
    5669:	05 00 00 58 e5       	add    $0xe5580000,%eax
    566e:	ff                   	(bad)  
    566f:	ff 20                	jmpq   *(%rax)
    5671:	05 00 00 2f e7       	add    $0xe72f0000,%eax
    5676:	ff                   	(bad)  
    5677:	ff 40 05             	incl   0x5(%rax)
    567a:	00 00                	add    %al,(%rax)
    567c:	55                   	push   %rbp
    567d:	e7 ff                	out    %eax,$0xff
    567f:	ff 60 05             	jmpq   *0x5(%rax)
    5682:	00 00                	add    %al,(%rax)
    5684:	11 ea                	adc    %ebp,%edx
    5686:	ff                   	(bad)  
    5687:	ff 80 05 00 00 8a    	incl   -0x75fffffb(%rax)
    568d:	ea                   	(bad)  
    568e:	ff                   	(bad)  
    568f:	ff a0 05 00 00 08    	jmpq   *0x8000005(%rax)
    5695:	eb ff                	jmp    5696 <__GNU_EH_FRAME_HDR+0x116>
    5697:	ff c0                	inc    %eax
    5699:	05 00 00 5a eb       	add    $0xeb5a0000,%eax
    569e:	ff                   	(bad)  
    569f:	ff e0                	jmpq   *%rax
    56a1:	05 00 00 a2 eb       	add    $0xeba20000,%eax
    56a6:	ff                   	(bad)  
    56a7:	ff 00                	incl   (%rax)
    56a9:	06                   	(bad)  
    56aa:	00 00                	add    %al,(%rax)
    56ac:	d0 eb                	shr    %bl
    56ae:	ff                   	(bad)  
    56af:	ff 20                	jmpq   *(%rax)
    56b1:	06                   	(bad)  
    56b2:	00 00                	add    %al,(%rax)
    56b4:	f8                   	clc    
    56b5:	eb ff                	jmp    56b6 <__GNU_EH_FRAME_HDR+0x136>
    56b7:	ff 40 06             	incl   0x6(%rax)
    56ba:	00 00                	add    %al,(%rax)
    56bc:	16                   	(bad)  
    56bd:	ec                   	in     (%dx),%al
    56be:	ff                   	(bad)  
    56bf:	ff 60 06             	jmpq   *0x6(%rax)
    56c2:	00 00                	add    %al,(%rax)
    56c4:	35 ec ff ff 80       	xor    $0x80ffffec,%eax
    56c9:	06                   	(bad)  
    56ca:	00 00                	add    %al,(%rax)
    56cc:	51                   	push   %rcx
    56cd:	ec                   	in     (%dx),%al
    56ce:	ff                   	(bad)  
    56cf:	ff a0 06 00 00 6d    	jmpq   *0x6d000006(%rax)
    56d5:	ec                   	in     (%dx),%al
    56d6:	ff                   	(bad)  
    56d7:	ff c0                	inc    %eax
    56d9:	06                   	(bad)  
    56da:	00 00                	add    %al,(%rax)
    56dc:	d2 ec                	shr    %cl,%ah
    56de:	ff                   	(bad)  
    56df:	ff e0                	jmpq   *%rax
    56e1:	06                   	(bad)  
    56e2:	00 00                	add    %al,(%rax)
    56e4:	fc                   	cld    
    56e5:	ec                   	in     (%dx),%al
    56e6:	ff                   	(bad)  
    56e7:	ff 00                	incl   (%rax)
    56e9:	07                   	(bad)  
    56ea:	00 00                	add    %al,(%rax)
    56ec:	1a ed                	sbb    %ch,%ch
    56ee:	ff                   	(bad)  
    56ef:	ff 20                	jmpq   *(%rax)
    56f1:	07                   	(bad)  
    56f2:	00 00                	add    %al,(%rax)
    56f4:	30 ed                	xor    %ch,%ch
    56f6:	ff                   	(bad)  
    56f7:	ff 40 07             	incl   0x7(%rax)
    56fa:	00 00                	add    %al,(%rax)
    56fc:	a0                   	.byte 0xa0
    56fd:	ed                   	in     (%dx),%eax
    56fe:	ff                   	(bad)  
    56ff:	ff                   	.byte 0xff
    5700:	88 07                	mov    %al,(%rdi)
	...

Disassembly of section .eh_frame:

0000000000005708 <__FRAME_END__-0x614>:
    5708:	14 00                	adc    $0x0,%al
    570a:	00 00                	add    %al,(%rax)
    570c:	00 00                	add    %al,(%rax)
    570e:	00 00                	add    %al,(%rax)
    5710:	01 7a 52             	add    %edi,0x52(%rdx)
    5713:	00 01                	add    %al,(%rcx)
    5715:	78 10                	js     5727 <__GNU_EH_FRAME_HDR+0x1a7>
    5717:	01 1b                	add    %ebx,(%rbx)
    5719:	0c 07                	or     $0x7,%al
    571b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    5721:	00 00                	add    %al,(%rax)
    5723:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5726:	00 00                	add    %al,(%rax)
    5728:	f8                   	clc    
    5729:	b9 ff ff 2f 00       	mov    $0x2fffff,%ecx
    572e:	00 00                	add    %al,(%rax)
    5730:	00 44 07 10          	add    %al,0x10(%rdi,%rax,1)
    5734:	00 00                	add    %al,(%rax)
    5736:	00 00                	add    %al,(%rax)
    5738:	24 00                	and    $0x0,%al
    573a:	00 00                	add    %al,(%rax)
    573c:	34 00                	xor    $0x0,%al
    573e:	00 00                	add    %al,(%rax)
    5740:	e0 b8                	loopne 56fa <__GNU_EH_FRAME_HDR+0x17a>
    5742:	ff                   	(bad)  
    5743:	ff 80 00 00 00 00    	incl   0x0(%rax)
    5749:	0e                   	(bad)  
    574a:	10 46 0e             	adc    %al,0xe(%rsi)
    574d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    5750:	0b 77 08             	or     0x8(%rdi),%esi
    5753:	80 00 3f             	addb   $0x3f,(%rax)
    5756:	1a 3a                	sbb    (%rdx),%bh
    5758:	2a 33                	sub    (%rbx),%dh
    575a:	24 22                	and    $0x22,%al
    575c:	00 00                	add    %al,(%rax)
    575e:	00 00                	add    %al,(%rax)
    5760:	14 00                	adc    $0x0,%al
    5762:	00 00                	add    %al,(%rax)
    5764:	5c                   	pop    %rsp
    5765:	00 00                	add    %al,(%rax)
    5767:	00 38                	add    %bh,(%rax)
    5769:	b9 ff ff 10 00       	mov    $0x10ffff,%ecx
	...
    5776:	00 00                	add    %al,(%rax)
    5778:	14 00                	adc    $0x0,%al
    577a:	00 00                	add    %al,(%rax)
    577c:	74 00                	je     577e <__GNU_EH_FRAME_HDR+0x1fe>
    577e:	00 00                	add    %al,(%rax)
    5780:	30 b9 ff ff 70 00    	xor    %bh,0x70ffff(%rcx)
	...
    578e:	00 00                	add    %al,(%rax)
    5790:	1c 00                	sbb    $0x0,%al
    5792:	00 00                	add    %al,(%rax)
    5794:	8c 00                	mov    %es,(%rax)
    5796:	00 00                	add    %al,(%rax)
    5798:	71 ba                	jno    5754 <__GNU_EH_FRAME_HDR+0x1d4>
    579a:	ff                   	(bad)  
    579b:	ff 74 01 00          	pushq  0x0(%rcx,%rax,1)
    579f:	00 00                	add    %al,(%rax)
    57a1:	45 0e                	rex.RB (bad) 
    57a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    57a9:	03 6b 01             	add    0x1(%rbx),%ebp
    57ac:	0c 07                	or     $0x7,%al
    57ae:	08 00                	or     %al,(%rax)
    57b0:	1c 00                	sbb    $0x0,%al
    57b2:	00 00                	add    %al,(%rax)
    57b4:	ac                   	lods   %ds:(%rsi),%al
    57b5:	00 00                	add    %al,(%rax)
    57b7:	00 c5                	add    %al,%ch
    57b9:	bb ff ff 54 00       	mov    $0x54ffff,%ebx
    57be:	00 00                	add    %al,(%rax)
    57c0:	00 45 0e             	add    %al,0xe(%rbp)
    57c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    57c9:	02 4b 0c             	add    0xc(%rbx),%cl
    57cc:	07                   	(bad)  
    57cd:	08 00                	or     %al,(%rax)
    57cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    57d2:	00 00                	add    %al,(%rax)
    57d4:	cc                   	int3   
    57d5:	00 00                	add    %al,(%rax)
    57d7:	00 f9                	add    %bh,%cl
    57d9:	bb ff ff 73 00       	mov    $0x73ffff,%ebx
    57de:	00 00                	add    %al,(%rax)
    57e0:	00 45 0e             	add    %al,0xe(%rbp)
    57e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    57e9:	02 6a 0c             	add    0xc(%rdx),%ch
    57ec:	07                   	(bad)  
    57ed:	08 00                	or     %al,(%rax)
    57ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    57f2:	00 00                	add    %al,(%rax)
    57f4:	ec                   	in     (%dx),%al
    57f5:	00 00                	add    %al,(%rax)
    57f7:	00 4c bc ff          	add    %cl,-0x1(%rsp,%rdi,4)
    57fb:	ff 31                	pushq  (%rcx)
    57fd:	00 00                	add    %al,(%rax)
    57ff:	00 00                	add    %al,(%rax)
    5801:	45 0e                	rex.RB (bad) 
    5803:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5809:	68 0c 07 08 00       	pushq  $0x8070c
    580e:	00 00                	add    %al,(%rax)
    5810:	1c 00                	sbb    $0x0,%al
    5812:	00 00                	add    %al,(%rax)
    5814:	0c 01                	or     $0x1,%al
    5816:	00 00                	add    %al,(%rax)
    5818:	5d                   	pop    %rbp
    5819:	bc ff ff 91 02       	mov    $0x291ffff,%esp
    581e:	00 00                	add    %al,(%rax)
    5820:	00 45 0e             	add    %al,0xe(%rbp)
    5823:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5829:	03 88 02 0c 07 08    	add    0x8070c02(%rax),%ecx
    582f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5832:	00 00                	add    %al,(%rax)
    5834:	2c 01                	sub    $0x1,%al
    5836:	00 00                	add    %al,(%rax)
    5838:	ce                   	(bad)  
    5839:	be ff ff 2f 02       	mov    $0x22fffff,%esi
    583e:	00 00                	add    %al,(%rax)
    5840:	00 45 0e             	add    %al,0xe(%rbp)
    5843:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5849:	03 26                	add    (%rsi),%esp
    584b:	02 0c 07             	add    (%rdi,%rax,1),%cl
    584e:	08 00                	or     %al,(%rax)
    5850:	1c 00                	sbb    $0x0,%al
    5852:	00 00                	add    %al,(%rax)
    5854:	4c 01 00             	add    %r8,(%rax)
    5857:	00 dd                	add    %bl,%ch
    5859:	c0 ff ff             	sar    $0xff,%bh
    585c:	cb                   	lret   
    585d:	00 00                	add    %al,(%rax)
    585f:	00 00                	add    %al,(%rax)
    5861:	45 0e                	rex.RB (bad) 
    5863:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5869:	02 c2                	add    %dl,%al
    586b:	0c 07                	or     $0x7,%al
    586d:	08 00                	or     %al,(%rax)
    586f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5872:	00 00                	add    %al,(%rax)
    5874:	6c                   	insb   (%dx),%es:(%rdi)
    5875:	01 00                	add    %eax,(%rax)
    5877:	00 88 c1 ff ff 61    	add    %cl,0x61ffffc1(%rax)
    587d:	00 00                	add    %al,(%rax)
    587f:	00 00                	add    %al,(%rax)
    5881:	45 0e                	rex.RB (bad) 
    5883:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5889:	02 58 0c             	add    0xc(%rax),%bl
    588c:	07                   	(bad)  
    588d:	08 00                	or     %al,(%rax)
    588f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5892:	00 00                	add    %al,(%rax)
    5894:	8c 01                	mov    %es,(%rcx)
    5896:	00 00                	add    %al,(%rax)
    5898:	c9                   	leaveq 
    5899:	c1 ff ff             	sar    $0xff,%edi
    589c:	57                   	push   %rdi
    589d:	00 00                	add    %al,(%rax)
    589f:	00 00                	add    %al,(%rax)
    58a1:	45 0e                	rex.RB (bad) 
    58a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    58a9:	02 4e 0c             	add    0xc(%rsi),%cl
    58ac:	07                   	(bad)  
    58ad:	08 00                	or     %al,(%rax)
    58af:	00 1c 00             	add    %bl,(%rax,%rax,1)
    58b2:	00 00                	add    %al,(%rax)
    58b4:	ac                   	lods   %ds:(%rsi),%al
    58b5:	01 00                	add    %eax,(%rax)
    58b7:	00 00                	add    %al,(%rax)
    58b9:	c2 ff ff             	retq   $0xffff
    58bc:	83 00 00             	addl   $0x0,(%rax)
    58bf:	00 00                	add    %al,(%rax)
    58c1:	45 0e                	rex.RB (bad) 
    58c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    58c9:	02 7a 0c             	add    0xc(%rdx),%bh
    58cc:	07                   	(bad)  
    58cd:	08 00                	or     %al,(%rax)
    58cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    58d2:	00 00                	add    %al,(%rax)
    58d4:	cc                   	int3   
    58d5:	01 00                	add    %eax,(%rax)
    58d7:	00 63 c2             	add    %ah,-0x3e(%rbx)
    58da:	ff                   	(bad)  
    58db:	ff 49 00             	decl   0x0(%rcx)
    58de:	00 00                	add    %al,(%rax)
    58e0:	00 45 0e             	add    %al,0xe(%rbp)
    58e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    58e9:	02 40 0c             	add    0xc(%rax),%al
    58ec:	07                   	(bad)  
    58ed:	08 00                	or     %al,(%rax)
    58ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    58f2:	00 00                	add    %al,(%rax)
    58f4:	ec                   	in     (%dx),%al
    58f5:	01 00                	add    %eax,(%rax)
    58f7:	00 8c c2 ff ff 9c 01 	add    %cl,0x19cffff(%rdx,%rax,8)
    58fe:	00 00                	add    %al,(%rax)
    5900:	00 45 0e             	add    %al,0xe(%rbp)
    5903:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5909:	03 93 01 0c 07 08    	add    0x8070c01(%rbx),%edx
    590f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5912:	00 00                	add    %al,(%rax)
    5914:	0c 02                	or     $0x2,%al
    5916:	00 00                	add    %al,(%rax)
    5918:	08 c4                	or     %al,%ah
    591a:	ff                   	(bad)  
    591b:	ff                   	(bad)  
    591c:	ed                   	in     (%dx),%eax
    591d:	00 00                	add    %al,(%rax)
    591f:	00 00                	add    %al,(%rax)
    5921:	45 0e                	rex.RB (bad) 
    5923:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5929:	02 e4                	add    %ah,%ah
    592b:	0c 07                	or     $0x7,%al
    592d:	08 00                	or     %al,(%rax)
    592f:	00 24 00             	add    %ah,(%rax,%rax,1)
    5932:	00 00                	add    %al,(%rax)
    5934:	2c 02                	sub    $0x2,%al
    5936:	00 00                	add    %al,(%rax)
    5938:	d5                   	(bad)  
    5939:	c4                   	(bad)  
    593a:	ff                   	(bad)  
    593b:	ff 4d 12             	decl   0x12(%rbp)
    593e:	00 00                	add    %al,(%rax)
    5940:	00 45 0e             	add    %al,0xe(%rbp)
    5943:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5949:	48 83 03 03          	addq   $0x3,(%rbx)
    594d:	3c 12                	cmp    $0x12,%al
    594f:	0c 07                	or     $0x7,%al
    5951:	08 00                	or     %al,(%rax)
    5953:	00 00                	add    %al,(%rax)
    5955:	00 00                	add    %al,(%rax)
    5957:	00 20                	add    %ah,(%rax)
    5959:	00 00                	add    %al,(%rax)
    595b:	00 54 02 00          	add    %dl,0x0(%rdx,%rax,1)
    595f:	00 fa                	add    %bh,%dl
    5961:	d6                   	(bad)  
    5962:	ff                   	(bad)  
    5963:	ff 8e 00 00 00 00    	decl   0x0(%rsi)
    5969:	45 0e                	rex.RB (bad) 
    596b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5971:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    5975:	80 0c 07 08          	orb    $0x8,(%rdi,%rax,1)
    5979:	00 00                	add    %al,(%rax)
    597b:	00 20                	add    %ah,(%rax)
    597d:	00 00                	add    %al,(%rax)
    597f:	00 78 02             	add    %bh,0x2(%rax)
    5982:	00 00                	add    %al,(%rax)
    5984:	64 d7                	xlat   %fs:(%rbx)
    5986:	ff                   	(bad)  
    5987:	ff 63 01             	jmpq   *0x1(%rbx)
    598a:	00 00                	add    %al,(%rax)
    598c:	00 45 0e             	add    %al,0xe(%rbp)
    598f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5995:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    5999:	55                   	push   %rbp
    599a:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    599d:	08 00                	or     %al,(%rax)
    599f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    59a2:	00 00                	add    %al,(%rax)
    59a4:	9c                   	pushfq 
    59a5:	02 00                	add    (%rax),%al
    59a7:	00 a3 d8 ff ff 95    	add    %ah,-0x6a000028(%rbx)
    59ad:	01 00                	add    %eax,(%rax)
    59af:	00 00                	add    %al,(%rax)
    59b1:	45 0e                	rex.RB (bad) 
    59b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    59b9:	03 8c 01 0c 07 08 00 	add    0x8070c(%rcx,%rax,1),%ecx
    59c0:	1c 00                	sbb    $0x0,%al
    59c2:	00 00                	add    %al,(%rax)
    59c4:	bc 02 00 00 18       	mov    $0x18000002,%esp
    59c9:	da ff                	(bad)  
    59cb:	ff c7                	inc    %edi
    59cd:	00 00                	add    %al,(%rax)
    59cf:	00 00                	add    %al,(%rax)
    59d1:	45 0e                	rex.RB (bad) 
    59d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    59d9:	02 be 0c 07 08 00    	add    0x8070c(%rsi),%bh
    59df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    59e2:	00 00                	add    %al,(%rax)
    59e4:	dc 02                	faddl  (%rdx)
    59e6:	00 00                	add    %al,(%rax)
    59e8:	bf da ff ff 92       	mov    $0x92ffffda,%edi
    59ed:	00 00                	add    %al,(%rax)
    59ef:	00 00                	add    %al,(%rax)
    59f1:	45 0e                	rex.RB (bad) 
    59f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    59f9:	02 89 0c 07 08 00    	add    0x8070c(%rcx),%cl
    59ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5a02:	00 00                	add    %al,(%rax)
    5a04:	fc                   	cld    
    5a05:	02 00                	add    (%rax),%al
    5a07:	00 31                	add    %dh,(%rcx)
    5a09:	db ff                	(bad)  
    5a0b:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
    5a11:	45 0e                	rex.RB (bad) 
    5a13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5a19:	02 81 0c 07 08 00    	add    0x8070c(%rcx),%al
    5a1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5a22:	00 00                	add    %al,(%rax)
    5a24:	1c 03                	sbb    $0x3,%al
    5a26:	00 00                	add    %al,(%rax)
    5a28:	9b db ff             	(bad)  
    5a2b:	ff c4                	inc    %esp
    5a2d:	00 00                	add    %al,(%rax)
    5a2f:	00 00                	add    %al,(%rax)
    5a31:	45 0e                	rex.RB (bad) 
    5a33:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5a39:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    5a3f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5a42:	00 00                	add    %al,(%rax)
    5a44:	3c 03                	cmp    $0x3,%al
    5a46:	00 00                	add    %al,(%rax)
    5a48:	3f                   	(bad)  
    5a49:	dc ff                	fdivr  %st,%st(7)
    5a4b:	ff 1b                	lcall  *(%rbx)
    5a4d:	01 00                	add    %eax,(%rax)
    5a4f:	00 00                	add    %al,(%rax)
    5a51:	45 0e                	rex.RB (bad) 
    5a53:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5a59:	03 12                	add    (%rdx),%edx
    5a5b:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    5a5e:	08 00                	or     %al,(%rax)
    5a60:	1c 00                	sbb    $0x0,%al
    5a62:	00 00                	add    %al,(%rax)
    5a64:	5c                   	pop    %rsp
    5a65:	03 00                	add    (%rax),%eax
    5a67:	00 3a                	add    %bh,(%rdx)
    5a69:	dd ff                	(bad)  
    5a6b:	ff                   	(bad)  
    5a6c:	39 01                	cmp    %eax,(%rcx)
    5a6e:	00 00                	add    %al,(%rax)
    5a70:	00 45 0e             	add    %al,0xe(%rbp)
    5a73:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5a79:	03 30                	add    (%rax),%esi
    5a7b:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    5a7e:	08 00                	or     %al,(%rax)
    5a80:	1c 00                	sbb    $0x0,%al
    5a82:	00 00                	add    %al,(%rax)
    5a84:	7c 03                	jl     5a89 <__GNU_EH_FRAME_HDR+0x509>
    5a86:	00 00                	add    %al,(%rax)
    5a88:	53                   	push   %rbx
    5a89:	de ff                	fdivrp %st,%st(7)
    5a8b:	ff                   	(bad)  
    5a8c:	fd                   	std    
    5a8d:	01 00                	add    %eax,(%rax)
    5a8f:	00 00                	add    %al,(%rax)
    5a91:	45 0e                	rex.RB (bad) 
    5a93:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5a99:	03 f4                	add    %esp,%esi
    5a9b:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    5a9e:	08 00                	or     %al,(%rax)
    5aa0:	1c 00                	sbb    $0x0,%al
    5aa2:	00 00                	add    %al,(%rax)
    5aa4:	9c                   	pushfq 
    5aa5:	03 00                	add    (%rax),%eax
    5aa7:	00 30                	add    %dh,(%rax)
    5aa9:	e0 ff                	loopne 5aaa <__GNU_EH_FRAME_HDR+0x52a>
    5aab:	ff d7                	callq  *%rdi
    5aad:	01 00                	add    %eax,(%rax)
    5aaf:	00 00                	add    %al,(%rax)
    5ab1:	45 0e                	rex.RB (bad) 
    5ab3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5ab9:	03 ce                	add    %esi,%ecx
    5abb:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    5abe:	08 00                	or     %al,(%rax)
    5ac0:	1c 00                	sbb    $0x0,%al
    5ac2:	00 00                	add    %al,(%rax)
    5ac4:	bc 03 00 00 e7       	mov    $0xe7000003,%esp
    5ac9:	e1 ff                	loope  5aca <__GNU_EH_FRAME_HDR+0x54a>
    5acb:	ff 26                	jmpq   *(%rsi)
    5acd:	00 00                	add    %al,(%rax)
    5acf:	00 00                	add    %al,(%rax)
    5ad1:	45 0e                	rex.RB (bad) 
    5ad3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5ad9:	5d                   	pop    %rbp
    5ada:	0c 07                	or     $0x7,%al
    5adc:	08 00                	or     %al,(%rax)
    5ade:	00 00                	add    %al,(%rax)
    5ae0:	1c 00                	sbb    $0x0,%al
    5ae2:	00 00                	add    %al,(%rax)
    5ae4:	dc 03                	faddl  (%rbx)
    5ae6:	00 00                	add    %al,(%rax)
    5ae8:	ed                   	in     (%dx),%eax
    5ae9:	e1 ff                	loope  5aea <__GNU_EH_FRAME_HDR+0x56a>
    5aeb:	ff                   	(bad)  
    5aec:	bc 02 00 00 00       	mov    $0x2,%esp
    5af1:	45 0e                	rex.RB (bad) 
    5af3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5af9:	03 b3 02 0c 07 08    	add    0x8070c02(%rbx),%esi
    5aff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5b02:	00 00                	add    %al,(%rax)
    5b04:	fc                   	cld    
    5b05:	03 00                	add    (%rax),%eax
    5b07:	00 89 e4 ff ff 79    	add    %cl,0x79ffffe4(%rcx)
    5b0d:	00 00                	add    %al,(%rax)
    5b0f:	00 00                	add    %al,(%rax)
    5b11:	45 0e                	rex.RB (bad) 
    5b13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5b19:	02 70 0c             	add    0xc(%rax),%dh
    5b1c:	07                   	(bad)  
    5b1d:	08 00                	or     %al,(%rax)
    5b1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5b22:	00 00                	add    %al,(%rax)
    5b24:	1c 04                	sbb    $0x4,%al
    5b26:	00 00                	add    %al,(%rax)
    5b28:	e2 e4                	loop   5b0e <__GNU_EH_FRAME_HDR+0x58e>
    5b2a:	ff                   	(bad)  
    5b2b:	ff                   	(bad)  
    5b2c:	7e 00                	jle    5b2e <__GNU_EH_FRAME_HDR+0x5ae>
    5b2e:	00 00                	add    %al,(%rax)
    5b30:	00 45 0e             	add    %al,0xe(%rbp)
    5b33:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5b39:	02 75 0c             	add    0xc(%rbp),%dh
    5b3c:	07                   	(bad)  
    5b3d:	08 00                	or     %al,(%rax)
    5b3f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5b42:	00 00                	add    %al,(%rax)
    5b44:	3c 04                	cmp    $0x4,%al
    5b46:	00 00                	add    %al,(%rax)
    5b48:	40 e5 ff             	rex in $0xff,%eax
    5b4b:	ff 52 00             	callq  *0x0(%rdx)
    5b4e:	00 00                	add    %al,(%rax)
    5b50:	00 45 0e             	add    %al,0xe(%rbp)
    5b53:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5b59:	02 49 0c             	add    0xc(%rcx),%cl
    5b5c:	07                   	(bad)  
    5b5d:	08 00                	or     %al,(%rax)
    5b5f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5b62:	00 00                	add    %al,(%rax)
    5b64:	5c                   	pop    %rsp
    5b65:	04 00                	add    $0x0,%al
    5b67:	00 72 e5             	add    %dh,-0x1b(%rdx)
    5b6a:	ff                   	(bad)  
    5b6b:	ff 48 00             	decl   0x0(%rax)
    5b6e:	00 00                	add    %al,(%rax)
    5b70:	00 45 0e             	add    %al,0xe(%rbp)
    5b73:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5b79:	7f 0c                	jg     5b87 <__GNU_EH_FRAME_HDR+0x607>
    5b7b:	07                   	(bad)  
    5b7c:	08 00                	or     %al,(%rax)
    5b7e:	00 00                	add    %al,(%rax)
    5b80:	1c 00                	sbb    $0x0,%al
    5b82:	00 00                	add    %al,(%rax)
    5b84:	7c 04                	jl     5b8a <__GNU_EH_FRAME_HDR+0x60a>
    5b86:	00 00                	add    %al,(%rax)
    5b88:	9a                   	(bad)  
    5b89:	e5 ff                	in     $0xff,%eax
    5b8b:	ff 2e                	ljmp   *(%rsi)
    5b8d:	00 00                	add    %al,(%rax)
    5b8f:	00 00                	add    %al,(%rax)
    5b91:	45 0e                	rex.RB (bad) 
    5b93:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5b99:	65 0c 07             	gs or  $0x7,%al
    5b9c:	08 00                	or     %al,(%rax)
    5b9e:	00 00                	add    %al,(%rax)
    5ba0:	1c 00                	sbb    $0x0,%al
    5ba2:	00 00                	add    %al,(%rax)
    5ba4:	9c                   	pushfq 
    5ba5:	04 00                	add    $0x0,%al
    5ba7:	00 a8 e5 ff ff 28    	add    %ch,0x28ffffe5(%rax)
    5bad:	00 00                	add    %al,(%rax)
    5baf:	00 00                	add    %al,(%rax)
    5bb1:	45 0e                	rex.RB (bad) 
    5bb3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5bb9:	5f                   	pop    %rdi
    5bba:	0c 07                	or     $0x7,%al
    5bbc:	08 00                	or     %al,(%rax)
    5bbe:	00 00                	add    %al,(%rax)
    5bc0:	1c 00                	sbb    $0x0,%al
    5bc2:	00 00                	add    %al,(%rax)
    5bc4:	bc 04 00 00 b0       	mov    $0xb0000004,%esp
    5bc9:	e5 ff                	in     $0xff,%eax
    5bcb:	ff 1e                	lcall  *(%rsi)
    5bcd:	00 00                	add    %al,(%rax)
    5bcf:	00 00                	add    %al,(%rax)
    5bd1:	45 0e                	rex.RB (bad) 
    5bd3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5bd9:	55                   	push   %rbp
    5bda:	0c 07                	or     $0x7,%al
    5bdc:	08 00                	or     %al,(%rax)
    5bde:	00 00                	add    %al,(%rax)
    5be0:	1c 00                	sbb    $0x0,%al
    5be2:	00 00                	add    %al,(%rax)
    5be4:	dc 04 00             	faddl  (%rax,%rax,1)
    5be7:	00 ae e5 ff ff 1f    	add    %ch,0x1fffffe5(%rsi)
    5bed:	00 00                	add    %al,(%rax)
    5bef:	00 00                	add    %al,(%rax)
    5bf1:	45 0e                	rex.RB (bad) 
    5bf3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5bf9:	56                   	push   %rsi
    5bfa:	0c 07                	or     $0x7,%al
    5bfc:	08 00                	or     %al,(%rax)
    5bfe:	00 00                	add    %al,(%rax)
    5c00:	1c 00                	sbb    $0x0,%al
    5c02:	00 00                	add    %al,(%rax)
    5c04:	fc                   	cld    
    5c05:	04 00                	add    $0x0,%al
    5c07:	00 ad e5 ff ff 1c    	add    %ch,0x1cffffe5(%rbp)
    5c0d:	00 00                	add    %al,(%rax)
    5c0f:	00 00                	add    %al,(%rax)
    5c11:	45 0e                	rex.RB (bad) 
    5c13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5c19:	53                   	push   %rbx
    5c1a:	0c 07                	or     $0x7,%al
    5c1c:	08 00                	or     %al,(%rax)
    5c1e:	00 00                	add    %al,(%rax)
    5c20:	1c 00                	sbb    $0x0,%al
    5c22:	00 00                	add    %al,(%rax)
    5c24:	1c 05                	sbb    $0x5,%al
    5c26:	00 00                	add    %al,(%rax)
    5c28:	a9 e5 ff ff 1c       	test   $0x1cffffe5,%eax
    5c2d:	00 00                	add    %al,(%rax)
    5c2f:	00 00                	add    %al,(%rax)
    5c31:	45 0e                	rex.RB (bad) 
    5c33:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5c39:	53                   	push   %rbx
    5c3a:	0c 07                	or     $0x7,%al
    5c3c:	08 00                	or     %al,(%rax)
    5c3e:	00 00                	add    %al,(%rax)
    5c40:	1c 00                	sbb    $0x0,%al
    5c42:	00 00                	add    %al,(%rax)
    5c44:	3c 05                	cmp    $0x5,%al
    5c46:	00 00                	add    %al,(%rax)
    5c48:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    5c49:	e5 ff                	in     $0xff,%eax
    5c4b:	ff 65 00             	jmpq   *0x0(%rbp)
    5c4e:	00 00                	add    %al,(%rax)
    5c50:	00 45 0e             	add    %al,0xe(%rbp)
    5c53:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5c59:	02 5c 0c 07          	add    0x7(%rsp,%rcx,1),%bl
    5c5d:	08 00                	or     %al,(%rax)
    5c5f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    5c62:	00 00                	add    %al,(%rax)
    5c64:	5c                   	pop    %rsp
    5c65:	05 00 00 ea e5       	add    $0xe5ea0000,%eax
    5c6a:	ff                   	(bad)  
    5c6b:	ff 2a                	ljmp   *(%rdx)
    5c6d:	00 00                	add    %al,(%rax)
    5c6f:	00 00                	add    %al,(%rax)
    5c71:	45 0e                	rex.RB (bad) 
    5c73:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5c79:	61                   	(bad)  
    5c7a:	0c 07                	or     $0x7,%al
    5c7c:	08 00                	or     %al,(%rax)
    5c7e:	00 00                	add    %al,(%rax)
    5c80:	1c 00                	sbb    $0x0,%al
    5c82:	00 00                	add    %al,(%rax)
    5c84:	7c 05                	jl     5c8b <__GNU_EH_FRAME_HDR+0x70b>
    5c86:	00 00                	add    %al,(%rax)
    5c88:	f4                   	hlt    
    5c89:	e5 ff                	in     $0xff,%eax
    5c8b:	ff 1e                	lcall  *(%rsi)
    5c8d:	00 00                	add    %al,(%rax)
    5c8f:	00 00                	add    %al,(%rax)
    5c91:	45 0e                	rex.RB (bad) 
    5c93:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5c99:	55                   	push   %rbp
    5c9a:	0c 07                	or     $0x7,%al
    5c9c:	08 00                	or     %al,(%rax)
    5c9e:	00 00                	add    %al,(%rax)
    5ca0:	1c 00                	sbb    $0x0,%al
    5ca2:	00 00                	add    %al,(%rax)
    5ca4:	9c                   	pushfq 
    5ca5:	05 00 00 f2 e5       	add    $0xe5f20000,%eax
    5caa:	ff                   	(bad)  
    5cab:	ff 16                	callq  *(%rsi)
    5cad:	00 00                	add    %al,(%rax)
    5caf:	00 00                	add    %al,(%rax)
    5cb1:	45 0e                	rex.RB (bad) 
    5cb3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    5cb9:	4d 0c 07             	rex.WRB or $0x7,%al
    5cbc:	08 00                	or     %al,(%rax)
    5cbe:	00 00                	add    %al,(%rax)
    5cc0:	44 00 00             	add    %r8b,(%rax)
    5cc3:	00 bc 05 00 00 e8 e5 	add    %bh,-0x1a180000(%rbp,%rax,1)
    5cca:	ff                   	(bad)  
    5ccb:	ff 65 00             	jmpq   *0x0(%rbp)
    5cce:	00 00                	add    %al,(%rax)
    5cd0:	00 46 0e             	add    %al,0xe(%rsi)
    5cd3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5cd9:	8e 03                	mov    (%rbx),%es
    5cdb:	45 0e                	rex.RB (bad) 
    5cdd:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5ce3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86306b2d <_end+0xffffffff862ff9fd>
    5ce9:	06                   	(bad)  
    5cea:	48 0e                	rex.W (bad) 
    5cec:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    5cf2:	6e                   	outsb  %ds:(%rsi),(%dx)
    5cf3:	0e                   	(bad)  
    5cf4:	38 41 0e             	cmp    %al,0xe(%rcx)
    5cf7:	30 41 0e             	xor    %al,0xe(%rcx)
    5cfa:	28 42 0e             	sub    %al,0xe(%rdx)
    5cfd:	20 42 0e             	and    %al,0xe(%rdx)
    5d00:	18 42 0e             	sbb    %al,0xe(%rdx)
    5d03:	10 42 0e             	adc    %al,0xe(%rdx)
    5d06:	08 00                	or     %al,(%rax)
    5d08:	10 00                	adc    %al,(%rax)
    5d0a:	00 00                	add    %al,(%rax)
    5d0c:	04 06                	add    $0x6,%al
    5d0e:	00 00                	add    %al,(%rax)
    5d10:	10 e6                	adc    %ah,%dh
    5d12:	ff                   	(bad)  
    5d13:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 5d19 <__GNU_EH_FRAME_HDR+0x799>
    5d19:	00 00                	add    %al,(%rax)
	...

0000000000005d1c <__FRAME_END__>:
    5d1c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000006d88 <__frame_dummy_init_array_entry>:
    6d88:	00 12                	add    %dl,(%rdx)
    6d8a:	00 00                	add    %al,(%rax)
    6d8c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000006d90 <__do_global_dtors_aux_fini_array_entry>:
    6d90:	c0 11 00             	rclb   $0x0,(%rcx)
    6d93:	00 00                	add    %al,(%rax)
    6d95:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000006d98 <_DYNAMIC>:
    6d98:	01 00                	add    %eax,(%rax)
    6d9a:	00 00                	add    %al,(%rax)
    6d9c:	00 00                	add    %al,(%rax)
    6d9e:	00 00                	add    %al,(%rax)
    6da0:	01 00                	add    %eax,(%rax)
    6da2:	00 00                	add    %al,(%rax)
    6da4:	00 00                	add    %al,(%rax)
    6da6:	00 00                	add    %al,(%rax)
    6da8:	0c 00                	or     $0x0,%al
    6daa:	00 00                	add    %al,(%rax)
    6dac:	00 00                	add    %al,(%rax)
    6dae:	00 00                	add    %al,(%rax)
    6db0:	00 10                	add    %dl,(%rax)
    6db2:	00 00                	add    %al,(%rax)
    6db4:	00 00                	add    %al,(%rax)
    6db6:	00 00                	add    %al,(%rax)
    6db8:	0d 00 00 00 00       	or     $0x0,%eax
    6dbd:	00 00                	add    %al,(%rax)
    6dbf:	00 28                	add    %ch,(%rax)
    6dc1:	43 00 00             	rex.XB add %al,(%r8)
    6dc4:	00 00                	add    %al,(%rax)
    6dc6:	00 00                	add    %al,(%rax)
    6dc8:	19 00                	sbb    %eax,(%rax)
    6dca:	00 00                	add    %al,(%rax)
    6dcc:	00 00                	add    %al,(%rax)
    6dce:	00 00                	add    %al,(%rax)
    6dd0:	88 6d 00             	mov    %ch,0x0(%rbp)
    6dd3:	00 00                	add    %al,(%rax)
    6dd5:	00 00                	add    %al,(%rax)
    6dd7:	00 1b                	add    %bl,(%rbx)
    6dd9:	00 00                	add    %al,(%rax)
    6ddb:	00 00                	add    %al,(%rax)
    6ddd:	00 00                	add    %al,(%rax)
    6ddf:	00 08                	add    %cl,(%rax)
    6de1:	00 00                	add    %al,(%rax)
    6de3:	00 00                	add    %al,(%rax)
    6de5:	00 00                	add    %al,(%rax)
    6de7:	00 1a                	add    %bl,(%rdx)
    6de9:	00 00                	add    %al,(%rax)
    6deb:	00 00                	add    %al,(%rax)
    6ded:	00 00                	add    %al,(%rax)
    6def:	00 90 6d 00 00 00    	add    %dl,0x6d(%rax)
    6df5:	00 00                	add    %al,(%rax)
    6df7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    6dfa:	00 00                	add    %al,(%rax)
    6dfc:	00 00                	add    %al,(%rax)
    6dfe:	00 00                	add    %al,(%rax)
    6e00:	08 00                	or     %al,(%rax)
    6e02:	00 00                	add    %al,(%rax)
    6e04:	00 00                	add    %al,(%rax)
    6e06:	00 00                	add    %al,(%rax)
    6e08:	f5                   	cmc    
    6e09:	fe                   	(bad)  
    6e0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    6e0d:	00 00                	add    %al,(%rax)
    6e0f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    6e15:	00 00                	add    %al,(%rax)
    6e17:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6e1d <_DYNAMIC+0x85>
    6e1d:	00 00                	add    %al,(%rax)
    6e1f:	00 00                	add    %al,(%rax)
    6e21:	05 00 00 00 00       	add    $0x0,%eax
    6e26:	00 00                	add    %al,(%rax)
    6e28:	06                   	(bad)  
    6e29:	00 00                	add    %al,(%rax)
    6e2b:	00 00                	add    %al,(%rax)
    6e2d:	00 00                	add    %al,(%rax)
    6e2f:	00 c8                	add    %cl,%al
    6e31:	03 00                	add    (%rax),%eax
    6e33:	00 00                	add    %al,(%rax)
    6e35:	00 00                	add    %al,(%rax)
    6e37:	00 0a                	add    %cl,(%rdx)
    6e39:	00 00                	add    %al,(%rax)
    6e3b:	00 00                	add    %al,(%rax)
    6e3d:	00 00                	add    %al,(%rax)
    6e3f:	00 d1                	add    %dl,%cl
    6e41:	00 00                	add    %al,(%rax)
    6e43:	00 00                	add    %al,(%rax)
    6e45:	00 00                	add    %al,(%rax)
    6e47:	00 0b                	add    %cl,(%rbx)
    6e49:	00 00                	add    %al,(%rax)
    6e4b:	00 00                	add    %al,(%rax)
    6e4d:	00 00                	add    %al,(%rax)
    6e4f:	00 18                	add    %bl,(%rax)
    6e51:	00 00                	add    %al,(%rax)
    6e53:	00 00                	add    %al,(%rax)
    6e55:	00 00                	add    %al,(%rax)
    6e57:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6e5d <_DYNAMIC+0xc5>
	...
    6e65:	00 00                	add    %al,(%rax)
    6e67:	00 03                	add    %al,(%rbx)
    6e69:	00 00                	add    %al,(%rax)
    6e6b:	00 00                	add    %al,(%rax)
    6e6d:	00 00                	add    %al,(%rax)
    6e6f:	00 88 6f 00 00 00    	add    %cl,0x6f(%rax)
    6e75:	00 00                	add    %al,(%rax)
    6e77:	00 02                	add    %al,(%rdx)
    6e79:	00 00                	add    %al,(%rax)
    6e7b:	00 00                	add    %al,(%rax)
    6e7d:	00 00                	add    %al,(%rax)
    6e7f:	00 a8 00 00 00 00    	add    %ch,0x0(%rax)
    6e85:	00 00                	add    %al,(%rax)
    6e87:	00 14 00             	add    %dl,(%rax,%rax,1)
    6e8a:	00 00                	add    %al,(%rax)
    6e8c:	00 00                	add    %al,(%rax)
    6e8e:	00 00                	add    %al,(%rax)
    6e90:	07                   	(bad)  
    6e91:	00 00                	add    %al,(%rax)
    6e93:	00 00                	add    %al,(%rax)
    6e95:	00 00                	add    %al,(%rax)
    6e97:	00 17                	add    %dl,(%rdi)
    6e99:	00 00                	add    %al,(%rax)
    6e9b:	00 00                	add    %al,(%rax)
    6e9d:	00 00                	add    %al,(%rax)
    6e9f:	00 b8 08 00 00 00    	add    %bh,0x8(%rax)
    6ea5:	00 00                	add    %al,(%rax)
    6ea7:	00 07                	add    %al,(%rdi)
    6ea9:	00 00                	add    %al,(%rax)
    6eab:	00 00                	add    %al,(%rax)
    6ead:	00 00                	add    %al,(%rax)
    6eaf:	00 30                	add    %dh,(%rax)
    6eb1:	06                   	(bad)  
    6eb2:	00 00                	add    %al,(%rax)
    6eb4:	00 00                	add    %al,(%rax)
    6eb6:	00 00                	add    %al,(%rax)
    6eb8:	08 00                	or     %al,(%rax)
    6eba:	00 00                	add    %al,(%rax)
    6ebc:	00 00                	add    %al,(%rax)
    6ebe:	00 00                	add    %al,(%rax)
    6ec0:	88 02                	mov    %al,(%rdx)
    6ec2:	00 00                	add    %al,(%rax)
    6ec4:	00 00                	add    %al,(%rax)
    6ec6:	00 00                	add    %al,(%rax)
    6ec8:	09 00                	or     %eax,(%rax)
    6eca:	00 00                	add    %al,(%rax)
    6ecc:	00 00                	add    %al,(%rax)
    6ece:	00 00                	add    %al,(%rax)
    6ed0:	18 00                	sbb    %al,(%rax)
    6ed2:	00 00                	add    %al,(%rax)
    6ed4:	00 00                	add    %al,(%rax)
    6ed6:	00 00                	add    %al,(%rax)
    6ed8:	1e                   	(bad)  
    6ed9:	00 00                	add    %al,(%rax)
    6edb:	00 00                	add    %al,(%rax)
    6edd:	00 00                	add    %al,(%rax)
    6edf:	00 08                	add    %cl,(%rax)
    6ee1:	00 00                	add    %al,(%rax)
    6ee3:	00 00                	add    %al,(%rax)
    6ee5:	00 00                	add    %al,(%rax)
    6ee7:	00 fb                	add    %bh,%bl
    6ee9:	ff                   	(bad)  
    6eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    6eed:	00 00                	add    %al,(%rax)
    6eef:	00 01                	add    %al,(%rcx)
    6ef1:	00 00                	add    %al,(%rax)
    6ef3:	08 00                	or     %al,(%rax)
    6ef5:	00 00                	add    %al,(%rax)
    6ef7:	00 fe                	add    %bh,%dh
    6ef9:	ff                   	(bad)  
    6efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    6efd:	00 00                	add    %al,(%rax)
    6eff:	00 f0                	add    %dh,%al
    6f01:	05 00 00 00 00       	add    $0x0,%eax
    6f06:	00 00                	add    %al,(%rax)
    6f08:	ff                   	(bad)  
    6f09:	ff                   	(bad)  
    6f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    6f0d:	00 00                	add    %al,(%rax)
    6f0f:	00 01                	add    %al,(%rcx)
    6f11:	00 00                	add    %al,(%rax)
    6f13:	00 00                	add    %al,(%rax)
    6f15:	00 00                	add    %al,(%rax)
    6f17:	00 f0                	add    %dh,%al
    6f19:	ff                   	(bad)  
    6f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    6f1d:	00 00                	add    %al,(%rax)
    6f1f:	00 d2                	add    %dl,%dl
    6f21:	05 00 00 00 00       	add    $0x0,%eax
    6f26:	00 00                	add    %al,(%rax)
    6f28:	f9                   	stc    
    6f29:	ff                   	(bad)  
    6f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    6f2d:	00 00                	add    %al,(%rax)
    6f2f:	00 16                	add    %dl,(%rsi)
	...

Disassembly of section .got:

0000000000006f88 <_GLOBAL_OFFSET_TABLE_>:
    6f88:	98                   	cwtl   
    6f89:	6d                   	insl   (%dx),%es:(%rdi)
	...
    6f9e:	00 00                	add    %al,(%rax)
    6fa0:	30 10                	xor    %dl,(%rax)
    6fa2:	00 00                	add    %al,(%rax)
    6fa4:	00 00                	add    %al,(%rax)
    6fa6:	00 00                	add    %al,(%rax)
    6fa8:	40 10 00             	adc    %al,(%rax)
    6fab:	00 00                	add    %al,(%rax)
    6fad:	00 00                	add    %al,(%rax)
    6faf:	00 50 10             	add    %dl,0x10(%rax)
    6fb2:	00 00                	add    %al,(%rax)
    6fb4:	00 00                	add    %al,(%rax)
    6fb6:	00 00                	add    %al,(%rax)
    6fb8:	60                   	(bad)  
    6fb9:	10 00                	adc    %al,(%rax)
    6fbb:	00 00                	add    %al,(%rax)
    6fbd:	00 00                	add    %al,(%rax)
    6fbf:	00 70 10             	add    %dh,0x10(%rax)
    6fc2:	00 00                	add    %al,(%rax)
    6fc4:	00 00                	add    %al,(%rax)
    6fc6:	00 00                	add    %al,(%rax)
    6fc8:	80 10 00             	adcb   $0x0,(%rax)
    6fcb:	00 00                	add    %al,(%rax)
    6fcd:	00 00                	add    %al,(%rax)
    6fcf:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
	...

Disassembly of section .data:

0000000000007000 <__data_start>:
	...

0000000000007008 <__dso_handle>:
    7008:	08 70 00             	or     %dh,0x0(%rax)
    700b:	00 00                	add    %al,(%rax)
    700d:	00 00                	add    %al,(%rax)
	...

0000000000007010 <list_known_crc>:
    7010:	b0 d4                	mov    $0xd4,%al
    7012:	40 33 79 6a          	rex xor 0x6a(%rcx),%edi
    7016:	14 e7                	adc    $0xe7,%al
    7018:	c1 e3 00             	shl    $0x0,%ebx
    701b:	00 00                	add    %al,(%rax)
    701d:	00 00                	add    %al,(%rax)
	...

0000000000007020 <matrix_known_crc>:
    7020:	52                   	push   %rdx
    7021:	be 99 11 08 56       	mov    $0x56081199,%esi
    7026:	d7                   	xlat   %ds:(%rbx)
    7027:	1f                   	(bad)  
    7028:	47 07                	rex.RXB (bad) 
    702a:	00 00                	add    %al,(%rax)
    702c:	00 00                	add    %al,(%rax)
	...

0000000000007030 <state_known_crc>:
    7030:	47 5e                	rex.RXB pop %r14
    7032:	bf 39 a4 e5 3a       	mov    $0x3ae5a439,%edi
    7037:	8e 84 8d 00 00 00 00 	mov    0x0(%rbp,%rcx,4),%es
	...

0000000000007040 <mem_name>:
    7040:	08 50 00             	or     %dl,0x0(%rax)
    7043:	00 00                	add    %al,(%rax)
    7045:	00 00                	add    %al,(%rax)
    7047:	00 0f                	add    %cl,(%rdi)
    7049:	50                   	push   %rax
    704a:	00 00                	add    %al,(%rax)
    704c:	00 00                	add    %al,(%rax)
    704e:	00 00                	add    %al,(%rax)
    7050:	14 50                	adc    $0x50,%al
	...

0000000000007060 <intpat>:
    7060:	88 54 00 00          	mov    %dl,0x0(%rax,%rax,1)
    7064:	00 00                	add    %al,(%rax)
    7066:	00 00                	add    %al,(%rax)
    7068:	8d 54 00 00          	lea    0x0(%rax,%rax,1),%edx
    706c:	00 00                	add    %al,(%rax)
    706e:	00 00                	add    %al,(%rax)
    7070:	92                   	xchg   %eax,%edx
    7071:	54                   	push   %rsp
    7072:	00 00                	add    %al,(%rax)
    7074:	00 00                	add    %al,(%rax)
    7076:	00 00                	add    %al,(%rax)
    7078:	97                   	xchg   %eax,%edi
    7079:	54                   	push   %rsp
    707a:	00 00                	add    %al,(%rax)
    707c:	00 00                	add    %al,(%rax)
	...

0000000000007080 <floatpat>:
    7080:	9c                   	pushfq 
    7081:	54                   	push   %rsp
    7082:	00 00                	add    %al,(%rax)
    7084:	00 00                	add    %al,(%rax)
    7086:	00 00                	add    %al,(%rax)
    7088:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    7089:	54                   	push   %rsp
    708a:	00 00                	add    %al,(%rax)
    708c:	00 00                	add    %al,(%rax)
    708e:	00 00                	add    %al,(%rax)
    7090:	ae                   	scas   %es:(%rdi),%al
    7091:	54                   	push   %rsp
    7092:	00 00                	add    %al,(%rax)
    7094:	00 00                	add    %al,(%rax)
    7096:	00 00                	add    %al,(%rax)
    7098:	b7 54                	mov    $0x54,%bh
    709a:	00 00                	add    %al,(%rax)
    709c:	00 00                	add    %al,(%rax)
	...

00000000000070a0 <scipat>:
    70a0:	c0 54 00 00 00       	rclb   $0x0,0x0(%rax,%rax,1)
    70a5:	00 00                	add    %al,(%rax)
    70a7:	00 c9                	add    %cl,%cl
    70a9:	54                   	push   %rsp
    70aa:	00 00                	add    %al,(%rax)
    70ac:	00 00                	add    %al,(%rax)
    70ae:	00 00                	add    %al,(%rax)
    70b0:	d2 54 00 00          	rclb   %cl,0x0(%rax,%rax,1)
    70b4:	00 00                	add    %al,(%rax)
    70b6:	00 00                	add    %al,(%rax)
    70b8:	db 54 00 00          	fistl  0x0(%rax,%rax,1)
    70bc:	00 00                	add    %al,(%rax)
	...

00000000000070c0 <errpat>:
    70c0:	e4 54                	in     $0x54,%al
    70c2:	00 00                	add    %al,(%rax)
    70c4:	00 00                	add    %al,(%rax)
    70c6:	00 00                	add    %al,(%rax)
    70c8:	ed                   	in     (%dx),%eax
    70c9:	54                   	push   %rsp
    70ca:	00 00                	add    %al,(%rax)
    70cc:	00 00                	add    %al,(%rax)
    70ce:	00 00                	add    %al,(%rax)
    70d0:	f6 54 00 00          	notb   0x0(%rax,%rax,1)
    70d4:	00 00                	add    %al,(%rax)
    70d6:	00 00                	add    %al,(%rax)
    70d8:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
    70dc:	00 00                	add    %al,(%rax)
	...

00000000000070e0 <seed3_volatile>:
    70e0:	66 00 00             	data16 add %al,(%rax)
	...

00000000000070e4 <default_num_contexts>:
    70e4:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .bss:

00000000000070f0 <completed.8061>:
	...

0000000000007100 <seed1_volatile>:
    7100:	00 00                	add    %al,(%rax)
	...

0000000000007104 <seed2_volatile>:
    7104:	00 00                	add    %al,(%rax)
	...

0000000000007108 <seed4_volatile>:
    7108:	00 00                	add    %al,(%rax)
	...

000000000000710c <seed5_volatile>:
    710c:	00 00                	add    %al,(%rax)
	...

0000000000007110 <start_time_val>:
	...

0000000000007120 <stop_time_val>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75620418>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
