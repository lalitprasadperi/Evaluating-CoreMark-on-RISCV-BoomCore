
coremark.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 96 57 ff de 6d    	add    %dl,0x6ddeff57(%rsi)
 36d:	b0 c3                	mov    $0xc3,%al
 36f:	00 20                	add    %ah,(%rax)
 371:	4e 22 79 cf          	rex.WRX and -0x31(%rcx),%r15b
 375:	58                   	pop    %rax
 376:	52                   	push   %rdx
 377:	19 26                	sbb    %esp,(%rsi)
 379:	14 dc                	adc    $0xdc,%al
 37b:	56                   	push   %rsi

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0c 00                	or     $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	00 00                	add    %al,(%rax)
 3be:	00 00                	add    %al,(%rax)
 3c0:	d1 65 ce             	shll   -0x32(%rbp)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	6c                   	insb   (%dx),%es:(%rdi)
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 2e                	add    %ch,(%rsi)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 9e 00 00 00 20    	add    %bl,0x20000000(%rsi)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 18                	add    %bl,(%rax)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 3d 00 00 00 12    	add    %bh,0x12000000(%rip)        # 12000445 <_end+0x11ff93d5>
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 1d 00 00 00 12    	add    %bl,0x12000000(%rip)        # 1200045d <_end+0x11ff93ed>
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 5a 00             	add    %bl,0x0(%rdx)
 472:	00 00                	add    %al,(%rax)
 474:	12 00                	adc    (%rax),%al
	...
 486:	00 00                	add    %al,(%rax)
 488:	ba 00 00 00 20       	mov    $0x20000000,%edx
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 36                	add    %dh,(%rsi)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 12                	add    %dl,(%rdx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 0b                	add    %cl,(%rbx)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 c9                	add    %cl,%cl
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 20                	add    %ah,(%rax)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 4b 00             	add    %cl,0x0(%rbx)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000500 <.dynstr>:
 500:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 504:	63 2e                	movslq (%rsi),%ebp
 506:	73 6f                	jae    577 <_init-0xa89>
 508:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 50d:	70 72                	jo     581 <_init-0xa7f>
 50f:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
 516:	6b 00 70             	imul   $0x70,(%rax),%eax
 519:	75 74                	jne    58f <_init-0xa71>
 51b:	73 00                	jae    51d <_init-0xae3>
 51d:	5f                   	pop    %rdi
 51e:	5f                   	pop    %rdi
 51f:	73 74                	jae    595 <_init-0xa6b>
 521:	61                   	(bad)  
 522:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 525:	63 68 6b             	movslq 0x6b(%rax),%ebp
 528:	5f                   	pop    %rdi
 529:	66 61                	data16 (bad) 
 52b:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 532:	68 
 533:	61                   	(bad)  
 534:	72 00                	jb     536 <_init-0xaca>
 536:	6d                   	insl   (%dx),%es:(%rdi)
 537:	61                   	(bad)  
 538:	6c                   	insb   (%dx),%es:(%rdi)
 539:	6c                   	insb   (%dx),%es:(%rdi)
 53a:	6f                   	outsl  %ds:(%rsi),(%dx)
 53b:	63 00                	movslq (%rax),%eax
 53d:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 541:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 545:	74 74                	je     5bb <_init-0xa45>
 547:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 54e:	78 61                	js     5b1 <_init-0xa4f>
 550:	5f                   	pop    %rdi
 551:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 557:	7a 65                	jp     5be <_init-0xa42>
 559:	00 5f 5f             	add    %bl,0x5f(%rdi)
 55c:	6c                   	insb   (%dx),%es:(%rdi)
 55d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 564:	72 74                	jb     5da <_init-0xa26>
 566:	5f                   	pop    %rdi
 567:	6d                   	insl   (%dx),%es:(%rdi)
 568:	61                   	(bad)  
 569:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 570:	00 47 4c             	add    %al,0x4c(%rdi)
 573:	49                   	rex.WB
 574:	42                   	rex.X
 575:	43 5f                	rex.XB pop %r15
 577:	32 2e                	xor    (%rsi),%ch
 579:	33 2e                	xor    (%rsi),%ebp
 57b:	34 00                	xor    $0x0,%al
 57d:	47                   	rex.RXB
 57e:	4c                   	rex.WR
 57f:	49                   	rex.WB
 580:	42                   	rex.X
 581:	43 5f                	rex.XB pop %r15
 583:	32 2e                	xor    (%rsi),%ch
 585:	34 00                	xor    $0x0,%al
 587:	47                   	rex.RXB
 588:	4c                   	rex.WR
 589:	49                   	rex.WB
 58a:	42                   	rex.X
 58b:	43 5f                	rex.XB pop %r15
 58d:	32 2e                	xor    (%rsi),%ch
 58f:	31 37                	xor    %esi,(%rdi)
 591:	00 47 4c             	add    %al,0x4c(%rdi)
 594:	49                   	rex.WB
 595:	42                   	rex.X
 596:	43 5f                	rex.XB pop %r15
 598:	32 2e                	xor    (%rsi),%ch
 59a:	32 2e                	xor    (%rsi),%ch
 59c:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 5a1:	4d 5f                	rex.WRB pop %r15
 5a3:	64 65 72 65          	fs gs jb 60c <_init-0x9f4>
 5a7:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5ae:	4d 
 5af:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5b1:	6f                   	outsl  %ds:(%rsi),(%dx)
 5b2:	6e                   	outsb  %ds:(%rsi),(%dx)
 5b3:	65 54                	gs push %rsp
 5b5:	61                   	(bad)  
 5b6:	62                   	(bad)  
 5b7:	6c                   	insb   (%dx),%es:(%rdi)
 5b8:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5bc:	67 6d                	insl   (%dx),%es:(%edi)
 5be:	6f                   	outsl  %ds:(%rsi),(%dx)
 5bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 5c0:	5f                   	pop    %rdi
 5c1:	73 74                	jae    637 <_init-0x9c9>
 5c3:	61                   	(bad)  
 5c4:	72 74                	jb     63a <_init-0x9c6>
 5c6:	5f                   	pop    %rdi
 5c7:	5f                   	pop    %rdi
 5c8:	00 5f 49             	add    %bl,0x49(%rdi)
 5cb:	54                   	push   %rsp
 5cc:	4d 5f                	rex.WRB pop %r15
 5ce:	72 65                	jb     635 <_init-0x9cb>
 5d0:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5d7:	4d 
 5d8:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5da:	6f                   	outsl  %ds:(%rsi),(%dx)
 5db:	6e                   	outsb  %ds:(%rsi),(%dx)
 5dc:	65 54                	gs push %rsp
 5de:	61                   	(bad)  
 5df:	62                   	.byte 0x62
 5e0:	6c                   	insb   (%dx),%es:(%rdi)
 5e1:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000005e4 <.gnu.version>:
 5e4:	00 00                	add    %al,(%rax)
 5e6:	02 00                	add    (%rax),%al
 5e8:	02 00                	add    (%rax),%al
 5ea:	00 00                	add    %al,(%rax)
 5ec:	02 00                	add    (%rax),%al
 5ee:	03 00                	add    (%rax),%eax
 5f0:	04 00                	add    $0x0,%al
 5f2:	02 00                	add    (%rax),%al
 5f4:	00 00                	add    %al,(%rax)
 5f6:	02 00                	add    (%rax),%al
 5f8:	05 00 00 00 02       	add    $0x2000000,%eax
	...

Disassembly of section .gnu.version_r:

0000000000000600 <.gnu.version_r>:
 600:	01 00                	add    %eax,(%rax)
 602:	04 00                	add    $0x0,%al
 604:	01 00                	add    %eax,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	10 00                	adc    %al,(%rax)
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	74 19                	je     62b <_init-0x9d5>
 612:	69 09 00 00 05 00    	imul   $0x50000,(%rcx),%ecx
 618:	71 00                	jno    61a <_init-0x9e6>
 61a:	00 00                	add    %al,(%rax)
 61c:	10 00                	adc    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	14 69                	adc    $0x69,%al
 622:	69 0d 00 00 04 00 7d 	imul   $0x7d,0x40000(%rip),%ecx        # 4062c <_end+0x395bc>
 629:	00 00 00 
 62c:	10 00                	adc    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	97                   	xchg   %eax,%edi
 631:	91                   	xchg   %eax,%ecx
 632:	96                   	xchg   %eax,%esi
 633:	06                   	(bad)  
 634:	00 00                	add    %al,(%rax)
 636:	03 00                	add    (%rax),%eax
 638:	87 00                	xchg   %eax,(%rax)
 63a:	00 00                	add    %al,(%rax)
 63c:	10 00                	adc    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	75 1a                	jne    65c <_init-0x9a4>
 642:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 648:	92                   	xchg   %eax,%edx
 649:	00 00                	add    %al,(%rax)
 64b:	00 00                	add    %al,(%rax)
 64d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000650 <.rela.dyn>:
 650:	f0 6c                	lock insb (%dx),%es:(%rdi)
 652:	00 00                	add    %al,(%rax)
 654:	00 00                	add    %al,(%rax)
 656:	00 00                	add    %al,(%rax)
 658:	08 00                	or     %al,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	10 1b                	adc    %bl,(%rbx)
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	f8                   	clc    
 669:	6c                   	insb   (%dx),%es:(%rdi)
 66a:	00 00                	add    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	08 00                	or     %al,(%rax)
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	d0 1a                	rcrb   (%rdx)
 67a:	00 00                	add    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	00 6d 00             	add    %ch,0x0(%rbp)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 08                	add    %cl,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 b0 44 00 00 00    	add    %dh,0x44(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 08                	add    %cl,(%rax)
 699:	6d                   	insl   (%dx),%es:(%rdi)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	08 00                	or     %al,(%rax)
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	b9 44 00 00 00       	mov    $0x44,%ecx
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 10                	add    %dl,(%rax)
 6b1:	6d                   	insl   (%dx),%es:(%rdi)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	08 00                	or     %al,(%rax)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	c2 44 00             	retq   $0x44
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 18                	add    %bl,(%rax)
 6c9:	6d                   	insl   (%dx),%es:(%rdi)
 6ca:	00 00                	add    %al,(%rax)
 6cc:	00 00                	add    %al,(%rax)
 6ce:	00 00                	add    %al,(%rax)
 6d0:	08 00                	or     %al,(%rax)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	00 00                	add    %al,(%rax)
 6d6:	00 00                	add    %al,(%rax)
 6d8:	cb                   	lret   
 6d9:	44 00 00             	add    %r8b,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	20 6d 00             	and    %ch,0x0(%rbp)
 6e3:	00 00                	add    %al,(%rax)
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 08                	add    %cl,(%rax)
 6e9:	00 00                	add    %al,(%rax)
 6eb:	00 00                	add    %al,(%rax)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 d4                	add    %dl,%ah
 6f1:	44 00 00             	add    %r8b,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	28 6d 00             	sub    %ch,0x0(%rbp)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 08                	add    %cl,(%rax)
 701:	00 00                	add    %al,(%rax)
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 dd                	add    %bl,%ch
 709:	44 00 00             	add    %r8b,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	30 6d 00             	xor    %ch,0x0(%rbp)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 08                	add    %cl,(%rax)
 719:	00 00                	add    %al,(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 e6                	add    %ah,%dh
 721:	44 00 00             	add    %r8b,(%rax)
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	38 6d 00             	cmp    %ch,0x0(%rbp)
 72b:	00 00                	add    %al,(%rax)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 08                	add    %cl,(%rax)
 731:	00 00                	add    %al,(%rax)
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 ef                	add    %ch,%bh
 739:	44 00 00             	add    %r8b,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	40 6d                	rex insl (%dx),%es:(%rdi)
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	08 00                	or     %al,(%rax)
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	f8                   	clc    
 751:	44 00 00             	add    %r8b,(%rax)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	48 6d                	rex.W insl (%dx),%es:(%rdi)
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	08 00                	or     %al,(%rax)
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	01 45 00             	add    %eax,0x0(%rbp)
 76b:	00 00                	add    %al,(%rax)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 50 6d             	add    %dl,0x6d(%rax)
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	08 00                	or     %al,(%rax)
 77a:	00 00                	add    %al,(%rax)
 77c:	00 00                	add    %al,(%rax)
 77e:	00 00                	add    %al,(%rax)
 780:	0a 45 00             	or     0x0(%rbp),%al
 783:	00 00                	add    %al,(%rax)
 785:	00 00                	add    %al,(%rax)
 787:	00 58 6d             	add    %bl,0x6d(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	08 00                	or     %al,(%rax)
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	13 45 00             	adc    0x0(%rbp),%eax
 79b:	00 00                	add    %al,(%rax)
 79d:	00 00                	add    %al,(%rax)
 79f:	00 60 6d             	add    %ah,0x6d(%rax)
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	08 00                	or     %al,(%rax)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	1c 45                	sbb    $0x45,%al
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	68 6d 00 00 00       	pushq  $0x6d
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 08                	add    %cl,(%rax)
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 21                	add    %ah,(%rcx)
 7c9:	45 00 00             	add    %r8b,(%r8)
 7cc:	00 00                	add    %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	70 6d                	jo     83f <_init-0x7c1>
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	08 00                	or     %al,(%rax)
 7da:	00 00                	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	26 45 00 00          	add    %r8b,%es:(%r8)
 7e4:	00 00                	add    %al,(%rax)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	78 6d                	js     857 <_init-0x7a9>
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	08 00                	or     %al,(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	2b 45 00             	sub    0x0(%rbp),%eax
 7fb:	00 00                	add    %al,(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 08                	add    %cl,(%rax)
 801:	70 00                	jo     803 <_init-0x7fd>
 803:	00 00                	add    %al,(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 08                	add    %cl,(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 00                	add    %al,(%rax)
 80d:	00 00                	add    %al,(%rax)
 80f:	00 08                	add    %cl,(%rax)
 811:	70 00                	jo     813 <_init-0x7ed>
 813:	00 00                	add    %al,(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 10                	add    %dl,(%rax)
 819:	70 00                	jo     81b <_init-0x7e5>
 81b:	00 00                	add    %al,(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 08                	add    %cl,(%rax)
 821:	00 00                	add    %al,(%rax)
 823:	00 00                	add    %al,(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 54 44 00          	add    %dl,0x0(%rsp,%rax,2)
 82b:	00 00                	add    %al,(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 18                	add    %bl,(%rax)
 831:	70 00                	jo     833 <_init-0x7cd>
 833:	00 00                	add    %al,(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 08                	add    %cl,(%rax)
 839:	00 00                	add    %al,(%rax)
 83b:	00 00                	add    %al,(%rax)
 83d:	00 00                	add    %al,(%rax)
 83f:	00 5b 44             	add    %bl,0x44(%rbx)
 842:	00 00                	add    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	20 70 00             	and    %dh,0x0(%rax)
 84b:	00 00                	add    %al,(%rax)
 84d:	00 00                	add    %al,(%rax)
 84f:	00 08                	add    %cl,(%rax)
 851:	00 00                	add    %al,(%rax)
 853:	00 00                	add    %al,(%rax)
 855:	00 00                	add    %al,(%rax)
 857:	00 60 44             	add    %ah,0x44(%rax)
 85a:	00 00                	add    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	c0 6f 00 00          	shrb   $0x0,0x0(%rdi)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	06                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 03                	add    %al,(%rbx)
	...
 875:	00 00                	add    %al,(%rax)
 877:	00 c8                	add    %cl,%al
 879:	6f                   	outsl  %ds:(%rsi),(%dx)
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	06                   	(bad)  
 881:	00 00                	add    %al,(%rax)
 883:	00 07                	add    %al,(%rdi)
	...
 88d:	00 00                	add    %al,(%rax)
 88f:	00 d0                	add    %dl,%al
 891:	6f                   	outsl  %ds:(%rsi),(%dx)
 892:	00 00                	add    %al,(%rax)
 894:	00 00                	add    %al,(%rax)
 896:	00 00                	add    %al,(%rax)
 898:	06                   	(bad)  
 899:	00 00                	add    %al,(%rax)
 89b:	00 08                	add    %cl,(%rax)
	...
 8a5:	00 00                	add    %al,(%rax)
 8a7:	00 d8                	add    %bl,%al
 8a9:	6f                   	outsl  %ds:(%rsi),(%dx)
 8aa:	00 00                	add    %al,(%rax)
 8ac:	00 00                	add    %al,(%rax)
 8ae:	00 00                	add    %al,(%rax)
 8b0:	06                   	(bad)  
 8b1:	00 00                	add    %al,(%rax)
 8b3:	00 0b                	add    %cl,(%rbx)
	...
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 e0                	add    %ah,%al
 8c1:	6f                   	outsl  %ds:(%rsi),(%dx)
 8c2:	00 00                	add    %al,(%rax)
 8c4:	00 00                	add    %al,(%rax)
 8c6:	00 00                	add    %al,(%rax)
 8c8:	06                   	(bad)  
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000008d8 <.rela.plt>:
 8d8:	88 6f 00             	mov    %ch,0x0(%rdi)
 8db:	00 00                	add    %al,(%rax)
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 07                	add    %al,(%rdi)
 8e1:	00 00                	add    %al,(%rax)
 8e3:	00 01                	add    %al,(%rcx)
	...
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 90 6f 00 00 00    	add    %dl,0x6f(%rax)
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 07                	add    %al,(%rdi)
 8f9:	00 00                	add    %al,(%rax)
 8fb:	00 02                	add    %al,(%rdx)
	...
 905:	00 00                	add    %al,(%rax)
 907:	00 98 6f 00 00 00    	add    %bl,0x6f(%rax)
 90d:	00 00                	add    %al,(%rax)
 90f:	00 07                	add    %al,(%rdi)
 911:	00 00                	add    %al,(%rax)
 913:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 91e:	00 00                	add    %al,(%rax)
 920:	a0 6f 00 00 00 00 00 	movabs 0x70000000000006f,%al
 927:	00 07 
 929:	00 00                	add    %al,(%rax)
 92b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 931 <_init-0x6cf>
 931:	00 00                	add    %al,(%rax)
 933:	00 00                	add    %al,(%rax)
 935:	00 00                	add    %al,(%rax)
 937:	00 a8 6f 00 00 00    	add    %ch,0x6f(%rax)
 93d:	00 00                	add    %al,(%rax)
 93f:	00 07                	add    %al,(%rdi)
 941:	00 00                	add    %al,(%rax)
 943:	00 06                	add    %al,(%rsi)
	...
 94d:	00 00                	add    %al,(%rax)
 94f:	00 b0 6f 00 00 00    	add    %dh,0x6f(%rax)
 955:	00 00                	add    %al,(%rax)
 957:	00 07                	add    %al,(%rdi)
 959:	00 00                	add    %al,(%rax)
 95b:	00 09                	add    %cl,(%rcx)
	...
 965:	00 00                	add    %al,(%rax)
 967:	00 b8 6f 00 00 00    	add    %bh,0x6f(%rax)
 96d:	00 00                	add    %al,(%rax)
 96f:	00 07                	add    %al,(%rdi)
 971:	00 00                	add    %al,(%rax)
 973:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 5f 00 00 	mov    0x5fc1(%rip),%rax        # 6fd0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 5f 00 00    	pushq  0x5f52(%rip)        # 6f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 5f 00 00 	bnd jmpq *0x5f53(%rip)        # 6f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 35 5f 00 00 	bnd jmpq *0x5f35(%rip)        # 6fe0 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <free@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 cd 5e 00 00 	bnd jmpq *0x5ecd(%rip)        # 6f88 <free@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <putchar@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 c5 5e 00 00 	bnd jmpq *0x5ec5(%rip)        # 6f90 <putchar@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 bd 5e 00 00 	bnd jmpq *0x5ebd(%rip)        # 6f98 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <clock_gettime@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 b5 5e 00 00 	bnd jmpq *0x5eb5(%rip)        # 6fa0 <clock_gettime@GLIBC_2.17>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__stack_chk_fail@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 ad 5e 00 00 	bnd jmpq *0x5ead(%rip)        # 6fa8 <__stack_chk_fail@GLIBC_2.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <malloc@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 a5 5e 00 00 	bnd jmpq *0x5ea5(%rip)        # 6fb0 <malloc@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <__printf_chk@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 9d 5e 00 00 	bnd jmpq *0x5e9d(%rip)        # 6fb8 <__printf_chk@GLIBC_2.3.4>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <main>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	41 57                	push   %r15
    1126:	41 56                	push   %r14
    1128:	41 55                	push   %r13
    112a:	41 54                	push   %r12
    112c:	55                   	push   %rbp
    112d:	53                   	push   %rbx
    112e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    1135:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    113c:	00 00 
    113e:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    1145:	00 
    1146:	31 c0                	xor    %eax,%eax
    1148:	4c 8d a4 24 9a 00 00 	lea    0x9a(%rsp),%r12
    114f:	00 
    1150:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
    1155:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    115c:	00 
    115d:	48 8d 74 24 24       	lea    0x24(%rsp),%rsi
    1162:	4c 89 e7             	mov    %r12,%rdi
    1165:	e8 96 21 00 00       	callq  3300 <portable_init>
    116a:	bf 01 00 00 00       	mov    $0x1,%edi
    116f:	e8 7c 1f 00 00       	callq  30f0 <get_seed_32>
    1174:	bf 02 00 00 00       	mov    $0x2,%edi
    1179:	66 89 44 24 30       	mov    %ax,0x30(%rsp)
    117e:	e8 6d 1f 00 00       	callq  30f0 <get_seed_32>
    1183:	bf 03 00 00 00       	mov    $0x3,%edi
    1188:	66 89 44 24 32       	mov    %ax,0x32(%rsp)
    118d:	e8 5e 1f 00 00       	callq  30f0 <get_seed_32>
    1192:	bf 04 00 00 00       	mov    $0x4,%edi
    1197:	66 89 44 24 34       	mov    %ax,0x34(%rsp)
    119c:	e8 4f 1f 00 00       	callq  30f0 <get_seed_32>
    11a1:	bf 05 00 00 00       	mov    $0x5,%edi
    11a6:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    11aa:	e8 41 1f 00 00       	callq  30f0 <get_seed_32>
    11af:	ba 07 00 00 00       	mov    $0x7,%edx
    11b4:	85 c0                	test   %eax,%eax
    11b6:	0f 44 c2             	cmove  %edx,%eax
    11b9:	89 44 24 60          	mov    %eax,0x60(%rsp)
    11bd:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    11c4:	ff 00 00 
    11c7:	48 85 44 24 30       	test   %rax,0x30(%rsp)
    11cc:	75 0f                	jne    11dd <main+0xbd>
    11ce:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
    11d5:	00 
    11d6:	66 c7 44 24 34 66 00 	movw   $0x66,0x34(%rsp)
    11dd:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    11e4:	ff 00 00 
    11e7:	48 23 44 24 30       	and    0x30(%rsp),%rax
    11ec:	48 83 f8 01          	cmp    $0x1,%rax
    11f0:	75 0f                	jne    1201 <main+0xe1>
    11f2:	c7 44 24 30 15 34 15 	movl   $0x34153415,0x30(%rsp)
    11f9:	34 
    11fa:	66 c7 44 24 34 66 00 	movw   $0x66,0x34(%rsp)
    1201:	bf 07 00 00 00       	mov    $0x7,%edi
    1206:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    120b:	e8 e0 1e 00 00       	callq  30f0 <get_seed_32>
    1210:	b9 d0 07 00 00       	mov    $0x7d0,%ecx
    1215:	0f bf f8             	movswl %ax,%edi
    1218:	66 85 c0             	test   %ax,%ax
    121b:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    1220:	48 89 fa             	mov    %rdi,%rdx
    1223:	48 0f 44 f8          	cmove  %rax,%rdi
    1227:	0f 44 d1             	cmove  %ecx,%edx
    122a:	89 54 24 58          	mov    %edx,0x58(%rsp)
    122e:	e8 fd 1f 00 00       	callq  3230 <portable_malloc>
    1233:	8b 74 24 60          	mov    0x60(%rsp),%esi
    1237:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    123c:	49 89 c0             	mov    %rax,%r8
    123f:	31 c0                	xor    %eax,%eax
    1241:	66 89 84 24 98 00 00 	mov    %ax,0x98(%rsp)
    1248:	00 
    1249:	89 f7                	mov    %esi,%edi
    124b:	89 f0                	mov    %esi,%eax
    124d:	89 f2                	mov    %esi,%edx
    124f:	83 e7 01             	and    $0x1,%edi
    1252:	83 e0 02             	and    $0x2,%eax
    1255:	83 f8 01             	cmp    $0x1,%eax
    1258:	89 f8                	mov    %edi,%eax
    125a:	66 83 d8 ff          	sbb    $0xffff,%ax
    125e:	83 e2 04             	and    $0x4,%edx
    1261:	83 fa 01             	cmp    $0x1,%edx
    1264:	66 83 d8 ff          	sbb    $0xffff,%ax
    1268:	31 d2                	xor    %edx,%edx
    126a:	45 31 c9             	xor    %r9d,%r9d
    126d:	0f b7 c8             	movzwl %ax,%ecx
    1270:	8b 44 24 58          	mov    0x58(%rsp),%eax
    1274:	f7 f1                	div    %ecx
    1276:	31 c9                	xor    %ecx,%ecx
    1278:	ba 01 00 00 00       	mov    $0x1,%edx
    127d:	89 44 24 58          	mov    %eax,0x58(%rsp)
    1281:	41 89 d2             	mov    %edx,%r10d
    1284:	41 d3 e2             	shl    %cl,%r10d
    1287:	41 85 f2             	test   %esi,%r10d
    128a:	0f 85 40 03 00 00    	jne    15d0 <main+0x4b0>
    1290:	48 83 c1 01          	add    $0x1,%rcx
    1294:	48 83 f9 03          	cmp    $0x3,%rcx
    1298:	75 e7                	jne    1281 <main+0x161>
    129a:	85 ff                	test   %edi,%edi
    129c:	74 1a                	je     12b8 <main+0x198>
    129e:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    12a3:	0f bf 54 24 30       	movswl 0x30(%rsp),%edx
    12a8:	89 c7                	mov    %eax,%edi
    12aa:	e8 b1 0e 00 00       	callq  2160 <core_list_init>
    12af:	8b 74 24 60          	mov    0x60(%rsp),%esi
    12b3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    12b8:	40 f6 c6 02          	test   $0x2,%sil
    12bc:	0f 85 7e 02 00 00    	jne    1540 <main+0x420>
    12c2:	83 e6 04             	and    $0x4,%esi
    12c5:	74 13                	je     12da <main+0x1ba>
    12c7:	0f bf 74 24 30       	movswl 0x30(%rsp),%esi
    12cc:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    12d1:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    12d5:	e8 06 18 00 00       	callq  2ae0 <core_init_state>
    12da:	44 8b 44 24 5c       	mov    0x5c(%rsp),%r8d
    12df:	45 85 c0             	test   %r8d,%r8d
    12e2:	75 6a                	jne    134e <main+0x22e>
    12e4:	c7 44 24 5c 01 00 00 	movl   $0x1,0x5c(%rsp)
    12eb:	00 
    12ec:	0f 1f 40 00          	nopl   0x0(%rax)
    12f0:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    12f4:	8d 04 80             	lea    (%rax,%rax,4),%eax
    12f7:	01 c0                	add    %eax,%eax
    12f9:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    12fd:	e8 4e 1f 00 00       	callq  3250 <start_time>
    1302:	48 89 ef             	mov    %rbp,%rdi
    1305:	e8 d6 0f 00 00       	callq  22e0 <iterate>
    130a:	e8 61 1f 00 00       	callq  3270 <stop_time>
    130f:	e8 7c 1f 00 00       	callq  3290 <get_time>
    1314:	48 89 c7             	mov    %rax,%rdi
    1317:	e8 c4 1f 00 00       	callq  32e0 <time_in_secs>
    131c:	f2 0f 10 15 74 31 00 	movsd  0x3174(%rip),%xmm2        # 4498 <list_known_crc+0x10>
    1323:	00 
    1324:	66 0f 2f d0          	comisd %xmm0,%xmm2
    1328:	77 c6                	ja     12f0 <main+0x1d0>
    132a:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    132f:	b8 01 00 00 00       	mov    $0x1,%eax
    1334:	85 c9                	test   %ecx,%ecx
    1336:	0f 44 c8             	cmove  %eax,%ecx
    1339:	b8 0a 00 00 00       	mov    $0xa,%eax
    133e:	31 d2                	xor    %edx,%edx
    1340:	f7 f1                	div    %ecx
    1342:	83 c0 01             	add    $0x1,%eax
    1345:	0f af 44 24 5c       	imul   0x5c(%rsp),%eax
    134a:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    134e:	e8 fd 1e 00 00       	callq  3250 <start_time>
    1353:	48 89 ef             	mov    %rbp,%rdi
    1356:	e8 85 0f 00 00       	callq  22e0 <iterate>
    135b:	e8 10 1f 00 00       	callq  3270 <stop_time>
    1360:	e8 2b 1f 00 00       	callq  3290 <get_time>
    1365:	0f bf 7c 24 30       	movswl 0x30(%rsp),%edi
    136a:	31 f6                	xor    %esi,%esi
    136c:	48 89 04 24          	mov    %rax,(%rsp)
    1370:	e8 9b 1e 00 00       	callq  3210 <crc16>
    1375:	0f bf 7c 24 32       	movswl 0x32(%rsp),%edi
    137a:	0f b7 f0             	movzwl %ax,%esi
    137d:	e8 8e 1e 00 00       	callq  3210 <crc16>
    1382:	0f bf 7c 24 34       	movswl 0x34(%rsp),%edi
    1387:	0f b7 f0             	movzwl %ax,%esi
    138a:	e8 81 1e 00 00       	callq  3210 <crc16>
    138f:	0f bf 7c 24 58       	movswl 0x58(%rsp),%edi
    1394:	0f b7 f0             	movzwl %ax,%esi
    1397:	e8 74 1e 00 00       	callq  3210 <crc16>
    139c:	0f b7 d8             	movzwl %ax,%ebx
    139f:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
    13a3:	66 3d 05 7b          	cmp    $0x7b05,%ax
    13a7:	0f 84 1d 06 00 00    	je     19ca <main+0x8aa>
    13ad:	0f 87 ed 01 00 00    	ja     15a0 <main+0x480>
    13b3:	66 3d f2 18          	cmp    $0x18f2,%ax
    13b7:	0f 84 25 06 00 00    	je     19e2 <main+0x8c2>
    13bd:	66 3d af 4e          	cmp    $0x4eaf,%ax
    13c1:	0f 85 57 06 00 00    	jne    1a1e <main+0x8fe>
    13c7:	48 8d 3d 9a 2c 00 00 	lea    0x2c9a(%rip),%rdi        # 4068 <_IO_stdin_used+0x68>
    13ce:	e8 fd fc ff ff       	callq  10d0 <puts@plt>
    13d3:	66 c7 44 24 16 02 00 	movw   $0x2,0x16(%rsp)
    13da:	8b 35 48 5c 00 00    	mov    0x5c48(%rip),%esi        # 7028 <default_num_contexts>
    13e0:	45 31 ed             	xor    %r13d,%r13d
    13e3:	31 ed                	xor    %ebp,%ebp
    13e5:	45 31 ff             	xor    %r15d,%r15d
    13e8:	4c 0f bf 74 24 16    	movswq 0x16(%rsp),%r14
    13ee:	85 f6                	test   %esi,%esi
    13f0:	0f 84 1c 06 00 00    	je     1a12 <main+0x8f2>
    13f6:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    13fb:	eb 34                	jmp    1431 <main+0x311>
    13fd:	0f 1f 00             	nopl   (%rax)
    1400:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1407:	00 
    1408:	48 29 d8             	sub    %rbx,%rax
    140b:	48 c1 e0 04          	shl    $0x4,%rax
    140f:	0f b7 9c 04 98 00 00 	movzwl 0x98(%rsp,%rax,1),%ebx
    1416:	00 
    1417:	83 c5 01             	add    $0x1,%ebp
    141a:	44 01 eb             	add    %r13d,%ebx
    141d:	44 0f b7 fd          	movzwl %bp,%r15d
    1421:	44 3b 3d 00 5c 00 00 	cmp    0x5c00(%rip),%r15d        # 7028 <default_num_contexts>
    1428:	41 89 dd             	mov    %ebx,%r13d
    142b:	0f 83 bf 01 00 00    	jae    15f0 <main+0x4d0>
    1431:	49 63 df             	movslq %r15d,%rbx
    1434:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
    143b:	00 
    143c:	31 ff                	xor    %edi,%edi
    143e:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1445:	00 
    1446:	48 29 d8             	sub    %rbx,%rax
    1449:	48 c1 e0 04          	shl    $0x4,%rax
    144d:	66 89 bc 04 98 00 00 	mov    %di,0x98(%rsp,%rax,1)
    1454:	00 
    1455:	4c 8d 24 06          	lea    (%rsi,%rax,1),%r12
    1459:	f6 44 04 60 01       	testb  $0x1,0x60(%rsp,%rax,1)
    145e:	74 37                	je     1497 <main+0x377>
    1460:	0f b7 8c 04 92 00 00 	movzwl 0x92(%rsp,%rax,1),%ecx
    1467:	00 
    1468:	48 8d 05 19 30 00 00 	lea    0x3019(%rip),%rax        # 4488 <list_known_crc>
    146f:	46 0f b7 04 70       	movzwl (%rax,%r14,2),%r8d
    1474:	66 44 39 c1          	cmp    %r8w,%cx
    1478:	74 1d                	je     1497 <main+0x377>
    147a:	44 89 fa             	mov    %r15d,%edx
    147d:	48 8d 35 74 2c 00 00 	lea    0x2c74(%rip),%rsi        # 40f8 <_IO_stdin_used+0xf8>
    1484:	bf 01 00 00 00       	mov    $0x1,%edi
    1489:	31 c0                	xor    %eax,%eax
    148b:	e8 80 fc ff ff       	callq  1110 <__printf_chk@plt>
    1490:	66 41 83 44 24 e8 01 	addw   $0x1,-0x18(%r12)
    1497:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    149e:	00 
    149f:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
    14a6:	00 
    14a7:	48 29 d8             	sub    %rbx,%rax
    14aa:	48 c1 e0 04          	shl    $0x4,%rax
    14ae:	8b 54 04 60          	mov    0x60(%rsp,%rax,1),%edx
    14b2:	4c 8d 24 06          	lea    (%rsi,%rax,1),%r12
    14b6:	f6 c2 02             	test   $0x2,%dl
    14b9:	74 3c                	je     14f7 <main+0x3d7>
    14bb:	0f b7 8c 04 94 00 00 	movzwl 0x94(%rsp,%rax,1),%ecx
    14c2:	00 
    14c3:	48 8d 05 ae 2f 00 00 	lea    0x2fae(%rip),%rax        # 4478 <matrix_known_crc>
    14ca:	46 0f b7 04 70       	movzwl (%rax,%r14,2),%r8d
    14cf:	66 44 39 c1          	cmp    %r8w,%cx
    14d3:	74 22                	je     14f7 <main+0x3d7>
    14d5:	44 89 fa             	mov    %r15d,%edx
    14d8:	48 8d 35 49 2c 00 00 	lea    0x2c49(%rip),%rsi        # 4128 <_IO_stdin_used+0x128>
    14df:	bf 01 00 00 00       	mov    $0x1,%edi
    14e4:	31 c0                	xor    %eax,%eax
    14e6:	e8 25 fc ff ff       	callq  1110 <__printf_chk@plt>
    14eb:	66 41 83 44 24 e8 01 	addw   $0x1,-0x18(%r12)
    14f2:	41 8b 54 24 b0       	mov    -0x50(%r12),%edx
    14f7:	83 e2 04             	and    $0x4,%edx
    14fa:	0f 84 00 ff ff ff    	je     1400 <main+0x2e0>
    1500:	4c 8d 0c dd 00 00 00 	lea    0x0(,%rbx,8),%r9
    1507:	00 
    1508:	48 8d 05 59 2f 00 00 	lea    0x2f59(%rip),%rax        # 4468 <state_known_crc>
    150f:	49 29 d9             	sub    %rbx,%r9
    1512:	46 0f b7 04 70       	movzwl (%rax,%r14,2),%r8d
    1517:	49 c1 e1 04          	shl    $0x4,%r9
    151b:	42 0f b7 8c 0c 96 00 	movzwl 0x96(%rsp,%r9,1),%ecx
    1522:	00 00 
    1524:	4d 89 cc             	mov    %r9,%r12
    1527:	66 44 39 c1          	cmp    %r8w,%cx
    152b:	75 43                	jne    1570 <main+0x450>
    152d:	42 0f b7 9c 0c 98 00 	movzwl 0x98(%rsp,%r9,1),%ebx
    1534:	00 00 
    1536:	e9 dc fe ff ff       	jmpq   1417 <main+0x2f7>
    153b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1540:	0f bf 54 24 32       	movswl 0x32(%rsp),%edx
    1545:	0f bf 44 24 30       	movswl 0x30(%rsp),%eax
    154a:	48 8d 4c 24 70       	lea    0x70(%rsp),%rcx
    154f:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    1554:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    1558:	c1 e2 10             	shl    $0x10,%edx
    155b:	09 c2                	or     %eax,%edx
    155d:	e8 fe 0d 00 00       	callq  2360 <core_init_matrix>
    1562:	8b 74 24 60          	mov    0x60(%rsp),%esi
    1566:	e9 57 fd ff ff       	jmpq   12c2 <main+0x1a2>
    156b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1570:	44 89 fa             	mov    %r15d,%edx
    1573:	48 8d 35 e6 2b 00 00 	lea    0x2be6(%rip),%rsi        # 4160 <_IO_stdin_used+0x160>
    157a:	bf 01 00 00 00       	mov    $0x1,%edi
    157f:	31 c0                	xor    %eax,%eax
    1581:	e8 8a fb ff ff       	callq  1110 <__printf_chk@plt>
    1586:	42 0f b7 84 24 98 00 	movzwl 0x98(%rsp,%r12,1),%eax
    158d:	00 00 
    158f:	8d 58 01             	lea    0x1(%rax),%ebx
    1592:	66 42 89 9c 24 98 00 	mov    %bx,0x98(%rsp,%r12,1)
    1599:	00 00 
    159b:	e9 77 fe ff ff       	jmpq   1417 <main+0x2f7>
    15a0:	66 3d 02 8a          	cmp    $0x8a02,%ax
    15a4:	0f 84 50 04 00 00    	je     19fa <main+0x8da>
    15aa:	66 3d f5 e9          	cmp    $0xe9f5,%ax
    15ae:	0f 85 6a 04 00 00    	jne    1a1e <main+0x8fe>
    15b4:	48 8d 3d dd 2a 00 00 	lea    0x2add(%rip),%rdi        # 4098 <_IO_stdin_used+0x98>
    15bb:	e8 10 fb ff ff       	callq  10d0 <puts@plt>
    15c0:	66 c7 44 24 16 03 00 	movw   $0x3,0x16(%rsp)
    15c7:	e9 0e fe ff ff       	jmpq   13da <main+0x2ba>
    15cc:	0f 1f 40 00          	nopl   0x0(%rax)
    15d0:	45 0f b7 d1          	movzwl %r9w,%r10d
    15d4:	41 83 c1 01          	add    $0x1,%r9d
    15d8:	44 0f af d0          	imul   %eax,%r10d
    15dc:	4d 01 c2             	add    %r8,%r10
    15df:	4c 89 54 cd 10       	mov    %r10,0x10(%rbp,%rcx,8)
    15e4:	e9 a7 fc ff ff       	jmpq   1290 <main+0x170>
    15e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    15f0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    15f5:	e8 26 1c 00 00       	callq  3220 <check_data_types>
    15fa:	8b 54 24 58          	mov    0x58(%rsp),%edx
    15fe:	bf 01 00 00 00       	mov    $0x1,%edi
    1603:	48 8d 35 c0 2c 00 00 	lea    0x2cc0(%rip),%rsi        # 42ca <_IO_stdin_used+0x2ca>
    160a:	0f b6 c0             	movzbl %al,%eax
    160d:	01 c3                	add    %eax,%ebx
    160f:	31 c0                	xor    %eax,%eax
    1611:	e8 fa fa ff ff       	callq  1110 <__printf_chk@plt>
    1616:	4c 8b 3c 24          	mov    (%rsp),%r15
    161a:	bf 01 00 00 00       	mov    $0x1,%edi
    161f:	31 c0                	xor    %eax,%eax
    1621:	48 8d 35 ba 2c 00 00 	lea    0x2cba(%rip),%rsi        # 42e2 <_IO_stdin_used+0x2e2>
    1628:	4c 89 fa             	mov    %r15,%rdx
    162b:	e8 e0 fa ff ff       	callq  1110 <__printf_chk@plt>
    1630:	4c 89 ff             	mov    %r15,%rdi
    1633:	e8 a8 1c 00 00       	callq  32e0 <time_in_secs>
    1638:	bf 01 00 00 00       	mov    $0x1,%edi
    163d:	b8 01 00 00 00       	mov    $0x1,%eax
    1642:	48 8d 35 b1 2c 00 00 	lea    0x2cb1(%rip),%rsi        # 42fa <_IO_stdin_used+0x2fa>
    1649:	e8 c2 fa ff ff       	callq  1110 <__printf_chk@plt>
    164e:	4c 89 ff             	mov    %r15,%rdi
    1651:	e8 8a 1c 00 00       	callq  32e0 <time_in_secs>
    1656:	66 0f 2f 05 42 2e 00 	comisd 0x2e42(%rip),%xmm0        # 44a0 <list_known_crc+0x18>
    165d:	00 
    165e:	76 46                	jbe    16a6 <main+0x586>
    1660:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    1664:	0f af 05 bd 59 00 00 	imul   0x59bd(%rip),%eax        # 7028 <default_num_contexts>
    166b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    166f:	4c 89 ff             	mov    %r15,%rdi
    1672:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1677:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
    167d:	e8 5e 1c 00 00       	callq  32e0 <time_in_secs>
    1682:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    1688:	bf 01 00 00 00       	mov    $0x1,%edi
    168d:	48 8d 35 7d 2c 00 00 	lea    0x2c7d(%rip),%rsi        # 4311 <_IO_stdin_used+0x311>
    1694:	b8 01 00 00 00       	mov    $0x1,%eax
    1699:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    169d:	66 0f 28 c1          	movapd %xmm1,%xmm0
    16a1:	e8 6a fa ff ff       	callq  1110 <__printf_chk@plt>
    16a6:	48 8b 3c 24          	mov    (%rsp),%rdi
    16aa:	e8 31 1c 00 00       	callq  32e0 <time_in_secs>
    16af:	f2 0f 10 0d f1 2d 00 	movsd  0x2df1(%rip),%xmm1        # 44a8 <list_known_crc+0x20>
    16b6:	00 
    16b7:	66 0f 2f c8          	comisd %xmm0,%xmm1
    16bb:	0f 87 56 02 00 00    	ja     1917 <main+0x7f7>
    16c1:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    16c5:	8b 15 5d 59 00 00    	mov    0x595d(%rip),%edx        # 7028 <default_num_contexts>
    16cb:	bf 01 00 00 00       	mov    $0x1,%edi
    16d0:	48 8d 35 51 2c 00 00 	lea    0x2c51(%rip),%rsi        # 4328 <_IO_stdin_used+0x328>
    16d7:	48 0f af d0          	imul   %rax,%rdx
    16db:	31 c0                	xor    %eax,%eax
    16dd:	e8 2e fa ff ff       	callq  1110 <__printf_chk@plt>
    16e2:	48 8d 15 57 2c 00 00 	lea    0x2c57(%rip),%rdx        # 4340 <_IO_stdin_used+0x340>
    16e9:	48 8d 35 59 2c 00 00 	lea    0x2c59(%rip),%rsi        # 4349 <_IO_stdin_used+0x349>
    16f0:	31 c0                	xor    %eax,%eax
    16f2:	bf 01 00 00 00       	mov    $0x1,%edi
    16f7:	e8 14 fa ff ff       	callq  1110 <__printf_chk@plt>
    16fc:	48 8d 15 5d 2c 00 00 	lea    0x2c5d(%rip),%rdx        # 4360 <_IO_stdin_used+0x360>
    1703:	48 8d 35 61 2c 00 00 	lea    0x2c61(%rip),%rsi        # 436b <_IO_stdin_used+0x36b>
    170a:	31 c0                	xor    %eax,%eax
    170c:	bf 01 00 00 00       	mov    $0x1,%edi
    1711:	e8 fa f9 ff ff       	callq  1110 <__printf_chk@plt>
    1716:	48 8d 15 b3 2a 00 00 	lea    0x2ab3(%rip),%rdx        # 41d0 <_IO_stdin_used+0x1d0>
    171d:	48 8d 35 5e 2c 00 00 	lea    0x2c5e(%rip),%rsi        # 4382 <_IO_stdin_used+0x382>
    1724:	31 c0                	xor    %eax,%eax
    1726:	bf 01 00 00 00       	mov    $0x1,%edi
    172b:	e8 e0 f9 ff ff       	callq  1110 <__printf_chk@plt>
    1730:	8b 54 24 08          	mov    0x8(%rsp),%edx
    1734:	bf 01 00 00 00       	mov    $0x1,%edi
    1739:	31 c0                	xor    %eax,%eax
    173b:	48 8d 35 57 2c 00 00 	lea    0x2c57(%rip),%rsi        # 4399 <_IO_stdin_used+0x399>
    1742:	e8 c9 f9 ff ff       	callq  1110 <__printf_chk@plt>
    1747:	8b 44 24 60          	mov    0x60(%rsp),%eax
    174b:	a8 01                	test   $0x1,%al
    174d:	74 56                	je     17a5 <main+0x685>
    174f:	83 3d d2 58 00 00 00 	cmpl   $0x0,0x58d2(%rip)        # 7028 <default_num_contexts>
    1756:	74 4d                	je     17a5 <main+0x685>
    1758:	45 31 f6             	xor    %r14d,%r14d
    175b:	31 d2                	xor    %edx,%edx
    175d:	48 8d 2d 50 2c 00 00 	lea    0x2c50(%rip),%rbp        # 43b4 <_IO_stdin_used+0x3b4>
    1764:	0f 1f 40 00          	nopl   0x0(%rax)
    1768:	48 63 ca             	movslq %edx,%rcx
    176b:	41 83 c6 01          	add    $0x1,%r14d
    176f:	48 89 ee             	mov    %rbp,%rsi
    1772:	bf 01 00 00 00       	mov    $0x1,%edi
    1777:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    177e:	00 
    177f:	48 29 c8             	sub    %rcx,%rax
    1782:	48 c1 e0 04          	shl    $0x4,%rax
    1786:	0f b7 8c 04 92 00 00 	movzwl 0x92(%rsp,%rax,1),%ecx
    178d:	00 
    178e:	31 c0                	xor    %eax,%eax
    1790:	e8 7b f9 ff ff       	callq  1110 <__printf_chk@plt>
    1795:	41 0f b7 d6          	movzwl %r14w,%edx
    1799:	3b 15 89 58 00 00    	cmp    0x5889(%rip),%edx        # 7028 <default_num_contexts>
    179f:	72 c7                	jb     1768 <main+0x648>
    17a1:	8b 44 24 60          	mov    0x60(%rsp),%eax
    17a5:	a8 02                	test   $0x2,%al
    17a7:	74 5c                	je     1805 <main+0x6e5>
    17a9:	83 3d 78 58 00 00 00 	cmpl   $0x0,0x5878(%rip)        # 7028 <default_num_contexts>
    17b0:	0f 84 07 02 00 00    	je     19bd <main+0x89d>
    17b6:	45 31 f6             	xor    %r14d,%r14d
    17b9:	31 d2                	xor    %edx,%edx
    17bb:	48 8d 2d 0e 2c 00 00 	lea    0x2c0e(%rip),%rbp        # 43d0 <_IO_stdin_used+0x3d0>
    17c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    17c8:	48 63 ca             	movslq %edx,%rcx
    17cb:	41 83 c6 01          	add    $0x1,%r14d
    17cf:	48 89 ee             	mov    %rbp,%rsi
    17d2:	bf 01 00 00 00       	mov    $0x1,%edi
    17d7:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    17de:	00 
    17df:	48 29 c8             	sub    %rcx,%rax
    17e2:	48 c1 e0 04          	shl    $0x4,%rax
    17e6:	0f b7 8c 04 94 00 00 	movzwl 0x94(%rsp,%rax,1),%ecx
    17ed:	00 
    17ee:	31 c0                	xor    %eax,%eax
    17f0:	e8 1b f9 ff ff       	callq  1110 <__printf_chk@plt>
    17f5:	41 0f b7 d6          	movzwl %r14w,%edx
    17f9:	3b 15 29 58 00 00    	cmp    0x5829(%rip),%edx        # 7028 <default_num_contexts>
    17ff:	72 c7                	jb     17c8 <main+0x6a8>
    1801:	8b 44 24 60          	mov    0x60(%rsp),%eax
    1805:	a8 04                	test   $0x4,%al
    1807:	74 58                	je     1861 <main+0x741>
    1809:	45 31 f6             	xor    %r14d,%r14d
    180c:	31 d2                	xor    %edx,%edx
    180e:	83 3d 13 58 00 00 00 	cmpl   $0x0,0x5813(%rip)        # 7028 <default_num_contexts>
    1815:	48 8d 2d d0 2b 00 00 	lea    0x2bd0(%rip),%rbp        # 43ec <_IO_stdin_used+0x3ec>
    181c:	0f 84 97 00 00 00    	je     18b9 <main+0x799>
    1822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1828:	48 63 ca             	movslq %edx,%rcx
    182b:	41 83 c6 01          	add    $0x1,%r14d
    182f:	48 89 ee             	mov    %rbp,%rsi
    1832:	bf 01 00 00 00       	mov    $0x1,%edi
    1837:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    183e:	00 
    183f:	48 29 c8             	sub    %rcx,%rax
    1842:	48 c1 e0 04          	shl    $0x4,%rax
    1846:	0f b7 8c 04 96 00 00 	movzwl 0x96(%rsp,%rax,1),%ecx
    184d:	00 
    184e:	31 c0                	xor    %eax,%eax
    1850:	e8 bb f8 ff ff       	callq  1110 <__printf_chk@plt>
    1855:	41 0f b7 d6          	movzwl %r14w,%edx
    1859:	3b 15 c9 57 00 00    	cmp    0x57c9(%rip),%edx        # 7028 <default_num_contexts>
    185f:	72 c7                	jb     1828 <main+0x708>
    1861:	8b 0d c1 57 00 00    	mov    0x57c1(%rip),%ecx        # 7028 <default_num_contexts>
    1867:	45 31 f6             	xor    %r14d,%r14d
    186a:	31 d2                	xor    %edx,%edx
    186c:	48 8d 2d 95 2b 00 00 	lea    0x2b95(%rip),%rbp        # 4408 <_IO_stdin_used+0x408>
    1873:	85 c9                	test   %ecx,%ecx
    1875:	74 42                	je     18b9 <main+0x799>
    1877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    187e:	00 00 
    1880:	48 63 ca             	movslq %edx,%rcx
    1883:	41 83 c6 01          	add    $0x1,%r14d
    1887:	48 89 ee             	mov    %rbp,%rsi
    188a:	bf 01 00 00 00       	mov    $0x1,%edi
    188f:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    1896:	00 
    1897:	48 29 c8             	sub    %rcx,%rax
    189a:	48 c1 e0 04          	shl    $0x4,%rax
    189e:	0f b7 8c 04 90 00 00 	movzwl 0x90(%rsp,%rax,1),%ecx
    18a5:	00 
    18a6:	31 c0                	xor    %eax,%eax
    18a8:	e8 63 f8 ff ff       	callq  1110 <__printf_chk@plt>
    18ad:	41 0f b7 d6          	movzwl %r14w,%edx
    18b1:	3b 15 71 57 00 00    	cmp    0x5771(%rip),%edx        # 7028 <default_num_contexts>
    18b7:	72 c7                	jb     1880 <main+0x760>
    18b9:	66 85 db             	test   %bx,%bx
    18bc:	74 6d                	je     192b <main+0x80b>
    18be:	7e 49                	jle    1909 <main+0x7e9>
    18c0:	48 8d 3d 7d 2b 00 00 	lea    0x2b7d(%rip),%rdi        # 4444 <_IO_stdin_used+0x444>
    18c7:	e8 04 f8 ff ff       	callq  10d0 <puts@plt>
    18cc:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    18d1:	e8 6a 19 00 00       	callq  3240 <portable_free>
    18d6:	4c 89 e7             	mov    %r12,%rdi
    18d9:	e8 32 1a 00 00       	callq  3310 <portable_fini>
    18de:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    18e5:	00 
    18e6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    18ed:	00 00 
    18ef:	0f 85 24 01 00 00    	jne    1a19 <main+0x8f9>
    18f5:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    18fc:	31 c0                	xor    %eax,%eax
    18fe:	5b                   	pop    %rbx
    18ff:	5d                   	pop    %rbp
    1900:	41 5c                	pop    %r12
    1902:	41 5d                	pop    %r13
    1904:	41 5e                	pop    %r14
    1906:	41 5f                	pop    %r15
    1908:	c3                   	retq   
    1909:	48 8d 3d 58 29 00 00 	lea    0x2958(%rip),%rdi        # 4268 <_IO_stdin_used+0x268>
    1910:	e8 bb f7 ff ff       	callq  10d0 <puts@plt>
    1915:	eb b5                	jmp    18cc <main+0x7ac>
    1917:	48 8d 3d 72 28 00 00 	lea    0x2872(%rip),%rdi        # 4190 <_IO_stdin_used+0x190>
    191e:	83 c3 01             	add    $0x1,%ebx
    1921:	e8 aa f7 ff ff       	callq  10d0 <puts@plt>
    1926:	e9 96 fd ff ff       	jmpq   16c1 <main+0x5a1>
    192b:	48 8d 3d ee 28 00 00 	lea    0x28ee(%rip),%rdi        # 4220 <_IO_stdin_used+0x220>
    1932:	e8 99 f7 ff ff       	callq  10d0 <puts@plt>
    1937:	66 83 7c 24 16 03    	cmpw   $0x3,0x16(%rsp)
    193d:	75 8d                	jne    18cc <main+0x7ac>
    193f:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    1943:	0f af 05 de 56 00 00 	imul   0x56de(%rip),%eax        # 7028 <default_num_contexts>
    194a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    194e:	48 8b 3c 24          	mov    (%rsp),%rdi
    1952:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1957:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    195d:	e8 7e 19 00 00       	callq  32e0 <time_in_secs>
    1962:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    1968:	48 8d 0d f1 29 00 00 	lea    0x29f1(%rip),%rcx        # 4360 <_IO_stdin_used+0x360>
    196f:	48 8d 15 ca 29 00 00 	lea    0x29ca(%rip),%rdx        # 4340 <_IO_stdin_used+0x340>
    1976:	48 8d 35 a7 2a 00 00 	lea    0x2aa7(%rip),%rsi        # 4424 <_IO_stdin_used+0x424>
    197d:	bf 01 00 00 00       	mov    $0x1,%edi
    1982:	b8 01 00 00 00       	mov    $0x1,%eax
    1987:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    198b:	66 0f 28 c1          	movapd %xmm1,%xmm0
    198f:	e8 7c f7 ff ff       	callq  1110 <__printf_chk@plt>
    1994:	48 8b 15 7d 56 00 00 	mov    0x567d(%rip),%rdx        # 7018 <mem_name+0x8>
    199b:	48 8d 35 9c 2a 00 00 	lea    0x2a9c(%rip),%rsi        # 443e <_IO_stdin_used+0x43e>
    19a2:	31 c0                	xor    %eax,%eax
    19a4:	bf 01 00 00 00       	mov    $0x1,%edi
    19a9:	e8 62 f7 ff ff       	callq  1110 <__printf_chk@plt>
    19ae:	bf 0a 00 00 00       	mov    $0xa,%edi
    19b3:	e8 08 f7 ff ff       	callq  10c0 <putchar@plt>
    19b8:	e9 0f ff ff ff       	jmpq   18cc <main+0x7ac>
    19bd:	a8 04                	test   $0x4,%al
    19bf:	0f 85 f4 fe ff ff    	jne    18b9 <main+0x799>
    19c5:	e9 97 fe ff ff       	jmpq   1861 <main+0x741>
    19ca:	48 8d 3d 67 26 00 00 	lea    0x2667(%rip),%rdi        # 4038 <_IO_stdin_used+0x38>
    19d1:	e8 fa f6 ff ff       	callq  10d0 <puts@plt>
    19d6:	66 c7 44 24 16 01 00 	movw   $0x1,0x16(%rsp)
    19dd:	e9 f8 f9 ff ff       	jmpq   13da <main+0x2ba>
    19e2:	48 8d 3d df 26 00 00 	lea    0x26df(%rip),%rdi        # 40c8 <_IO_stdin_used+0xc8>
    19e9:	e8 e2 f6 ff ff       	callq  10d0 <puts@plt>
    19ee:	66 c7 44 24 16 04 00 	movw   $0x4,0x16(%rsp)
    19f5:	e9 e0 f9 ff ff       	jmpq   13da <main+0x2ba>
    19fa:	48 8d 3d 07 26 00 00 	lea    0x2607(%rip),%rdi        # 4008 <_IO_stdin_used+0x8>
    1a01:	e8 ca f6 ff ff       	callq  10d0 <puts@plt>
    1a06:	66 c7 44 24 16 00 00 	movw   $0x0,0x16(%rsp)
    1a0d:	e9 c8 f9 ff ff       	jmpq   13da <main+0x2ba>
    1a12:	31 db                	xor    %ebx,%ebx
    1a14:	e9 dc fb ff ff       	jmpq   15f5 <main+0x4d5>
    1a19:	e8 d2 f6 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    1a1e:	66 c7 44 24 16 ff ff 	movw   $0xffff,0x16(%rsp)
    1a25:	83 cb ff             	or     $0xffffffff,%ebx
    1a28:	e9 c8 fb ff ff       	jmpq   15f5 <main+0x4d5>
    1a2d:	0f 1f 00             	nopl   (%rax)

0000000000001a30 <_start>:
    1a30:	f3 0f 1e fa          	endbr64 
    1a34:	31 ed                	xor    %ebp,%ebp
    1a36:	49 89 d1             	mov    %rdx,%r9
    1a39:	5e                   	pop    %rsi
    1a3a:	48 89 e2             	mov    %rsp,%rdx
    1a3d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1a41:	50                   	push   %rax
    1a42:	54                   	push   %rsp
    1a43:	4c 8d 05 46 19 00 00 	lea    0x1946(%rip),%r8        # 3390 <__libc_csu_fini>
    1a4a:	48 8d 0d cf 18 00 00 	lea    0x18cf(%rip),%rcx        # 3320 <__libc_csu_init>
    1a51:	48 8d 3d c8 f6 ff ff 	lea    -0x938(%rip),%rdi        # 1120 <main>
    1a58:	ff 15 6a 55 00 00    	callq  *0x556a(%rip)        # 6fc8 <__libc_start_main@GLIBC_2.2.5>
    1a5e:	f4                   	hlt    
    1a5f:	90                   	nop

0000000000001a60 <deregister_tm_clones>:
    1a60:	48 8d 3d c9 55 00 00 	lea    0x55c9(%rip),%rdi        # 7030 <__TMC_END__>
    1a67:	48 8d 05 c2 55 00 00 	lea    0x55c2(%rip),%rax        # 7030 <__TMC_END__>
    1a6e:	48 39 f8             	cmp    %rdi,%rax
    1a71:	74 15                	je     1a88 <deregister_tm_clones+0x28>
    1a73:	48 8b 05 46 55 00 00 	mov    0x5546(%rip),%rax        # 6fc0 <_ITM_deregisterTMCloneTable>
    1a7a:	48 85 c0             	test   %rax,%rax
    1a7d:	74 09                	je     1a88 <deregister_tm_clones+0x28>
    1a7f:	ff e0                	jmpq   *%rax
    1a81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1a88:	c3                   	retq   
    1a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001a90 <register_tm_clones>:
    1a90:	48 8d 3d 99 55 00 00 	lea    0x5599(%rip),%rdi        # 7030 <__TMC_END__>
    1a97:	48 8d 35 92 55 00 00 	lea    0x5592(%rip),%rsi        # 7030 <__TMC_END__>
    1a9e:	48 29 fe             	sub    %rdi,%rsi
    1aa1:	48 89 f0             	mov    %rsi,%rax
    1aa4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1aa8:	48 c1 f8 03          	sar    $0x3,%rax
    1aac:	48 01 c6             	add    %rax,%rsi
    1aaf:	48 d1 fe             	sar    %rsi
    1ab2:	74 14                	je     1ac8 <register_tm_clones+0x38>
    1ab4:	48 8b 05 1d 55 00 00 	mov    0x551d(%rip),%rax        # 6fd8 <_ITM_registerTMCloneTable>
    1abb:	48 85 c0             	test   %rax,%rax
    1abe:	74 08                	je     1ac8 <register_tm_clones+0x38>
    1ac0:	ff e0                	jmpq   *%rax
    1ac2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1ac8:	c3                   	retq   
    1ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001ad0 <__do_global_dtors_aux>:
    1ad0:	f3 0f 1e fa          	endbr64 
    1ad4:	80 3d 55 55 00 00 00 	cmpb   $0x0,0x5555(%rip)        # 7030 <__TMC_END__>
    1adb:	75 2b                	jne    1b08 <__do_global_dtors_aux+0x38>
    1add:	55                   	push   %rbp
    1ade:	48 83 3d fa 54 00 00 	cmpq   $0x0,0x54fa(%rip)        # 6fe0 <__cxa_finalize@GLIBC_2.2.5>
    1ae5:	00 
    1ae6:	48 89 e5             	mov    %rsp,%rbp
    1ae9:	74 0c                	je     1af7 <__do_global_dtors_aux+0x27>
    1aeb:	48 8b 3d 16 55 00 00 	mov    0x5516(%rip),%rdi        # 7008 <__dso_handle>
    1af2:	e8 a9 f5 ff ff       	callq  10a0 <__cxa_finalize@plt>
    1af7:	e8 64 ff ff ff       	callq  1a60 <deregister_tm_clones>
    1afc:	c6 05 2d 55 00 00 01 	movb   $0x1,0x552d(%rip)        # 7030 <__TMC_END__>
    1b03:	5d                   	pop    %rbp
    1b04:	c3                   	retq   
    1b05:	0f 1f 00             	nopl   (%rax)
    1b08:	c3                   	retq   
    1b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001b10 <frame_dummy>:
    1b10:	f3 0f 1e fa          	endbr64 
    1b14:	e9 77 ff ff ff       	jmpq   1a90 <register_tm_clones>
    1b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001b20 <cmp_idx>:
    1b20:	f3 0f 1e fa          	endbr64 
    1b24:	48 85 d2             	test   %rdx,%rdx
    1b27:	74 0f                	je     1b38 <cmp_idx+0x18>
    1b29:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1b2d:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1b31:	29 d0                	sub    %edx,%eax
    1b33:	c3                   	retq   
    1b34:	0f 1f 40 00          	nopl   0x0(%rax)
    1b38:	0f b7 07             	movzwl (%rdi),%eax
    1b3b:	89 c2                	mov    %eax,%edx
    1b3d:	66 c1 e8 08          	shr    $0x8,%ax
    1b41:	30 d2                	xor    %dl,%dl
    1b43:	09 d0                	or     %edx,%eax
    1b45:	66 89 07             	mov    %ax,(%rdi)
    1b48:	0f b7 06             	movzwl (%rsi),%eax
    1b4b:	89 c2                	mov    %eax,%edx
    1b4d:	66 c1 e8 08          	shr    $0x8,%ax
    1b51:	30 d2                	xor    %dl,%dl
    1b53:	09 d0                	or     %edx,%eax
    1b55:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1b59:	66 89 06             	mov    %ax,(%rsi)
    1b5c:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1b60:	29 d0                	sub    %edx,%eax
    1b62:	c3                   	retq   
    1b63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1b6a:	00 00 00 00 
    1b6e:	66 90                	xchg   %ax,%ax

0000000000001b70 <calc_func>:
    1b70:	f3 0f 1e fa          	endbr64 
    1b74:	41 55                	push   %r13
    1b76:	41 54                	push   %r12
    1b78:	55                   	push   %rbp
    1b79:	53                   	push   %rbx
    1b7a:	48 83 ec 08          	sub    $0x8,%rsp
    1b7e:	0f b7 1f             	movzwl (%rdi),%ebx
    1b81:	84 db                	test   %bl,%bl
    1b83:	79 13                	jns    1b98 <calc_func+0x28>
    1b85:	48 83 c4 08          	add    $0x8,%rsp
    1b89:	89 d8                	mov    %ebx,%eax
    1b8b:	83 e0 7f             	and    $0x7f,%eax
    1b8e:	5b                   	pop    %rbx
    1b8f:	5d                   	pop    %rbp
    1b90:	41 5c                	pop    %r12
    1b92:	41 5d                	pop    %r13
    1b94:	c3                   	retq   
    1b95:	0f 1f 00             	nopl   (%rax)
    1b98:	89 d8                	mov    %ebx,%eax
    1b9a:	48 89 f5             	mov    %rsi,%rbp
    1b9d:	89 da                	mov    %ebx,%edx
    1b9f:	49 89 fc             	mov    %rdi,%r12
    1ba2:	66 c1 f8 03          	sar    $0x3,%ax
    1ba6:	89 c6                	mov    %eax,%esi
    1ba8:	83 e0 0f             	and    $0xf,%eax
    1bab:	83 e6 0f             	and    $0xf,%esi
    1bae:	c1 e0 04             	shl    $0x4,%eax
    1bb1:	09 f0                	or     %esi,%eax
    1bb3:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1bb7:	66 83 e2 07          	and    $0x7,%dx
    1bbb:	74 63                	je     1c20 <calc_func+0xb0>
    1bbd:	66 83 fa 01          	cmp    $0x1,%dx
    1bc1:	75 2d                	jne    1bf0 <calc_func+0x80>
    1bc3:	44 0f bf c0          	movswl %ax,%r8d
    1bc7:	89 f2                	mov    %esi,%edx
    1bc9:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    1bcd:	44 89 c6             	mov    %r8d,%esi
    1bd0:	e8 db 0e 00 00       	callq  2ab0 <core_bench_matrix>
    1bd5:	66 83 7d 64 00       	cmpw   $0x0,0x64(%rbp)
    1bda:	41 89 c5             	mov    %eax,%r13d
    1bdd:	75 04                	jne    1be3 <calc_func+0x73>
    1bdf:	66 89 45 64          	mov    %ax,0x64(%rbp)
    1be3:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1be7:	eb 0c                	jmp    1bf5 <calc_func+0x85>
    1be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1bf0:	89 d8                	mov    %ebx,%eax
    1bf2:	41 89 dd             	mov    %ebx,%r13d
    1bf5:	0f b7 f8             	movzwl %ax,%edi
    1bf8:	30 db                	xor    %bl,%bl
    1bfa:	e8 91 15 00 00       	callq  3190 <crcu16>
    1bff:	66 89 45 60          	mov    %ax,0x60(%rbp)
    1c03:	44 89 e8             	mov    %r13d,%eax
    1c06:	83 e0 7f             	and    $0x7f,%eax
    1c09:	09 c3                	or     %eax,%ebx
    1c0b:	80 cb 80             	or     $0x80,%bl
    1c0e:	66 41 89 1c 24       	mov    %bx,(%r12)
    1c13:	48 83 c4 08          	add    $0x8,%rsp
    1c17:	5b                   	pop    %rbx
    1c18:	5d                   	pop    %rbp
    1c19:	41 5c                	pop    %r12
    1c1b:	41 5d                	pop    %r13
    1c1d:	c3                   	retq   
    1c1e:	66 90                	xchg   %ax,%ax
    1c20:	66 83 f8 22          	cmp    $0x22,%ax
    1c24:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1c2a:	8b 7d 28             	mov    0x28(%rbp),%edi
    1c2d:	41 89 f1             	mov    %esi,%r9d
    1c30:	44 0f 4d c0          	cmovge %eax,%r8d
    1c34:	4c 8b 55 20          	mov    0x20(%rbp),%r10
    1c38:	0f bf 4d 02          	movswl 0x2(%rbp),%ecx
    1c3c:	0f bf 55 00          	movswl 0x0(%rbp),%edx
    1c40:	45 0f bf c0          	movswl %r8w,%r8d
    1c44:	4c 89 d6             	mov    %r10,%rsi
    1c47:	e8 e4 12 00 00       	callq  2f30 <core_bench_state>
    1c4c:	66 83 7d 66 00       	cmpw   $0x0,0x66(%rbp)
    1c51:	41 89 c5             	mov    %eax,%r13d
    1c54:	75 8d                	jne    1be3 <calc_func+0x73>
    1c56:	66 89 45 66          	mov    %ax,0x66(%rbp)
    1c5a:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1c5e:	eb 95                	jmp    1bf5 <calc_func+0x85>

0000000000001c60 <cmp_complex>:
    1c60:	f3 0f 1e fa          	endbr64 
    1c64:	41 54                	push   %r12
    1c66:	49 89 f4             	mov    %rsi,%r12
    1c69:	48 89 d6             	mov    %rdx,%rsi
    1c6c:	55                   	push   %rbp
    1c6d:	48 89 d5             	mov    %rdx,%rbp
    1c70:	53                   	push   %rbx
    1c71:	e8 fa fe ff ff       	callq  1b70 <calc_func>
    1c76:	48 89 ee             	mov    %rbp,%rsi
    1c79:	4c 89 e7             	mov    %r12,%rdi
    1c7c:	89 c3                	mov    %eax,%ebx
    1c7e:	e8 ed fe ff ff       	callq  1b70 <calc_func>
    1c83:	0f bf d0             	movswl %ax,%edx
    1c86:	0f bf c3             	movswl %bx,%eax
    1c89:	5b                   	pop    %rbx
    1c8a:	5d                   	pop    %rbp
    1c8b:	29 d0                	sub    %edx,%eax
    1c8d:	41 5c                	pop    %r12
    1c8f:	c3                   	retq   

0000000000001c90 <copy_info>:
    1c90:	f3 0f 1e fa          	endbr64 
    1c94:	0f b7 06             	movzwl (%rsi),%eax
    1c97:	66 89 07             	mov    %ax,(%rdi)
    1c9a:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
    1c9e:	66 89 47 02          	mov    %ax,0x2(%rdi)
    1ca2:	c3                   	retq   
    1ca3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1caa:	00 00 00 00 
    1cae:	66 90                	xchg   %ax,%ax

0000000000001cb0 <core_list_insert_new>:
    1cb0:	f3 0f 1e fa          	endbr64 
    1cb4:	48 8b 02             	mov    (%rdx),%rax
    1cb7:	4c 8d 50 10          	lea    0x10(%rax),%r10
    1cbb:	4d 39 c2             	cmp    %r8,%r10
    1cbe:	73 38                	jae    1cf8 <core_list_insert_new+0x48>
    1cc0:	4c 8b 01             	mov    (%rcx),%r8
    1cc3:	4d 8d 58 04          	lea    0x4(%r8),%r11
    1cc7:	4d 39 d9             	cmp    %r11,%r9
    1cca:	76 2c                	jbe    1cf8 <core_list_insert_new+0x48>
    1ccc:	4c 89 12             	mov    %r10,(%rdx)
    1ccf:	48 8b 17             	mov    (%rdi),%rdx
    1cd2:	48 89 10             	mov    %rdx,(%rax)
    1cd5:	48 89 07             	mov    %rax,(%rdi)
    1cd8:	4c 89 40 08          	mov    %r8,0x8(%rax)
    1cdc:	48 83 01 04          	addq   $0x4,(%rcx)
    1ce0:	0f b7 0e             	movzwl (%rsi),%ecx
    1ce3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1ce7:	66 89 0a             	mov    %cx,(%rdx)
    1cea:	0f b7 4e 02          	movzwl 0x2(%rsi),%ecx
    1cee:	66 89 4a 02          	mov    %cx,0x2(%rdx)
    1cf2:	c3                   	retq   
    1cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1cf8:	31 c0                	xor    %eax,%eax
    1cfa:	c3                   	retq   
    1cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001d00 <core_list_remove>:
    1d00:	f3 0f 1e fa          	endbr64 
    1d04:	48 8b 07             	mov    (%rdi),%rax
    1d07:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    1d0b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1d0f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    1d13:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1d17:	48 8b 10             	mov    (%rax),%rdx
    1d1a:	48 89 17             	mov    %rdx,(%rdi)
    1d1d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1d24:	c3                   	retq   
    1d25:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1d2c:	00 00 00 00 

0000000000001d30 <core_list_undo_remove>:
    1d30:	f3 0f 1e fa          	endbr64 
    1d34:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    1d38:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1d3c:	48 89 f8             	mov    %rdi,%rax
    1d3f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    1d43:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    1d47:	48 8b 16             	mov    (%rsi),%rdx
    1d4a:	48 89 17             	mov    %rdx,(%rdi)
    1d4d:	48 89 3e             	mov    %rdi,(%rsi)
    1d50:	c3                   	retq   
    1d51:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1d58:	00 00 00 00 
    1d5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001d60 <core_list_find>:
    1d60:	f3 0f 1e fa          	endbr64 
    1d64:	0f b7 56 02          	movzwl 0x2(%rsi),%edx
    1d68:	66 85 d2             	test   %dx,%dx
    1d6b:	79 10                	jns    1d7d <core_list_find+0x1d>
    1d6d:	eb 19                	jmp    1d88 <core_list_find+0x28>
    1d6f:	90                   	nop
    1d70:	48 8b 47 08          	mov    0x8(%rdi),%rax
    1d74:	66 3b 50 02          	cmp    0x2(%rax),%dx
    1d78:	74 36                	je     1db0 <core_list_find+0x50>
    1d7a:	48 8b 3f             	mov    (%rdi),%rdi
    1d7d:	48 85 ff             	test   %rdi,%rdi
    1d80:	75 ee                	jne    1d70 <core_list_find+0x10>
    1d82:	31 c0                	xor    %eax,%eax
    1d84:	c3                   	retq   
    1d85:	0f 1f 00             	nopl   (%rax)
    1d88:	48 85 ff             	test   %rdi,%rdi
    1d8b:	74 f5                	je     1d82 <core_list_find+0x22>
    1d8d:	0f b7 0e             	movzwl (%rsi),%ecx
    1d90:	48 89 f8             	mov    %rdi,%rax
    1d93:	eb 0b                	jmp    1da0 <core_list_find+0x40>
    1d95:	0f 1f 00             	nopl   (%rax)
    1d98:	48 8b 00             	mov    (%rax),%rax
    1d9b:	48 85 c0             	test   %rax,%rax
    1d9e:	74 e4                	je     1d84 <core_list_find+0x24>
    1da0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1da4:	0f b6 12             	movzbl (%rdx),%edx
    1da7:	66 39 ca             	cmp    %cx,%dx
    1daa:	75 ec                	jne    1d98 <core_list_find+0x38>
    1dac:	c3                   	retq   
    1dad:	0f 1f 00             	nopl   (%rax)
    1db0:	48 89 f8             	mov    %rdi,%rax
    1db3:	c3                   	retq   
    1db4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1dbb:	00 00 00 00 
    1dbf:	90                   	nop

0000000000001dc0 <core_list_reverse>:
    1dc0:	f3 0f 1e fa          	endbr64 
    1dc4:	48 89 f8             	mov    %rdi,%rax
    1dc7:	48 85 ff             	test   %rdi,%rdi
    1dca:	74 15                	je     1de1 <core_list_reverse+0x21>
    1dcc:	31 c9                	xor    %ecx,%ecx
    1dce:	eb 03                	jmp    1dd3 <core_list_reverse+0x13>
    1dd0:	48 89 d0             	mov    %rdx,%rax
    1dd3:	48 8b 10             	mov    (%rax),%rdx
    1dd6:	48 89 08             	mov    %rcx,(%rax)
    1dd9:	48 89 c1             	mov    %rax,%rcx
    1ddc:	48 85 d2             	test   %rdx,%rdx
    1ddf:	75 ef                	jne    1dd0 <core_list_reverse+0x10>
    1de1:	c3                   	retq   
    1de2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1de9:	00 00 00 00 
    1ded:	0f 1f 00             	nopl   (%rax)

0000000000001df0 <core_list_mergesort>:
    1df0:	f3 0f 1e fa          	endbr64 
    1df4:	41 57                	push   %r15
    1df6:	41 56                	push   %r14
    1df8:	41 55                	push   %r13
    1dfa:	49 89 d5             	mov    %rdx,%r13
    1dfd:	41 54                	push   %r12
    1dff:	55                   	push   %rbp
    1e00:	53                   	push   %rbx
    1e01:	48 89 fb             	mov    %rdi,%rbx
    1e04:	48 83 ec 28          	sub    $0x28,%rsp
    1e08:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    1e0d:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%rsp)
    1e14:	00 
    1e15:	48 85 db             	test   %rbx,%rbx
    1e18:	0f 84 fd 00 00 00    	je     1f1b <core_list_mergesort+0x12b>
    1e1e:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    1e25:	00 
    1e26:	45 31 ff             	xor    %r15d,%r15d
    1e29:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    1e30:	00 00 
    1e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e38:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    1e3d:	48 89 d8             	mov    %rbx,%rax
    1e40:	45 31 f6             	xor    %r14d,%r14d
    1e43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1e48:	48 8b 00             	mov    (%rax),%rax
    1e4b:	41 83 c6 01          	add    $0x1,%r14d
    1e4f:	48 85 c0             	test   %rax,%rax
    1e52:	74 07                	je     1e5b <core_list_mergesort+0x6b>
    1e54:	44 39 74 24 18       	cmp    %r14d,0x18(%rsp)
    1e59:	75 ed                	jne    1e48 <core_list_mergesort+0x58>
    1e5b:	49 89 dc             	mov    %rbx,%r12
    1e5e:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
    1e62:	48 89 c3             	mov    %rax,%rbx
    1e65:	eb 3d                	jmp    1ea4 <core_list_mergesort+0xb4>
    1e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1e6e:	00 00 
    1e70:	85 ed                	test   %ebp,%ebp
    1e72:	74 5c                	je     1ed0 <core_list_mergesort+0xe0>
    1e74:	48 85 db             	test   %rbx,%rbx
    1e77:	74 57                	je     1ed0 <core_list_mergesort+0xe0>
    1e79:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    1e7d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    1e82:	4c 89 ea             	mov    %r13,%rdx
    1e85:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1e8a:	ff d0                	callq  *%rax
    1e8c:	85 c0                	test   %eax,%eax
    1e8e:	7e 40                	jle    1ed0 <core_list_mergesort+0xe0>
    1e90:	48 89 d8             	mov    %rbx,%rax
    1e93:	83 ed 01             	sub    $0x1,%ebp
    1e96:	48 8b 1b             	mov    (%rbx),%rbx
    1e99:	4d 85 ff             	test   %r15,%r15
    1e9c:	74 42                	je     1ee0 <core_list_mergesort+0xf0>
    1e9e:	49 89 07             	mov    %rax,(%r15)
    1ea1:	49 89 c7             	mov    %rax,%r15
    1ea4:	45 85 f6             	test   %r14d,%r14d
    1ea7:	75 c7                	jne    1e70 <core_list_mergesort+0x80>
    1ea9:	85 ed                	test   %ebp,%ebp
    1eab:	7e 43                	jle    1ef0 <core_list_mergesort+0x100>
    1ead:	48 85 db             	test   %rbx,%rbx
    1eb0:	75 de                	jne    1e90 <core_list_mergesort+0xa0>
    1eb2:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    1eb7:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    1ebe:	74 47                	je     1f07 <core_list_mergesort+0x117>
    1ec0:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    1ec5:	d1 64 24 18          	shll   0x18(%rsp)
    1ec9:	e9 47 ff ff ff       	jmpq   1e15 <core_list_mergesort+0x25>
    1ece:	66 90                	xchg   %ax,%ax
    1ed0:	4c 89 e0             	mov    %r12,%rax
    1ed3:	41 83 ee 01          	sub    $0x1,%r14d
    1ed7:	4d 8b 24 24          	mov    (%r12),%r12
    1edb:	4d 85 ff             	test   %r15,%r15
    1ede:	75 be                	jne    1e9e <core_list_mergesort+0xae>
    1ee0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1ee5:	eb ba                	jmp    1ea1 <core_list_mergesort+0xb1>
    1ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1eee:	00 00 
    1ef0:	48 85 db             	test   %rbx,%rbx
    1ef3:	0f 85 3f ff ff ff    	jne    1e38 <core_list_mergesort+0x48>
    1ef9:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    1efe:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    1f05:	75 b9                	jne    1ec0 <core_list_mergesort+0xd0>
    1f07:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1f0c:	48 83 c4 28          	add    $0x28,%rsp
    1f10:	5b                   	pop    %rbx
    1f11:	5d                   	pop    %rbp
    1f12:	41 5c                	pop    %r12
    1f14:	41 5d                	pop    %r13
    1f16:	41 5e                	pop    %r14
    1f18:	41 5f                	pop    %r15
    1f1a:	c3                   	retq   
    1f1b:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    1f22:	00 00 00 00 00 
    1f27:	0f 0b                	ud2    
    1f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001f30 <core_bench_list>:
    1f30:	f3 0f 1e fa          	endbr64 
    1f34:	41 57                	push   %r15
    1f36:	41 89 f3             	mov    %esi,%r11d
    1f39:	41 56                	push   %r14
    1f3b:	49 89 fe             	mov    %rdi,%r14
    1f3e:	41 55                	push   %r13
    1f40:	41 54                	push   %r12
    1f42:	55                   	push   %rbp
    1f43:	53                   	push   %rbx
    1f44:	48 83 ec 18          	sub    $0x18,%rsp
    1f48:	44 0f b7 57 04       	movzwl 0x4(%rdi),%r10d
    1f4d:	48 8b 6f 38          	mov    0x38(%rdi),%rbp
    1f51:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1f58:	00 00 
    1f5a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1f5f:	31 c0                	xor    %eax,%eax
    1f61:	31 c0                	xor    %eax,%eax
    1f63:	66 89 74 24 06       	mov    %si,0x6(%rsp)
    1f68:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
    1f6d:	66 45 85 d2          	test   %r10w,%r10w
    1f71:	0f 8e d0 01 00 00    	jle    2147 <core_bench_list+0x217>
    1f77:	41 89 f7             	mov    %esi,%r15d
    1f7a:	45 31 e4             	xor    %r12d,%r12d
    1f7d:	31 db                	xor    %ebx,%ebx
    1f7f:	45 31 c0             	xor    %r8d,%r8d
    1f82:	45 31 c9             	xor    %r9d,%r9d
    1f85:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    1f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1f90:	41 0f b6 c4          	movzbl %r12b,%eax
    1f94:	4c 89 ee             	mov    %r13,%rsi
    1f97:	48 89 ef             	mov    %rbp,%rdi
    1f9a:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
    1f9f:	e8 bc fd ff ff       	callq  1d60 <core_list_find>
    1fa4:	48 85 ed             	test   %rbp,%rbp
    1fa7:	74 1a                	je     1fc3 <core_bench_list+0x93>
    1fa9:	31 c9                	xor    %ecx,%ecx
    1fab:	eb 06                	jmp    1fb3 <core_bench_list+0x83>
    1fad:	0f 1f 00             	nopl   (%rax)
    1fb0:	48 89 d5             	mov    %rdx,%rbp
    1fb3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    1fb7:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    1fbb:	48 89 e9             	mov    %rbp,%rcx
    1fbe:	48 85 d2             	test   %rdx,%rdx
    1fc1:	75 ed                	jne    1fb0 <core_bench_list+0x80>
    1fc3:	48 85 c0             	test   %rax,%rax
    1fc6:	74 58                	je     2020 <core_bench_list+0xf0>
    1fc8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1fcc:	41 83 c0 01          	add    $0x1,%r8d
    1fd0:	0f b7 12             	movzwl (%rdx),%edx
    1fd3:	f6 c2 01             	test   $0x1,%dl
    1fd6:	74 0a                	je     1fe2 <core_bench_list+0xb2>
    1fd8:	66 c1 fa 09          	sar    $0x9,%dx
    1fdc:	83 e2 01             	and    $0x1,%edx
    1fdf:	41 01 d1             	add    %edx,%r9d
    1fe2:	48 8b 10             	mov    (%rax),%rdx
    1fe5:	48 85 d2             	test   %rdx,%rdx
    1fe8:	74 11                	je     1ffb <core_bench_list+0xcb>
    1fea:	48 8b 0a             	mov    (%rdx),%rcx
    1fed:	48 89 08             	mov    %rcx,(%rax)
    1ff0:	48 8b 45 00          	mov    0x0(%rbp),%rax
    1ff4:	48 89 02             	mov    %rax,(%rdx)
    1ff7:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    1ffb:	66 45 85 ff          	test   %r15w,%r15w
    1fff:	78 0a                	js     200b <core_bench_list+0xdb>
    2001:	41 83 c7 01          	add    $0x1,%r15d
    2005:	66 44 89 7c 24 06    	mov    %r15w,0x6(%rsp)
    200b:	41 83 c4 01          	add    $0x1,%r12d
    200f:	66 45 39 e2          	cmp    %r12w,%r10w
    2013:	74 2b                	je     2040 <core_bench_list+0x110>
    2015:	44 0f b7 7c 24 06    	movzwl 0x6(%rsp),%r15d
    201b:	e9 70 ff ff ff       	jmpq   1f90 <core_bench_list+0x60>
    2020:	48 8b 45 00          	mov    0x0(%rbp),%rax
    2024:	83 c3 01             	add    $0x1,%ebx
    2027:	48 8b 40 08          	mov    0x8(%rax),%rax
    202b:	0f b7 00             	movzwl (%rax),%eax
    202e:	66 c1 f8 08          	sar    $0x8,%ax
    2032:	83 e0 01             	and    $0x1,%eax
    2035:	41 01 c1             	add    %eax,%r9d
    2038:	eb c1                	jmp    1ffb <core_bench_list+0xcb>
    203a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2040:	47 8d 24 81          	lea    (%r9,%r8,4),%r12d
    2044:	41 29 dc             	sub    %ebx,%r12d
    2047:	66 45 85 db          	test   %r11w,%r11w
    204b:	7e 15                	jle    2062 <core_bench_list+0x132>
    204d:	48 89 ef             	mov    %rbp,%rdi
    2050:	4c 89 f2             	mov    %r14,%rdx
    2053:	48 8d 35 06 fc ff ff 	lea    -0x3fa(%rip),%rsi        # 1c60 <cmp_complex>
    205a:	e8 91 fd ff ff       	callq  1df0 <core_list_mergesort>
    205f:	48 89 c5             	mov    %rax,%rbp
    2062:	48 8b 45 00          	mov    0x0(%rbp),%rax
    2066:	4c 89 ee             	mov    %r13,%rsi
    2069:	48 89 ef             	mov    %rbp,%rdi
    206c:	4c 8b 30             	mov    (%rax),%r14
    206f:	4c 8b 40 08          	mov    0x8(%rax),%r8
    2073:	49 8b 56 08          	mov    0x8(%r14),%rdx
    2077:	48 89 50 08          	mov    %rdx,0x8(%rax)
    207b:	49 8b 16             	mov    (%r14),%rdx
    207e:	4d 89 46 08          	mov    %r8,0x8(%r14)
    2082:	48 89 10             	mov    %rdx,(%rax)
    2085:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    208c:	e8 cf fc ff ff       	callq  1d60 <core_list_find>
    2091:	48 89 c3             	mov    %rax,%rbx
    2094:	48 85 c0             	test   %rax,%rax
    2097:	0f 84 98 00 00 00    	je     2135 <core_bench_list+0x205>
    209d:	0f 1f 00             	nopl   (%rax)
    20a0:	48 8b 45 08          	mov    0x8(%rbp),%rax
    20a4:	41 0f b7 f4          	movzwl %r12w,%esi
    20a8:	0f bf 38             	movswl (%rax),%edi
    20ab:	e8 60 11 00 00       	callq  3210 <crc16>
    20b0:	48 8b 1b             	mov    (%rbx),%rbx
    20b3:	41 89 c4             	mov    %eax,%r12d
    20b6:	48 85 db             	test   %rbx,%rbx
    20b9:	75 e5                	jne    20a0 <core_bench_list+0x170>
    20bb:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
    20bf:	4d 8b 46 08          	mov    0x8(%r14),%r8
    20c3:	48 8b 43 08          	mov    0x8(%rbx),%rax
    20c7:	48 89 ef             	mov    %rbp,%rdi
    20ca:	31 d2                	xor    %edx,%edx
    20cc:	48 8d 35 4d fa ff ff 	lea    -0x5b3(%rip),%rsi        # 1b20 <cmp_idx>
    20d3:	49 89 46 08          	mov    %rax,0x8(%r14)
    20d7:	48 8b 03             	mov    (%rbx),%rax
    20da:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    20de:	49 89 06             	mov    %rax,(%r14)
    20e1:	4c 89 33             	mov    %r14,(%rbx)
    20e4:	e8 07 fd ff ff       	callq  1df0 <core_list_mergesort>
    20e9:	48 8b 18             	mov    (%rax),%rbx
    20ec:	48 89 c5             	mov    %rax,%rbp
    20ef:	48 85 db             	test   %rbx,%rbx
    20f2:	74 1f                	je     2113 <core_bench_list+0x1e3>
    20f4:	0f 1f 40 00          	nopl   0x0(%rax)
    20f8:	48 8b 45 08          	mov    0x8(%rbp),%rax
    20fc:	41 0f b7 f4          	movzwl %r12w,%esi
    2100:	0f bf 38             	movswl (%rax),%edi
    2103:	e8 08 11 00 00       	callq  3210 <crc16>
    2108:	48 8b 1b             	mov    (%rbx),%rbx
    210b:	41 89 c4             	mov    %eax,%r12d
    210e:	48 85 db             	test   %rbx,%rbx
    2111:	75 e5                	jne    20f8 <core_bench_list+0x1c8>
    2113:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2118:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    211f:	00 00 
    2121:	75 31                	jne    2154 <core_bench_list+0x224>
    2123:	48 83 c4 18          	add    $0x18,%rsp
    2127:	44 89 e0             	mov    %r12d,%eax
    212a:	5b                   	pop    %rbx
    212b:	5d                   	pop    %rbp
    212c:	41 5c                	pop    %r12
    212e:	41 5d                	pop    %r13
    2130:	41 5e                	pop    %r14
    2132:	41 5f                	pop    %r15
    2134:	c3                   	retq   
    2135:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
    2139:	48 85 db             	test   %rbx,%rbx
    213c:	0f 85 5e ff ff ff    	jne    20a0 <core_bench_list+0x170>
    2142:	e9 7c ff ff ff       	jmpq   20c3 <core_bench_list+0x193>
    2147:	45 31 e4             	xor    %r12d,%r12d
    214a:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    214f:	e9 f3 fe ff ff       	jmpq   2047 <core_bench_list+0x117>
    2154:	e8 97 ef ff ff       	callq  10f0 <__stack_chk_fail@plt>
    2159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002160 <core_list_init>:
    2160:	f3 0f 1e fa          	endbr64 
    2164:	41 89 fb             	mov    %edi,%r11d
    2167:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
    216c:	41 57                	push   %r15
    216e:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    2172:	4c 0f af df          	imul   %rdi,%r11
    2176:	41 56                	push   %r14
    2178:	4c 8d 4e 10          	lea    0x10(%rsi),%r9
    217c:	41 89 d6             	mov    %edx,%r14d
    217f:	41 55                	push   %r13
    2181:	41 54                	push   %r12
    2183:	49 c1 eb 24          	shr    $0x24,%r11
    2187:	55                   	push   %rbp
    2188:	48 89 f5             	mov    %rsi,%rbp
    218b:	45 8d 63 fe          	lea    -0x2(%r11),%r12d
    218f:	53                   	push   %rbx
    2190:	4c 89 e3             	mov    %r12,%rbx
    2193:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    219a:	4d 89 e3             	mov    %r12,%r11
    219d:	48 c1 e3 04          	shl    $0x4,%rbx
    21a1:	48 01 f3             	add    %rsi,%rbx
    21a4:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    21a8:	4e 8d 2c a3          	lea    (%rbx,%r12,4),%r13
    21ac:	48 8d 43 04          	lea    0x4(%rbx),%rax
    21b0:	c7 03 80 80 00 00    	movl   $0x8080,(%rbx)
    21b6:	48 39 cb             	cmp    %rcx,%rbx
    21b9:	0f 86 11 01 00 00    	jbe    22d0 <core_list_init+0x170>
    21bf:	4c 8d 43 08          	lea    0x8(%rbx),%r8
    21c3:	4d 39 c5             	cmp    %r8,%r13
    21c6:	0f 86 04 01 00 00    	jbe    22d0 <core_list_init+0x170>
    21cc:	48 c7 46 10 00 00 00 	movq   $0x0,0x10(%rsi)
    21d3:	00 
    21d4:	4c 89 0e             	mov    %r9,(%rsi)
    21d7:	48 89 46 18          	mov    %rax,0x18(%rsi)
    21db:	c7 43 04 ff ff ff 7f 	movl   $0x7fffffff,0x4(%rbx)
    21e2:	45 85 db             	test   %r11d,%r11d
    21e5:	74 63                	je     224a <core_list_init+0xea>
    21e7:	31 f6                	xor    %esi,%esi
    21e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    21f0:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    21f4:	4c 39 d3             	cmp    %r10,%rbx
    21f7:	76 49                	jbe    2242 <core_list_init+0xe2>
    21f9:	49 8d 78 04          	lea    0x4(%r8),%rdi
    21fd:	49 39 fd             	cmp    %rdi,%r13
    2200:	76 40                	jbe    2242 <core_list_init+0xe2>
    2202:	89 d0                	mov    %edx,%eax
    2204:	41 89 f7             	mov    %esi,%r15d
    2207:	4c 89 09             	mov    %r9,(%rcx)
    220a:	31 f0                	xor    %esi,%eax
    220c:	41 83 e7 07          	and    $0x7,%r15d
    2210:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    2214:	c1 e0 03             	shl    $0x3,%eax
    2217:	4c 89 41 08          	mov    %r8,0x8(%rcx)
    221b:	83 e0 78             	and    $0x78,%eax
    221e:	44 09 f8             	or     %r15d,%eax
    2221:	41 89 c1             	mov    %eax,%r9d
    2224:	41 c1 e1 08          	shl    $0x8,%r9d
    2228:	44 09 c8             	or     %r9d,%eax
    222b:	49 89 c9             	mov    %rcx,%r9
    222e:	4c 89 d1             	mov    %r10,%rcx
    2231:	66 41 89 00          	mov    %ax,(%r8)
    2235:	b8 ff 7f 00 00       	mov    $0x7fff,%eax
    223a:	66 41 89 40 02       	mov    %ax,0x2(%r8)
    223f:	49 89 f8             	mov    %rdi,%r8
    2242:	83 c6 01             	add    $0x1,%esi
    2245:	41 39 f3             	cmp    %esi,%r11d
    2248:	75 a6                	jne    21f0 <core_list_init+0x90>
    224a:	49 8b 09             	mov    (%r9),%rcx
    224d:	48 85 c9             	test   %rcx,%rcx
    2250:	74 63                	je     22b5 <core_list_init+0x155>
    2252:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
    2257:	ba 01 00 00 00       	mov    $0x1,%edx
    225c:	4c 0f af e0          	imul   %rax,%r12
    2260:	49 c1 ec 22          	shr    $0x22,%r12
    2264:	eb 1f                	jmp    2285 <core_list_init+0x125>
    2266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    226d:	00 00 00 
    2270:	48 8b 01             	mov    (%rcx),%rax
    2273:	66 89 56 02          	mov    %dx,0x2(%rsi)
    2277:	49 89 c9             	mov    %rcx,%r9
    227a:	83 c2 01             	add    $0x1,%edx
    227d:	48 85 c0             	test   %rax,%rax
    2280:	74 33                	je     22b5 <core_list_init+0x155>
    2282:	48 89 c1             	mov    %rax,%rcx
    2285:	49 8b 71 08          	mov    0x8(%r9),%rsi
    2289:	41 39 d4             	cmp    %edx,%r12d
    228c:	77 e2                	ja     2270 <core_list_init+0x110>
    228e:	8d 42 01             	lea    0x1(%rdx),%eax
    2291:	44 89 f7             	mov    %r14d,%edi
    2294:	49 89 c9             	mov    %rcx,%r9
    2297:	c1 e0 08             	shl    $0x8,%eax
    229a:	31 d7                	xor    %edx,%edi
    229c:	83 c2 01             	add    $0x1,%edx
    229f:	66 25 00 07          	and    $0x700,%ax
    22a3:	09 f8                	or     %edi,%eax
    22a5:	66 25 ff 3f          	and    $0x3fff,%ax
    22a9:	66 89 46 02          	mov    %ax,0x2(%rsi)
    22ad:	48 8b 01             	mov    (%rcx),%rax
    22b0:	48 85 c0             	test   %rax,%rax
    22b3:	75 cd                	jne    2282 <core_list_init+0x122>
    22b5:	5b                   	pop    %rbx
    22b6:	48 89 ef             	mov    %rbp,%rdi
    22b9:	31 d2                	xor    %edx,%edx
    22bb:	5d                   	pop    %rbp
    22bc:	48 8d 35 5d f8 ff ff 	lea    -0x7a3(%rip),%rsi        # 1b20 <cmp_idx>
    22c3:	41 5c                	pop    %r12
    22c5:	41 5d                	pop    %r13
    22c7:	41 5e                	pop    %r14
    22c9:	41 5f                	pop    %r15
    22cb:	e9 20 fb ff ff       	jmpq   1df0 <core_list_mergesort>
    22d0:	4c 89 c9             	mov    %r9,%rcx
    22d3:	49 89 c0             	mov    %rax,%r8
    22d6:	45 31 c9             	xor    %r9d,%r9d
    22d9:	e9 04 ff ff ff       	jmpq   21e2 <core_list_init+0x82>
    22de:	66 90                	xchg   %ax,%ax

00000000000022e0 <iterate>:
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	41 54                	push   %r12
    22e6:	55                   	push   %rbp
    22e7:	53                   	push   %rbx
    22e8:	44 8b 67 2c          	mov    0x2c(%rdi),%r12d
    22ec:	48 c7 47 60 00 00 00 	movq   $0x0,0x60(%rdi)
    22f3:	00 
    22f4:	45 85 e4             	test   %r12d,%r12d
    22f7:	74 51                	je     234a <iterate+0x6a>
    22f9:	48 89 fb             	mov    %rdi,%rbx
    22fc:	31 ed                	xor    %ebp,%ebp
    22fe:	66 90                	xchg   %ax,%ax
    2300:	be 01 00 00 00       	mov    $0x1,%esi
    2305:	48 89 df             	mov    %rbx,%rdi
    2308:	e8 23 fc ff ff       	callq  1f30 <core_bench_list>
    230d:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    2311:	0f b7 f8             	movzwl %ax,%edi
    2314:	e8 77 0e 00 00       	callq  3190 <crcu16>
    2319:	be ff ff ff ff       	mov    $0xffffffff,%esi
    231e:	48 89 df             	mov    %rbx,%rdi
    2321:	66 89 43 60          	mov    %ax,0x60(%rbx)
    2325:	e8 06 fc ff ff       	callq  1f30 <core_bench_list>
    232a:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    232e:	0f b7 f8             	movzwl %ax,%edi
    2331:	e8 5a 0e 00 00       	callq  3190 <crcu16>
    2336:	66 89 43 60          	mov    %ax,0x60(%rbx)
    233a:	85 ed                	test   %ebp,%ebp
    233c:	75 04                	jne    2342 <iterate+0x62>
    233e:	66 89 43 62          	mov    %ax,0x62(%rbx)
    2342:	83 c5 01             	add    $0x1,%ebp
    2345:	41 39 ec             	cmp    %ebp,%r12d
    2348:	75 b6                	jne    2300 <iterate+0x20>
    234a:	5b                   	pop    %rbx
    234b:	31 c0                	xor    %eax,%eax
    234d:	5d                   	pop    %rbp
    234e:	41 5c                	pop    %r12
    2350:	c3                   	retq   
    2351:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2358:	00 00 00 
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002360 <core_init_matrix>:
    2360:	f3 0f 1e fa          	endbr64 
    2364:	85 d2                	test   %edx,%edx
    2366:	b8 01 00 00 00       	mov    $0x1,%eax
    236b:	4c 8d 56 ff          	lea    -0x1(%rsi),%r10
    236f:	41 57                	push   %r15
    2371:	0f 44 d0             	cmove  %eax,%edx
    2374:	49 83 e2 fc          	and    $0xfffffffffffffffc,%r10
    2378:	41 56                	push   %r14
    237a:	49 89 cf             	mov    %rcx,%r15
    237d:	41 55                	push   %r13
    237f:	49 8d 4a 04          	lea    0x4(%r10),%rcx
    2383:	41 54                	push   %r12
    2385:	55                   	push   %rbp
    2386:	53                   	push   %rbx
    2387:	85 ff                	test   %edi,%edi
    2389:	0f 84 e1 00 00 00    	je     2470 <core_init_matrix+0x110>
    238f:	31 c0                	xor    %eax,%eax
    2391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2398:	41 89 c1             	mov    %eax,%r9d
    239b:	8d 40 01             	lea    0x1(%rax),%eax
    239e:	89 c6                	mov    %eax,%esi
    23a0:	0f af f0             	imul   %eax,%esi
    23a3:	c1 e6 03             	shl    $0x3,%esi
    23a6:	39 f7                	cmp    %esi,%edi
    23a8:	77 ee                	ja     2398 <core_init_matrix+0x38>
    23aa:	44 89 c8             	mov    %r9d,%eax
    23ad:	44 89 4c 24 f4       	mov    %r9d,-0xc(%rsp)
    23b2:	41 0f af c1          	imul   %r9d,%eax
    23b6:	48 01 c0             	add    %rax,%rax
    23b9:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
    23be:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    23c2:	45 85 c9             	test   %r9d,%r9d
    23c5:	74 76                	je     243d <core_init_matrix+0xdd>
    23c7:	45 31 e4             	xor    %r12d,%r12d
    23ca:	31 ed                	xor    %ebp,%ebp
    23cc:	bb 01 00 00 00       	mov    $0x1,%ebx
    23d1:	45 31 ed             	xor    %r13d,%r13d
    23d4:	45 8d 71 ff          	lea    -0x1(%r9),%r14d
    23d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    23df:	00 
    23e0:	45 89 e3             	mov    %r12d,%r11d
    23e3:	89 de                	mov    %ebx,%esi
    23e5:	31 ff                	xor    %edi,%edi
    23e7:	41 29 db             	sub    %ebx,%r11d
    23ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    23f0:	0f af d6             	imul   %esi,%edx
    23f3:	45 8d 04 33          	lea    (%r11,%rsi,1),%r8d
    23f7:	83 c7 01             	add    $0x1,%edi
    23fa:	89 d0                	mov    %edx,%eax
    23fc:	c1 f8 1f             	sar    $0x1f,%eax
    23ff:	c1 e8 10             	shr    $0x10,%eax
    2402:	01 c2                	add    %eax,%edx
    2404:	0f b7 d2             	movzwl %dx,%edx
    2407:	29 c2                	sub    %eax,%edx
    2409:	8d 04 16             	lea    (%rsi,%rdx,1),%eax
    240c:	66 43 89 04 42       	mov    %ax,(%r10,%r8,2)
    2411:	01 f0                	add    %esi,%eax
    2413:	83 c6 01             	add    $0x1,%esi
    2416:	66 25 ff 00          	and    $0xff,%ax
    241a:	66 42 89 04 41       	mov    %ax,(%rcx,%r8,2)
    241f:	44 39 cf             	cmp    %r9d,%edi
    2422:	72 cc                	jb     23f0 <core_init_matrix+0x90>
    2424:	45 85 c9             	test   %r9d,%r9d
    2427:	44 89 e8             	mov    %r13d,%eax
    242a:	41 0f 45 c6          	cmovne %r14d,%eax
    242e:	83 c5 01             	add    $0x1,%ebp
    2431:	45 01 cc             	add    %r9d,%r12d
    2434:	8d 5c 03 01          	lea    0x1(%rbx,%rax,1),%ebx
    2438:	44 39 cd             	cmp    %r9d,%ebp
    243b:	72 a3                	jb     23e0 <core_init_matrix+0x80>
    243d:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
    2442:	49 89 4f 08          	mov    %rcx,0x8(%r15)
    2446:	4d 89 57 10          	mov    %r10,0x10(%r15)
    244a:	49 8d 44 02 ff       	lea    -0x1(%r10,%rax,1),%rax
    244f:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    2453:	48 83 c0 04          	add    $0x4,%rax
    2457:	49 89 47 18          	mov    %rax,0x18(%r15)
    245b:	8b 44 24 f4          	mov    -0xc(%rsp),%eax
    245f:	5b                   	pop    %rbx
    2460:	5d                   	pop    %rbp
    2461:	41 89 07             	mov    %eax,(%r15)
    2464:	41 5c                	pop    %r12
    2466:	44 89 c8             	mov    %r9d,%eax
    2469:	41 5d                	pop    %r13
    246b:	41 5e                	pop    %r14
    246d:	41 5f                	pop    %r15
    246f:	c3                   	retq   
    2470:	c7 44 24 f4 ff ff ff 	movl   $0xffffffff,-0xc(%rsp)
    2477:	ff 
    2478:	49 83 c2 06          	add    $0x6,%r10
    247c:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
    2482:	48 c7 44 24 f8 02 00 	movq   $0x2,-0x8(%rsp)
    2489:	00 00 
    248b:	e9 37 ff ff ff       	jmpq   23c7 <core_init_matrix+0x67>

0000000000002490 <matrix_sum>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	85 ff                	test   %edi,%edi
    2496:	74 65                	je     24fd <matrix_sum+0x6d>
    2498:	55                   	push   %rbp
    2499:	44 0f bf da          	movswl %dx,%r11d
    249d:	41 89 fa             	mov    %edi,%r10d
    24a0:	31 ed                	xor    %ebp,%ebp
    24a2:	53                   	push   %rbx
    24a3:	45 31 c0             	xor    %r8d,%r8d
    24a6:	31 db                	xor    %ebx,%ebx
    24a8:	31 c9                	xor    %ecx,%ecx
    24aa:	31 d2                	xor    %edx,%edx
    24ac:	0f 1f 40 00          	nopl   0x0(%rax)
    24b0:	89 e8                	mov    %ebp,%eax
    24b2:	eb 12                	jmp    24c6 <matrix_sum+0x36>
    24b4:	0f 1f 40 00          	nopl   0x0(%rax)
    24b8:	83 c0 01             	add    $0x1,%eax
    24bb:	41 83 c0 0a          	add    $0xa,%r8d
    24bf:	31 d2                	xor    %edx,%edx
    24c1:	41 39 c2             	cmp    %eax,%r10d
    24c4:	74 25                	je     24eb <matrix_sum+0x5b>
    24c6:	41 89 c9             	mov    %ecx,%r9d
    24c9:	89 c1                	mov    %eax,%ecx
    24cb:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
    24ce:	01 ca                	add    %ecx,%edx
    24d0:	41 39 d3             	cmp    %edx,%r11d
    24d3:	7c e3                	jl     24b8 <matrix_sum+0x28>
    24d5:	44 39 c9             	cmp    %r9d,%ecx
    24d8:	41 0f 9f c1          	setg   %r9b
    24dc:	83 c0 01             	add    $0x1,%eax
    24df:	45 0f b6 c9          	movzbl %r9b,%r9d
    24e3:	45 01 c8             	add    %r9d,%r8d
    24e6:	41 39 c2             	cmp    %eax,%r10d
    24e9:	75 db                	jne    24c6 <matrix_sum+0x36>
    24eb:	83 c3 01             	add    $0x1,%ebx
    24ee:	41 01 fa             	add    %edi,%r10d
    24f1:	01 fd                	add    %edi,%ebp
    24f3:	39 df                	cmp    %ebx,%edi
    24f5:	75 b9                	jne    24b0 <matrix_sum+0x20>
    24f7:	44 89 c0             	mov    %r8d,%eax
    24fa:	5b                   	pop    %rbx
    24fb:	5d                   	pop    %rbp
    24fc:	c3                   	retq   
    24fd:	45 31 c0             	xor    %r8d,%r8d
    2500:	44 89 c0             	mov    %r8d,%eax
    2503:	c3                   	retq   
    2504:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    250b:	00 00 00 00 
    250f:	90                   	nop

0000000000002510 <matrix_mul_const>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	85 ff                	test   %edi,%edi
    2516:	74 40                	je     2558 <matrix_mul_const+0x48>
    2518:	53                   	push   %rbx
    2519:	44 0f bf d1          	movswl %cx,%r10d
    251d:	41 89 f9             	mov    %edi,%r9d
    2520:	31 db                	xor    %ebx,%ebx
    2522:	45 31 db             	xor    %r11d,%r11d
    2525:	0f 1f 00             	nopl   (%rax)
    2528:	89 d8                	mov    %ebx,%eax
    252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2530:	41 89 c0             	mov    %eax,%r8d
    2533:	83 c0 01             	add    $0x1,%eax
    2536:	42 0f bf 0c 42       	movswl (%rdx,%r8,2),%ecx
    253b:	41 0f af ca          	imul   %r10d,%ecx
    253f:	42 89 0c 86          	mov    %ecx,(%rsi,%r8,4)
    2543:	41 39 c1             	cmp    %eax,%r9d
    2546:	75 e8                	jne    2530 <matrix_mul_const+0x20>
    2548:	41 83 c3 01          	add    $0x1,%r11d
    254c:	01 fb                	add    %edi,%ebx
    254e:	41 01 f9             	add    %edi,%r9d
    2551:	44 39 df             	cmp    %r11d,%edi
    2554:	75 d2                	jne    2528 <matrix_mul_const+0x18>
    2556:	5b                   	pop    %rbx
    2557:	c3                   	retq   
    2558:	c3                   	retq   
    2559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002560 <matrix_add_const>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	85 ff                	test   %edi,%edi
    2566:	74 34                	je     259c <matrix_add_const+0x3c>
    2568:	41 89 d0             	mov    %edx,%r8d
    256b:	89 f9                	mov    %edi,%ecx
    256d:	45 31 d2             	xor    %r10d,%r10d
    2570:	45 31 c9             	xor    %r9d,%r9d
    2573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2578:	44 89 d0             	mov    %r10d,%eax
    257b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2580:	89 c2                	mov    %eax,%edx
    2582:	83 c0 01             	add    $0x1,%eax
    2585:	66 44 01 04 56       	add    %r8w,(%rsi,%rdx,2)
    258a:	39 c1                	cmp    %eax,%ecx
    258c:	75 f2                	jne    2580 <matrix_add_const+0x20>
    258e:	41 83 c1 01          	add    $0x1,%r9d
    2592:	41 01 fa             	add    %edi,%r10d
    2595:	01 f9                	add    %edi,%ecx
    2597:	44 39 cf             	cmp    %r9d,%edi
    259a:	75 dc                	jne    2578 <matrix_add_const+0x18>
    259c:	c3                   	retq   
    259d:	0f 1f 00             	nopl   (%rax)

00000000000025a0 <matrix_mul_vect>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	85 ff                	test   %edi,%edi
    25a6:	74 5b                	je     2603 <matrix_mul_vect+0x63>
    25a8:	8d 47 ff             	lea    -0x1(%rdi),%eax
    25ab:	41 54                	push   %r12
    25ad:	41 89 fb             	mov    %edi,%r11d
    25b0:	55                   	push   %rbp
    25b1:	4c 8d 64 86 04       	lea    0x4(%rsi,%rax,4),%r12
    25b6:	48 89 cd             	mov    %rcx,%rbp
    25b9:	48 89 f1             	mov    %rsi,%rcx
    25bc:	53                   	push   %rbx
    25bd:	31 db                	xor    %ebx,%ebx
    25bf:	90                   	nop
    25c0:	49 89 e8             	mov    %rbp,%r8
    25c3:	89 d8                	mov    %ebx,%eax
    25c5:	45 31 c9             	xor    %r9d,%r9d
    25c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    25cf:	00 
    25d0:	89 c6                	mov    %eax,%esi
    25d2:	45 0f bf 10          	movswl (%r8),%r10d
    25d6:	83 c0 01             	add    $0x1,%eax
    25d9:	49 83 c0 02          	add    $0x2,%r8
    25dd:	0f bf 34 72          	movswl (%rdx,%rsi,2),%esi
    25e1:	41 0f af f2          	imul   %r10d,%esi
    25e5:	41 01 f1             	add    %esi,%r9d
    25e8:	41 39 c3             	cmp    %eax,%r11d
    25eb:	75 e3                	jne    25d0 <matrix_mul_vect+0x30>
    25ed:	44 89 09             	mov    %r9d,(%rcx)
    25f0:	48 83 c1 04          	add    $0x4,%rcx
    25f4:	01 fb                	add    %edi,%ebx
    25f6:	41 01 fb             	add    %edi,%r11d
    25f9:	49 39 cc             	cmp    %rcx,%r12
    25fc:	75 c2                	jne    25c0 <matrix_mul_vect+0x20>
    25fe:	5b                   	pop    %rbx
    25ff:	5d                   	pop    %rbp
    2600:	41 5c                	pop    %r12
    2602:	c3                   	retq   
    2603:	c3                   	retq   
    2604:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    260b:	00 00 00 00 
    260f:	90                   	nop

0000000000002610 <matrix_mul_matrix>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	85 ff                	test   %edi,%edi
    2616:	0f 84 91 00 00 00    	je     26ad <matrix_mul_matrix+0x9d>
    261c:	41 56                	push   %r14
    261e:	41 89 f8             	mov    %edi,%r8d
    2621:	49 89 d3             	mov    %rdx,%r11
    2624:	49 89 ca             	mov    %rcx,%r10
    2627:	41 55                	push   %r13
    2629:	41 89 f9             	mov    %edi,%r9d
    262c:	45 31 f6             	xor    %r14d,%r14d
    262f:	41 54                	push   %r12
    2631:	49 89 f4             	mov    %rsi,%r12
    2634:	55                   	push   %rbp
    2635:	31 ed                	xor    %ebp,%ebp
    2637:	53                   	push   %rbx
    2638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    263f:	00 
    2640:	31 db                	xor    %ebx,%ebx
    2642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2648:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    264b:	89 d9                	mov    %ebx,%ecx
    264d:	31 f6                	xor    %esi,%esi
    264f:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    2653:	89 e8                	mov    %ebp,%eax
    2655:	0f 1f 00             	nopl   (%rax)
    2658:	89 c2                	mov    %eax,%edx
    265a:	89 cf                	mov    %ecx,%edi
    265c:	83 c0 01             	add    $0x1,%eax
    265f:	44 01 c1             	add    %r8d,%ecx
    2662:	41 0f bf 14 53       	movswl (%r11,%rdx,2),%edx
    2667:	41 0f bf 3c 7a       	movswl (%r10,%rdi,2),%edi
    266c:	0f af d7             	imul   %edi,%edx
    266f:	01 d6                	add    %edx,%esi
    2671:	41 39 c1             	cmp    %eax,%r9d
    2674:	75 e2                	jne    2658 <matrix_mul_matrix+0x48>
    2676:	8d 43 01             	lea    0x1(%rbx),%eax
    2679:	41 89 75 00          	mov    %esi,0x0(%r13)
    267d:	41 39 c0             	cmp    %eax,%r8d
    2680:	74 0e                	je     2690 <matrix_mul_matrix+0x80>
    2682:	89 c3                	mov    %eax,%ebx
    2684:	eb c2                	jmp    2648 <matrix_mul_matrix+0x38>
    2686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    268d:	00 00 00 
    2690:	41 8d 46 01          	lea    0x1(%r14),%eax
    2694:	44 01 c5             	add    %r8d,%ebp
    2697:	45 01 c1             	add    %r8d,%r9d
    269a:	41 39 de             	cmp    %ebx,%r14d
    269d:	74 05                	je     26a4 <matrix_mul_matrix+0x94>
    269f:	41 89 c6             	mov    %eax,%r14d
    26a2:	eb 9c                	jmp    2640 <matrix_mul_matrix+0x30>
    26a4:	5b                   	pop    %rbx
    26a5:	5d                   	pop    %rbp
    26a6:	41 5c                	pop    %r12
    26a8:	41 5d                	pop    %r13
    26aa:	41 5e                	pop    %r14
    26ac:	c3                   	retq   
    26ad:	c3                   	retq   
    26ae:	66 90                	xchg   %ax,%ax

00000000000026b0 <matrix_mul_matrix_bitextract>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	85 ff                	test   %edi,%edi
    26b6:	0f 84 a1 00 00 00    	je     275d <matrix_mul_matrix_bitextract+0xad>
    26bc:	41 56                	push   %r14
    26be:	41 89 f8             	mov    %edi,%r8d
    26c1:	49 89 d3             	mov    %rdx,%r11
    26c4:	49 89 ca             	mov    %rcx,%r10
    26c7:	41 55                	push   %r13
    26c9:	41 89 f9             	mov    %edi,%r9d
    26cc:	45 31 f6             	xor    %r14d,%r14d
    26cf:	41 54                	push   %r12
    26d1:	49 89 f4             	mov    %rsi,%r12
    26d4:	55                   	push   %rbp
    26d5:	31 ed                	xor    %ebp,%ebp
    26d7:	53                   	push   %rbx
    26d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    26df:	00 
    26e0:	31 db                	xor    %ebx,%ebx
    26e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    26e8:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    26eb:	89 de                	mov    %ebx,%esi
    26ed:	89 e9                	mov    %ebp,%ecx
    26ef:	31 ff                	xor    %edi,%edi
    26f1:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    26f5:	0f 1f 00             	nopl   (%rax)
    26f8:	89 c8                	mov    %ecx,%eax
    26fa:	89 f2                	mov    %esi,%edx
    26fc:	83 c1 01             	add    $0x1,%ecx
    26ff:	44 01 c6             	add    %r8d,%esi
    2702:	41 0f bf 14 52       	movswl (%r10,%rdx,2),%edx
    2707:	41 0f bf 04 43       	movswl (%r11,%rax,2),%eax
    270c:	0f af c2             	imul   %edx,%eax
    270f:	89 c2                	mov    %eax,%edx
    2711:	c1 f8 05             	sar    $0x5,%eax
    2714:	c1 fa 02             	sar    $0x2,%edx
    2717:	83 e0 7f             	and    $0x7f,%eax
    271a:	83 e2 0f             	and    $0xf,%edx
    271d:	0f af c2             	imul   %edx,%eax
    2720:	01 c7                	add    %eax,%edi
    2722:	41 39 c9             	cmp    %ecx,%r9d
    2725:	75 d1                	jne    26f8 <matrix_mul_matrix_bitextract+0x48>
    2727:	8d 43 01             	lea    0x1(%rbx),%eax
    272a:	41 89 7d 00          	mov    %edi,0x0(%r13)
    272e:	41 39 c0             	cmp    %eax,%r8d
    2731:	74 0d                	je     2740 <matrix_mul_matrix_bitextract+0x90>
    2733:	89 c3                	mov    %eax,%ebx
    2735:	eb b1                	jmp    26e8 <matrix_mul_matrix_bitextract+0x38>
    2737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    273e:	00 00 
    2740:	41 8d 46 01          	lea    0x1(%r14),%eax
    2744:	44 01 c5             	add    %r8d,%ebp
    2747:	45 01 c1             	add    %r8d,%r9d
    274a:	41 39 de             	cmp    %ebx,%r14d
    274d:	74 05                	je     2754 <matrix_mul_matrix_bitextract+0xa4>
    274f:	41 89 c6             	mov    %eax,%r14d
    2752:	eb 8c                	jmp    26e0 <matrix_mul_matrix_bitextract+0x30>
    2754:	5b                   	pop    %rbx
    2755:	5d                   	pop    %rbp
    2756:	41 5c                	pop    %r12
    2758:	41 5d                	pop    %r13
    275a:	41 5e                	pop    %r14
    275c:	c3                   	retq   
    275d:	c3                   	retq   
    275e:	66 90                	xchg   %ax,%ax

0000000000002760 <matrix_test>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	41 57                	push   %r15
    2766:	41 56                	push   %r14
    2768:	41 55                	push   %r13
    276a:	45 89 c5             	mov    %r8d,%r13d
    276d:	41 54                	push   %r12
    276f:	66 41 81 cd 00 f0    	or     $0xf000,%r13w
    2775:	49 89 d4             	mov    %rdx,%r12
    2778:	55                   	push   %rbp
    2779:	48 89 f5             	mov    %rsi,%rbp
    277c:	53                   	push   %rbx
    277d:	48 83 ec 18          	sub    $0x18,%rsp
    2781:	48 89 0c 24          	mov    %rcx,(%rsp)
    2785:	85 ff                	test   %edi,%edi
    2787:	0f 84 aa 02 00 00    	je     2a37 <matrix_test+0x2d7>
    278d:	41 0f bf f0          	movswl %r8w,%esi
    2791:	45 89 c6             	mov    %r8d,%r14d
    2794:	89 f9                	mov    %edi,%ecx
    2796:	45 31 d2             	xor    %r10d,%r10d
    2799:	45 31 c9             	xor    %r9d,%r9d
    279c:	0f 1f 40 00          	nopl   0x0(%rax)
    27a0:	44 89 d0             	mov    %r10d,%eax
    27a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    27a8:	89 c2                	mov    %eax,%edx
    27aa:	83 c0 01             	add    $0x1,%eax
    27ad:	66 45 01 34 54       	add    %r14w,(%r12,%rdx,2)
    27b2:	39 c1                	cmp    %eax,%ecx
    27b4:	75 f2                	jne    27a8 <matrix_test+0x48>
    27b6:	41 8d 59 01          	lea    0x1(%r9),%ebx
    27ba:	41 01 fa             	add    %edi,%r10d
    27bd:	01 f9                	add    %edi,%ecx
    27bf:	39 df                	cmp    %ebx,%edi
    27c1:	74 0d                	je     27d0 <matrix_test+0x70>
    27c3:	41 89 d9             	mov    %ebx,%r9d
    27c6:	eb d8                	jmp    27a0 <matrix_test+0x40>
    27c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    27cf:	00 
    27d0:	89 df                	mov    %ebx,%edi
    27d2:	45 31 d2             	xor    %r10d,%r10d
    27d5:	45 31 db             	xor    %r11d,%r11d
    27d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    27df:	00 
    27e0:	44 89 d0             	mov    %r10d,%eax
    27e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    27e8:	89 c1                	mov    %eax,%ecx
    27ea:	83 c0 01             	add    $0x1,%eax
    27ed:	41 0f bf 14 4c       	movswl (%r12,%rcx,2),%edx
    27f2:	0f af d6             	imul   %esi,%edx
    27f5:	89 54 8d 00          	mov    %edx,0x0(%rbp,%rcx,4)
    27f9:	39 c7                	cmp    %eax,%edi
    27fb:	75 eb                	jne    27e8 <matrix_test+0x88>
    27fd:	41 8d 43 01          	lea    0x1(%r11),%eax
    2801:	41 01 da             	add    %ebx,%r10d
    2804:	01 df                	add    %ebx,%edi
    2806:	45 39 cb             	cmp    %r9d,%r11d
    2809:	74 05                	je     2810 <matrix_test+0xb0>
    280b:	41 89 c3             	mov    %eax,%r11d
    280e:	eb d0                	jmp    27e0 <matrix_test+0x80>
    2810:	45 0f bf ed          	movswl %r13w,%r13d
    2814:	41 89 da             	mov    %ebx,%r10d
    2817:	45 31 db             	xor    %r11d,%r11d
    281a:	31 f6                	xor    %esi,%esi
    281c:	31 c9                	xor    %ecx,%ecx
    281e:	31 d2                	xor    %edx,%edx
    2820:	45 31 ff             	xor    %r15d,%r15d
    2823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2828:	44 89 d8             	mov    %r11d,%eax
    282b:	eb 10                	jmp    283d <matrix_test+0xdd>
    282d:	0f 1f 00             	nopl   (%rax)
    2830:	83 c0 01             	add    $0x1,%eax
    2833:	83 c6 0a             	add    $0xa,%esi
    2836:	31 d2                	xor    %edx,%edx
    2838:	41 39 c2             	cmp    %eax,%r10d
    283b:	74 23                	je     2860 <matrix_test+0x100>
    283d:	89 cf                	mov    %ecx,%edi
    283f:	89 c1                	mov    %eax,%ecx
    2841:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    2845:	01 ca                	add    %ecx,%edx
    2847:	41 39 d5             	cmp    %edx,%r13d
    284a:	7c e4                	jl     2830 <matrix_test+0xd0>
    284c:	39 f9                	cmp    %edi,%ecx
    284e:	40 0f 9f c7          	setg   %dil
    2852:	83 c0 01             	add    $0x1,%eax
    2855:	40 0f b6 ff          	movzbl %dil,%edi
    2859:	01 fe                	add    %edi,%esi
    285b:	41 39 c2             	cmp    %eax,%r10d
    285e:	75 dd                	jne    283d <matrix_test+0xdd>
    2860:	41 8d 47 01          	lea    0x1(%r15),%eax
    2864:	41 01 da             	add    %ebx,%r10d
    2867:	41 01 db             	add    %ebx,%r11d
    286a:	45 39 cf             	cmp    %r9d,%r15d
    286d:	74 09                	je     2878 <matrix_test+0x118>
    286f:	41 89 c7             	mov    %eax,%r15d
    2872:	eb b4                	jmp    2828 <matrix_test+0xc8>
    2874:	0f 1f 40 00          	nopl   0x0(%rax)
    2878:	0f bf fe             	movswl %si,%edi
    287b:	31 f6                	xor    %esi,%esi
    287d:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
    2882:	e8 89 09 00 00       	callq  3210 <crc16>
    2887:	48 8b 0c 24          	mov    (%rsp),%rcx
    288b:	4c 89 e2             	mov    %r12,%rdx
    288e:	48 89 ee             	mov    %rbp,%rsi
    2891:	89 df                	mov    %ebx,%edi
    2893:	41 89 c7             	mov    %eax,%r15d
    2896:	e8 05 fd ff ff       	callq  25a0 <matrix_mul_vect>
    289b:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
    28a0:	45 0f b7 c7          	movzwl %r15w,%r8d
    28a4:	31 f6                	xor    %esi,%esi
    28a6:	41 89 da             	mov    %ebx,%r10d
    28a9:	45 31 db             	xor    %r11d,%r11d
    28ac:	31 c9                	xor    %ecx,%ecx
    28ae:	31 d2                	xor    %edx,%edx
    28b0:	45 31 ff             	xor    %r15d,%r15d
    28b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    28b8:	44 89 d8             	mov    %r11d,%eax
    28bb:	eb 10                	jmp    28cd <matrix_test+0x16d>
    28bd:	0f 1f 00             	nopl   (%rax)
    28c0:	83 c0 01             	add    $0x1,%eax
    28c3:	83 c6 0a             	add    $0xa,%esi
    28c6:	31 d2                	xor    %edx,%edx
    28c8:	41 39 c2             	cmp    %eax,%r10d
    28cb:	74 23                	je     28f0 <matrix_test+0x190>
    28cd:	89 cf                	mov    %ecx,%edi
    28cf:	89 c1                	mov    %eax,%ecx
    28d1:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    28d5:	01 ca                	add    %ecx,%edx
    28d7:	44 39 ea             	cmp    %r13d,%edx
    28da:	7f e4                	jg     28c0 <matrix_test+0x160>
    28dc:	39 f9                	cmp    %edi,%ecx
    28de:	40 0f 9f c7          	setg   %dil
    28e2:	83 c0 01             	add    $0x1,%eax
    28e5:	40 0f b6 ff          	movzbl %dil,%edi
    28e9:	01 fe                	add    %edi,%esi
    28eb:	41 39 c2             	cmp    %eax,%r10d
    28ee:	75 dd                	jne    28cd <matrix_test+0x16d>
    28f0:	41 8d 47 01          	lea    0x1(%r15),%eax
    28f4:	41 01 da             	add    %ebx,%r10d
    28f7:	41 01 db             	add    %ebx,%r11d
    28fa:	45 39 cf             	cmp    %r9d,%r15d
    28fd:	74 09                	je     2908 <matrix_test+0x1a8>
    28ff:	41 89 c7             	mov    %eax,%r15d
    2902:	eb b4                	jmp    28b8 <matrix_test+0x158>
    2904:	0f 1f 40 00          	nopl   0x0(%rax)
    2908:	0f bf fe             	movswl %si,%edi
    290b:	44 89 c6             	mov    %r8d,%esi
    290e:	e8 fd 08 00 00       	callq  3210 <crc16>
    2913:	48 8b 0c 24          	mov    (%rsp),%rcx
    2917:	4c 89 e2             	mov    %r12,%rdx
    291a:	48 89 ee             	mov    %rbp,%rsi
    291d:	89 df                	mov    %ebx,%edi
    291f:	44 0f b7 f8          	movzwl %ax,%r15d
    2923:	e8 e8 fc ff ff       	callq  2610 <matrix_mul_matrix>
    2928:	45 31 c9             	xor    %r9d,%r9d
    292b:	31 f6                	xor    %esi,%esi
    292d:	31 c9                	xor    %ecx,%ecx
    292f:	31 d2                	xor    %edx,%edx
    2931:	45 31 d2             	xor    %r10d,%r10d
    2934:	0f 1f 40 00          	nopl   0x0(%rax)
    2938:	31 c0                	xor    %eax,%eax
    293a:	eb 10                	jmp    294c <matrix_test+0x1ec>
    293c:	0f 1f 40 00          	nopl   0x0(%rax)
    2940:	83 c0 01             	add    $0x1,%eax
    2943:	83 c6 0a             	add    $0xa,%esi
    2946:	31 d2                	xor    %edx,%edx
    2948:	39 d8                	cmp    %ebx,%eax
    294a:	73 24                	jae    2970 <matrix_test+0x210>
    294c:	89 cf                	mov    %ecx,%edi
    294e:	42 8d 0c 08          	lea    (%rax,%r9,1),%ecx
    2952:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    2956:	01 ca                	add    %ecx,%edx
    2958:	44 39 ea             	cmp    %r13d,%edx
    295b:	7f e3                	jg     2940 <matrix_test+0x1e0>
    295d:	39 f9                	cmp    %edi,%ecx
    295f:	40 0f 9f c7          	setg   %dil
    2963:	83 c0 01             	add    $0x1,%eax
    2966:	40 0f b6 ff          	movzbl %dil,%edi
    296a:	01 fe                	add    %edi,%esi
    296c:	39 d8                	cmp    %ebx,%eax
    296e:	72 dc                	jb     294c <matrix_test+0x1ec>
    2970:	41 83 c2 01          	add    $0x1,%r10d
    2974:	41 01 d9             	add    %ebx,%r9d
    2977:	41 39 da             	cmp    %ebx,%r10d
    297a:	72 bc                	jb     2938 <matrix_test+0x1d8>
    297c:	0f bf fe             	movswl %si,%edi
    297f:	44 89 fe             	mov    %r15d,%esi
    2982:	e8 89 08 00 00       	callq  3210 <crc16>
    2987:	48 8b 0c 24          	mov    (%rsp),%rcx
    298b:	4c 89 e2             	mov    %r12,%rdx
    298e:	48 89 ee             	mov    %rbp,%rsi
    2991:	89 df                	mov    %ebx,%edi
    2993:	44 0f b7 f8          	movzwl %ax,%r15d
    2997:	e8 14 fd ff ff       	callq  26b0 <matrix_mul_matrix_bitextract>
    299c:	45 31 c9             	xor    %r9d,%r9d
    299f:	31 f6                	xor    %esi,%esi
    29a1:	31 c9                	xor    %ecx,%ecx
    29a3:	31 d2                	xor    %edx,%edx
    29a5:	45 31 d2             	xor    %r10d,%r10d
    29a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    29af:	00 
    29b0:	31 c0                	xor    %eax,%eax
    29b2:	eb 10                	jmp    29c4 <matrix_test+0x264>
    29b4:	0f 1f 40 00          	nopl   0x0(%rax)
    29b8:	83 c0 01             	add    $0x1,%eax
    29bb:	83 c6 0a             	add    $0xa,%esi
    29be:	31 d2                	xor    %edx,%edx
    29c0:	39 d8                	cmp    %ebx,%eax
    29c2:	73 24                	jae    29e8 <matrix_test+0x288>
    29c4:	89 cf                	mov    %ecx,%edi
    29c6:	42 8d 0c 08          	lea    (%rax,%r9,1),%ecx
    29ca:	8b 4c 8d 00          	mov    0x0(%rbp,%rcx,4),%ecx
    29ce:	01 ca                	add    %ecx,%edx
    29d0:	44 39 ea             	cmp    %r13d,%edx
    29d3:	7f e3                	jg     29b8 <matrix_test+0x258>
    29d5:	39 f9                	cmp    %edi,%ecx
    29d7:	40 0f 9f c7          	setg   %dil
    29db:	83 c0 01             	add    $0x1,%eax
    29de:	40 0f b6 ff          	movzbl %dil,%edi
    29e2:	01 fe                	add    %edi,%esi
    29e4:	39 d8                	cmp    %ebx,%eax
    29e6:	72 dc                	jb     29c4 <matrix_test+0x264>
    29e8:	41 83 c2 01          	add    $0x1,%r10d
    29ec:	41 01 d9             	add    %ebx,%r9d
    29ef:	41 39 da             	cmp    %ebx,%r10d
    29f2:	72 bc                	jb     29b0 <matrix_test+0x250>
    29f4:	0f bf fe             	movswl %si,%edi
    29f7:	44 89 fe             	mov    %r15d,%esi
    29fa:	e8 11 08 00 00       	callq  3210 <crc16>
    29ff:	31 f6                	xor    %esi,%esi
    2a01:	31 ff                	xor    %edi,%edi
    2a03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a08:	31 d2                	xor    %edx,%edx
    2a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2a10:	8d 0c 32             	lea    (%rdx,%rsi,1),%ecx
    2a13:	83 c2 01             	add    $0x1,%edx
    2a16:	66 45 29 34 4c       	sub    %r14w,(%r12,%rcx,2)
    2a1b:	39 da                	cmp    %ebx,%edx
    2a1d:	72 f1                	jb     2a10 <matrix_test+0x2b0>
    2a1f:	83 c7 01             	add    $0x1,%edi
    2a22:	01 de                	add    %ebx,%esi
    2a24:	39 df                	cmp    %ebx,%edi
    2a26:	72 e0                	jb     2a08 <matrix_test+0x2a8>
    2a28:	48 83 c4 18          	add    $0x18,%rsp
    2a2c:	5b                   	pop    %rbx
    2a2d:	5d                   	pop    %rbp
    2a2e:	41 5c                	pop    %r12
    2a30:	41 5d                	pop    %r13
    2a32:	41 5e                	pop    %r14
    2a34:	41 5f                	pop    %r15
    2a36:	c3                   	retq   
    2a37:	31 f6                	xor    %esi,%esi
    2a39:	31 ff                	xor    %edi,%edi
    2a3b:	e8 d0 07 00 00       	callq  3210 <crc16>
    2a40:	4c 8b 3c 24          	mov    (%rsp),%r15
    2a44:	4c 89 e2             	mov    %r12,%rdx
    2a47:	48 89 ee             	mov    %rbp,%rsi
    2a4a:	89 c3                	mov    %eax,%ebx
    2a4c:	31 ff                	xor    %edi,%edi
    2a4e:	4c 89 f9             	mov    %r15,%rcx
    2a51:	e8 4a fb ff ff       	callq  25a0 <matrix_mul_vect>
    2a56:	0f b7 f3             	movzwl %bx,%esi
    2a59:	31 ff                	xor    %edi,%edi
    2a5b:	e8 b0 07 00 00       	callq  3210 <crc16>
    2a60:	4c 89 f9             	mov    %r15,%rcx
    2a63:	4c 89 e2             	mov    %r12,%rdx
    2a66:	48 89 ee             	mov    %rbp,%rsi
    2a69:	89 c3                	mov    %eax,%ebx
    2a6b:	31 ff                	xor    %edi,%edi
    2a6d:	e8 9e fb ff ff       	callq  2610 <matrix_mul_matrix>
    2a72:	0f b7 f3             	movzwl %bx,%esi
    2a75:	31 ff                	xor    %edi,%edi
    2a77:	e8 94 07 00 00       	callq  3210 <crc16>
    2a7c:	48 89 ee             	mov    %rbp,%rsi
    2a7f:	4c 89 f9             	mov    %r15,%rcx
    2a82:	4c 89 e2             	mov    %r12,%rdx
    2a85:	31 ff                	xor    %edi,%edi
    2a87:	89 c3                	mov    %eax,%ebx
    2a89:	e8 22 fc ff ff       	callq  26b0 <matrix_mul_matrix_bitextract>
    2a8e:	48 83 c4 18          	add    $0x18,%rsp
    2a92:	0f b7 f3             	movzwl %bx,%esi
    2a95:	31 ff                	xor    %edi,%edi
    2a97:	5b                   	pop    %rbx
    2a98:	5d                   	pop    %rbp
    2a99:	41 5c                	pop    %r12
    2a9b:	41 5d                	pop    %r13
    2a9d:	41 5e                	pop    %r14
    2a9f:	41 5f                	pop    %r15
    2aa1:	e9 6a 07 00 00       	jmpq   3210 <crc16>
    2aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2aad:	00 00 00 

0000000000002ab0 <core_bench_matrix>:
    2ab0:	f3 0f 1e fa          	endbr64 
    2ab4:	55                   	push   %rbp
    2ab5:	41 89 f0             	mov    %esi,%r8d
    2ab8:	0f b7 ea             	movzwl %dx,%ebp
    2abb:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    2abf:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    2ac3:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    2ac7:	45 0f bf c0          	movswl %r8w,%r8d
    2acb:	8b 3f                	mov    (%rdi),%edi
    2acd:	e8 8e fc ff ff       	callq  2760 <matrix_test>
    2ad2:	89 ee                	mov    %ebp,%esi
    2ad4:	5d                   	pop    %rbp
    2ad5:	0f bf f8             	movswl %ax,%edi
    2ad8:	e9 33 07 00 00       	jmpq   3210 <crc16>
    2add:	0f 1f 00             	nopl   (%rax)

0000000000002ae0 <core_init_state>:
    2ae0:	f3 0f 1e fa          	endbr64 
    2ae4:	44 8d 47 ff          	lea    -0x1(%rdi),%r8d
    2ae8:	41 57                	push   %r15
    2aea:	4c 8d 1d 2f 42 00 00 	lea    0x422f(%rip),%r11        # 6d20 <scipat>
    2af1:	41 56                	push   %r14
    2af3:	4c 8d 15 46 42 00 00 	lea    0x4246(%rip),%r10        # 6d40 <floatpat>
    2afa:	4c 8d 0d 5f 42 00 00 	lea    0x425f(%rip),%r9        # 6d60 <intpat>
    2b01:	41 55                	push   %r13
    2b03:	41 54                	push   %r12
    2b05:	55                   	push   %rbp
    2b06:	31 ed                	xor    %ebp,%ebp
    2b08:	53                   	push   %rbx
    2b09:	48 8d 1d f0 41 00 00 	lea    0x41f0(%rip),%rbx        # 6d00 <errpat>
    2b10:	41 83 f8 01          	cmp    $0x1,%r8d
    2b14:	0f 86 91 00 00 00    	jbe    2bab <core_init_state+0xcb>
    2b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2b20:	83 c6 01             	add    $0x1,%esi
    2b23:	89 f0                	mov    %esi,%eax
    2b25:	89 f1                	mov    %esi,%ecx
    2b27:	66 c1 f9 03          	sar    $0x3,%cx
    2b2b:	83 e0 07             	and    $0x7,%eax
    2b2e:	83 e1 03             	and    $0x3,%ecx
    2b31:	66 83 f8 07          	cmp    $0x7,%ax
    2b35:	0f 84 c5 00 00 00    	je     2c00 <core_init_state+0x120>
    2b3b:	66 83 f8 04          	cmp    $0x4,%ax
    2b3f:	0f 8f 9b 00 00 00    	jg     2be0 <core_init_state+0x100>
    2b45:	83 e8 03             	sub    $0x3,%eax
    2b48:	48 63 c9             	movslq %ecx,%rcx
    2b4b:	66 83 f8 01          	cmp    $0x1,%ax
    2b4f:	77 3f                	ja     2b90 <core_init_state+0xb0>
    2b51:	4d 8b 2c ca          	mov    (%r10,%rcx,8),%r13
    2b55:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    2b5b:	b9 08 00 00 00       	mov    $0x8,%ecx
    2b60:	41 01 ec             	add    %ebp,%r12d
    2b63:	45 39 c4             	cmp    %r8d,%r12d
    2b66:	73 3f                	jae    2ba7 <core_init_state+0xc7>
    2b68:	31 c0                	xor    %eax,%eax
    2b6a:	4c 8d 34 2a          	lea    (%rdx,%rbp,1),%r14
    2b6e:	45 0f b6 7c 05 00    	movzbl 0x0(%r13,%rax,1),%r15d
    2b74:	45 88 3c 06          	mov    %r15b,(%r14,%rax,1)
    2b78:	48 83 c0 01          	add    $0x1,%rax
    2b7c:	48 39 c1             	cmp    %rax,%rcx
    2b7f:	75 ed                	jne    2b6e <core_init_state+0x8e>
    2b81:	48 01 d1             	add    %rdx,%rcx
    2b84:	c6 04 29 2c          	movb   $0x2c,(%rcx,%rbp,1)
    2b88:	44 89 e5             	mov    %r12d,%ebp
    2b8b:	eb 93                	jmp    2b20 <core_init_state+0x40>
    2b8d:	0f 1f 00             	nopl   (%rax)
    2b90:	41 bc 05 00 00 00    	mov    $0x5,%r12d
    2b96:	4d 8b 2c c9          	mov    (%r9,%rcx,8),%r13
    2b9a:	b9 04 00 00 00       	mov    $0x4,%ecx
    2b9f:	41 01 ec             	add    %ebp,%r12d
    2ba2:	45 39 c4             	cmp    %r8d,%r12d
    2ba5:	72 c1                	jb     2b68 <core_init_state+0x88>
    2ba7:	39 fd                	cmp    %edi,%ebp
    2ba9:	73 21                	jae    2bcc <core_init_state+0xec>
    2bab:	89 e9                	mov    %ebp,%ecx
    2bad:	41 29 e8             	sub    %ebp,%r8d
    2bb0:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    2bb4:	48 8d 54 0a 01       	lea    0x1(%rdx,%rcx,1),%rdx
    2bb9:	49 01 d0             	add    %rdx,%r8
    2bbc:	0f 1f 40 00          	nopl   0x0(%rax)
    2bc0:	c6 00 00             	movb   $0x0,(%rax)
    2bc3:	48 83 c0 01          	add    $0x1,%rax
    2bc7:	49 39 c0             	cmp    %rax,%r8
    2bca:	75 f4                	jne    2bc0 <core_init_state+0xe0>
    2bcc:	5b                   	pop    %rbx
    2bcd:	5d                   	pop    %rbp
    2bce:	41 5c                	pop    %r12
    2bd0:	41 5d                	pop    %r13
    2bd2:	41 5e                	pop    %r14
    2bd4:	41 5f                	pop    %r15
    2bd6:	c3                   	retq   
    2bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2bde:	00 00 
    2be0:	48 63 c9             	movslq %ecx,%rcx
    2be3:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    2be9:	4d 8b 2c cb          	mov    (%r11,%rcx,8),%r13
    2bed:	b9 08 00 00 00       	mov    $0x8,%ecx
    2bf2:	e9 69 ff ff ff       	jmpq   2b60 <core_init_state+0x80>
    2bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2bfe:	00 00 
    2c00:	48 63 c9             	movslq %ecx,%rcx
    2c03:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    2c09:	4c 8b 2c cb          	mov    (%rbx,%rcx,8),%r13
    2c0d:	b9 08 00 00 00       	mov    $0x8,%ecx
    2c12:	e9 49 ff ff ff       	jmpq   2b60 <core_init_state+0x80>
    2c17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2c1e:	00 00 

0000000000002c20 <core_state_transition>:
    2c20:	f3 0f 1e fa          	endbr64 
    2c24:	48 8b 07             	mov    (%rdi),%rax
    2c27:	0f b6 08             	movzbl (%rax),%ecx
    2c2a:	84 c9                	test   %cl,%cl
    2c2c:	0f 84 bd 02 00 00    	je     2eef <core_state_transition+0x2cf>
    2c32:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2c36:	80 f9 2c             	cmp    $0x2c,%cl
    2c39:	0f 84 85 02 00 00    	je     2ec4 <core_state_transition+0x2a4>
    2c3f:	44 8b 16             	mov    (%rsi),%r10d
    2c42:	44 8d 49 d0          	lea    -0x30(%rcx),%r9d
    2c46:	45 8d 42 01          	lea    0x1(%r10),%r8d
    2c4a:	41 80 f9 09          	cmp    $0x9,%r9b
    2c4e:	0f 87 1c 01 00 00    	ja     2d70 <core_state_transition+0x150>
    2c54:	44 89 06             	mov    %r8d,(%rsi)
    2c57:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    2c5b:	84 c9                	test   %cl,%cl
    2c5d:	0f 84 a8 01 00 00    	je     2e0b <core_state_transition+0x1eb>
    2c63:	48 83 c0 02          	add    $0x2,%rax
    2c67:	80 f9 2c             	cmp    $0x2c,%cl
    2c6a:	0f 84 98 01 00 00    	je     2e08 <core_state_transition+0x1e8>
    2c70:	80 f9 2e             	cmp    $0x2e,%cl
    2c73:	74 30                	je     2ca5 <core_state_transition+0x85>
    2c75:	83 e9 30             	sub    $0x30,%ecx
    2c78:	80 f9 09             	cmp    $0x9,%cl
    2c7b:	0f 87 3f 01 00 00    	ja     2dc0 <core_state_transition+0x1a0>
    2c81:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    2c85:	84 c9                	test   %cl,%cl
    2c87:	0f 84 7b 01 00 00    	je     2e08 <core_state_transition+0x1e8>
    2c8d:	4c 8d 40 01          	lea    0x1(%rax),%r8
    2c91:	48 89 c2             	mov    %rax,%rdx
    2c94:	80 f9 2c             	cmp    $0x2c,%cl
    2c97:	0f 84 80 02 00 00    	je     2f1d <core_state_transition+0x2fd>
    2c9d:	4c 89 c0             	mov    %r8,%rax
    2ca0:	80 f9 2e             	cmp    $0x2e,%cl
    2ca3:	75 d0                	jne    2c75 <core_state_transition+0x55>
    2ca5:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    2ca9:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    2cae:	45 84 c0             	test   %r8b,%r8b
    2cb1:	0f 84 59 02 00 00    	je     2f10 <core_state_transition+0x2f0>
    2cb7:	48 8d 48 01          	lea    0x1(%rax),%rcx
    2cbb:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2cbf:	0f 84 f2 01 00 00    	je     2eb7 <core_state_transition+0x297>
    2cc5:	44 89 c2             	mov    %r8d,%edx
    2cc8:	83 e2 df             	and    $0xffffffdf,%edx
    2ccb:	80 fa 45             	cmp    $0x45,%dl
    2cce:	0f 85 44 01 00 00    	jne    2e18 <core_state_transition+0x1f8>
    2cd4:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    2cd8:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    2cdc:	84 c0                	test   %al,%al
    2cde:	0f 84 f4 01 00 00    	je     2ed8 <core_state_transition+0x2b8>
    2ce4:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    2ce8:	3c 2c                	cmp    $0x2c,%al
    2cea:	0f 84 eb 01 00 00    	je     2edb <core_state_transition+0x2bb>
    2cf0:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    2cf4:	83 e8 2b             	sub    $0x2b,%eax
    2cf7:	45 8d 43 01          	lea    0x1(%r11),%r8d
    2cfb:	44 89 46 0c          	mov    %r8d,0xc(%rsi)
    2cff:	a8 fd                	test   $0xfd,%al
    2d01:	75 5c                	jne    2d5f <core_state_transition+0x13f>
    2d03:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
    2d07:	84 c0                	test   %al,%al
    2d09:	0f 84 d6 01 00 00    	je     2ee5 <core_state_transition+0x2c5>
    2d0f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    2d13:	3c 2c                	cmp    $0x2c,%al
    2d15:	0f 84 ca 01 00 00    	je     2ee5 <core_state_transition+0x2c5>
    2d1b:	44 8b 56 18          	mov    0x18(%rsi),%r10d
    2d1f:	83 e8 30             	sub    $0x30,%eax
    2d22:	45 8d 42 01          	lea    0x1(%r10),%r8d
    2d26:	44 89 46 18          	mov    %r8d,0x18(%rsi)
    2d2a:	3c 09                	cmp    $0x9,%al
    2d2c:	77 31                	ja     2d5f <core_state_transition+0x13f>
    2d2e:	44 0f b6 41 02       	movzbl 0x2(%rcx),%r8d
    2d33:	45 84 c0             	test   %r8b,%r8b
    2d36:	0f 84 92 01 00 00    	je     2ece <core_state_transition+0x2ae>
    2d3c:	48 8d 41 03          	lea    0x3(%rcx),%rax
    2d40:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2d44:	0f 84 81 01 00 00    	je     2ecb <core_state_transition+0x2ab>
    2d4a:	41 83 e8 30          	sub    $0x30,%r8d
    2d4e:	41 80 f8 09          	cmp    $0x9,%r8b
    2d52:	0f 86 d8 00 00 00    	jbe    2e30 <core_state_transition+0x210>
    2d58:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    2d5c:	48 89 c2             	mov    %rax,%rdx
    2d5f:	48 89 17             	mov    %rdx,(%rdi)
    2d62:	b8 01 00 00 00       	mov    $0x1,%eax
    2d67:	c3                   	retq   
    2d68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2d6f:	00 
    2d70:	44 8d 49 d5          	lea    -0x2b(%rcx),%r9d
    2d74:	41 81 e1 fd 00 00 00 	and    $0xfd,%r9d
    2d7b:	75 53                	jne    2dd0 <core_state_transition+0x1b0>
    2d7d:	44 89 06             	mov    %r8d,(%rsi)
    2d80:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    2d85:	45 84 c0             	test   %r8b,%r8b
    2d88:	0f 84 6b 01 00 00    	je     2ef9 <core_state_transition+0x2d9>
    2d8e:	48 8d 50 02          	lea    0x2(%rax),%rdx
    2d92:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2d96:	0f 84 5d 01 00 00    	je     2ef9 <core_state_transition+0x2d9>
    2d9c:	8b 4e 08             	mov    0x8(%rsi),%ecx
    2d9f:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
    2da3:	83 c1 01             	add    $0x1,%ecx
    2da6:	41 80 f9 09          	cmp    $0x9,%r9b
    2daa:	76 44                	jbe    2df0 <core_state_transition+0x1d0>
    2dac:	41 80 f8 2e          	cmp    $0x2e,%r8b
    2db0:	0f 84 ea 00 00 00    	je     2ea0 <core_state_transition+0x280>
    2db6:	89 4e 08             	mov    %ecx,0x8(%rsi)
    2db9:	b8 01 00 00 00       	mov    $0x1,%eax
    2dbe:	eb 0c                	jmp    2dcc <core_state_transition+0x1ac>
    2dc0:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    2dc4:	48 89 c2             	mov    %rax,%rdx
    2dc7:	b8 01 00 00 00       	mov    $0x1,%eax
    2dcc:	48 89 17             	mov    %rdx,(%rdi)
    2dcf:	c3                   	retq   
    2dd0:	80 f9 2e             	cmp    $0x2e,%cl
    2dd3:	0f 84 a6 00 00 00    	je     2e7f <core_state_transition+0x25f>
    2dd9:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    2ddd:	b8 01 00 00 00       	mov    $0x1,%eax
    2de2:	44 89 06             	mov    %r8d,(%rsi)
    2de5:	eb e5                	jmp    2dcc <core_state_transition+0x1ac>
    2de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2dee:	00 00 
    2df0:	89 4e 08             	mov    %ecx,0x8(%rsi)
    2df3:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    2df7:	84 c9                	test   %cl,%cl
    2df9:	74 10                	je     2e0b <core_state_transition+0x1eb>
    2dfb:	48 83 c0 03          	add    $0x3,%rax
    2dff:	80 f9 2c             	cmp    $0x2c,%cl
    2e02:	0f 85 68 fe ff ff    	jne    2c70 <core_state_transition+0x50>
    2e08:	48 89 c2             	mov    %rax,%rdx
    2e0b:	b8 04 00 00 00       	mov    $0x4,%eax
    2e10:	eb ba                	jmp    2dcc <core_state_transition+0x1ac>
    2e12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e18:	41 83 e8 30          	sub    $0x30,%r8d
    2e1c:	41 80 f8 09          	cmp    $0x9,%r8b
    2e20:	76 3e                	jbe    2e60 <core_state_transition+0x240>
    2e22:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    2e26:	48 89 ca             	mov    %rcx,%rdx
    2e29:	b8 01 00 00 00       	mov    $0x1,%eax
    2e2e:	eb 9c                	jmp    2dcc <core_state_transition+0x1ac>
    2e30:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    2e35:	45 84 c0             	test   %r8b,%r8b
    2e38:	0f 84 8d 00 00 00    	je     2ecb <core_state_transition+0x2ab>
    2e3e:	48 8d 48 01          	lea    0x1(%rax),%rcx
    2e42:	48 89 c2             	mov    %rax,%rdx
    2e45:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2e49:	0f 84 b4 00 00 00    	je     2f03 <core_state_transition+0x2e3>
    2e4f:	48 89 c8             	mov    %rcx,%rax
    2e52:	e9 f3 fe ff ff       	jmpq   2d4a <core_state_transition+0x12a>
    2e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e5e:	00 00 
    2e60:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    2e65:	45 84 c0             	test   %r8b,%r8b
    2e68:	74 4d                	je     2eb7 <core_state_transition+0x297>
    2e6a:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    2e6e:	48 89 c8             	mov    %rcx,%rax
    2e71:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2e75:	74 43                	je     2eba <core_state_transition+0x29a>
    2e77:	48 89 d1             	mov    %rdx,%rcx
    2e7a:	e9 46 fe ff ff       	jmpq   2cc5 <core_state_transition+0xa5>
    2e7f:	44 89 06             	mov    %r8d,(%rsi)
    2e82:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    2e87:	45 84 c0             	test   %r8b,%r8b
    2e8a:	74 2e                	je     2eba <core_state_transition+0x29a>
    2e8c:	48 8d 48 02          	lea    0x2(%rax),%rcx
    2e90:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2e94:	74 21                	je     2eb7 <core_state_transition+0x297>
    2e96:	48 89 d0             	mov    %rdx,%rax
    2e99:	e9 27 fe ff ff       	jmpq   2cc5 <core_state_transition+0xa5>
    2e9e:	66 90                	xchg   %ax,%ax
    2ea0:	89 4e 08             	mov    %ecx,0x8(%rsi)
    2ea3:	44 0f b6 40 02       	movzbl 0x2(%rax),%r8d
    2ea8:	45 84 c0             	test   %r8b,%r8b
    2eab:	74 0d                	je     2eba <core_state_transition+0x29a>
    2ead:	48 8d 48 03          	lea    0x3(%rax),%rcx
    2eb1:	41 80 f8 2c          	cmp    $0x2c,%r8b
    2eb5:	75 df                	jne    2e96 <core_state_transition+0x276>
    2eb7:	48 89 ca             	mov    %rcx,%rdx
    2eba:	b8 05 00 00 00       	mov    $0x5,%eax
    2ebf:	e9 08 ff ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2ec4:	31 c0                	xor    %eax,%eax
    2ec6:	e9 01 ff ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2ecb:	48 89 c2             	mov    %rax,%rdx
    2ece:	b8 07 00 00 00       	mov    $0x7,%eax
    2ed3:	e9 f4 fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2ed8:	48 89 ca             	mov    %rcx,%rdx
    2edb:	b8 03 00 00 00       	mov    $0x3,%eax
    2ee0:	e9 e7 fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2ee5:	b8 06 00 00 00       	mov    $0x6,%eax
    2eea:	e9 dd fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2eef:	48 89 c2             	mov    %rax,%rdx
    2ef2:	31 c0                	xor    %eax,%eax
    2ef4:	e9 d3 fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2ef9:	b8 02 00 00 00       	mov    $0x2,%eax
    2efe:	e9 c9 fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2f03:	48 89 ca             	mov    %rcx,%rdx
    2f06:	b8 07 00 00 00       	mov    $0x7,%eax
    2f0b:	e9 bc fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2f10:	48 89 c2             	mov    %rax,%rdx
    2f13:	b8 05 00 00 00       	mov    $0x5,%eax
    2f18:	e9 af fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2f1d:	4c 89 c2             	mov    %r8,%rdx
    2f20:	b8 04 00 00 00       	mov    $0x4,%eax
    2f25:	e9 a2 fe ff ff       	jmpq   2dcc <core_state_transition+0x1ac>
    2f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002f30 <core_bench_state>:
    2f30:	f3 0f 1e fa          	endbr64 
    2f34:	41 57                	push   %r15
    2f36:	41 89 cf             	mov    %ecx,%r15d
    2f39:	41 56                	push   %r14
    2f3b:	49 89 f6             	mov    %rsi,%r14
    2f3e:	41 55                	push   %r13
    2f40:	41 54                	push   %r12
    2f42:	45 89 cc             	mov    %r9d,%r12d
    2f45:	55                   	push   %rbp
    2f46:	89 fd                	mov    %edi,%ebp
    2f48:	53                   	push   %rbx
    2f49:	48 83 ec 78          	sub    $0x78,%rsp
    2f4d:	66 89 54 24 0c       	mov    %dx,0xc(%rsp)
    2f52:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    2f57:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    2f5c:	66 44 89 44 24 0e    	mov    %r8w,0xe(%rsp)
    2f62:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2f69:	00 00 
    2f6b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    2f70:	31 c0                	xor    %eax,%eax
    2f72:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    2f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2f7e:	00 00 
    2f80:	c7 04 03 00 00 00 00 	movl   $0x0,(%rbx,%rax,1)
    2f87:	41 c7 44 05 00 00 00 	movl   $0x0,0x0(%r13,%rax,1)
    2f8e:	00 00 
    2f90:	48 83 c0 04          	add    $0x4,%rax
    2f94:	48 83 f8 20          	cmp    $0x20,%rax
    2f98:	75 e6                	jne    2f80 <core_bench_state+0x50>
    2f9a:	41 0f b6 16          	movzbl (%r14),%edx
    2f9e:	84 d2                	test   %dl,%dl
    2fa0:	0f 84 1a 01 00 00    	je     30c0 <core_bench_state+0x190>
    2fa6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    2fab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2fb0:	48 89 de             	mov    %rbx,%rsi
    2fb3:	e8 68 fc ff ff       	callq  2c20 <core_state_transition>
    2fb8:	89 c0                	mov    %eax,%eax
    2fba:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    2fbf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2fc4:	80 38 00             	cmpb   $0x0,(%rax)
    2fc7:	75 e7                	jne    2fb0 <core_bench_state+0x80>
    2fc9:	89 ed                	mov    %ebp,%ebp
    2fcb:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    2fd0:	41 0f b6 16          	movzbl (%r14),%edx
    2fd4:	4c 01 f5             	add    %r14,%rbp
    2fd7:	4c 39 f5             	cmp    %r14,%rbp
    2fda:	0f 86 f8 00 00 00    	jbe    30d8 <core_bench_state+0x1a8>
    2fe0:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    2fe6:	4c 89 f0             	mov    %r14,%rax
    2fe9:	eb 08                	jmp    2ff3 <core_bench_state+0xc3>
    2feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ff0:	0f b6 10             	movzbl (%rax),%edx
    2ff3:	80 fa 2c             	cmp    $0x2c,%dl
    2ff6:	74 06                	je     2ffe <core_bench_state+0xce>
    2ff8:	32 54 24 0c          	xor    0xc(%rsp),%dl
    2ffc:	88 10                	mov    %dl,(%rax)
    2ffe:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3003:	48 01 c8             	add    %rcx,%rax
    3006:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    300b:	48 39 e8             	cmp    %rbp,%rax
    300e:	72 e0                	jb     2ff0 <core_bench_state+0xc0>
    3010:	41 80 3e 00          	cmpb   $0x0,(%r14)
    3014:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    3019:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    301e:	74 30                	je     3050 <core_bench_state+0x120>
    3020:	48 89 de             	mov    %rbx,%rsi
    3023:	e8 f8 fb ff ff       	callq  2c20 <core_state_transition>
    3028:	89 c0                	mov    %eax,%eax
    302a:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    302f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3034:	80 38 00             	cmpb   $0x0,(%rax)
    3037:	75 e7                	jne    3020 <core_bench_state+0xf0>
    3039:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    303e:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    3044:	49 39 ee             	cmp    %rbp,%r14
    3047:	73 27                	jae    3070 <core_bench_state+0x140>
    3049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3050:	41 0f b6 06          	movzbl (%r14),%eax
    3054:	3c 2c                	cmp    $0x2c,%al
    3056:	74 06                	je     305e <core_bench_state+0x12e>
    3058:	44 31 f8             	xor    %r15d,%eax
    305b:	41 88 06             	mov    %al,(%r14)
    305e:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    3063:	49 01 ce             	add    %rcx,%r14
    3066:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    306b:	49 39 ee             	cmp    %rbp,%r14
    306e:	72 e0                	jb     3050 <core_bench_state+0x120>
    3070:	31 ed                	xor    %ebp,%ebp
    3072:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3078:	41 8b 7c 2d 00       	mov    0x0(%r13,%rbp,1),%edi
    307d:	41 0f b7 f4          	movzwl %r12w,%esi
    3081:	e8 6a 01 00 00       	callq  31f0 <crcu32>
    3086:	8b 3c 2b             	mov    (%rbx,%rbp,1),%edi
    3089:	48 83 c5 04          	add    $0x4,%rbp
    308d:	0f b7 f0             	movzwl %ax,%esi
    3090:	e8 5b 01 00 00       	callq  31f0 <crcu32>
    3095:	41 89 c4             	mov    %eax,%r12d
    3098:	48 83 fd 20          	cmp    $0x20,%rbp
    309c:	75 da                	jne    3078 <core_bench_state+0x148>
    309e:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    30a3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    30aa:	00 00 
    30ac:	75 34                	jne    30e2 <core_bench_state+0x1b2>
    30ae:	48 83 c4 78          	add    $0x78,%rsp
    30b2:	44 89 e0             	mov    %r12d,%eax
    30b5:	5b                   	pop    %rbx
    30b6:	5d                   	pop    %rbp
    30b7:	41 5c                	pop    %r12
    30b9:	41 5d                	pop    %r13
    30bb:	41 5e                	pop    %r14
    30bd:	41 5f                	pop    %r15
    30bf:	c3                   	retq   
    30c0:	89 ed                	mov    %ebp,%ebp
    30c2:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    30c7:	4c 01 f5             	add    %r14,%rbp
    30ca:	49 39 ee             	cmp    %rbp,%r14
    30cd:	0f 82 0d ff ff ff    	jb     2fe0 <core_bench_state+0xb0>
    30d3:	eb 9b                	jmp    3070 <core_bench_state+0x140>
    30d5:	0f 1f 00             	nopl   (%rax)
    30d8:	84 d2                	test   %dl,%dl
    30da:	0f 85 40 ff ff ff    	jne    3020 <core_bench_state+0xf0>
    30e0:	eb 8e                	jmp    3070 <core_bench_state+0x140>
    30e2:	e8 09 e0 ff ff       	callq  10f0 <__stack_chk_fail@plt>
    30e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    30ee:	00 00 

00000000000030f0 <get_seed_32>:
    30f0:	f3 0f 1e fa          	endbr64 
    30f4:	83 ff 05             	cmp    $0x5,%edi
    30f7:	77 5e                	ja     3157 <get_seed_32+0x67>
    30f9:	48 8d 15 30 14 00 00 	lea    0x1430(%rip),%rdx        # 4530 <list_known_crc+0xa8>
    3100:	89 ff                	mov    %edi,%edi
    3102:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    3106:	48 01 d0             	add    %rdx,%rax
    3109:	3e ff e0             	notrack jmpq *%rax
    310c:	0f 1f 40 00          	nopl   0x0(%rax)
    3110:	8b 05 2a 3f 00 00    	mov    0x3f2a(%rip),%eax        # 7040 <seed5_volatile>
    3116:	c3                   	retq   
    3117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    311e:	00 00 
    3120:	8b 05 26 3f 00 00    	mov    0x3f26(%rip),%eax        # 704c <seed1_volatile>
    3126:	c3                   	retq   
    3127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    312e:	00 00 
    3130:	8b 05 12 3f 00 00    	mov    0x3f12(%rip),%eax        # 7048 <seed2_volatile>
    3136:	c3                   	retq   
    3137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    313e:	00 00 
    3140:	8b 05 e6 3e 00 00    	mov    0x3ee6(%rip),%eax        # 702c <seed3_volatile>
    3146:	c3                   	retq   
    3147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    314e:	00 00 
    3150:	8b 05 ee 3e 00 00    	mov    0x3eee(%rip),%eax        # 7044 <seed4_volatile>
    3156:	c3                   	retq   
    3157:	31 c0                	xor    %eax,%eax
    3159:	c3                   	retq   
    315a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003160 <crcu8>:
    3160:	f3 0f 1e fa          	endbr64 
    3164:	89 f0                	mov    %esi,%eax
    3166:	ba 08 00 00 00       	mov    $0x8,%edx
    316b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3170:	89 fe                	mov    %edi,%esi
    3172:	40 d0 ef             	shr    %dil
    3175:	31 c6                	xor    %eax,%esi
    3177:	66 d1 e8             	shr    %ax
    317a:	89 c1                	mov    %eax,%ecx
    317c:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3181:	83 e6 01             	and    $0x1,%esi
    3184:	0f 45 c1             	cmovne %ecx,%eax
    3187:	80 ea 01             	sub    $0x1,%dl
    318a:	75 e4                	jne    3170 <crcu8+0x10>
    318c:	c3                   	retq   
    318d:	0f 1f 00             	nopl   (%rax)

0000000000003190 <crcu16>:
    3190:	f3 0f 1e fa          	endbr64 
    3194:	89 f0                	mov    %esi,%eax
    3196:	89 fa                	mov    %edi,%edx
    3198:	89 fe                	mov    %edi,%esi
    319a:	b9 08 00 00 00       	mov    $0x8,%ecx
    319f:	90                   	nop
    31a0:	41 89 f0             	mov    %esi,%r8d
    31a3:	40 d0 ee             	shr    %sil
    31a6:	41 31 c0             	xor    %eax,%r8d
    31a9:	66 d1 e8             	shr    %ax
    31ac:	89 c7                	mov    %eax,%edi
    31ae:	66 81 f7 01 a0       	xor    $0xa001,%di
    31b3:	41 83 e0 01          	and    $0x1,%r8d
    31b7:	0f 45 c7             	cmovne %edi,%eax
    31ba:	80 e9 01             	sub    $0x1,%cl
    31bd:	75 e1                	jne    31a0 <crcu16+0x10>
    31bf:	0f b6 fe             	movzbl %dh,%edi
    31c2:	ba 08 00 00 00       	mov    $0x8,%edx
    31c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    31ce:	00 00 
    31d0:	89 fe                	mov    %edi,%esi
    31d2:	40 d0 ef             	shr    %dil
    31d5:	31 c6                	xor    %eax,%esi
    31d7:	66 d1 e8             	shr    %ax
    31da:	89 c1                	mov    %eax,%ecx
    31dc:	66 81 f1 01 a0       	xor    $0xa001,%cx
    31e1:	83 e6 01             	and    $0x1,%esi
    31e4:	0f 45 c1             	cmovne %ecx,%eax
    31e7:	80 ea 01             	sub    $0x1,%dl
    31ea:	75 e4                	jne    31d0 <crcu16+0x40>
    31ec:	c3                   	retq   
    31ed:	0f 1f 00             	nopl   (%rax)

00000000000031f0 <crcu32>:
    31f0:	f3 0f 1e fa          	endbr64 
    31f4:	41 89 f9             	mov    %edi,%r9d
    31f7:	0f b7 f6             	movzwl %si,%esi
    31fa:	0f b7 ff             	movzwl %di,%edi
    31fd:	e8 8e ff ff ff       	callq  3190 <crcu16>
    3202:	44 89 cf             	mov    %r9d,%edi
    3205:	0f b7 f0             	movzwl %ax,%esi
    3208:	c1 ef 10             	shr    $0x10,%edi
    320b:	eb 83                	jmp    3190 <crcu16>
    320d:	0f 1f 00             	nopl   (%rax)

0000000000003210 <crc16>:
    3210:	f3 0f 1e fa          	endbr64 
    3214:	0f b7 f6             	movzwl %si,%esi
    3217:	0f b7 ff             	movzwl %di,%edi
    321a:	e9 71 ff ff ff       	jmpq   3190 <crcu16>
    321f:	90                   	nop

0000000000003220 <check_data_types>:
    3220:	f3 0f 1e fa          	endbr64 
    3224:	31 c0                	xor    %eax,%eax
    3226:	c3                   	retq   
    3227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    322e:	00 00 

0000000000003230 <portable_malloc>:
    3230:	f3 0f 1e fa          	endbr64 
    3234:	e9 c7 de ff ff       	jmpq   1100 <malloc@plt>
    3239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003240 <portable_free>:
    3240:	f3 0f 1e fa          	endbr64 
    3244:	e9 67 de ff ff       	jmpq   10b0 <free@plt>
    3249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003250 <start_time>:
    3250:	f3 0f 1e fa          	endbr64 
    3254:	48 8d 35 05 3e 00 00 	lea    0x3e05(%rip),%rsi        # 7060 <start_time_val>
    325b:	31 ff                	xor    %edi,%edi
    325d:	e9 7e de ff ff       	jmpq   10e0 <clock_gettime@plt>
    3262:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3269:	00 00 00 00 
    326d:	0f 1f 00             	nopl   (%rax)

0000000000003270 <stop_time>:
    3270:	f3 0f 1e fa          	endbr64 
    3274:	48 8d 35 d5 3d 00 00 	lea    0x3dd5(%rip),%rsi        # 7050 <stop_time_val>
    327b:	31 ff                	xor    %edi,%edi
    327d:	e9 5e de ff ff       	jmpq   10e0 <clock_gettime@plt>
    3282:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3289:	00 00 00 00 
    328d:	0f 1f 00             	nopl   (%rax)

0000000000003290 <get_time>:
    3290:	f3 0f 1e fa          	endbr64 
    3294:	48 8b 35 bd 3d 00 00 	mov    0x3dbd(%rip),%rsi        # 7058 <stop_time_val+0x8>
    329b:	48 2b 35 c6 3d 00 00 	sub    0x3dc6(%rip),%rsi        # 7068 <start_time_val+0x8>
    32a2:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    32a9:	de 1b 43 
    32ac:	48 89 f0             	mov    %rsi,%rax
    32af:	48 8b 0d 9a 3d 00 00 	mov    0x3d9a(%rip),%rcx        # 7050 <stop_time_val>
    32b6:	48 c1 fe 3f          	sar    $0x3f,%rsi
    32ba:	48 2b 0d 9f 3d 00 00 	sub    0x3d9f(%rip),%rcx        # 7060 <start_time_val>
    32c1:	48 f7 ea             	imul   %rdx
    32c4:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
    32cb:	48 c1 fa 12          	sar    $0x12,%rdx
    32cf:	48 29 f2             	sub    %rsi,%rdx
    32d2:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    32d6:	c3                   	retq   
    32d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    32de:	00 00 

00000000000032e0 <time_in_secs>:
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    32e8:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
    32ed:	f2 0f 5e 05 53 12 00 	divsd  0x1253(%rip),%xmm0        # 4548 <list_known_crc+0xc0>
    32f4:	00 
    32f5:	c3                   	retq   
    32f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    32fd:	00 00 00 

0000000000003300 <portable_init>:
    3300:	f3 0f 1e fa          	endbr64 
    3304:	c6 07 01             	movb   $0x1,(%rdi)
    3307:	c3                   	retq   
    3308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    330f:	00 

0000000000003310 <portable_fini>:
    3310:	f3 0f 1e fa          	endbr64 
    3314:	c6 07 00             	movb   $0x0,(%rdi)
    3317:	c3                   	retq   
    3318:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    331f:	00 

0000000000003320 <__libc_csu_init>:
    3320:	f3 0f 1e fa          	endbr64 
    3324:	41 57                	push   %r15
    3326:	4c 8d 3d c3 39 00 00 	lea    0x39c3(%rip),%r15        # 6cf0 <__frame_dummy_init_array_entry>
    332d:	41 56                	push   %r14
    332f:	49 89 d6             	mov    %rdx,%r14
    3332:	41 55                	push   %r13
    3334:	49 89 f5             	mov    %rsi,%r13
    3337:	41 54                	push   %r12
    3339:	41 89 fc             	mov    %edi,%r12d
    333c:	55                   	push   %rbp
    333d:	48 8d 2d b4 39 00 00 	lea    0x39b4(%rip),%rbp        # 6cf8 <__do_global_dtors_aux_fini_array_entry>
    3344:	53                   	push   %rbx
    3345:	4c 29 fd             	sub    %r15,%rbp
    3348:	48 83 ec 08          	sub    $0x8,%rsp
    334c:	e8 af dc ff ff       	callq  1000 <_init>
    3351:	48 c1 fd 03          	sar    $0x3,%rbp
    3355:	74 1f                	je     3376 <__libc_csu_init+0x56>
    3357:	31 db                	xor    %ebx,%ebx
    3359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3360:	4c 89 f2             	mov    %r14,%rdx
    3363:	4c 89 ee             	mov    %r13,%rsi
    3366:	44 89 e7             	mov    %r12d,%edi
    3369:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    336d:	48 83 c3 01          	add    $0x1,%rbx
    3371:	48 39 dd             	cmp    %rbx,%rbp
    3374:	75 ea                	jne    3360 <__libc_csu_init+0x40>
    3376:	48 83 c4 08          	add    $0x8,%rsp
    337a:	5b                   	pop    %rbx
    337b:	5d                   	pop    %rbp
    337c:	41 5c                	pop    %r12
    337e:	41 5d                	pop    %r13
    3380:	41 5e                	pop    %r14
    3382:	41 5f                	pop    %r15
    3384:	c3                   	retq   
    3385:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    338c:	00 00 00 00 

0000000000003390 <__libc_csu_fini>:
    3390:	f3 0f 1e fa          	endbr64 
    3394:	c3                   	retq   

Disassembly of section .fini:

0000000000003398 <_fini>:
    3398:	f3 0f 1e fa          	endbr64 
    339c:	48 83 ec 08          	sub    $0x8,%rsp
    33a0:	48 83 c4 08          	add    $0x8,%rsp
    33a4:	c3                   	retq   

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    %eax,(%rax)
    4002:	02 00                	add    (%rax),%al
    4004:	00 00                	add    %al,(%rax)
    4006:	00 00                	add    %al,(%rax)
    4008:	36 6b 20 70          	imul   $0x70,%ss:(%rax),%esp
    400c:	65 72 66             	gs jb  4075 <_IO_stdin_used+0x75>
    400f:	6f                   	outsl  %ds:(%rsi),(%dx)
    4010:	72 6d                	jb     407f <_IO_stdin_used+0x7f>
    4012:	61                   	(bad)  
    4013:	6e                   	outsb  %ds:(%rsi),(%dx)
    4014:	63 65 20             	movslq 0x20(%rbp),%esp
    4017:	72 75                	jb     408e <_IO_stdin_used+0x8e>
    4019:	6e                   	outsb  %ds:(%rsi),(%dx)
    401a:	20 70 61             	and    %dh,0x61(%rax)
    401d:	72 61                	jb     4080 <_IO_stdin_used+0x80>
    401f:	6d                   	insl   (%dx),%es:(%rdi)
    4020:	65 74 65             	gs je  4088 <_IO_stdin_used+0x88>
    4023:	72 73                	jb     4098 <_IO_stdin_used+0x98>
    4025:	20 66 6f             	and    %ah,0x6f(%rsi)
    4028:	72 20                	jb     404a <_IO_stdin_used+0x4a>
    402a:	63 6f 72             	movslq 0x72(%rdi),%ebp
    402d:	65 6d                	gs insl (%dx),%es:(%rdi)
    402f:	61                   	(bad)  
    4030:	72 6b                	jb     409d <_IO_stdin_used+0x9d>
    4032:	2e 00 00             	add    %al,%cs:(%rax)
    4035:	00 00                	add    %al,(%rax)
    4037:	00 36                	add    %dh,(%rsi)
    4039:	6b 20 76             	imul   $0x76,(%rax),%esp
    403c:	61                   	(bad)  
    403d:	6c                   	insb   (%dx),%es:(%rdi)
    403e:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    4045:	20 
    4046:	72 75                	jb     40bd <_IO_stdin_used+0xbd>
    4048:	6e                   	outsb  %ds:(%rsi),(%dx)
    4049:	20 70 61             	and    %dh,0x61(%rax)
    404c:	72 61                	jb     40af <_IO_stdin_used+0xaf>
    404e:	6d                   	insl   (%dx),%es:(%rdi)
    404f:	65 74 65             	gs je  40b7 <_IO_stdin_used+0xb7>
    4052:	72 73                	jb     40c7 <_IO_stdin_used+0xc7>
    4054:	20 66 6f             	and    %ah,0x6f(%rsi)
    4057:	72 20                	jb     4079 <_IO_stdin_used+0x79>
    4059:	63 6f 72             	movslq 0x72(%rdi),%ebp
    405c:	65 6d                	gs insl (%dx),%es:(%rdi)
    405e:	61                   	(bad)  
    405f:	72 6b                	jb     40cc <_IO_stdin_used+0xcc>
    4061:	2e 00 00             	add    %al,%cs:(%rax)
    4064:	00 00                	add    %al,(%rax)
    4066:	00 00                	add    %al,(%rax)
    4068:	50                   	push   %rax
    4069:	72 6f                	jb     40da <_IO_stdin_used+0xda>
    406b:	66 69 6c 65 20 67 65 	imul   $0x6567,0x20(%rbp,%riz,2),%bp
    4072:	6e                   	outsb  %ds:(%rsi),(%dx)
    4073:	65 72 61             	gs jb  40d7 <_IO_stdin_used+0xd7>
    4076:	74 69                	je     40e1 <_IO_stdin_used+0xe1>
    4078:	6f                   	outsl  %ds:(%rsi),(%dx)
    4079:	6e                   	outsb  %ds:(%rsi),(%dx)
    407a:	20 72 75             	and    %dh,0x75(%rdx)
    407d:	6e                   	outsb  %ds:(%rsi),(%dx)
    407e:	20 70 61             	and    %dh,0x61(%rax)
    4081:	72 61                	jb     40e4 <_IO_stdin_used+0xe4>
    4083:	6d                   	insl   (%dx),%es:(%rdi)
    4084:	65 74 65             	gs je  40ec <_IO_stdin_used+0xec>
    4087:	72 73                	jb     40fc <_IO_stdin_used+0xfc>
    4089:	20 66 6f             	and    %ah,0x6f(%rsi)
    408c:	72 20                	jb     40ae <_IO_stdin_used+0xae>
    408e:	63 6f 72             	movslq 0x72(%rdi),%ebp
    4091:	65 6d                	gs insl (%dx),%es:(%rdi)
    4093:	61                   	(bad)  
    4094:	72 6b                	jb     4101 <_IO_stdin_used+0x101>
    4096:	2e 00 32             	add    %dh,%cs:(%rdx)
    4099:	4b 20 70 65          	rex.WXB and %sil,0x65(%r8)
    409d:	72 66                	jb     4105 <_IO_stdin_used+0x105>
    409f:	6f                   	outsl  %ds:(%rsi),(%dx)
    40a0:	72 6d                	jb     410f <_IO_stdin_used+0x10f>
    40a2:	61                   	(bad)  
    40a3:	6e                   	outsb  %ds:(%rsi),(%dx)
    40a4:	63 65 20             	movslq 0x20(%rbp),%esp
    40a7:	72 75                	jb     411e <_IO_stdin_used+0x11e>
    40a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    40aa:	20 70 61             	and    %dh,0x61(%rax)
    40ad:	72 61                	jb     4110 <_IO_stdin_used+0x110>
    40af:	6d                   	insl   (%dx),%es:(%rdi)
    40b0:	65 74 65             	gs je  4118 <_IO_stdin_used+0x118>
    40b3:	72 73                	jb     4128 <_IO_stdin_used+0x128>
    40b5:	20 66 6f             	and    %ah,0x6f(%rsi)
    40b8:	72 20                	jb     40da <_IO_stdin_used+0xda>
    40ba:	63 6f 72             	movslq 0x72(%rdi),%ebp
    40bd:	65 6d                	gs insl (%dx),%es:(%rdi)
    40bf:	61                   	(bad)  
    40c0:	72 6b                	jb     412d <_IO_stdin_used+0x12d>
    40c2:	2e 00 00             	add    %al,%cs:(%rax)
    40c5:	00 00                	add    %al,(%rax)
    40c7:	00 32                	add    %dh,(%rdx)
    40c9:	4b 20 76 61          	rex.WXB and %sil,0x61(%r14)
    40cd:	6c                   	insb   (%dx),%es:(%rdi)
    40ce:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    40d5:	20 
    40d6:	72 75                	jb     414d <_IO_stdin_used+0x14d>
    40d8:	6e                   	outsb  %ds:(%rsi),(%dx)
    40d9:	20 70 61             	and    %dh,0x61(%rax)
    40dc:	72 61                	jb     413f <_IO_stdin_used+0x13f>
    40de:	6d                   	insl   (%dx),%es:(%rdi)
    40df:	65 74 65             	gs je  4147 <_IO_stdin_used+0x147>
    40e2:	72 73                	jb     4157 <_IO_stdin_used+0x157>
    40e4:	20 66 6f             	and    %ah,0x6f(%rsi)
    40e7:	72 20                	jb     4109 <_IO_stdin_used+0x109>
    40e9:	63 6f 72             	movslq 0x72(%rdi),%ebp
    40ec:	65 6d                	gs insl (%dx),%es:(%rdi)
    40ee:	61                   	(bad)  
    40ef:	72 6b                	jb     415c <_IO_stdin_used+0x15c>
    40f1:	2e 00 00             	add    %al,%cs:(%rax)
    40f4:	00 00                	add    %al,(%rax)
    40f6:	00 00                	add    %al,(%rax)
    40f8:	5b                   	pop    %rbx
    40f9:	25 75 5d 45 52       	and    $0x52455d75,%eax
    40fe:	52                   	push   %rdx
    40ff:	4f 52                	rex.WRXB push %r10
    4101:	21 20                	and    %esp,(%rax)
    4103:	6c                   	insb   (%dx),%es:(%rdi)
    4104:	69 73 74 20 63 72 63 	imul   $0x63726320,0x74(%rbx),%esi
    410b:	20 30                	and    %dh,(%rax)
    410d:	78 25                	js     4134 <_IO_stdin_used+0x134>
    410f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4112:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68b438 <_end+0x6f6843c8>
    4118:	75 6c                	jne    4186 <_IO_stdin_used+0x186>
    411a:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    411e:	20 30                	and    %dh,(%rax)
    4120:	78 25                	js     4147 <_IO_stdin_used+0x147>
    4122:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4125:	0a 00                	or     (%rax),%al
    4127:	00 5b 25             	add    %bl,0x25(%rbx)
    412a:	75 5d                	jne    4189 <_IO_stdin_used+0x189>
    412c:	45 52                	rex.RB push %r10
    412e:	52                   	push   %rdx
    412f:	4f 52                	rex.WRXB push %r10
    4131:	21 20                	and    %esp,(%rax)
    4133:	6d                   	insl   (%dx),%es:(%rdi)
    4134:	61                   	(bad)  
    4135:	74 72                	je     41a9 <_IO_stdin_used+0x1a9>
    4137:	69 78 20 63 72 63 20 	imul   $0x20637263,0x20(%rax),%edi
    413e:	30 78 25             	xor    %bh,0x25(%rax)
    4141:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4144:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68b46a <_end+0x6f6843fa>
    414a:	75 6c                	jne    41b8 <_IO_stdin_used+0x1b8>
    414c:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    4150:	20 30                	and    %dh,(%rax)
    4152:	78 25                	js     4179 <_IO_stdin_used+0x179>
    4154:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4157:	0a 00                	or     (%rax),%al
    4159:	00 00                	add    %al,(%rax)
    415b:	00 00                	add    %al,(%rax)
    415d:	00 00                	add    %al,(%rax)
    415f:	00 5b 25             	add    %bl,0x25(%rbx)
    4162:	75 5d                	jne    41c1 <_IO_stdin_used+0x1c1>
    4164:	45 52                	rex.RB push %r10
    4166:	52                   	push   %rdx
    4167:	4f 52                	rex.WRXB push %r10
    4169:	21 20                	and    %esp,(%rax)
    416b:	73 74                	jae    41e1 <_IO_stdin_used+0x1e1>
    416d:	61                   	(bad)  
    416e:	74 65                	je     41d5 <_IO_stdin_used+0x1d5>
    4170:	20 63 72             	and    %ah,0x72(%rbx)
    4173:	63 20                	movslq (%rax),%esp
    4175:	30 78 25             	xor    %bh,0x25(%rax)
    4178:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    417b:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68b4a1 <_end+0x6f684431>
    4181:	75 6c                	jne    41ef <_IO_stdin_used+0x1ef>
    4183:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    4187:	20 30                	and    %dh,(%rax)
    4189:	78 25                	js     41b0 <_IO_stdin_used+0x1b0>
    418b:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    418e:	0a 00                	or     (%rax),%al
    4190:	45 52                	rex.RB push %r10
    4192:	52                   	push   %rdx
    4193:	4f 52                	rex.WRXB push %r10
    4195:	21 20                	and    %esp,(%rax)
    4197:	4d 75 73             	rex.WRB jne 420d <_IO_stdin_used+0x20d>
    419a:	74 20                	je     41bc <_IO_stdin_used+0x1bc>
    419c:	65 78 65             	gs js  4204 <_IO_stdin_used+0x204>
    419f:	63 75 74             	movslq 0x74(%rbp),%esi
    41a2:	65 20 66 6f          	and    %ah,%gs:0x6f(%rsi)
    41a6:	72 20                	jb     41c8 <_IO_stdin_used+0x1c8>
    41a8:	61                   	(bad)  
    41a9:	74 20                	je     41cb <_IO_stdin_used+0x1cb>
    41ab:	6c                   	insb   (%dx),%es:(%rdi)
    41ac:	65 61                	gs (bad) 
    41ae:	73 74                	jae    4224 <_IO_stdin_used+0x224>
    41b0:	20 31                	and    %dh,(%rcx)
    41b2:	30 20                	xor    %ah,(%rax)
    41b4:	73 65                	jae    421b <_IO_stdin_used+0x21b>
    41b6:	63 73 20             	movslq 0x20(%rbx),%esi
    41b9:	66 6f                	outsw  %ds:(%rsi),(%dx)
    41bb:	72 20                	jb     41dd <_IO_stdin_used+0x1dd>
    41bd:	61                   	(bad)  
    41be:	20 76 61             	and    %dh,0x61(%rsi)
    41c1:	6c                   	insb   (%dx),%es:(%rdi)
    41c2:	69 64 20 72 65 73 75 	imul   $0x6c757365,0x72(%rax,%riz,1),%esp
    41c9:	6c 
    41ca:	74 21                	je     41ed <_IO_stdin_used+0x1ed>
    41cc:	00 00                	add    %al,(%rax)
    41ce:	00 00                	add    %al,(%rax)
    41d0:	50                   	push   %rax
    41d1:	6c                   	insb   (%dx),%es:(%rdi)
    41d2:	65 61                	gs (bad) 
    41d4:	73 65                	jae    423b <_IO_stdin_used+0x23b>
    41d6:	20 70 75             	and    %dh,0x75(%rax)
    41d9:	74 20                	je     41fb <_IO_stdin_used+0x1fb>
    41db:	64 61                	fs (bad) 
    41dd:	74 61                	je     4240 <_IO_stdin_used+0x240>
    41df:	20 6d 65             	and    %ch,0x65(%rbp)
    41e2:	6d                   	insl   (%dx),%es:(%rdi)
    41e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    41e4:	72 79                	jb     425f <_IO_stdin_used+0x25f>
    41e6:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    41ea:	61                   	(bad)  
    41eb:	74 69                	je     4256 <_IO_stdin_used+0x256>
    41ed:	6f                   	outsl  %ds:(%rsi),(%dx)
    41ee:	6e                   	outsb  %ds:(%rsi),(%dx)
    41ef:	20 68 65             	and    %ch,0x65(%rax)
    41f2:	72 65                	jb     4259 <_IO_stdin_used+0x259>
    41f4:	0a 09                	or     (%rcx),%cl
    41f6:	09 09                	or     %ecx,(%rcx)
    41f8:	28 65 2e             	sub    %ah,0x2e(%rbp)
    41fb:	67 2e 20 63 6f       	and    %ah,%cs:0x6f(%ebx)
    4200:	64 65 20 69 6e       	fs and %ch,%gs:0x6e(%rcx)
    4205:	20 66 6c             	and    %ah,0x6c(%rsi)
    4208:	61                   	(bad)  
    4209:	73 68                	jae    4273 <_IO_stdin_used+0x273>
    420b:	2c 20                	sub    $0x20,%al
    420d:	64 61                	fs (bad) 
    420f:	74 61                	je     4272 <_IO_stdin_used+0x272>
    4211:	20 6f 6e             	and    %ch,0x6e(%rdi)
    4214:	20 68 65             	and    %ch,0x65(%rax)
    4217:	61                   	(bad)  
    4218:	70 20                	jo     423a <_IO_stdin_used+0x23a>
    421a:	65 74 63             	gs je  4280 <_IO_stdin_used+0x280>
    421d:	29 00                	sub    %eax,(%rax)
    421f:	00 43 6f             	add    %al,0x6f(%rbx)
    4222:	72 72                	jb     4296 <_IO_stdin_used+0x296>
    4224:	65 63 74 20 6f       	movslq %gs:0x6f(%rax,%riz,1),%esi
    4229:	70 65                	jo     4290 <_IO_stdin_used+0x290>
    422b:	72 61                	jb     428e <_IO_stdin_used+0x28e>
    422d:	74 69                	je     4298 <_IO_stdin_used+0x298>
    422f:	6f                   	outsl  %ds:(%rsi),(%dx)
    4230:	6e                   	outsb  %ds:(%rsi),(%dx)
    4231:	20 76 61             	and    %dh,0x61(%rsi)
    4234:	6c                   	insb   (%dx),%es:(%rdi)
    4235:	69 64 61 74 65 64 2e 	imul   $0x202e6465,0x74(%rcx,%riz,2),%esp
    423c:	20 
    423d:	53                   	push   %rbx
    423e:	65 65 20 52 45       	gs and %dl,%gs:0x45(%rdx)
    4243:	41                   	rex.B
    4244:	44                   	rex.R
    4245:	4d                   	rex.WRB
    4246:	45                   	rex.RB
    4247:	2e 6d                	cs insl (%dx),%es:(%rdi)
    4249:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    424d:	72 20                	jb     426f <_IO_stdin_used+0x26f>
    424f:	72 75                	jb     42c6 <_IO_stdin_used+0x2c6>
    4251:	6e                   	outsb  %ds:(%rsi),(%dx)
    4252:	20 61 6e             	and    %ah,0x6e(%rcx)
    4255:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
    4259:	70 6f                	jo     42ca <_IO_stdin_used+0x2ca>
    425b:	72 74                	jb     42d1 <_IO_stdin_used+0x2d1>
    425d:	69 6e 67 20 72 75 6c 	imul   $0x6c757220,0x67(%rsi),%ebp
    4264:	65 73 2e             	gs jae 4295 <_IO_stdin_used+0x295>
    4267:	00 43 61             	add    %al,0x61(%rbx)
    426a:	6e                   	outsb  %ds:(%rsi),(%dx)
    426b:	6e                   	outsb  %ds:(%rsi),(%dx)
    426c:	6f                   	outsl  %ds:(%rsi),(%dx)
    426d:	74 20                	je     428f <_IO_stdin_used+0x28f>
    426f:	76 61                	jbe    42d2 <_IO_stdin_used+0x2d2>
    4271:	6c                   	insb   (%dx),%es:(%rdi)
    4272:	69 64 61 74 65 20 6f 	imul   $0x706f2065,0x74(%rcx,%riz,2),%esp
    4279:	70 
    427a:	65 72 61             	gs jb  42de <_IO_stdin_used+0x2de>
    427d:	74 69                	je     42e8 <_IO_stdin_used+0x2e8>
    427f:	6f                   	outsl  %ds:(%rsi),(%dx)
    4280:	6e                   	outsb  %ds:(%rsi),(%dx)
    4281:	20 66 6f             	and    %ah,0x6f(%rsi)
    4284:	72 20                	jb     42a6 <_IO_stdin_used+0x2a6>
    4286:	74 68                	je     42f0 <_IO_stdin_used+0x2f0>
    4288:	65 73 65             	gs jae 42f0 <_IO_stdin_used+0x2f0>
    428b:	20 73 65             	and    %dh,0x65(%rbx)
    428e:	65 64 20 76 61       	gs and %dh,%fs:0x61(%rsi)
    4293:	6c                   	insb   (%dx),%es:(%rdi)
    4294:	75 65                	jne    42fb <_IO_stdin_used+0x2fb>
    4296:	73 2c                	jae    42c4 <_IO_stdin_used+0x2c4>
    4298:	20 70 6c             	and    %dh,0x6c(%rax)
    429b:	65 61                	gs (bad) 
    429d:	73 65                	jae    4304 <_IO_stdin_used+0x304>
    429f:	20 63 6f             	and    %ah,0x6f(%rbx)
    42a2:	6d                   	insl   (%dx),%es:(%rdi)
    42a3:	70 61                	jo     4306 <_IO_stdin_used+0x306>
    42a5:	72 65                	jb     430c <_IO_stdin_used+0x30c>
    42a7:	20 77 69             	and    %dh,0x69(%rdi)
    42aa:	74 68                	je     4314 <_IO_stdin_used+0x314>
    42ac:	20 72 65             	and    %dh,0x65(%rdx)
    42af:	73 75                	jae    4326 <_IO_stdin_used+0x326>
    42b1:	6c                   	insb   (%dx),%es:(%rdi)
    42b2:	74 73                	je     4327 <_IO_stdin_used+0x327>
    42b4:	20 6f 6e             	and    %ch,0x6e(%rdi)
    42b7:	20 61 20             	and    %ah,0x20(%rcx)
    42ba:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    42be:	6e                   	outsb  %ds:(%rsi),(%dx)
    42bf:	20 70 6c             	and    %dh,0x6c(%rax)
    42c2:	61                   	(bad)  
    42c3:	74 66                	je     432b <_IO_stdin_used+0x32b>
    42c5:	6f                   	outsl  %ds:(%rsi),(%dx)
    42c6:	72 6d                	jb     4335 <_IO_stdin_used+0x335>
    42c8:	2e 00 43 6f          	add    %al,%cs:0x6f(%rbx)
    42cc:	72 65                	jb     4333 <_IO_stdin_used+0x333>
    42ce:	4d 61                	rex.WRB (bad) 
    42d0:	72 6b                	jb     433d <_IO_stdin_used+0x33d>
    42d2:	20 53 69             	and    %dl,0x69(%rbx)
    42d5:	7a 65                	jp     433c <_IO_stdin_used+0x33c>
    42d7:	20 20                	and    %ah,(%rax)
    42d9:	20 20                	and    %ah,(%rax)
    42db:	3a 20                	cmp    (%rax),%ah
    42dd:	25 6c 75 0a 00       	and    $0xa756c,%eax
    42e2:	54                   	push   %rsp
    42e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    42e4:	74 61                	je     4347 <_IO_stdin_used+0x347>
    42e6:	6c                   	insb   (%dx),%es:(%rdi)
    42e7:	20 74 69 63          	and    %dh,0x63(%rcx,%rbp,2)
    42eb:	6b 73 20 20          	imul   $0x20,0x20(%rbx),%esi
    42ef:	20 20                	and    %ah,(%rax)
    42f1:	20 20                	and    %ah,(%rax)
    42f3:	3a 20                	cmp    (%rax),%ah
    42f5:	25 6c 75 0a 00       	and    $0xa756c,%eax
    42fa:	54                   	push   %rsp
    42fb:	6f                   	outsl  %ds:(%rsi),(%dx)
    42fc:	74 61                	je     435f <_IO_stdin_used+0x35f>
    42fe:	6c                   	insb   (%dx),%es:(%rdi)
    42ff:	20 74 69 6d          	and    %dh,0x6d(%rcx,%rbp,2)
    4303:	65 20 28             	and    %ch,%gs:(%rax)
    4306:	73 65                	jae    436d <_IO_stdin_used+0x36d>
    4308:	63 73 29             	movslq 0x29(%rbx),%esi
    430b:	3a 20                	cmp    (%rax),%ah
    430d:	25 66 0a 00 49       	and    $0x49000a66,%eax
    4312:	74 65                	je     4379 <_IO_stdin_used+0x379>
    4314:	72 61                	jb     4377 <_IO_stdin_used+0x377>
    4316:	74 69                	je     4381 <_IO_stdin_used+0x381>
    4318:	6f                   	outsl  %ds:(%rsi),(%dx)
    4319:	6e                   	outsb  %ds:(%rsi),(%dx)
    431a:	73 2f                	jae    434b <_IO_stdin_used+0x34b>
    431c:	53                   	push   %rbx
    431d:	65 63 20             	movslq %gs:(%rax),%esp
    4320:	20 20                	and    %ah,(%rax)
    4322:	3a 20                	cmp    (%rax),%ah
    4324:	25 66 0a 00 49       	and    $0x49000a66,%eax
    4329:	74 65                	je     4390 <_IO_stdin_used+0x390>
    432b:	72 61                	jb     438e <_IO_stdin_used+0x38e>
    432d:	74 69                	je     4398 <_IO_stdin_used+0x398>
    432f:	6f                   	outsl  %ds:(%rsi),(%dx)
    4330:	6e                   	outsb  %ds:(%rsi),(%dx)
    4331:	73 20                	jae    4353 <_IO_stdin_used+0x353>
    4333:	20 20                	and    %ah,(%rax)
    4335:	20 20                	and    %ah,(%rax)
    4337:	20 20                	and    %ah,(%rax)
    4339:	3a 20                	cmp    (%rax),%ah
    433b:	25 6c 75 0a 00       	and    $0xa756c,%eax
    4340:	47                   	rex.RXB
    4341:	43                   	rex.XB
    4342:	43 39 2e             	rex.XB cmp %ebp,(%r14)
    4345:	34 2e                	xor    $0x2e,%al
    4347:	30 00                	xor    %al,(%rax)
    4349:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    434b:	6d                   	insl   (%dx),%es:(%rdi)
    434c:	70 69                	jo     43b7 <_IO_stdin_used+0x3b7>
    434e:	6c                   	insb   (%dx),%es:(%rdi)
    434f:	65 72 20             	gs jb  4372 <_IO_stdin_used+0x372>
    4352:	76 65                	jbe    43b9 <_IO_stdin_used+0x3b9>
    4354:	72 73                	jb     43c9 <_IO_stdin_used+0x3c9>
    4356:	69 6f 6e 20 3a 20 25 	imul   $0x25203a20,0x6e(%rdi),%ebp
    435d:	73 0a                	jae    4369 <_IO_stdin_used+0x369>
    435f:	00 2d 4f 32 20 20    	add    %ch,0x2020324f(%rip)        # 202075b4 <_end+0x20200544>
    4365:	20 2d 6c 72 74 00    	and    %ch,0x74726c(%rip)        # 74b5d7 <_end+0x744567>
    436b:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    436d:	6d                   	insl   (%dx),%es:(%rdi)
    436e:	70 69                	jo     43d9 <_IO_stdin_used+0x3d9>
    4370:	6c                   	insb   (%dx),%es:(%rdi)
    4371:	65 72 20             	gs jb  4394 <_IO_stdin_used+0x394>
    4374:	66 6c                	data16 insb (%dx),%es:(%rdi)
    4376:	61                   	(bad)  
    4377:	67 73 20             	addr32 jae 439a <_IO_stdin_used+0x39a>
    437a:	20 20                	and    %ah,(%rax)
    437c:	3a 20                	cmp    (%rax),%ah
    437e:	25 73 0a 00 4d       	and    $0x4d000a73,%eax
    4383:	65 6d                	gs insl (%dx),%es:(%rdi)
    4385:	6f                   	outsl  %ds:(%rsi),(%dx)
    4386:	72 79                	jb     4401 <_IO_stdin_used+0x401>
    4388:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    438c:	61                   	(bad)  
    438d:	74 69                	je     43f8 <_IO_stdin_used+0x3f8>
    438f:	6f                   	outsl  %ds:(%rsi),(%dx)
    4390:	6e                   	outsb  %ds:(%rsi),(%dx)
    4391:	20 20                	and    %ah,(%rax)
    4393:	3a 20                	cmp    (%rax),%ah
    4395:	25 73 0a 00 73       	and    $0x73000a73,%eax
    439a:	65 65 64 63 72 63    	gs gs movslq %fs:0x63(%rdx),%esi
    43a0:	20 20                	and    %ah,(%rax)
    43a2:	20 20                	and    %ah,(%rax)
    43a4:	20 20                	and    %ah,(%rax)
    43a6:	20 20                	and    %ah,(%rax)
    43a8:	20 20                	and    %ah,(%rax)
    43aa:	3a 20                	cmp    (%rax),%ah
    43ac:	30 78 25             	xor    %bh,0x25(%rax)
    43af:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    43b2:	0a 00                	or     (%rax),%al
    43b4:	5b                   	pop    %rbx
    43b5:	25 64 5d 63 72       	and    $0x72635d64,%eax
    43ba:	63 6c 69 73          	movslq 0x73(%rcx,%rbp,2),%ebp
    43be:	74 20                	je     43e0 <_IO_stdin_used+0x3e0>
    43c0:	20 20                	and    %ah,(%rax)
    43c2:	20 20                	and    %ah,(%rax)
    43c4:	20 20                	and    %ah,(%rax)
    43c6:	3a 20                	cmp    (%rax),%ah
    43c8:	30 78 25             	xor    %bh,0x25(%rax)
    43cb:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    43ce:	0a 00                	or     (%rax),%al
    43d0:	5b                   	pop    %rbx
    43d1:	25 64 5d 63 72       	and    $0x72635d64,%eax
    43d6:	63 6d 61             	movslq 0x61(%rbp),%ebp
    43d9:	74 72                	je     444d <_IO_stdin_used+0x44d>
    43db:	69 78 20 20 20 20 20 	imul   $0x20202020,0x20(%rax),%edi
    43e2:	3a 20                	cmp    (%rax),%ah
    43e4:	30 78 25             	xor    %bh,0x25(%rax)
    43e7:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    43ea:	0a 00                	or     (%rax),%al
    43ec:	5b                   	pop    %rbx
    43ed:	25 64 5d 63 72       	and    $0x72635d64,%eax
    43f2:	63 73 74             	movslq 0x74(%rbx),%esi
    43f5:	61                   	(bad)  
    43f6:	74 65                	je     445d <_IO_stdin_used+0x45d>
    43f8:	20 20                	and    %ah,(%rax)
    43fa:	20 20                	and    %ah,(%rax)
    43fc:	20 20                	and    %ah,(%rax)
    43fe:	3a 20                	cmp    (%rax),%ah
    4400:	30 78 25             	xor    %bh,0x25(%rax)
    4403:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4406:	0a 00                	or     (%rax),%al
    4408:	5b                   	pop    %rbx
    4409:	25 64 5d 63 72       	and    $0x72635d64,%eax
    440e:	63 66 69             	movslq 0x69(%rsi),%esp
    4411:	6e                   	outsb  %ds:(%rsi),(%dx)
    4412:	61                   	(bad)  
    4413:	6c                   	insb   (%dx),%es:(%rdi)
    4414:	20 20                	and    %ah,(%rax)
    4416:	20 20                	and    %ah,(%rax)
    4418:	20 20                	and    %ah,(%rax)
    441a:	3a 20                	cmp    (%rax),%ah
    441c:	30 78 25             	xor    %bh,0x25(%rax)
    441f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    4422:	0a 00                	or     (%rax),%al
    4424:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    4426:	72 65                	jb     448d <list_known_crc+0x5>
    4428:	4d 61                	rex.WRB (bad) 
    442a:	72 6b                	jb     4497 <list_known_crc+0xf>
    442c:	20 31                	and    %dh,(%rcx)
    442e:	2e 30 20             	xor    %ah,%cs:(%rax)
    4431:	3a 20                	cmp    (%rax),%ah
    4433:	25 66 20 2f 20       	and    $0x202f2066,%eax
    4438:	25 73 20 25 73       	and    $0x73252073,%eax
    443d:	00 20                	add    %ah,(%rax)
    443f:	2f                   	(bad)  
    4440:	20 25 73 00 45 72    	and    %ah,0x72450073(%rip)        # 724544b9 <_end+0x7244d449>
    4446:	72 6f                	jb     44b7 <list_known_crc+0x2f>
    4448:	72 73                	jb     44bd <list_known_crc+0x35>
    444a:	20 64 65 74          	and    %ah,0x74(%rbp,%riz,2)
    444e:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    4453:	00 53 74             	add    %dl,0x74(%rbx)
    4456:	61                   	(bad)  
    4457:	74 69                	je     44c2 <list_known_crc+0x3a>
    4459:	63 00                	movslq (%rax),%eax
    445b:	48                   	rex.W
    445c:	65 61                	gs (bad) 
    445e:	70 00                	jo     4460 <_IO_stdin_used+0x460>
    4460:	53                   	push   %rbx
    4461:	74 61                	je     44c4 <list_known_crc+0x3c>
    4463:	63 6b 00             	movslq 0x0(%rbx),%ebp
	...

0000000000004468 <state_known_crc>:
    4468:	47 5e                	rex.RXB pop %r14
    446a:	bf 39 a4 e5 3a       	mov    $0x3ae5a439,%edi
    446f:	8e 84 8d 00 00 00 00 	mov    0x0(%rbp,%rcx,4),%es
	...

0000000000004478 <matrix_known_crc>:
    4478:	52                   	push   %rdx
    4479:	be 99 11 08 56       	mov    $0x56081199,%esi
    447e:	d7                   	xlat   %ds:(%rbx)
    447f:	1f                   	(bad)  
    4480:	47 07                	rex.RXB (bad) 
    4482:	00 00                	add    %al,(%rax)
    4484:	00 00                	add    %al,(%rax)
	...

0000000000004488 <list_known_crc>:
    4488:	b0 d4                	mov    $0xd4,%al
    448a:	40 33 79 6a          	rex xor 0x6a(%rcx),%edi
    448e:	14 e7                	adc    $0xe7,%al
    4490:	c1 e3 00             	shl    $0x0,%ebx
	...
    449b:	00 00                	add    %al,(%rax)
    449d:	00 f0                	add    %dh,%al
    449f:	3f                   	(bad)  
	...
    44ac:	00 00                	add    %al,(%rax)
    44ae:	24 40                	and    $0x40,%al
    44b0:	54                   	push   %rsp
    44b1:	30 2e                	xor    %ch,(%rsi)
    44b3:	33 65 2d             	xor    0x2d(%rbp),%esp
    44b6:	31 46 00             	xor    %eax,0x0(%rsi)
    44b9:	2d 54 2e 54 2b       	sub    $0x2b542e54,%eax
    44be:	2b 54 71 00          	sub    0x0(%rcx,%rsi,2),%edx
    44c2:	31 54 33 2e          	xor    %edx,0x2e(%rbx,%rsi,1)
    44c6:	34 65                	xor    $0x65,%al
    44c8:	34 7a                	xor    $0x7a,%al
    44ca:	00 33                	add    %dh,(%rbx)
    44cc:	34 2e                	xor    $0x2e,%al
    44ce:	30 65 2d             	xor    %ah,0x2d(%rbp)
    44d1:	54                   	push   %rsp
    44d2:	5e                   	pop    %rsi
    44d3:	00 35 2e 35 30 30    	add    %dh,0x3030352e(%rip)        # 30307a07 <_end+0x30300997>
    44d9:	65 2b 33             	sub    %gs:(%rbx),%esi
    44dc:	00 2d 2e 31 32 33    	add    %ch,0x3332312e(%rip)        # 33327610 <_end+0x333205a0>
    44e2:	65 2d 32 00 2d 38    	gs sub $0x382d0032,%eax
    44e8:	37                   	(bad)  
    44e9:	65 2b 38             	sub    %gs:(%rax),%edi
    44ec:	33 32                	xor    (%rdx),%esi
    44ee:	00 2b                	add    %ch,(%rbx)
    44f0:	30 2e                	xor    %ch,(%rsi)
    44f2:	36 65 2d 31 32 00 33 	ss gs sub $0x33003231,%eax
    44f9:	35 2e 35 34 34       	xor    $0x3434352e,%eax
    44fe:	30 30                	xor    %dh,(%rax)
    4500:	00 2e                	add    %ch,(%rsi)
    4502:	31 32                	xor    %esi,(%rdx)
    4504:	33 34 35 30 30 00 2d 	xor    0x2d003030(,%rsi,1),%esi
    450b:	31 31                	xor    %esi,(%rcx)
    450d:	30 2e                	xor    %ch,(%rsi)
    450f:	37                   	(bad)  
    4510:	30 30                	xor    %dh,(%rax)
    4512:	00 2b                	add    %ch,(%rbx)
    4514:	30 2e                	xor    %ch,(%rsi)
    4516:	36 34 34             	ss xor $0x34,%al
    4519:	30 30                	xor    %dh,(%rax)
    451b:	00 35 30 31 32 00    	add    %dh,0x323130(%rip)        # 327651 <_end+0x3205e1>
    4521:	31 32                	xor    %esi,(%rdx)
    4523:	33 34 00             	xor    (%rax,%rax,1),%esi
    4526:	2d 38 37 34 00       	sub    $0x343738,%eax
    452b:	2b 31                	sub    (%rcx),%esi
    452d:	32 32                	xor    (%rdx),%dh
    452f:	00 27                	add    %ah,(%rdi)
    4531:	ec                   	in     (%dx),%al
    4532:	ff                   	(bad)  
    4533:	ff f0                	push   %rax
    4535:	eb ff                	jmp    4536 <list_known_crc+0xae>
    4537:	ff 00                	incl   (%rax)
    4539:	ec                   	in     (%dx),%al
    453a:	ff                   	(bad)  
    453b:	ff 10                	callq  *(%rax)
    453d:	ec                   	in     (%dx),%al
    453e:	ff                   	(bad)  
    453f:	ff 20                	jmpq   *(%rax)
    4541:	ec                   	in     (%dx),%al
    4542:	ff                   	(bad)  
    4543:	ff e0                	jmpq   *%rax
    4545:	eb ff                	jmp    4546 <list_known_crc+0xbe>
    4547:	ff 00                	incl   (%rax)
    4549:	00 00                	add    %al,(%rax)
    454b:	00 00                	add    %al,(%rax)
    454d:	40                   	rex
    454e:	8f                   	.byte 0x8f
    454f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000004550 <__GNU_EH_FRAME_HDR>:
    4550:	01 1b                	add    %ebx,(%rbx)
    4552:	03 3b                	add    (%rbx),%edi
    4554:	7c 01                	jl     4557 <__GNU_EH_FRAME_HDR+0x7>
    4556:	00 00                	add    %al,(%rax)
    4558:	2e 00 00             	add    %al,%cs:(%rax)
    455b:	00 d0                	add    %dl,%al
    455d:	ca ff ff             	lret   $0xffff
    4560:	b0 01                	mov    $0x1,%al
    4562:	00 00                	add    %al,(%rax)
    4564:	50                   	push   %rax
    4565:	cb                   	lret   
    4566:	ff                   	(bad)  
    4567:	ff                   	(bad)  
    4568:	d8 01                	fadds  (%rcx)
    456a:	00 00                	add    %al,(%rax)
    456c:	60                   	(bad)  
    456d:	cb                   	lret   
    456e:	ff                   	(bad)  
    456f:	ff f0                	push   %rax
    4571:	01 00                	add    %eax,(%rax)
    4573:	00 d0                	add    %dl,%al
    4575:	cb                   	lret   
    4576:	ff                   	(bad)  
    4577:	ff 1c 04             	lcall  *(%rsp,%rax,1)
    457a:	00 00                	add    %al,(%rax)
    457c:	e0 d4                	loopne 4552 <__GNU_EH_FRAME_HDR+0x2>
    457e:	ff                   	(bad)  
    457f:	ff 98 01 00 00 d0    	lcall  *-0x2fffffff(%rax)
    4585:	d5                   	(bad)  
    4586:	ff                   	(bad)  
    4587:	ff 08                	decl   (%rax)
    4589:	02 00                	add    (%rax),%al
    458b:	00 20                	add    %ah,(%rax)
    458d:	d6                   	(bad)  
    458e:	ff                   	(bad)  
    458f:	ff 1c 02             	lcall  *(%rdx,%rax,1)
    4592:	00 00                	add    %al,(%rax)
    4594:	10 d7                	adc    %dl,%bh
    4596:	ff                   	(bad)  
    4597:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    459b:	00 40 d7             	add    %al,-0x29(%rax)
    459e:	ff                   	(bad)  
    459f:	ff 98 02 00 00 60    	lcall  *0x60000002(%rax)
    45a5:	d7                   	xlat   %ds:(%rbx)
    45a6:	ff                   	(bad)  
    45a7:	ff ac 02 00 00 b0 d7 	ljmp   *-0x28500000(%rdx,%rax,1)
    45ae:	ff                   	(bad)  
    45af:	ff c0                	inc    %eax
    45b1:	02 00                	add    (%rax),%al
    45b3:	00 e0                	add    %ah,%al
    45b5:	d7                   	xlat   %ds:(%rbx)
    45b6:	ff                   	(bad)  
    45b7:	ff d4                	callq  *%rsp
    45b9:	02 00                	add    (%rax),%al
    45bb:	00 10                	add    %dl,(%rax)
    45bd:	d8 ff                	fdivr  %st(7),%st
    45bf:	ff                   	(bad)  
    45c0:	e8 02 00 00 70       	callq  700045c7 <_end+0x6fffd557>
    45c5:	d8 ff                	fdivr  %st(7),%st
    45c7:	ff                   	(bad)  
    45c8:	fc                   	cld    
    45c9:	02 00                	add    (%rax),%al
    45cb:	00 a0 d8 ff ff 10    	add    %ah,0x10ffffd8(%rax)
    45d1:	03 00                	add    (%rax),%eax
    45d3:	00 e0                	add    %ah,%al
    45d5:	d9 ff                	fcos   
    45d7:	ff 5c 03 00          	lcall  *0x0(%rbx,%rax,1)
    45db:	00 10                	add    %dl,(%rax)
    45dd:	dc ff                	fdivr  %st,%st(7)
    45df:	ff a8 03 00 00 90    	ljmp   *-0x6ffffffd(%rax)
    45e5:	dd ff                	(bad)  
    45e7:	ff f0                	push   %rax
    45e9:	03 00                	add    (%rax),%eax
    45eb:	00 10                	add    %dl,(%rax)
    45ed:	de ff                	fdivrp %st,%st(7)
    45ef:	ff 70 04             	pushq  0x4(%rax)
    45f2:	00 00                	add    %al,(%rax)
    45f4:	40 df ff             	rex (bad) 
    45f7:	ff                   	(bad)  
    45f8:	b8 04 00 00 c0       	mov    $0xc0000004,%eax
    45fd:	df ff                	(bad)  
    45ff:	ff e0                	jmpq   *%rax
    4601:	04 00                	add    $0x0,%al
    4603:	00 10                	add    %dl,(%rax)
    4605:	e0 ff                	loopne 4606 <__GNU_EH_FRAME_HDR+0xb6>
    4607:	ff                   	(bad)  
    4608:	fc                   	cld    
    4609:	04 00                	add    $0x0,%al
    460b:	00 50 e0             	add    %dl,-0x20(%rax)
    460e:	ff                   	(bad)  
    460f:	ff 10                	callq  *(%rax)
    4611:	05 00 00 c0 e0       	add    $0xe0c00000,%eax
    4616:	ff                   	(bad)  
    4617:	ff 40 05             	incl   0x5(%rax)
    461a:	00 00                	add    %al,(%rax)
    461c:	60                   	(bad)  
    461d:	e1 ff                	loope  461e <__GNU_EH_FRAME_HDR+0xce>
    461f:	ff 80 05 00 00 10    	incl   0x10000005(%rax)
    4625:	e2 ff                	loop   4626 <__GNU_EH_FRAME_HDR+0xd6>
    4627:	ff c0                	inc    %eax
    4629:	05 00 00 60 e5       	add    $0xe5600000,%eax
    462e:	ff                   	(bad)  
    462f:	ff 24 06             	jmpq   *(%rsi,%rax,1)
    4632:	00 00                	add    %al,(%rax)
    4634:	90                   	nop
    4635:	e5 ff                	in     $0xff,%eax
    4637:	ff 40 06             	incl   0x6(%rax)
    463a:	00 00                	add    %al,(%rax)
    463c:	d0 e6                	shl    %dh
    463e:	ff                   	(bad)  
    463f:	ff 88 06 00 00 e0    	decl   -0x1ffffffa(%rax)
    4645:	e9 ff ff 9c 06       	jmpq   69d4649 <_end+0x69cd5d9>
    464a:	00 00                	add    %al,(%rax)
    464c:	a0 eb ff ff f0 06 00 	movabs 0x10000006f0ffffeb,%al
    4653:	00 10 
    4655:	ec                   	in     (%dx),%al
    4656:	ff                   	(bad)  
    4657:	ff 04 07             	incl   (%rdi,%rax,1)
    465a:	00 00                	add    %al,(%rax)
    465c:	40 ec                	in     (%dx),%al
    465e:	ff                   	(bad)  
    465f:	ff 18                	lcall  *(%rax)
    4661:	07                   	(bad)  
    4662:	00 00                	add    %al,(%rax)
    4664:	a0 ec ff ff 2c 07 00 	movabs 0xc00000072cffffec,%al
    466b:	00 c0 
    466d:	ec                   	in     (%dx),%al
    466e:	ff                   	(bad)  
    466f:	ff 40 07             	incl   0x7(%rax)
    4672:	00 00                	add    %al,(%rax)
    4674:	d0 ec                	shr    %ah
    4676:	ff                   	(bad)  
    4677:	ff 54 07 00          	callq  *0x0(%rdi,%rax,1)
    467b:	00 e0                	add    %ah,%al
    467d:	ec                   	in     (%dx),%al
    467e:	ff                   	(bad)  
    467f:	ff 68 07             	ljmp   *0x7(%rax)
    4682:	00 00                	add    %al,(%rax)
    4684:	f0 ec                	lock in (%dx),%al
    4686:	ff                   	(bad)  
    4687:	ff                   	(bad)  
    4688:	7c 07                	jl     4691 <__GNU_EH_FRAME_HDR+0x141>
    468a:	00 00                	add    %al,(%rax)
    468c:	00 ed                	add    %ch,%ch
    468e:	ff                   	(bad)  
    468f:	ff 90 07 00 00 20    	callq  *0x20000007(%rax)
    4695:	ed                   	in     (%dx),%eax
    4696:	ff                   	(bad)  
    4697:	ff a4 07 00 00 40 ed 	jmpq   *-0x12c00000(%rdi,%rax,1)
    469e:	ff                   	(bad)  
    469f:	ff                   	(bad)  
    46a0:	b8 07 00 00 90       	mov    $0x90000007,%eax
    46a5:	ed                   	in     (%dx),%eax
    46a6:	ff                   	(bad)  
    46a7:	ff cc                	dec    %esp
    46a9:	07                   	(bad)  
    46aa:	00 00                	add    %al,(%rax)
    46ac:	b0 ed                	mov    $0xed,%al
    46ae:	ff                   	(bad)  
    46af:	ff e0                	jmpq   *%rax
    46b1:	07                   	(bad)  
    46b2:	00 00                	add    %al,(%rax)
    46b4:	c0 ed ff             	shr    $0xff,%ch
    46b7:	ff f4                	push   %rsp
    46b9:	07                   	(bad)  
    46ba:	00 00                	add    %al,(%rax)
    46bc:	d0 ed                	shr    %ch
    46be:	ff                   	(bad)  
    46bf:	ff 08                	decl   (%rax)
    46c1:	08 00                	or     %al,(%rax)
    46c3:	00 40 ee             	add    %al,-0x12(%rax)
    46c6:	ff                   	(bad)  
    46c7:	ff 50 08             	callq  *0x8(%rax)
	...

Disassembly of section .eh_frame:

00000000000046d0 <__FRAME_END__-0x6e4>:
    46d0:	14 00                	adc    $0x0,%al
    46d2:	00 00                	add    %al,(%rax)
    46d4:	00 00                	add    %al,(%rax)
    46d6:	00 00                	add    %al,(%rax)
    46d8:	01 7a 52             	add    %edi,0x52(%rdx)
    46db:	00 01                	add    %al,(%rcx)
    46dd:	78 10                	js     46ef <__GNU_EH_FRAME_HDR+0x19f>
    46df:	01 1b                	add    %ebx,(%rbx)
    46e1:	0c 07                	or     $0x7,%al
    46e3:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    46e9:	00 00                	add    %al,(%rax)
    46eb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    46ee:	00 00                	add    %al,(%rax)
    46f0:	40 d3 ff             	sar    %cl,%edi
    46f3:	ff 2f                	ljmp   *(%rdi)
    46f5:	00 00                	add    %al,(%rax)
    46f7:	00 00                	add    %al,(%rax)
    46f9:	44 07                	rex.R (bad) 
    46fb:	10 00                	adc    %al,(%rax)
    46fd:	00 00                	add    %al,(%rax)
    46ff:	00 24 00             	add    %ah,(%rax,%rax,1)
    4702:	00 00                	add    %al,(%rax)
    4704:	34 00                	xor    $0x0,%al
    4706:	00 00                	add    %al,(%rax)
    4708:	18 c9                	sbb    %cl,%cl
    470a:	ff                   	(bad)  
    470b:	ff 80 00 00 00 00    	incl   0x0(%rax)
    4711:	0e                   	(bad)  
    4712:	10 46 0e             	adc    %al,0xe(%rsi)
    4715:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    4718:	0b 77 08             	or     0x8(%rdi),%esi
    471b:	80 00 3f             	addb   $0x3f,(%rax)
    471e:	1a 3a                	sbb    (%rdx),%bh
    4720:	2a 33                	sub    (%rbx),%dh
    4722:	24 22                	and    $0x22,%al
    4724:	00 00                	add    %al,(%rax)
    4726:	00 00                	add    %al,(%rax)
    4728:	14 00                	adc    $0x0,%al
    472a:	00 00                	add    %al,(%rax)
    472c:	5c                   	pop    %rsp
    472d:	00 00                	add    %al,(%rax)
    472f:	00 70 c9             	add    %dh,-0x37(%rax)
    4732:	ff                   	(bad)  
    4733:	ff 10                	callq  *(%rax)
	...
    473d:	00 00                	add    %al,(%rax)
    473f:	00 14 00             	add    %dl,(%rax,%rax,1)
    4742:	00 00                	add    %al,(%rax)
    4744:	74 00                	je     4746 <__GNU_EH_FRAME_HDR+0x1f6>
    4746:	00 00                	add    %al,(%rax)
    4748:	68 c9 ff ff 70       	pushq  $0x70ffffc9
	...
    4755:	00 00                	add    %al,(%rax)
    4757:	00 10                	add    %dl,(%rax)
    4759:	00 00                	add    %al,(%rax)
    475b:	00 8c 00 00 00 c0 d3 	add    %cl,-0x2c400000(%rax,%rax,1)
    4762:	ff                   	(bad)  
    4763:	ff 43 00             	incl   0x0(%rbx)
    4766:	00 00                	add    %al,(%rax)
    4768:	00 00                	add    %al,(%rax)
    476a:	00 00                	add    %al,(%rax)
    476c:	4c 00 00             	rex.WR add %r8b,(%rax)
    476f:	00 a0 00 00 00 fc    	add    %ah,-0x4000000(%rax)
    4775:	d3 ff                	sar    %cl,%edi
    4777:	ff f0                	push   %rax
    4779:	00 00                	add    %al,(%rax)
    477b:	00 00                	add    %al,(%rax)
    477d:	46 0e                	rex.RX (bad) 
    477f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    4785:	8c 03                	mov    %es,(%rbx)
    4787:	41 0e                	rex.B (bad) 
    4789:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
    478f:	83 05 44 0e 30 4b 0a 	addl   $0xa,0x4b300e44(%rip)        # 4b3055da <_end+0x4b2fe56a>
    4796:	0e                   	(bad)  
    4797:	28 46 0e             	sub    %al,0xe(%rsi)
    479a:	20 41 0e             	and    %al,0xe(%rcx)
    479d:	18 42 0e             	sbb    %al,0xe(%rdx)
    47a0:	10 42 0e             	adc    %al,0xe(%rdx)
    47a3:	08 44 0b 02          	or     %al,0x2(%rbx,%rcx,1)
    47a7:	7f 0a                	jg     47b3 <__GNU_EH_FRAME_HDR+0x263>
    47a9:	0e                   	(bad)  
    47aa:	28 41 0e             	sub    %al,0xe(%rcx)
    47ad:	20 41 0e             	and    %al,0xe(%rcx)
    47b0:	18 42 0e             	sbb    %al,0xe(%rdx)
    47b3:	10 42 0e             	adc    %al,0xe(%rdx)
    47b6:	08 43 0b             	or     %al,0xb(%rbx)
    47b9:	00 00                	add    %al,(%rax)
    47bb:	00 28                	add    %ch,(%rax)
    47bd:	00 00                	add    %al,(%rax)
    47bf:	00 f0                	add    %dh,%al
    47c1:	00 00                	add    %al,(%rax)
    47c3:	00 9c d4 ff ff 30 00 	add    %bl,0x30ffff(%rsp,%rdx,8)
    47ca:	00 00                	add    %al,(%rax)
    47cc:	00 46 0e             	add    %al,0xe(%rsi)
    47cf:	10 8c 02 47 0e 18 86 	adc    %cl,-0x79e7f1b9(%rdx,%rax,1)
    47d6:	03 44 0e 20          	add    0x20(%rsi,%rcx,1),%eax
    47da:	83 04 59 0e          	addl   $0xe,(%rcx,%rbx,2)
    47de:	18 41 0e             	sbb    %al,0xe(%rcx)
    47e1:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
    47e5:	00 00                	add    %al,(%rax)
    47e7:	00 10                	add    %dl,(%rax)
    47e9:	00 00                	add    %al,(%rax)
    47eb:	00 1c 01             	add    %bl,(%rcx,%rax,1)
    47ee:	00 00                	add    %al,(%rax)
    47f0:	a0 d4 ff ff 13 00 00 	movabs 0x13ffffd4,%al
    47f7:	00 00 
    47f9:	00 00                	add    %al,(%rax)
    47fb:	00 10                	add    %dl,(%rax)
    47fd:	00 00                	add    %al,(%rax)
    47ff:	00 30                	add    %dh,(%rax)
    4801:	01 00                	add    %eax,(%rax)
    4803:	00 ac d4 ff ff 4b 00 	add    %ch,0x4bffff(%rsp,%rdx,8)
    480a:	00 00                	add    %al,(%rax)
    480c:	00 00                	add    %al,(%rax)
    480e:	00 00                	add    %al,(%rax)
    4810:	10 00                	adc    %al,(%rax)
    4812:	00 00                	add    %al,(%rax)
    4814:	44 01 00             	add    %r8d,(%rax)
    4817:	00 e8                	add    %ch,%al
    4819:	d4                   	(bad)  
    481a:	ff                   	(bad)  
    481b:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 4821 <__GNU_EH_FRAME_HDR+0x2d1>
    4821:	00 00                	add    %al,(%rax)
    4823:	00 10                	add    %dl,(%rax)
    4825:	00 00                	add    %al,(%rax)
    4827:	00 58 01             	add    %bl,0x1(%rax)
    482a:	00 00                	add    %al,(%rax)
    482c:	04 d5                	add    $0xd5,%al
    482e:	ff                   	(bad)  
    482f:	ff 21                	jmpq   *(%rcx)
    4831:	00 00                	add    %al,(%rax)
    4833:	00 00                	add    %al,(%rax)
    4835:	00 00                	add    %al,(%rax)
    4837:	00 10                	add    %dl,(%rax)
    4839:	00 00                	add    %al,(%rax)
    483b:	00 6c 01 00          	add    %ch,0x0(%rcx,%rax,1)
    483f:	00 20                	add    %ah,(%rax)
    4841:	d5                   	(bad)  
    4842:	ff                   	(bad)  
    4843:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
    4847:	00 00                	add    %al,(%rax)
    4849:	00 00                	add    %al,(%rax)
    484b:	00 10                	add    %dl,(%rax)
    484d:	00 00                	add    %al,(%rax)
    484f:	00 80 01 00 00 6c    	add    %al,0x6c000001(%rax)
    4855:	d5                   	(bad)  
    4856:	ff                   	(bad)  
    4857:	ff 22                	jmpq   *(%rdx)
    4859:	00 00                	add    %al,(%rax)
    485b:	00 00                	add    %al,(%rax)
    485d:	00 00                	add    %al,(%rax)
    485f:	00 48 00             	add    %cl,0x0(%rax)
    4862:	00 00                	add    %al,(%rax)
    4864:	94                   	xchg   %eax,%esp
    4865:	01 00                	add    %eax,(%rax)
    4867:	00 88 d5 ff ff 39    	add    %cl,0x39ffffd5(%rax)
    486d:	01 00                	add    %eax,(%rax)
    486f:	00 00                	add    %al,(%rax)
    4871:	46 0e                	rex.RX (bad) 
    4873:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    4879:	8e 03                	mov    (%rbx),%es
    487b:	42 0e                	rex.X (bad) 
    487d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    4883:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863056ca <_end+0xffffffff862fe65a>
    4889:	06                   	(bad)  
    488a:	41 0e                	rex.B (bad) 
    488c:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
    4892:	03 08                	add    (%rax),%ecx
    4894:	01 0a                	add    %ecx,(%rdx)
    4896:	0e                   	(bad)  
    4897:	38 41 0e             	cmp    %al,0xe(%rcx)
    489a:	30 41 0e             	xor    %al,0xe(%rcx)
    489d:	28 42 0e             	sub    %al,0xe(%rdx)
    48a0:	20 42 0e             	and    %al,0xe(%rdx)
    48a3:	18 42 0e             	sbb    %al,0xe(%rdx)
    48a6:	10 42 0e             	adc    %al,0xe(%rdx)
    48a9:	08 41 0b             	or     %al,0xb(%rcx)
    48ac:	48 00 00             	rex.W add %al,(%rax)
    48af:	00 e0                	add    %ah,%al
    48b1:	01 00                	add    %eax,(%rax)
    48b3:	00 7c d6 ff          	add    %bh,-0x1(%rsi,%rdx,8)
    48b7:	ff 29                	ljmp   *(%rcx)
    48b9:	02 00                	add    (%rax),%al
    48bb:	00 00                	add    %al,(%rax)
    48bd:	46 0e                	rex.RX (bad) 
    48bf:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
    48c5:	8e 03                	mov    (%rbx),%es
    48c7:	45 0e                	rex.RB (bad) 
    48c9:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    48cf:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86305716 <_end+0xffffffff862fe6a6>
    48d5:	06                   	(bad)  
    48d6:	41 0e                	rex.B (bad) 
    48d8:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
    48de:	03 df                	add    %edi,%ebx
    48e0:	01 0a                	add    %ecx,(%rdx)
    48e2:	0e                   	(bad)  
    48e3:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
    48e7:	41 0e                	rex.B (bad) 
    48e9:	28 42 0e             	sub    %al,0xe(%rdx)
    48ec:	20 42 0e             	and    %al,0xe(%rdx)
    48ef:	18 42 0e             	sbb    %al,0xe(%rdx)
    48f2:	10 42 0e             	adc    %al,0xe(%rdx)
    48f5:	08 41 0b             	or     %al,0xb(%rcx)
    48f8:	44 00 00             	add    %r8b,(%rax)
    48fb:	00 2c 02             	add    %ch,(%rdx,%rax,1)
    48fe:	00 00                	add    %al,(%rax)
    4900:	60                   	(bad)  
    4901:	d8 ff                	fdivr  %st(7),%st
    4903:	ff                   	(bad)  
    4904:	7e 01                	jle    4907 <__GNU_EH_FRAME_HDR+0x3b7>
    4906:	00 00                	add    %al,(%rax)
    4908:	00 4e 0e             	add    %cl,0xe(%rsi)
    490b:	10 8f 02 4a 0e 18    	adc    %cl,0x180e4a02(%rdi)
    4911:	8e 03                	mov    (%rbx),%es
    4913:	49 0e                	rex.WB (bad) 
    4915:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    491b:	8c 05 45 0e 30 86    	mov    %es,-0x79cff1bb(%rip)        # ffffffff86305766 <_end+0xffffffff862fe6f6>
    4921:	06                   	(bad)  
    4922:	48 0e                	rex.W (bad) 
    4924:	38 83 07 03 26 01    	cmp    %al,0x1260307(%rbx)
    492a:	0a 0e                	or     (%rsi),%cl
    492c:	30 46 0e             	xor    %al,0xe(%rsi)
    492f:	28 49 0e             	sub    %cl,0xe(%rcx)
    4932:	20 42 0e             	and    %al,0xe(%rdx)
    4935:	18 42 0e             	sbb    %al,0xe(%rdx)
    4938:	10 42 0e             	adc    %al,0xe(%rdx)
    493b:	08 45 0b             	or     %al,0xb(%rbp)
    493e:	00 00                	add    %al,(%rax)
    4940:	28 00                	sub    %al,(%rax)
    4942:	00 00                	add    %al,(%rax)
    4944:	74 02                	je     4948 <__GNU_EH_FRAME_HDR+0x3f8>
    4946:	00 00                	add    %al,(%rax)
    4948:	98                   	cwtl   
    4949:	d9 ff                	fcos   
    494b:	ff 71 00             	pushq  0x0(%rcx)
    494e:	00 00                	add    %al,(%rax)
    4950:	00 46 0e             	add    %al,0xe(%rsi)
    4953:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    495a:	03 41 0e             	add    0xe(%rcx),%eax
    495d:	20 83 04 02 63 0e    	and    %al,0xe630204(%rbx)
    4963:	18 43 0e             	sbb    %al,0xe(%rbx)
    4966:	10 42 0e             	adc    %al,0xe(%rdx)
    4969:	08 00                	or     %al,(%rax)
    496b:	00 50 00             	add    %dl,0x0(%rax)
    496e:	00 00                	add    %al,(%rax)
    4970:	a0 02 00 00 ac c7 ff 	movabs 0xdffffc7ac000002,%al
    4977:	ff 0d 
    4979:	09 00                	or     %eax,(%rax)
    497b:	00 00                	add    %al,(%rax)
    497d:	46 0e                	rex.RX (bad) 
    497f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    4985:	8e 03                	mov    (%rbx),%es
    4987:	42 0e                	rex.X (bad) 
    4989:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    498f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863057d6 <_end+0xffffffff862fe766>
    4995:	06                   	(bad)  
    4996:	41 0e                	rex.B (bad) 
    4998:	38 83 07 47 0e f0    	cmp    %al,-0xff1b8f9(%rbx)
    499e:	01 03                	add    %eax,(%rbx)
    49a0:	c7 07 0a 0e 38 43    	movl   $0x43380e0a,(%rdi)
    49a6:	0e                   	(bad)  
    49a7:	30 41 0e             	xor    %al,0xe(%rcx)
    49aa:	28 42 0e             	sub    %al,0xe(%rdx)
    49ad:	20 42 0e             	and    %al,0xe(%rdx)
    49b0:	18 42 0e             	sbb    %al,0xe(%rdx)
    49b3:	10 42 0e             	adc    %al,0xe(%rdx)
    49b6:	08 41 0b             	or     %al,0xb(%rcx)
    49b9:	00 00                	add    %al,(%rax)
    49bb:	00 00                	add    %al,(%rax)
    49bd:	00 00                	add    %al,(%rax)
    49bf:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    49c3:	00 f4                	add    %dh,%ah
    49c5:	02 00                	add    (%rax),%al
    49c7:	00 98 d9 ff ff 30    	add    %bl,0x30ffffd9(%rax)
    49cd:	01 00                	add    %eax,(%rax)
    49cf:	00 00                	add    %al,(%rax)
    49d1:	51                   	push   %rcx
    49d2:	0e                   	(bad)  
    49d3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    49d9:	8e 03                	mov    (%rbx),%es
    49db:	45 0e                	rex.RB (bad) 
    49dd:	20 8d 04 46 0e 28    	and    %cl,0x280e4604(%rbp)
    49e3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8630582a <_end+0xffffffff862fe7ba>
    49e9:	06                   	(bad)  
    49ea:	41 0e                	rex.B (bad) 
    49ec:	38 83 07 02 d9 0a    	cmp    %al,0xad90207(%rbx)
    49f2:	0e                   	(bad)  
    49f3:	30 41 0e             	xor    %al,0xe(%rcx)
    49f6:	28 45 0e             	sub    %al,0xe(%rbp)
    49f9:	20 45 0e             	and    %al,0xe(%rbp)
    49fc:	18 42 0e             	sbb    %al,0xe(%rdx)
    49ff:	10 42 0e             	adc    %al,0xe(%rdx)
    4a02:	08 41 0b             	or     %al,0xb(%rcx)
    4a05:	00 00                	add    %al,(%rax)
    4a07:	00 24 00             	add    %ah,(%rax,%rax,1)
    4a0a:	00 00                	add    %al,(%rax)
    4a0c:	3c 03                	cmp    $0x3,%al
    4a0e:	00 00                	add    %al,(%rax)
    4a10:	80 da ff             	sbb    $0xff,%dl
    4a13:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
    4a17:	00 00                	add    %al,(%rax)
    4a19:	49 0e                	rex.WB (bad) 
    4a1b:	10 86 02 4a 0e 18    	adc    %al,0x180e4a02(%rsi)
    4a21:	83 03 02             	addl   $0x2,(%rbx)
    4a24:	58                   	pop    %rax
    4a25:	0e                   	(bad)  
    4a26:	10 41 0e             	adc    %al,0xe(%rcx)
    4a29:	08 41 c3             	or     %al,-0x3d(%rcx)
    4a2c:	c6 00 00             	movb   $0x0,(%rax)
    4a2f:	00 18                	add    %bl,(%rax)
    4a31:	00 00                	add    %al,(%rax)
    4a33:	00 64 03 00          	add    %ah,0x0(%rbx,%rax,1)
    4a37:	00 d8                	add    %bl,%al
    4a39:	da ff                	(bad)  
    4a3b:	ff 49 00             	decl   0x0(%rcx)
    4a3e:	00 00                	add    %al,(%rax)
    4a40:	00 49 0e             	add    %cl,0xe(%rcx)
    4a43:	10 83 02 7e 0e 08    	adc    %al,0x80e7e02(%rbx)
    4a49:	41 c3                	rex.B retq 
    4a4b:	00 10                	add    %dl,(%rax)
    4a4d:	00 00                	add    %al,(%rax)
    4a4f:	00 80 03 00 00 0c    	add    %al,0xc000003(%rax)
    4a55:	db ff                	(bad)  
    4a57:	ff                   	(bad)  
    4a58:	3d 00 00 00 00       	cmp    $0x0,%eax
    4a5d:	00 00                	add    %al,(%rax)
    4a5f:	00 2c 00             	add    %ch,(%rax,%rax,1)
    4a62:	00 00                	add    %al,(%rax)
    4a64:	94                   	xchg   %eax,%esp
    4a65:	03 00                	add    (%rax),%eax
    4a67:	00 38                	add    %bh,(%rax)
    4a69:	db ff                	(bad)  
    4a6b:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
    4a6f:	00 00                	add    %al,(%rax)
    4a71:	4d 0e                	rex.WRB (bad) 
    4a73:	10 8c 02 44 0e 18 86 	adc    %cl,-0x79e7f1bc(%rdx,%rax,1)
    4a7a:	03 4c 0e 20          	add    0x20(%rsi,%rcx,1),%ecx
    4a7e:	83 04 02 42          	addl   $0x42,(%rdx,%rax,1)
    4a82:	0e                   	(bad)  
    4a83:	18 41 0e             	sbb    %al,0xe(%rcx)
    4a86:	10 42 0e             	adc    %al,0xe(%rdx)
    4a89:	08 41 c3             	or     %al,-0x3d(%rcx)
    4a8c:	c6                   	(bad)  
    4a8d:	cc                   	int3   
    4a8e:	00 00                	add    %al,(%rax)
    4a90:	3c 00                	cmp    $0x0,%al
    4a92:	00 00                	add    %al,(%rax)
    4a94:	c4 03 00 00          	(bad)
    4a98:	78 db                	js     4a75 <__GNU_EH_FRAME_HDR+0x525>
    4a9a:	ff                   	(bad)  
    4a9b:	ff 9e 00 00 00 00    	lcall  *0x0(%rsi)
    4aa1:	4e 0e                	rex.WRX (bad) 
    4aa3:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    4aa9:	8d 03                	lea    (%rbx),%eax
    4aab:	48 0e                	rex.W (bad) 
    4aad:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    4ab4:	05 43 0e 30 83       	add    $0x83300e43,%eax
    4ab9:	06                   	(bad)  
    4aba:	02 6d 0e             	add    0xe(%rbp),%ch
    4abd:	28 41 0e             	sub    %al,0xe(%rcx)
    4ac0:	20 42 0e             	and    %al,0xe(%rdx)
    4ac3:	18 42 0e             	sbb    %al,0xe(%rdx)
    4ac6:	10 42 0e             	adc    %al,0xe(%rdx)
    4ac9:	08 41 c3             	or     %al,-0x3d(%rcx)
    4acc:	c6                   	(bad)  
    4acd:	cc                   	int3   
    4ace:	cd ce                	int    $0xce
    4ad0:	3c 00                	cmp    $0x0,%al
    4ad2:	00 00                	add    %al,(%rax)
    4ad4:	04 04                	add    $0x4,%al
    4ad6:	00 00                	add    %al,(%rax)
    4ad8:	d8 db                	fcomp  %st(3)
    4ada:	ff                   	(bad)  
    4adb:	ff ae 00 00 00 00    	ljmp   *0x0(%rsi)
    4ae1:	4e 0e                	rex.WRX (bad) 
    4ae3:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    4ae9:	8d 03                	lea    (%rbx),%eax
    4aeb:	48 0e                	rex.W (bad) 
    4aed:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    4af4:	05 43 0e 30 83       	add    $0x83300e43,%eax
    4af9:	06                   	(bad)  
    4afa:	02 7d 0e             	add    0xe(%rbp),%bh
    4afd:	28 41 0e             	sub    %al,0xe(%rcx)
    4b00:	20 42 0e             	and    %al,0xe(%rdx)
    4b03:	18 42 0e             	sbb    %al,0xe(%rdx)
    4b06:	10 42 0e             	adc    %al,0xe(%rdx)
    4b09:	08 41 c3             	or     %al,-0x3d(%rcx)
    4b0c:	c6                   	(bad)  
    4b0d:	cc                   	int3   
    4b0e:	cd ce                	int    $0xce
    4b10:	60                   	(bad)  
    4b11:	00 00                	add    %al,(%rax)
    4b13:	00 44 04 00          	add    %al,0x0(%rsp,%rax,1)
    4b17:	00 48 dc             	add    %cl,-0x24(%rax)
    4b1a:	ff                   	(bad)  
    4b1b:	ff 46 03             	incl   0x3(%rsi)
    4b1e:	00 00                	add    %al,(%rax)
    4b20:	00 46 0e             	add    %al,0xe(%rsi)
    4b23:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    4b29:	8e 03                	mov    (%rbx),%es
    4b2b:	42 0e                	rex.X (bad) 
    4b2d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    4b33:	8c 05 4a 0e 30 86    	mov    %es,-0x79cff1b6(%rip)        # ffffffff86305983 <_end+0xffffffff862fe913>
    4b39:	06                   	(bad)  
    4b3a:	44 0e                	rex.R (bad) 
    4b3c:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
    4b42:	03 ab 02 0a 0e 38    	add    0x380e0a02(%rbx),%ebp
    4b48:	41 0e                	rex.B (bad) 
    4b4a:	30 41 0e             	xor    %al,0xe(%rcx)
    4b4d:	28 42 0e             	sub    %al,0xe(%rdx)
    4b50:	20 42 0e             	and    %al,0xe(%rdx)
    4b53:	18 42 0e             	sbb    %al,0xe(%rdx)
    4b56:	10 42 0e             	adc    %al,0xe(%rdx)
    4b59:	08 41 0b             	or     %al,0xb(%rcx)
    4b5c:	02 5b 0e             	add    0xe(%rbx),%bl
    4b5f:	38 46 0e             	cmp    %al,0xe(%rsi)
    4b62:	30 41 0e             	xor    %al,0xe(%rcx)
    4b65:	28 42 0e             	sub    %al,0xe(%rdx)
    4b68:	20 42 0e             	and    %al,0xe(%rdx)
    4b6b:	18 42 0e             	sbb    %al,0xe(%rdx)
    4b6e:	10 42 0e             	adc    %al,0xe(%rdx)
    4b71:	08 00                	or     %al,(%rax)
    4b73:	00 18                	add    %bl,(%rax)
    4b75:	00 00                	add    %al,(%rax)
    4b77:	00 a8 04 00 00 34    	add    %ch,0x34000004(%rax)
    4b7d:	df ff                	(bad)  
    4b7f:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 4b85 <__GNU_EH_FRAME_HDR+0x635>
    4b85:	45 0e                	rex.RB (bad) 
    4b87:	10 86 02 60 0e 08    	adc    %al,0x80e6002(%rsi)
    4b8d:	00 00                	add    %al,(%rax)
    4b8f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    4b93:	00 c4                	add    %al,%ah
    4b95:	04 00                	add    $0x0,%al
    4b97:	00 48 df             	add    %cl,-0x21(%rax)
    4b9a:	ff                   	(bad)  
    4b9b:	ff 37                	pushq  (%rdi)
    4b9d:	01 00                	add    %eax,(%rax)
    4b9f:	00 00                	add    %al,(%rax)
    4ba1:	4a 0e                	rex.WX (bad) 
    4ba3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    4ba9:	8e 03                	mov    (%rbx),%es
    4bab:	50                   	push   %rax
    4bac:	0e                   	(bad)  
    4bad:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    4bb3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863059fa <_end+0xffffffff862fe98a>
    4bb9:	06                   	(bad)  
    4bba:	43 0e                	rex.XB (bad) 
    4bbc:	38 83 07 02 c4 0a    	cmp    %al,0xac40207(%rbx)
    4bc2:	0e                   	(bad)  
    4bc3:	30 41 0e             	xor    %al,0xe(%rcx)
    4bc6:	28 42 0e             	sub    %al,0xe(%rdx)
    4bc9:	20 42 0e             	and    %al,0xe(%rdx)
    4bcc:	18 42 0e             	sbb    %al,0xe(%rdx)
    4bcf:	10 42 0e             	adc    %al,0xe(%rdx)
    4bd2:	08 4a 0b             	or     %cl,0xb(%rdx)
    4bd5:	00 00                	add    %al,(%rax)
    4bd7:	00 10                	add    %dl,(%rax)
    4bd9:	00 00                	add    %al,(%rax)
    4bdb:	00 0c 05 00 00 40 e0 	add    %cl,-0x1fc00000(,%rax,1)
    4be2:	ff                   	(bad)  
    4be3:	ff 0a                	decl   (%rdx)
    4be5:	03 00                	add    (%rax),%eax
    4be7:	00 00                	add    %al,(%rax)
    4be9:	00 00                	add    %al,(%rax)
    4beb:	00 50 00             	add    %dl,0x0(%rax)
    4bee:	00 00                	add    %al,(%rax)
    4bf0:	20 05 00 00 3c e3    	and    %al,-0x1cc40000(%rip)        # ffffffffe33c4bf6 <_end+0xffffffffe33bdb86>
    4bf6:	ff                   	(bad)  
    4bf7:	ff b7 01 00 00 00    	pushq  0x1(%rdi)
    4bfd:	46 0e                	rex.RX (bad) 
    4bff:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
    4c05:	8e 03                	mov    (%rbx),%es
    4c07:	45 0e                	rex.RB (bad) 
    4c09:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    4c0f:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86305a59 <_end+0xffffffff862fe9e9>
    4c15:	06                   	(bad)  
    4c16:	43 0e                	rex.XB (bad) 
    4c18:	38 83 07 44 0e b0    	cmp    %al,-0x4ff1bbf9(%rbx)
    4c1e:	01 03                	add    %eax,(%rbx)
    4c20:	65 01 0a             	add    %ecx,%gs:(%rdx)
    4c23:	0e                   	(bad)  
    4c24:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
    4c28:	41 0e                	rex.B (bad) 
    4c2a:	28 42 0e             	sub    %al,0xe(%rdx)
    4c2d:	20 42 0e             	and    %al,0xe(%rdx)
    4c30:	18 42 0e             	sbb    %al,0xe(%rdx)
    4c33:	10 42 0e             	adc    %al,0xe(%rdx)
    4c36:	08 41 0b             	or     %al,0xb(%rcx)
    4c39:	00 00                	add    %al,(%rax)
    4c3b:	00 00                	add    %al,(%rax)
    4c3d:	00 00                	add    %al,(%rax)
    4c3f:	00 10                	add    %dl,(%rax)
    4c41:	00 00                	add    %al,(%rax)
    4c43:	00 74 05 00          	add    %dh,0x0(%rbp,%rax,1)
    4c47:	00 a8 e4 ff ff 6a    	add    %ch,0x6affffe4(%rax)
    4c4d:	00 00                	add    %al,(%rax)
    4c4f:	00 00                	add    %al,(%rax)
    4c51:	00 00                	add    %al,(%rax)
    4c53:	00 10                	add    %dl,(%rax)
    4c55:	00 00                	add    %al,(%rax)
    4c57:	00 88 05 00 00 04    	add    %cl,0x4000005(%rax)
    4c5d:	e5 ff                	in     $0xff,%eax
    4c5f:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 4c65 <__GNU_EH_FRAME_HDR+0x715>
    4c65:	00 00                	add    %al,(%rax)
    4c67:	00 10                	add    %dl,(%rax)
    4c69:	00 00                	add    %al,(%rax)
    4c6b:	00 9c 05 00 00 20 e5 	add    %bl,-0x1ae00000(%rbp,%rax,1)
    4c72:	ff                   	(bad)  
    4c73:	ff 5d 00             	lcall  *0x0(%rbp)
    4c76:	00 00                	add    %al,(%rax)
    4c78:	00 00                	add    %al,(%rax)
    4c7a:	00 00                	add    %al,(%rax)
    4c7c:	10 00                	adc    %al,(%rax)
    4c7e:	00 00                	add    %al,(%rax)
    4c80:	b0 05                	mov    $0x5,%al
    4c82:	00 00                	add    %al,(%rax)
    4c84:	6c                   	insb   (%dx),%es:(%rdi)
    4c85:	e5 ff                	in     $0xff,%eax
    4c87:	ff 1d 00 00 00 00    	lcall  *0x0(%rip)        # 4c8d <__GNU_EH_FRAME_HDR+0x73d>
    4c8d:	00 00                	add    %al,(%rax)
    4c8f:	00 10                	add    %dl,(%rax)
    4c91:	00 00                	add    %al,(%rax)
    4c93:	00 c4                	add    %al,%ah
    4c95:	05 00 00 78 e5       	add    $0xe5780000,%eax
    4c9a:	ff                   	(bad)  
    4c9b:	ff 0f                	decl   (%rdi)
    4c9d:	00 00                	add    %al,(%rax)
    4c9f:	00 00                	add    %al,(%rax)
    4ca1:	00 00                	add    %al,(%rax)
    4ca3:	00 10                	add    %dl,(%rax)
    4ca5:	00 00                	add    %al,(%rax)
    4ca7:	00 d8                	add    %bl,%al
    4ca9:	05 00 00 74 e5       	add    $0xe5740000,%eax
    4cae:	ff                   	(bad)  
    4caf:	ff 07                	incl   (%rdi)
    4cb1:	00 00                	add    %al,(%rax)
    4cb3:	00 00                	add    %al,(%rax)
    4cb5:	00 00                	add    %al,(%rax)
    4cb7:	00 10                	add    %dl,(%rax)
    4cb9:	00 00                	add    %al,(%rax)
    4cbb:	00 ec                	add    %ch,%ah
    4cbd:	05 00 00 70 e5       	add    $0xe5700000,%eax
    4cc2:	ff                   	(bad)  
    4cc3:	ff 09                	decl   (%rcx)
    4cc5:	00 00                	add    %al,(%rax)
    4cc7:	00 00                	add    %al,(%rax)
    4cc9:	00 00                	add    %al,(%rax)
    4ccb:	00 10                	add    %dl,(%rax)
    4ccd:	00 00                	add    %al,(%rax)
    4ccf:	00 00                	add    %al,(%rax)
    4cd1:	06                   	(bad)  
    4cd2:	00 00                	add    %al,(%rax)
    4cd4:	6c                   	insb   (%dx),%es:(%rdi)
    4cd5:	e5 ff                	in     $0xff,%eax
    4cd7:	ff 09                	decl   (%rcx)
    4cd9:	00 00                	add    %al,(%rax)
    4cdb:	00 00                	add    %al,(%rax)
    4cdd:	00 00                	add    %al,(%rax)
    4cdf:	00 10                	add    %dl,(%rax)
    4ce1:	00 00                	add    %al,(%rax)
    4ce3:	00 14 06             	add    %dl,(%rsi,%rax,1)
    4ce6:	00 00                	add    %al,(%rax)
    4ce8:	68 e5 ff ff 12       	pushq  $0x12ffffe5
    4ced:	00 00                	add    %al,(%rax)
    4cef:	00 00                	add    %al,(%rax)
    4cf1:	00 00                	add    %al,(%rax)
    4cf3:	00 10                	add    %dl,(%rax)
    4cf5:	00 00                	add    %al,(%rax)
    4cf7:	00 28                	add    %ch,(%rax)
    4cf9:	06                   	(bad)  
    4cfa:	00 00                	add    %al,(%rax)
    4cfc:	74 e5                	je     4ce3 <__GNU_EH_FRAME_HDR+0x793>
    4cfe:	ff                   	(bad)  
    4cff:	ff 12                	callq  *(%rdx)
    4d01:	00 00                	add    %al,(%rax)
    4d03:	00 00                	add    %al,(%rax)
    4d05:	00 00                	add    %al,(%rax)
    4d07:	00 10                	add    %dl,(%rax)
    4d09:	00 00                	add    %al,(%rax)
    4d0b:	00 3c 06             	add    %bh,(%rsi,%rax,1)
    4d0e:	00 00                	add    %al,(%rax)
    4d10:	80 e5 ff             	and    $0xff,%ch
    4d13:	ff 47 00             	incl   0x0(%rdi)
    4d16:	00 00                	add    %al,(%rax)
    4d18:	00 00                	add    %al,(%rax)
    4d1a:	00 00                	add    %al,(%rax)
    4d1c:	10 00                	adc    %al,(%rax)
    4d1e:	00 00                	add    %al,(%rax)
    4d20:	50                   	push   %rax
    4d21:	06                   	(bad)  
    4d22:	00 00                	add    %al,(%rax)
    4d24:	bc e5 ff ff 16       	mov    $0x16ffffe5,%esp
    4d29:	00 00                	add    %al,(%rax)
    4d2b:	00 00                	add    %al,(%rax)
    4d2d:	00 00                	add    %al,(%rax)
    4d2f:	00 10                	add    %dl,(%rax)
    4d31:	00 00                	add    %al,(%rax)
    4d33:	00 64 06 00          	add    %ah,0x0(%rsi,%rax,1)
    4d37:	00 c8                	add    %cl,%al
    4d39:	e5 ff                	in     $0xff,%eax
    4d3b:	ff 08                	decl   (%rax)
    4d3d:	00 00                	add    %al,(%rax)
    4d3f:	00 00                	add    %al,(%rax)
    4d41:	00 00                	add    %al,(%rax)
    4d43:	00 10                	add    %dl,(%rax)
    4d45:	00 00                	add    %al,(%rax)
    4d47:	00 78 06             	add    %bh,0x6(%rax)
    4d4a:	00 00                	add    %al,(%rax)
    4d4c:	c4                   	(bad)  
    4d4d:	e5 ff                	in     $0xff,%eax
    4d4f:	ff 08                	decl   (%rax)
    4d51:	00 00                	add    %al,(%rax)
    4d53:	00 00                	add    %al,(%rax)
    4d55:	00 00                	add    %al,(%rax)
    4d57:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    4d5b:	00 8c 06 00 00 c0 e5 	add    %cl,-0x1a400000(%rsi,%rax,1)
    4d62:	ff                   	(bad)  
    4d63:	ff 65 00             	jmpq   *0x0(%rbp)
    4d66:	00 00                	add    %al,(%rax)
    4d68:	00 46 0e             	add    %al,0xe(%rsi)
    4d6b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    4d71:	8e 03                	mov    (%rbx),%es
    4d73:	45 0e                	rex.RB (bad) 
    4d75:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    4d7b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86305bc5 <_end+0xffffffff862feb55>
    4d81:	06                   	(bad)  
    4d82:	48 0e                	rex.W (bad) 
    4d84:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    4d8a:	6e                   	outsb  %ds:(%rsi),(%dx)
    4d8b:	0e                   	(bad)  
    4d8c:	38 41 0e             	cmp    %al,0xe(%rcx)
    4d8f:	30 41 0e             	xor    %al,0xe(%rcx)
    4d92:	28 42 0e             	sub    %al,0xe(%rdx)
    4d95:	20 42 0e             	and    %al,0xe(%rdx)
    4d98:	18 42 0e             	sbb    %al,0xe(%rdx)
    4d9b:	10 42 0e             	adc    %al,0xe(%rdx)
    4d9e:	08 00                	or     %al,(%rax)
    4da0:	10 00                	adc    %al,(%rax)
    4da2:	00 00                	add    %al,(%rax)
    4da4:	d4                   	(bad)  
    4da5:	06                   	(bad)  
    4da6:	00 00                	add    %al,(%rax)
    4da8:	e8 e5 ff ff 05       	callq  6004d92 <_end+0x5ffdd22>
    4dad:	00 00                	add    %al,(%rax)
    4daf:	00 00                	add    %al,(%rax)
    4db1:	00 00                	add    %al,(%rax)
	...

0000000000004db4 <__FRAME_END__>:
    4db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000006cf0 <__frame_dummy_init_array_entry>:
    6cf0:	10 1b                	adc    %bl,(%rbx)
    6cf2:	00 00                	add    %al,(%rax)
    6cf4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000006cf8 <__do_global_dtors_aux_fini_array_entry>:
    6cf8:	d0 1a                	rcrb   (%rdx)
    6cfa:	00 00                	add    %al,(%rax)
    6cfc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000006d00 <errpat>:
    6d00:	b0 44                	mov    $0x44,%al
    6d02:	00 00                	add    %al,(%rax)
    6d04:	00 00                	add    %al,(%rax)
    6d06:	00 00                	add    %al,(%rax)
    6d08:	b9 44 00 00 00       	mov    $0x44,%ecx
    6d0d:	00 00                	add    %al,(%rax)
    6d0f:	00 c2                	add    %al,%dl
    6d11:	44 00 00             	add    %r8b,(%rax)
    6d14:	00 00                	add    %al,(%rax)
    6d16:	00 00                	add    %al,(%rax)
    6d18:	cb                   	lret   
    6d19:	44 00 00             	add    %r8b,(%rax)
    6d1c:	00 00                	add    %al,(%rax)
	...

0000000000006d20 <scipat>:
    6d20:	d4                   	(bad)  
    6d21:	44 00 00             	add    %r8b,(%rax)
    6d24:	00 00                	add    %al,(%rax)
    6d26:	00 00                	add    %al,(%rax)
    6d28:	dd 44 00 00          	fldl   0x0(%rax,%rax,1)
    6d2c:	00 00                	add    %al,(%rax)
    6d2e:	00 00                	add    %al,(%rax)
    6d30:	e6 44                	out    %al,$0x44
    6d32:	00 00                	add    %al,(%rax)
    6d34:	00 00                	add    %al,(%rax)
    6d36:	00 00                	add    %al,(%rax)
    6d38:	ef                   	out    %eax,(%dx)
    6d39:	44 00 00             	add    %r8b,(%rax)
    6d3c:	00 00                	add    %al,(%rax)
	...

0000000000006d40 <floatpat>:
    6d40:	f8                   	clc    
    6d41:	44 00 00             	add    %r8b,(%rax)
    6d44:	00 00                	add    %al,(%rax)
    6d46:	00 00                	add    %al,(%rax)
    6d48:	01 45 00             	add    %eax,0x0(%rbp)
    6d4b:	00 00                	add    %al,(%rax)
    6d4d:	00 00                	add    %al,(%rax)
    6d4f:	00 0a                	add    %cl,(%rdx)
    6d51:	45 00 00             	add    %r8b,(%r8)
    6d54:	00 00                	add    %al,(%rax)
    6d56:	00 00                	add    %al,(%rax)
    6d58:	13 45 00             	adc    0x0(%rbp),%eax
    6d5b:	00 00                	add    %al,(%rax)
    6d5d:	00 00                	add    %al,(%rax)
	...

0000000000006d60 <intpat>:
    6d60:	1c 45                	sbb    $0x45,%al
    6d62:	00 00                	add    %al,(%rax)
    6d64:	00 00                	add    %al,(%rax)
    6d66:	00 00                	add    %al,(%rax)
    6d68:	21 45 00             	and    %eax,0x0(%rbp)
    6d6b:	00 00                	add    %al,(%rax)
    6d6d:	00 00                	add    %al,(%rax)
    6d6f:	00 26                	add    %ah,(%rsi)
    6d71:	45 00 00             	add    %r8b,(%r8)
    6d74:	00 00                	add    %al,(%rax)
    6d76:	00 00                	add    %al,(%rax)
    6d78:	2b 45 00             	sub    0x0(%rbp),%eax
    6d7b:	00 00                	add    %al,(%rax)
    6d7d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000006d80 <_DYNAMIC>:
    6d80:	01 00                	add    %eax,(%rax)
    6d82:	00 00                	add    %al,(%rax)
    6d84:	00 00                	add    %al,(%rax)
    6d86:	00 00                	add    %al,(%rax)
    6d88:	01 00                	add    %eax,(%rax)
    6d8a:	00 00                	add    %al,(%rax)
    6d8c:	00 00                	add    %al,(%rax)
    6d8e:	00 00                	add    %al,(%rax)
    6d90:	0c 00                	or     $0x0,%al
    6d92:	00 00                	add    %al,(%rax)
    6d94:	00 00                	add    %al,(%rax)
    6d96:	00 00                	add    %al,(%rax)
    6d98:	00 10                	add    %dl,(%rax)
    6d9a:	00 00                	add    %al,(%rax)
    6d9c:	00 00                	add    %al,(%rax)
    6d9e:	00 00                	add    %al,(%rax)
    6da0:	0d 00 00 00 00       	or     $0x0,%eax
    6da5:	00 00                	add    %al,(%rax)
    6da7:	00 98 33 00 00 00    	add    %bl,0x33(%rax)
    6dad:	00 00                	add    %al,(%rax)
    6daf:	00 19                	add    %bl,(%rcx)
    6db1:	00 00                	add    %al,(%rax)
    6db3:	00 00                	add    %al,(%rax)
    6db5:	00 00                	add    %al,(%rax)
    6db7:	00 f0                	add    %dh,%al
    6db9:	6c                   	insb   (%dx),%es:(%rdi)
    6dba:	00 00                	add    %al,(%rax)
    6dbc:	00 00                	add    %al,(%rax)
    6dbe:	00 00                	add    %al,(%rax)
    6dc0:	1b 00                	sbb    (%rax),%eax
    6dc2:	00 00                	add    %al,(%rax)
    6dc4:	00 00                	add    %al,(%rax)
    6dc6:	00 00                	add    %al,(%rax)
    6dc8:	08 00                	or     %al,(%rax)
    6dca:	00 00                	add    %al,(%rax)
    6dcc:	00 00                	add    %al,(%rax)
    6dce:	00 00                	add    %al,(%rax)
    6dd0:	1a 00                	sbb    (%rax),%al
    6dd2:	00 00                	add    %al,(%rax)
    6dd4:	00 00                	add    %al,(%rax)
    6dd6:	00 00                	add    %al,(%rax)
    6dd8:	f8                   	clc    
    6dd9:	6c                   	insb   (%dx),%es:(%rdi)
    6dda:	00 00                	add    %al,(%rax)
    6ddc:	00 00                	add    %al,(%rax)
    6dde:	00 00                	add    %al,(%rax)
    6de0:	1c 00                	sbb    $0x0,%al
    6de2:	00 00                	add    %al,(%rax)
    6de4:	00 00                	add    %al,(%rax)
    6de6:	00 00                	add    %al,(%rax)
    6de8:	08 00                	or     %al,(%rax)
    6dea:	00 00                	add    %al,(%rax)
    6dec:	00 00                	add    %al,(%rax)
    6dee:	00 00                	add    %al,(%rax)
    6df0:	f5                   	cmc    
    6df1:	fe                   	(bad)  
    6df2:	ff 6f 00             	ljmp   *0x0(%rdi)
    6df5:	00 00                	add    %al,(%rax)
    6df7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    6dfd:	00 00                	add    %al,(%rax)
    6dff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6e05 <_DYNAMIC+0x85>
    6e05:	00 00                	add    %al,(%rax)
    6e07:	00 00                	add    %al,(%rax)
    6e09:	05 00 00 00 00       	add    $0x0,%eax
    6e0e:	00 00                	add    %al,(%rax)
    6e10:	06                   	(bad)  
    6e11:	00 00                	add    %al,(%rax)
    6e13:	00 00                	add    %al,(%rax)
    6e15:	00 00                	add    %al,(%rax)
    6e17:	00 c8                	add    %cl,%al
    6e19:	03 00                	add    (%rax),%eax
    6e1b:	00 00                	add    %al,(%rax)
    6e1d:	00 00                	add    %al,(%rax)
    6e1f:	00 0a                	add    %cl,(%rdx)
    6e21:	00 00                	add    %al,(%rax)
    6e23:	00 00                	add    %al,(%rax)
    6e25:	00 00                	add    %al,(%rax)
    6e27:	00 e3                	add    %ah,%bl
    6e29:	00 00                	add    %al,(%rax)
    6e2b:	00 00                	add    %al,(%rax)
    6e2d:	00 00                	add    %al,(%rax)
    6e2f:	00 0b                	add    %cl,(%rbx)
    6e31:	00 00                	add    %al,(%rax)
    6e33:	00 00                	add    %al,(%rax)
    6e35:	00 00                	add    %al,(%rax)
    6e37:	00 18                	add    %bl,(%rax)
    6e39:	00 00                	add    %al,(%rax)
    6e3b:	00 00                	add    %al,(%rax)
    6e3d:	00 00                	add    %al,(%rax)
    6e3f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6e45 <_DYNAMIC+0xc5>
	...
    6e4d:	00 00                	add    %al,(%rax)
    6e4f:	00 03                	add    %al,(%rbx)
    6e51:	00 00                	add    %al,(%rax)
    6e53:	00 00                	add    %al,(%rax)
    6e55:	00 00                	add    %al,(%rax)
    6e57:	00 70 6f             	add    %dh,0x6f(%rax)
    6e5a:	00 00                	add    %al,(%rax)
    6e5c:	00 00                	add    %al,(%rax)
    6e5e:	00 00                	add    %al,(%rax)
    6e60:	02 00                	add    (%rax),%al
    6e62:	00 00                	add    %al,(%rax)
    6e64:	00 00                	add    %al,(%rax)
    6e66:	00 00                	add    %al,(%rax)
    6e68:	a8 00                	test   $0x0,%al
    6e6a:	00 00                	add    %al,(%rax)
    6e6c:	00 00                	add    %al,(%rax)
    6e6e:	00 00                	add    %al,(%rax)
    6e70:	14 00                	adc    $0x0,%al
    6e72:	00 00                	add    %al,(%rax)
    6e74:	00 00                	add    %al,(%rax)
    6e76:	00 00                	add    %al,(%rax)
    6e78:	07                   	(bad)  
    6e79:	00 00                	add    %al,(%rax)
    6e7b:	00 00                	add    %al,(%rax)
    6e7d:	00 00                	add    %al,(%rax)
    6e7f:	00 17                	add    %dl,(%rdi)
    6e81:	00 00                	add    %al,(%rax)
    6e83:	00 00                	add    %al,(%rax)
    6e85:	00 00                	add    %al,(%rax)
    6e87:	00 d8                	add    %bl,%al
    6e89:	08 00                	or     %al,(%rax)
    6e8b:	00 00                	add    %al,(%rax)
    6e8d:	00 00                	add    %al,(%rax)
    6e8f:	00 07                	add    %al,(%rdi)
    6e91:	00 00                	add    %al,(%rax)
    6e93:	00 00                	add    %al,(%rax)
    6e95:	00 00                	add    %al,(%rax)
    6e97:	00 50 06             	add    %dl,0x6(%rax)
    6e9a:	00 00                	add    %al,(%rax)
    6e9c:	00 00                	add    %al,(%rax)
    6e9e:	00 00                	add    %al,(%rax)
    6ea0:	08 00                	or     %al,(%rax)
    6ea2:	00 00                	add    %al,(%rax)
    6ea4:	00 00                	add    %al,(%rax)
    6ea6:	00 00                	add    %al,(%rax)
    6ea8:	88 02                	mov    %al,(%rdx)
    6eaa:	00 00                	add    %al,(%rax)
    6eac:	00 00                	add    %al,(%rax)
    6eae:	00 00                	add    %al,(%rax)
    6eb0:	09 00                	or     %eax,(%rax)
    6eb2:	00 00                	add    %al,(%rax)
    6eb4:	00 00                	add    %al,(%rax)
    6eb6:	00 00                	add    %al,(%rax)
    6eb8:	18 00                	sbb    %al,(%rax)
    6eba:	00 00                	add    %al,(%rax)
    6ebc:	00 00                	add    %al,(%rax)
    6ebe:	00 00                	add    %al,(%rax)
    6ec0:	1e                   	(bad)  
    6ec1:	00 00                	add    %al,(%rax)
    6ec3:	00 00                	add    %al,(%rax)
    6ec5:	00 00                	add    %al,(%rax)
    6ec7:	00 08                	add    %cl,(%rax)
    6ec9:	00 00                	add    %al,(%rax)
    6ecb:	00 00                	add    %al,(%rax)
    6ecd:	00 00                	add    %al,(%rax)
    6ecf:	00 fb                	add    %bh,%bl
    6ed1:	ff                   	(bad)  
    6ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    6ed5:	00 00                	add    %al,(%rax)
    6ed7:	00 01                	add    %al,(%rcx)
    6ed9:	00 00                	add    %al,(%rax)
    6edb:	08 00                	or     %al,(%rax)
    6edd:	00 00                	add    %al,(%rax)
    6edf:	00 fe                	add    %bh,%dh
    6ee1:	ff                   	(bad)  
    6ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
    6ee5:	00 00                	add    %al,(%rax)
    6ee7:	00 00                	add    %al,(%rax)
    6ee9:	06                   	(bad)  
    6eea:	00 00                	add    %al,(%rax)
    6eec:	00 00                	add    %al,(%rax)
    6eee:	00 00                	add    %al,(%rax)
    6ef0:	ff                   	(bad)  
    6ef1:	ff                   	(bad)  
    6ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    6ef5:	00 00                	add    %al,(%rax)
    6ef7:	00 01                	add    %al,(%rcx)
    6ef9:	00 00                	add    %al,(%rax)
    6efb:	00 00                	add    %al,(%rax)
    6efd:	00 00                	add    %al,(%rax)
    6eff:	00 f0                	add    %dh,%al
    6f01:	ff                   	(bad)  
    6f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    6f05:	00 00                	add    %al,(%rax)
    6f07:	00 e4                	add    %ah,%ah
    6f09:	05 00 00 00 00       	add    $0x0,%eax
    6f0e:	00 00                	add    %al,(%rax)
    6f10:	f9                   	stc    
    6f11:	ff                   	(bad)  
    6f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    6f15:	00 00                	add    %al,(%rax)
    6f17:	00 16                	add    %dl,(%rsi)
	...

Disassembly of section .got:

0000000000006f70 <_GLOBAL_OFFSET_TABLE_>:
    6f70:	80 6d 00 00          	subb   $0x0,0x0(%rbp)
	...
    6f88:	30 10                	xor    %dl,(%rax)
    6f8a:	00 00                	add    %al,(%rax)
    6f8c:	00 00                	add    %al,(%rax)
    6f8e:	00 00                	add    %al,(%rax)
    6f90:	40 10 00             	adc    %al,(%rax)
    6f93:	00 00                	add    %al,(%rax)
    6f95:	00 00                	add    %al,(%rax)
    6f97:	00 50 10             	add    %dl,0x10(%rax)
    6f9a:	00 00                	add    %al,(%rax)
    6f9c:	00 00                	add    %al,(%rax)
    6f9e:	00 00                	add    %al,(%rax)
    6fa0:	60                   	(bad)  
    6fa1:	10 00                	adc    %al,(%rax)
    6fa3:	00 00                	add    %al,(%rax)
    6fa5:	00 00                	add    %al,(%rax)
    6fa7:	00 70 10             	add    %dh,0x10(%rax)
    6faa:	00 00                	add    %al,(%rax)
    6fac:	00 00                	add    %al,(%rax)
    6fae:	00 00                	add    %al,(%rax)
    6fb0:	80 10 00             	adcb   $0x0,(%rax)
    6fb3:	00 00                	add    %al,(%rax)
    6fb5:	00 00                	add    %al,(%rax)
    6fb7:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
	...

Disassembly of section .data:

0000000000007000 <__data_start>:
	...

0000000000007008 <__dso_handle>:
    7008:	08 70 00             	or     %dh,0x0(%rax)
    700b:	00 00                	add    %al,(%rax)
    700d:	00 00                	add    %al,(%rax)
	...

0000000000007010 <mem_name>:
    7010:	54                   	push   %rsp
    7011:	44 00 00             	add    %r8b,(%rax)
    7014:	00 00                	add    %al,(%rax)
    7016:	00 00                	add    %al,(%rax)
    7018:	5b                   	pop    %rbx
    7019:	44 00 00             	add    %r8b,(%rax)
    701c:	00 00                	add    %al,(%rax)
    701e:	00 00                	add    %al,(%rax)
    7020:	60                   	(bad)  
    7021:	44 00 00             	add    %r8b,(%rax)
    7024:	00 00                	add    %al,(%rax)
	...

0000000000007028 <default_num_contexts>:
    7028:	01 00                	add    %eax,(%rax)
	...

000000000000702c <seed3_volatile>:
    702c:	66 00 00             	data16 add %al,(%rax)
	...

Disassembly of section .bss:

0000000000007030 <completed.8061>:
	...

0000000000007040 <seed5_volatile>:
    7040:	00 00                	add    %al,(%rax)
	...

0000000000007044 <seed4_volatile>:
    7044:	00 00                	add    %al,(%rax)
	...

0000000000007048 <seed2_volatile>:
    7048:	00 00                	add    %al,(%rax)
	...

000000000000704c <seed1_volatile>:
    704c:	00 00                	add    %al,(%rax)
	...

0000000000007050 <stop_time_val>:
	...

0000000000007060 <start_time_val>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x756204d8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
