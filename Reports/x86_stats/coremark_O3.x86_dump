
coremark.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 67 97             	add    %ah,-0x69(%rdi)
 36a:	ce                   	(bad)  
 36b:	b7 ae                	mov    $0xae,%bh
 36d:	f5                   	cmc    
 36e:	6f                   	outsl  %ds:(%rsi),(%dx)
 36f:	4f f9                	rex.WRXB stc 
 371:	53                   	push   %rbx
 372:	d5                   	(bad)  
 373:	5b                   	pop    %rbx
 374:	8b 66 84             	mov    -0x7c(%rsi),%esp
 377:	e6 da                	out    %al,$0xda
 379:	6a 25                	pushq  $0x25
 37b:	67                   	addr32

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0d 00 00 00 01       	or     $0x1000000,%eax
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 3bd <_init-0xc43>
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	73 00                	jae    3e2 <_init-0xc1e>
 3e2:	00 00                	add    %al,(%rax)
 3e4:	12 00                	adc    (%rax),%al
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	2e 00 00             	add    %al,%cs:(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 a5 00 00 00 20    	add    %ah,0x20000000(%rbp)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 18                	add    %bl,(%rax)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 1d 00 00 00 12    	add    %bl,0x12000000(%rip)        # 1200045d <_end+0x11ff83ed>
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 36                	add    %dh,(%rsi)
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 61 00             	add    %ah,0x0(%rcx)
 48a:	00 00                	add    %al,(%rax)
 48c:	12 00                	adc    (%rax),%al
	...
 49e:	00 00                	add    %al,(%rax)
 4a0:	c1 00 00             	roll   $0x0,(%rax)
 4a3:	00 20                	add    %ah,(%rax)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 3d 00 00 00 12    	add    %bh,0x12000000(%rip)        # 120004bd <_end+0x11ff844d>
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 0b                	add    %cl,(%rbx)
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 12                	add    %dl,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 d0                	add    %dl,%al
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 20                	add    %ah,(%rax)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 52 00             	add    %dl,0x0(%rdx)
 502:	00 00                	add    %al,(%rax)
 504:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000518 <.dynstr>:
 518:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 51c:	63 2e                	movslq (%rsi),%ebp
 51e:	73 6f                	jae    58f <_init-0xa71>
 520:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 525:	70 72                	jo     599 <_init-0xa67>
 527:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
 52e:	6b 00 70             	imul   $0x70,(%rax),%eax
 531:	75 74                	jne    5a7 <_init-0xa59>
 533:	73 00                	jae    535 <_init-0xacb>
 535:	5f                   	pop    %rdi
 536:	5f                   	pop    %rdi
 537:	73 74                	jae    5ad <_init-0xa53>
 539:	61                   	(bad)  
 53a:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 53d:	63 68 6b             	movslq 0x6b(%rax),%ebp
 540:	5f                   	pop    %rdi
 541:	66 61                	data16 (bad) 
 543:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 54a:	68 
 54b:	61                   	(bad)  
 54c:	72 00                	jb     54e <_init-0xab2>
 54e:	6d                   	insl   (%dx),%es:(%rdi)
 54f:	65 6d                	gs insl (%dx),%es:(%rdi)
 551:	73 65                	jae    5b8 <_init-0xa48>
 553:	74 00                	je     555 <_init-0xaab>
 555:	6d                   	insl   (%dx),%es:(%rdi)
 556:	61                   	(bad)  
 557:	6c                   	insb   (%dx),%es:(%rdi)
 558:	6c                   	insb   (%dx),%es:(%rdi)
 559:	6f                   	outsl  %ds:(%rsi),(%dx)
 55a:	63 00                	movslq (%rax),%eax
 55c:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 560:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 564:	74 74                	je     5da <_init-0xa26>
 566:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 56d:	78 61                	js     5d0 <_init-0xa30>
 56f:	5f                   	pop    %rdi
 570:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 576:	7a 65                	jp     5dd <_init-0xa23>
 578:	00 5f 5f             	add    %bl,0x5f(%rdi)
 57b:	6c                   	insb   (%dx),%es:(%rdi)
 57c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 583:	72 74                	jb     5f9 <_init-0xa07>
 585:	5f                   	pop    %rdi
 586:	6d                   	insl   (%dx),%es:(%rdi)
 587:	61                   	(bad)  
 588:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 58f:	00 47 4c             	add    %al,0x4c(%rdi)
 592:	49                   	rex.WB
 593:	42                   	rex.X
 594:	43 5f                	rex.XB pop %r15
 596:	32 2e                	xor    (%rsi),%ch
 598:	33 2e                	xor    (%rsi),%ebp
 59a:	34 00                	xor    $0x0,%al
 59c:	47                   	rex.RXB
 59d:	4c                   	rex.WR
 59e:	49                   	rex.WB
 59f:	42                   	rex.X
 5a0:	43 5f                	rex.XB pop %r15
 5a2:	32 2e                	xor    (%rsi),%ch
 5a4:	34 00                	xor    $0x0,%al
 5a6:	47                   	rex.RXB
 5a7:	4c                   	rex.WR
 5a8:	49                   	rex.WB
 5a9:	42                   	rex.X
 5aa:	43 5f                	rex.XB pop %r15
 5ac:	32 2e                	xor    (%rsi),%ch
 5ae:	31 37                	xor    %esi,(%rdi)
 5b0:	00 47 4c             	add    %al,0x4c(%rdi)
 5b3:	49                   	rex.WB
 5b4:	42                   	rex.X
 5b5:	43 5f                	rex.XB pop %r15
 5b7:	32 2e                	xor    (%rsi),%ch
 5b9:	32 2e                	xor    (%rsi),%ch
 5bb:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 5c0:	4d 5f                	rex.WRB pop %r15
 5c2:	64 65 72 65          	fs gs jb 62b <_init-0x9d5>
 5c6:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5cd:	4d 
 5ce:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5d0:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d1:	6e                   	outsb  %ds:(%rsi),(%dx)
 5d2:	65 54                	gs push %rsp
 5d4:	61                   	(bad)  
 5d5:	62                   	(bad)  
 5d6:	6c                   	insb   (%dx),%es:(%rdi)
 5d7:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5db:	67 6d                	insl   (%dx),%es:(%edi)
 5dd:	6f                   	outsl  %ds:(%rsi),(%dx)
 5de:	6e                   	outsb  %ds:(%rsi),(%dx)
 5df:	5f                   	pop    %rdi
 5e0:	73 74                	jae    656 <_init-0x9aa>
 5e2:	61                   	(bad)  
 5e3:	72 74                	jb     659 <_init-0x9a7>
 5e5:	5f                   	pop    %rdi
 5e6:	5f                   	pop    %rdi
 5e7:	00 5f 49             	add    %bl,0x49(%rdi)
 5ea:	54                   	push   %rsp
 5eb:	4d 5f                	rex.WRB pop %r15
 5ed:	72 65                	jb     654 <_init-0x9ac>
 5ef:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5f6:	4d 
 5f7:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5f9:	6f                   	outsl  %ds:(%rsi),(%dx)
 5fa:	6e                   	outsb  %ds:(%rsi),(%dx)
 5fb:	65 54                	gs push %rsp
 5fd:	61                   	(bad)  
 5fe:	62                   	.byte 0x62
 5ff:	6c                   	insb   (%dx),%es:(%rdi)
 600:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000602 <.gnu.version>:
 602:	00 00                	add    %al,(%rax)
 604:	02 00                	add    (%rax),%al
 606:	02 00                	add    (%rax),%al
 608:	00 00                	add    %al,(%rax)
 60a:	02 00                	add    (%rax),%al
 60c:	03 00                	add    (%rax),%eax
 60e:	04 00                	add    $0x0,%al
 610:	02 00                	add    (%rax),%al
 612:	02 00                	add    (%rax),%al
 614:	00 00                	add    %al,(%rax)
 616:	02 00                	add    (%rax),%al
 618:	05 00 00 00 02       	add    $0x2000000,%eax
	...

Disassembly of section .gnu.version_r:

0000000000000620 <.gnu.version_r>:
 620:	01 00                	add    %eax,(%rax)
 622:	04 00                	add    $0x0,%al
 624:	01 00                	add    %eax,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	10 00                	adc    %al,(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	74 19                	je     64b <_init-0x9b5>
 632:	69 09 00 00 05 00    	imul   $0x50000,(%rcx),%ecx
 638:	78 00                	js     63a <_init-0x9c6>
 63a:	00 00                	add    %al,(%rax)
 63c:	10 00                	adc    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	14 69                	adc    $0x69,%al
 642:	69 0d 00 00 04 00 84 	imul   $0x84,0x40000(%rip),%ecx        # 4064c <_end+0x385dc>
 649:	00 00 00 
 64c:	10 00                	adc    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	97                   	xchg   %eax,%edi
 651:	91                   	xchg   %eax,%ecx
 652:	96                   	xchg   %eax,%esi
 653:	06                   	(bad)  
 654:	00 00                	add    %al,(%rax)
 656:	03 00                	add    (%rax),%eax
 658:	8e 00                	mov    (%rax),%es
 65a:	00 00                	add    %al,(%rax)
 65c:	10 00                	adc    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	75 1a                	jne    67c <_init-0x984>
 662:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 668:	99                   	cltd   
 669:	00 00                	add    %al,(%rax)
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000670 <.rela.dyn>:
 670:	f0 7c 00             	lock jl 673 <_init-0x98d>
 673:	00 00                	add    %al,(%rax)
 675:	00 00                	add    %al,(%rax)
 677:	00 08                	add    %cl,(%rax)
 679:	00 00                	add    %al,(%rax)
 67b:	00 00                	add    %al,(%rax)
 67d:	00 00                	add    %al,(%rax)
 67f:	00 b0 1c 00 00 00    	add    %dh,0x1c(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 f8                	add    %bh,%al
 689:	7c 00                	jl     68b <_init-0x975>
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 08                	add    %cl,(%rax)
 691:	00 00                	add    %al,(%rax)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 70 1c             	add    %dh,0x1c(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	00 7d 00             	add    %bh,0x0(%rbp)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 08                	add    %cl,(%rax)
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 80 54 00 00 00    	add    %al,0x54(%rax)
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 08                	add    %cl,(%rax)
 6b9:	7d 00                	jge    6bb <_init-0x945>
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 89 54 00 00 00    	add    %cl,0x54(%rcx)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 10                	add    %dl,(%rax)
 6d1:	7d 00                	jge    6d3 <_init-0x92d>
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 08                	add    %cl,(%rax)
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 92 54 00 00 00    	add    %dl,0x54(%rdx)
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 18                	add    %bl,(%rax)
 6e9:	7d 00                	jge    6eb <_init-0x915>
 6eb:	00 00                	add    %al,(%rax)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 08                	add    %cl,(%rax)
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 9b 54 00 00 00    	add    %bl,0x54(%rbx)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 20                	add    %ah,(%rax)
 701:	7d 00                	jge    703 <_init-0x8fd>
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 08                	add    %cl,(%rax)
 709:	00 00                	add    %al,(%rax)
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 a4 54 00 00 00 00 	add    %ah,0x0(%rsp,%rdx,2)
 716:	00 00                	add    %al,(%rax)
 718:	28 7d 00             	sub    %bh,0x0(%rbp)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 08                	add    %cl,(%rax)
 721:	00 00                	add    %al,(%rax)
 723:	00 00                	add    %al,(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 ad 54 00 00 00    	add    %ch,0x54(%rbp)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 30                	add    %dh,(%rax)
 731:	7d 00                	jge    733 <_init-0x8cd>
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 08                	add    %cl,(%rax)
 739:	00 00                	add    %al,(%rax)
 73b:	00 00                	add    %al,(%rax)
 73d:	00 00                	add    %al,(%rax)
 73f:	00 b6 54 00 00 00    	add    %dh,0x54(%rsi)
 745:	00 00                	add    %al,(%rax)
 747:	00 38                	add    %bh,(%rax)
 749:	7d 00                	jge    74b <_init-0x8b5>
 74b:	00 00                	add    %al,(%rax)
 74d:	00 00                	add    %al,(%rax)
 74f:	00 08                	add    %cl,(%rax)
 751:	00 00                	add    %al,(%rax)
 753:	00 00                	add    %al,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 bf 54 00 00 00    	add    %bh,0x54(%rdi)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 40 7d             	add    %al,0x7d(%rax)
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	08 00                	or     %al,(%rax)
 76a:	00 00                	add    %al,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	c8 54 00 00          	enterq $0x54,$0x0
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	48 7d 00             	rex.W jge 77b <_init-0x885>
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 08                	add    %cl,(%rax)
 781:	00 00                	add    %al,(%rax)
 783:	00 00                	add    %al,(%rax)
 785:	00 00                	add    %al,(%rax)
 787:	00 d1                	add    %dl,%cl
 789:	54                   	push   %rsp
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	50                   	push   %rax
 791:	7d 00                	jge    793 <_init-0x86d>
 793:	00 00                	add    %al,(%rax)
 795:	00 00                	add    %al,(%rax)
 797:	00 08                	add    %cl,(%rax)
 799:	00 00                	add    %al,(%rax)
 79b:	00 00                	add    %al,(%rax)
 79d:	00 00                	add    %al,(%rax)
 79f:	00 da                	add    %bl,%dl
 7a1:	54                   	push   %rsp
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	58                   	pop    %rax
 7a9:	7d 00                	jge    7ab <_init-0x855>
 7ab:	00 00                	add    %al,(%rax)
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 08                	add    %cl,(%rax)
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 00                	add    %al,(%rax)
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 e3                	add    %ah,%bl
 7b9:	54                   	push   %rsp
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	60                   	(bad)  
 7c1:	7d 00                	jge    7c3 <_init-0x83d>
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 08                	add    %cl,(%rax)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 00                	add    %al,(%rax)
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 ec                	add    %ch,%ah
 7d1:	54                   	push   %rsp
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	68 7d 00 00 00       	pushq  $0x7d
 7dd:	00 00                	add    %al,(%rax)
 7df:	00 08                	add    %cl,(%rax)
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 00                	add    %al,(%rax)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 f1                	add    %dh,%cl
 7e9:	54                   	push   %rsp
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	70 7d                	jo     86f <_init-0x791>
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	08 00                	or     %al,(%rax)
 7fa:	00 00                	add    %al,(%rax)
 7fc:	00 00                	add    %al,(%rax)
 7fe:	00 00                	add    %al,(%rax)
 800:	f6 54 00 00          	notb   0x0(%rax,%rax,1)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	78 7d                	js     887 <_init-0x779>
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	08 00                	or     %al,(%rax)
 812:	00 00                	add    %al,(%rax)
 814:	00 00                	add    %al,(%rax)
 816:	00 00                	add    %al,(%rax)
 818:	fb                   	sti    
 819:	54                   	push   %rsp
 81a:	00 00                	add    %al,(%rax)
 81c:	00 00                	add    %al,(%rax)
 81e:	00 00                	add    %al,(%rax)
 820:	08 80 00 00 00 00    	or     %al,0x0(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	08 00                	or     %al,(%rax)
 82a:	00 00                	add    %al,(%rax)
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	08 80 00 00 00 00    	or     %al,0x0(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	10 80 00 00 00 00    	adc    %al,0x0(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	08 00                	or     %al,(%rax)
 842:	00 00                	add    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	54                   	push   %rsp
 849:	54                   	push   %rsp
 84a:	00 00                	add    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	18 80 00 00 00 00    	sbb    %al,0x0(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	08 00                	or     %al,(%rax)
 85a:	00 00                	add    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	5b                   	pop    %rbx
 861:	54                   	push   %rsp
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	20 80 00 00 00 00    	and    %al,0x0(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	08 00                	or     %al,(%rax)
 872:	00 00                	add    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	60                   	(bad)  
 879:	54                   	push   %rsp
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	c8 7f 00 00          	enterq $0x7f,$0x0
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	06                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 03                	add    %al,(%rbx)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 d0                	add    %dl,%al
 899:	7f 00                	jg     89b <_init-0x765>
 89b:	00 00                	add    %al,(%rax)
 89d:	00 00                	add    %al,(%rax)
 89f:	00 06                	add    %al,(%rsi)
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 08                	add    %cl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 d8                	add    %bl,%al
 8b1:	7f 00                	jg     8b3 <_init-0x74d>
 8b3:	00 00                	add    %al,(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 06                	add    %al,(%rsi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 09                	add    %cl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 e0                	add    %ah,%al
 8c9:	7f 00                	jg     8cb <_init-0x735>
 8cb:	00 00                	add    %al,(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 06                	add    %al,(%rsi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 8de:	00 00                	add    %al,(%rax)
 8e0:	e8 7f 00 00 00       	callq  964 <_init-0x69c>
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 06                	add    %al,(%rsi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 8f1 <_init-0x70f>
 8f1:	00 00                	add    %al,(%rax)
 8f3:	00 00                	add    %al,(%rax)
 8f5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

00000000000008f8 <.rela.plt>:
 8f8:	88 7f 00             	mov    %bh,0x0(%rdi)
 8fb:	00 00                	add    %al,(%rax)
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 07                	add    %al,(%rdi)
 901:	00 00                	add    %al,(%rax)
 903:	00 01                	add    %al,(%rcx)
	...
 90d:	00 00                	add    %al,(%rax)
 90f:	00 90 7f 00 00 00    	add    %dl,0x7f(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	00 07                	add    %al,(%rdi)
 919:	00 00                	add    %al,(%rax)
 91b:	00 02                	add    %al,(%rdx)
	...
 925:	00 00                	add    %al,(%rax)
 927:	00 98 7f 00 00 00    	add    %bl,0x7f(%rax)
 92d:	00 00                	add    %al,(%rax)
 92f:	00 07                	add    %al,(%rdi)
 931:	00 00                	add    %al,(%rax)
 933:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 93e:	00 00                	add    %al,(%rax)
 940:	a0 7f 00 00 00 00 00 	movabs 0x70000000000007f,%al
 947:	00 07 
 949:	00 00                	add    %al,(%rax)
 94b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 951 <_init-0x6af>
 951:	00 00                	add    %al,(%rax)
 953:	00 00                	add    %al,(%rax)
 955:	00 00                	add    %al,(%rax)
 957:	00 a8 7f 00 00 00    	add    %ch,0x7f(%rax)
 95d:	00 00                	add    %al,(%rax)
 95f:	00 07                	add    %al,(%rdi)
 961:	00 00                	add    %al,(%rax)
 963:	00 06                	add    %al,(%rsi)
	...
 96d:	00 00                	add    %al,(%rax)
 96f:	00 b0 7f 00 00 00    	add    %dh,0x7f(%rax)
 975:	00 00                	add    %al,(%rax)
 977:	00 07                	add    %al,(%rdi)
 979:	00 00                	add    %al,(%rax)
 97b:	00 07                	add    %al,(%rdi)
	...
 985:	00 00                	add    %al,(%rax)
 987:	00 b8 7f 00 00 00    	add    %bh,0x7f(%rax)
 98d:	00 00                	add    %al,(%rax)
 98f:	00 07                	add    %al,(%rdi)
 991:	00 00                	add    %al,(%rax)
 993:	00 0a                	add    %cl,(%rdx)
	...
 99d:	00 00                	add    %al,(%rax)
 99f:	00 c0                	add    %al,%al
 9a1:	7f 00                	jg     9a3 <_init-0x65d>
 9a3:	00 00                	add    %al,(%rax)
 9a5:	00 00                	add    %al,(%rax)
 9a7:	00 07                	add    %al,(%rdi)
 9a9:	00 00                	add    %al,(%rax)
 9ab:	00 0b                	add    %cl,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c9 6f 00 00 	mov    0x6fc9(%rip),%rax        # 7fd8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 6f 00 00    	pushq  0x6f52(%rip)        # 7f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 6f 00 00 	bnd jmpq *0x6f53(%rip)        # 7f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 2d 6f 00 00 	bnd jmpq *0x6f2d(%rip)        # 7fe8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010c0 <free@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 bd 6e 00 00 	bnd jmpq *0x6ebd(%rip)        # 7f88 <free@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <putchar@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 6e 00 00 	bnd jmpq *0x6eb5(%rip)        # 7f90 <putchar@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <puts@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 6e 00 00 	bnd jmpq *0x6ead(%rip)        # 7f98 <puts@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <clock_gettime@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 6e 00 00 	bnd jmpq *0x6ea5(%rip)        # 7fa0 <clock_gettime@GLIBC_2.17>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 6e 00 00 	bnd jmpq *0x6e9d(%rip)        # 7fa8 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <memset@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 6e 00 00 	bnd jmpq *0x6e95(%rip)        # 7fb0 <memset@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <malloc@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 6e 00 00 	bnd jmpq *0x6e8d(%rip)        # 7fb8 <malloc@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <__printf_chk@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 6e 00 00 	bnd jmpq *0x6e85(%rip)        # 7fc0 <__printf_chk@GLIBC_2.3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001140 <core_bench_list.cold>:
    1140:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    1147:	00 00 00 00 00 
    114c:	0f 0b                	ud2    
    114e:	48 8b 04 25 00 00 00 	mov    0x0,%rax
    1155:	00 
    1156:	0f 0b                	ud2    
    1158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    115f:	00 

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	41 57                	push   %r15
    1166:	41 56                	push   %r14
    1168:	41 55                	push   %r13
    116a:	41 54                	push   %r12
    116c:	55                   	push   %rbp
    116d:	53                   	push   %rbx
    116e:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    1175:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    117c:	00 00 
    117e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    1185:	00 
    1186:	31 c0                	xor    %eax,%eax
    1188:	48 8d ac 24 aa 00 00 	lea    0xaa(%rsp),%rbp
    118f:	00 
    1190:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
    1195:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%rsp)
    119c:	00 
    119d:	48 8d 74 24 34       	lea    0x34(%rsp),%rsi
    11a2:	48 89 ef             	mov    %rbp,%rdi
    11a5:	e8 66 30 00 00       	callq  4210 <portable_init>
    11aa:	bf 01 00 00 00       	mov    $0x1,%edi
    11af:	e8 ac 27 00 00       	callq  3960 <get_seed_32>
    11b4:	bf 02 00 00 00       	mov    $0x2,%edi
    11b9:	66 89 44 24 40       	mov    %ax,0x40(%rsp)
    11be:	e8 9d 27 00 00       	callq  3960 <get_seed_32>
    11c3:	bf 03 00 00 00       	mov    $0x3,%edi
    11c8:	66 89 44 24 42       	mov    %ax,0x42(%rsp)
    11cd:	e8 8e 27 00 00       	callq  3960 <get_seed_32>
    11d2:	bf 04 00 00 00       	mov    $0x4,%edi
    11d7:	66 89 44 24 44       	mov    %ax,0x44(%rsp)
    11dc:	e8 7f 27 00 00       	callq  3960 <get_seed_32>
    11e1:	bf 05 00 00 00       	mov    $0x5,%edi
    11e6:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    11ea:	e8 71 27 00 00       	callq  3960 <get_seed_32>
    11ef:	ba 07 00 00 00       	mov    $0x7,%edx
    11f4:	85 c0                	test   %eax,%eax
    11f6:	0f 44 c2             	cmove  %edx,%eax
    11f9:	89 44 24 70          	mov    %eax,0x70(%rsp)
    11fd:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1204:	ff 00 00 
    1207:	48 85 44 24 40       	test   %rax,0x40(%rsp)
    120c:	75 0f                	jne    121d <main+0xbd>
    120e:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
    1215:	00 
    1216:	66 c7 44 24 44 66 00 	movw   $0x66,0x44(%rsp)
    121d:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1224:	ff 00 00 
    1227:	48 23 44 24 40       	and    0x40(%rsp),%rax
    122c:	48 83 f8 01          	cmp    $0x1,%rax
    1230:	75 0f                	jne    1241 <main+0xe1>
    1232:	c7 44 24 40 15 34 15 	movl   $0x34153415,0x40(%rsp)
    1239:	34 
    123a:	66 c7 44 24 44 66 00 	movw   $0x66,0x44(%rsp)
    1241:	bf 07 00 00 00       	mov    $0x7,%edi
    1246:	e8 15 27 00 00       	callq  3960 <get_seed_32>
    124b:	b9 d0 07 00 00       	mov    $0x7d0,%ecx
    1250:	0f bf f8             	movswl %ax,%edi
    1253:	66 85 c0             	test   %ax,%ax
    1256:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    125b:	48 89 fa             	mov    %rdi,%rdx
    125e:	48 0f 44 f8          	cmove  %rax,%rdi
    1262:	0f 44 d1             	cmove  %ecx,%edx
    1265:	89 54 24 68          	mov    %edx,0x68(%rsp)
    1269:	e8 d2 2e 00 00       	callq  4140 <portable_malloc>
    126e:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    1272:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1277:	49 89 c0             	mov    %rax,%r8
    127a:	31 c0                	xor    %eax,%eax
    127c:	41 89 ca             	mov    %ecx,%r10d
    127f:	89 cf                	mov    %ecx,%edi
    1281:	66 89 84 24 a8 00 00 	mov    %ax,0xa8(%rsp)
    1288:	00 
    1289:	41 89 c9             	mov    %ecx,%r9d
    128c:	41 83 e2 01          	and    $0x1,%r10d
    1290:	83 e7 02             	and    $0x2,%edi
    1293:	83 ff 01             	cmp    $0x1,%edi
    1296:	44 89 d0             	mov    %r10d,%eax
    1299:	66 83 d8 ff          	sbb    $0xffff,%ax
    129d:	41 83 e1 04          	and    $0x4,%r9d
    12a1:	41 83 f9 01          	cmp    $0x1,%r9d
    12a5:	66 83 d8 ff          	sbb    $0xffff,%ax
    12a9:	31 d2                	xor    %edx,%edx
    12ab:	0f b7 f0             	movzwl %ax,%esi
    12ae:	8b 44 24 68          	mov    0x68(%rsp),%eax
    12b2:	f7 f6                	div    %esi
    12b4:	31 d2                	xor    %edx,%edx
    12b6:	89 44 24 68          	mov    %eax,0x68(%rsp)
    12ba:	45 85 d2             	test   %r10d,%r10d
    12bd:	0f 85 10 08 00 00    	jne    1ad3 <main+0x973>
    12c3:	85 ff                	test   %edi,%edi
    12c5:	0f 85 f2 07 00 00    	jne    1abd <main+0x95d>
    12cb:	45 85 c9             	test   %r9d,%r9d
    12ce:	0f 85 d6 07 00 00    	jne    1aaa <main+0x94a>
    12d4:	45 85 d2             	test   %r10d,%r10d
    12d7:	74 1a                	je     12f3 <main+0x193>
    12d9:	0f bf 54 24 40       	movswl 0x40(%rsp),%edx
    12de:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    12e3:	89 c7                	mov    %eax,%edi
    12e5:	e8 d6 11 00 00       	callq  24c0 <core_list_init>
    12ea:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    12ee:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    12f3:	f6 c1 02             	test   $0x2,%cl
    12f6:	0f 85 24 03 00 00    	jne    1620 <main+0x4c0>
    12fc:	83 e1 04             	and    $0x4,%ecx
    12ff:	74 13                	je     1314 <main+0x1b4>
    1301:	0f bf 74 24 40       	movswl 0x40(%rsp),%esi
    1306:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    130b:	8b 7c 24 68          	mov    0x68(%rsp),%edi
    130f:	e8 cc 1f 00 00       	callq  32e0 <core_init_state>
    1314:	44 8b 44 24 6c       	mov    0x6c(%rsp),%r8d
    1319:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    131e:	45 85 c0             	test   %r8d,%r8d
    1321:	0f 85 db 00 00 00    	jne    1402 <main+0x2a2>
    1327:	c7 44 24 6c 01 00 00 	movl   $0x1,0x6c(%rsp)
    132e:	00 
    132f:	90                   	nop
    1330:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1334:	31 db                	xor    %ebx,%ebx
    1336:	8d 04 80             	lea    (%rax,%rax,4),%eax
    1339:	01 c0                	add    %eax,%eax
    133b:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    133f:	e8 1c 2e 00 00       	callq  4160 <start_time>
    1344:	44 8b 6c 24 6c       	mov    0x6c(%rsp),%r13d
    1349:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    1350:	00 00 00 00 00 
    1355:	45 85 ed             	test   %r13d,%r13d
    1358:	74 60                	je     13ba <main+0x25a>
    135a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1360:	be 01 00 00 00       	mov    $0x1,%esi
    1365:	4c 89 e7             	mov    %r12,%rdi
    1368:	e8 a3 0c 00 00       	callq  2010 <core_bench_list>
    136d:	0f b7 b4 24 a0 00 00 	movzwl 0xa0(%rsp),%esi
    1374:	00 
    1375:	0f b7 f8             	movzwl %ax,%edi
    1378:	e8 23 27 00 00       	callq  3aa0 <crcu16>
    137d:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1382:	4c 89 e7             	mov    %r12,%rdi
    1385:	66 89 84 24 a0 00 00 	mov    %ax,0xa0(%rsp)
    138c:	00 
    138d:	e8 7e 0c 00 00       	callq  2010 <core_bench_list>
    1392:	0f b7 b4 24 a0 00 00 	movzwl 0xa0(%rsp),%esi
    1399:	00 
    139a:	0f b7 f8             	movzwl %ax,%edi
    139d:	e8 fe 26 00 00       	callq  3aa0 <crcu16>
    13a2:	66 89 84 24 a0 00 00 	mov    %ax,0xa0(%rsp)
    13a9:	00 
    13aa:	85 db                	test   %ebx,%ebx
    13ac:	0f 84 4e 02 00 00    	je     1600 <main+0x4a0>
    13b2:	83 c3 01             	add    $0x1,%ebx
    13b5:	41 39 dd             	cmp    %ebx,%r13d
    13b8:	75 a6                	jne    1360 <main+0x200>
    13ba:	e8 c1 2d 00 00       	callq  4180 <stop_time>
    13bf:	e8 dc 2d 00 00       	callq  41a0 <get_time>
    13c4:	48 89 c7             	mov    %rax,%rdi
    13c7:	e8 24 2e 00 00       	callq  41f0 <time_in_secs>
    13cc:	f2 0f 10 15 94 40 00 	movsd  0x4094(%rip),%xmm2        # 5468 <_IO_stdin_used+0x468>
    13d3:	00 
    13d4:	66 0f 2f d0          	comisd %xmm0,%xmm2
    13d8:	0f 87 52 ff ff ff    	ja     1330 <main+0x1d0>
    13de:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    13e3:	b8 01 00 00 00       	mov    $0x1,%eax
    13e8:	85 c9                	test   %ecx,%ecx
    13ea:	0f 44 c8             	cmove  %eax,%ecx
    13ed:	b8 0a 00 00 00       	mov    $0xa,%eax
    13f2:	31 d2                	xor    %edx,%edx
    13f4:	f7 f1                	div    %ecx
    13f6:	83 c0 01             	add    $0x1,%eax
    13f9:	0f af 44 24 6c       	imul   0x6c(%rsp),%eax
    13fe:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
    1402:	e8 59 2d 00 00       	callq  4160 <start_time>
    1407:	4c 89 e7             	mov    %r12,%rdi
    140a:	e8 c1 15 00 00       	callq  29d0 <iterate>
    140f:	e8 6c 2d 00 00       	callq  4180 <stop_time>
    1414:	e8 87 2d 00 00       	callq  41a0 <get_time>
    1419:	0f bf 7c 24 40       	movswl 0x40(%rsp),%edi
    141e:	31 f6                	xor    %esi,%esi
    1420:	49 89 c4             	mov    %rax,%r12
    1423:	e8 68 2b 00 00       	callq  3f90 <crc16>
    1428:	0f bf 7c 24 42       	movswl 0x42(%rsp),%edi
    142d:	0f b7 f0             	movzwl %ax,%esi
    1430:	e8 5b 2b 00 00       	callq  3f90 <crc16>
    1435:	0f bf 7c 24 44       	movswl 0x44(%rsp),%edi
    143a:	0f b7 f0             	movzwl %ax,%esi
    143d:	e8 4e 2b 00 00       	callq  3f90 <crc16>
    1442:	0f bf 7c 24 68       	movswl 0x68(%rsp),%edi
    1447:	0f b7 f0             	movzwl %ax,%esi
    144a:	e8 41 2b 00 00       	callq  3f90 <crc16>
    144f:	0f b7 d8             	movzwl %ax,%ebx
    1452:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
    1456:	66 3d 05 7b          	cmp    $0x7b05,%ax
    145a:	0f 84 13 07 00 00    	je     1b73 <main+0xa13>
    1460:	0f 87 22 02 00 00    	ja     1688 <main+0x528>
    1466:	66 3d f2 18          	cmp    $0x18f2,%ax
    146a:	0f 84 7f 06 00 00    	je     1aef <main+0x98f>
    1470:	66 3d af 4e          	cmp    $0x4eaf,%ax
    1474:	0f 85 47 07 00 00    	jne    1bc1 <main+0xa61>
    147a:	48 8d 3d e7 3b 00 00 	lea    0x3be7(%rip),%rdi        # 5068 <_IO_stdin_used+0x68>
    1481:	e8 5a fc ff ff       	callq  10e0 <puts@plt>
    1486:	c7 44 24 14 a4 e5 00 	movl   $0xe5a4,0x14(%rsp)
    148d:	00 
    148e:	b8 a4 e5 ff ff       	mov    $0xffffe5a4,%eax
    1493:	c7 44 24 10 08 56 00 	movl   $0x5608,0x10(%rsp)
    149a:	00 
    149b:	66 c7 44 24 2c 08 56 	movw   $0x5608,0x2c(%rsp)
    14a2:	c7 44 24 0c 79 6a 00 	movl   $0x6a79,0xc(%rsp)
    14a9:	00 
    14aa:	66 c7 04 24 79 6a    	movw   $0x6a79,(%rsp)
    14b0:	66 c7 44 24 2e 02 00 	movw   $0x2,0x2e(%rsp)
    14b7:	8b 35 6b 6b 00 00    	mov    0x6b6b(%rip),%esi        # 8028 <default_num_contexts>
    14bd:	45 31 ff             	xor    %r15d,%r15d
    14c0:	45 31 f6             	xor    %r14d,%r14d
    14c3:	45 31 ed             	xor    %r13d,%r13d
    14c6:	85 f6                	test   %esi,%esi
    14c8:	0f 84 e7 06 00 00    	je     1bb5 <main+0xa55>
    14ce:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    14d3:	45 89 f4             	mov    %r14d,%r12d
    14d6:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
    14db:	44 89 fd             	mov    %r15d,%ebp
    14de:	41 89 c7             	mov    %eax,%r15d
    14e1:	eb 2a                	jmp    150d <main+0x3ad>
    14e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    14e8:	48 c1 e0 04          	shl    $0x4,%rax
    14ec:	0f b7 84 04 a8 00 00 	movzwl 0xa8(%rsp,%rax,1),%eax
    14f3:	00 
    14f4:	41 83 c4 01          	add    $0x1,%r12d
    14f8:	01 e8                	add    %ebp,%eax
    14fa:	45 0f b7 ec          	movzwl %r12w,%r13d
    14fe:	44 3b 2d 23 6b 00 00 	cmp    0x6b23(%rip),%r13d        # 8028 <default_num_contexts>
    1505:	89 c5                	mov    %eax,%ebp
    1507:	0f 83 d3 01 00 00    	jae    16e0 <main+0x580>
    150d:	49 63 dd             	movslq %r13d,%rbx
    1510:	48 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%rdx
    1517:	00 
    1518:	31 ff                	xor    %edi,%edi
    151a:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1521:	00 
    1522:	48 29 d8             	sub    %rbx,%rax
    1525:	48 c1 e0 04          	shl    $0x4,%rax
    1529:	66 89 bc 04 a8 00 00 	mov    %di,0xa8(%rsp,%rax,1)
    1530:	00 
    1531:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    1535:	f6 44 04 70 01       	testb  $0x1,0x70(%rsp,%rax,1)
    153a:	74 2f                	je     156b <main+0x40b>
    153c:	0f b7 8c 04 a2 00 00 	movzwl 0xa2(%rsp,%rax,1),%ecx
    1543:	00 
    1544:	66 3b 0c 24          	cmp    (%rsp),%cx
    1548:	74 21                	je     156b <main+0x40b>
    154a:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    154f:	44 89 ea             	mov    %r13d,%edx
    1552:	bf 01 00 00 00       	mov    $0x1,%edi
    1557:	31 c0                	xor    %eax,%eax
    1559:	48 8d 35 98 3b 00 00 	lea    0x3b98(%rip),%rsi        # 50f8 <_IO_stdin_used+0xf8>
    1560:	e8 cb fb ff ff       	callq  1130 <__printf_chk@plt>
    1565:	66 41 83 46 e8 01    	addw   $0x1,-0x18(%r14)
    156b:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1572:	00 
    1573:	48 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%rdx
    157a:	00 
    157b:	48 29 d8             	sub    %rbx,%rax
    157e:	48 c1 e0 04          	shl    $0x4,%rax
    1582:	8b 74 04 70          	mov    0x70(%rsp,%rax,1),%esi
    1586:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    158a:	40 f6 c6 02          	test   $0x2,%sil
    158e:	74 34                	je     15c4 <main+0x464>
    1590:	0f b7 8c 04 a4 00 00 	movzwl 0xa4(%rsp,%rax,1),%ecx
    1597:	00 
    1598:	66 3b 4c 24 2c       	cmp    0x2c(%rsp),%cx
    159d:	74 25                	je     15c4 <main+0x464>
    159f:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
    15a4:	44 89 ea             	mov    %r13d,%edx
    15a7:	bf 01 00 00 00       	mov    $0x1,%edi
    15ac:	31 c0                	xor    %eax,%eax
    15ae:	48 8d 35 73 3b 00 00 	lea    0x3b73(%rip),%rsi        # 5128 <_IO_stdin_used+0x128>
    15b5:	e8 76 fb ff ff       	callq  1130 <__printf_chk@plt>
    15ba:	66 41 83 46 e8 01    	addw   $0x1,-0x18(%r14)
    15c0:	41 8b 76 b0          	mov    -0x50(%r14),%esi
    15c4:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    15cb:	00 
    15cc:	48 29 d8             	sub    %rbx,%rax
    15cf:	83 e6 04             	and    $0x4,%esi
    15d2:	0f 84 10 ff ff ff    	je     14e8 <main+0x388>
    15d8:	48 89 c3             	mov    %rax,%rbx
    15db:	48 c1 e3 04          	shl    $0x4,%rbx
    15df:	0f b7 8c 1c a6 00 00 	movzwl 0xa6(%rsp,%rbx,1),%ecx
    15e6:	00 
    15e7:	66 44 39 f9          	cmp    %r15w,%cx
    15eb:	75 63                	jne    1650 <main+0x4f0>
    15ed:	0f b7 84 1c a8 00 00 	movzwl 0xa8(%rsp,%rbx,1),%eax
    15f4:	00 
    15f5:	e9 fa fe ff ff       	jmpq   14f4 <main+0x394>
    15fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1600:	66 89 84 24 a2 00 00 	mov    %ax,0xa2(%rsp)
    1607:	00 
    1608:	41 83 fd 01          	cmp    $0x1,%r13d
    160c:	0f 84 a8 fd ff ff    	je     13ba <main+0x25a>
    1612:	bb 01 00 00 00       	mov    $0x1,%ebx
    1617:	e9 44 fd ff ff       	jmpq   1360 <main+0x200>
    161c:	0f 1f 40 00          	nopl   0x0(%rax)
    1620:	0f bf 54 24 42       	movswl 0x42(%rsp),%edx
    1625:	8b 7c 24 68          	mov    0x68(%rsp),%edi
    1629:	48 8d 8c 24 80 00 00 	lea    0x80(%rsp),%rcx
    1630:	00 
    1631:	0f bf 44 24 40       	movswl 0x40(%rsp),%eax
    1636:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    163b:	c1 e2 10             	shl    $0x10,%edx
    163e:	09 c2                	or     %eax,%edx
    1640:	e8 6b 18 00 00       	callq  2eb0 <core_init_matrix>
    1645:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    1649:	e9 ae fc ff ff       	jmpq   12fc <main+0x19c>
    164e:	66 90                	xchg   %ax,%ax
    1650:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
    1655:	44 89 ea             	mov    %r13d,%edx
    1658:	bf 01 00 00 00       	mov    $0x1,%edi
    165d:	31 c0                	xor    %eax,%eax
    165f:	48 8d 35 fa 3a 00 00 	lea    0x3afa(%rip),%rsi        # 5160 <_IO_stdin_used+0x160>
    1666:	e8 c5 fa ff ff       	callq  1130 <__printf_chk@plt>
    166b:	0f b7 84 1c a8 00 00 	movzwl 0xa8(%rsp,%rbx,1),%eax
    1672:	00 
    1673:	83 c0 01             	add    $0x1,%eax
    1676:	66 89 84 1c a8 00 00 	mov    %ax,0xa8(%rsp,%rbx,1)
    167d:	00 
    167e:	e9 71 fe ff ff       	jmpq   14f4 <main+0x394>
    1683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1688:	66 3d 02 8a          	cmp    $0x8a02,%ax
    168c:	0f 84 9f 04 00 00    	je     1b31 <main+0x9d1>
    1692:	66 3d f5 e9          	cmp    $0xe9f5,%ax
    1696:	0f 85 25 05 00 00    	jne    1bc1 <main+0xa61>
    169c:	48 8d 3d f5 39 00 00 	lea    0x39f5(%rip),%rdi        # 5098 <_IO_stdin_used+0x98>
    16a3:	e8 38 fa ff ff       	callq  10e0 <puts@plt>
    16a8:	c7 44 24 14 3a 8e 00 	movl   $0x8e3a,0x14(%rsp)
    16af:	00 
    16b0:	b8 3a 8e ff ff       	mov    $0xffff8e3a,%eax
    16b5:	c7 44 24 10 d7 1f 00 	movl   $0x1fd7,0x10(%rsp)
    16bc:	00 
    16bd:	66 c7 44 24 2c d7 1f 	movw   $0x1fd7,0x2c(%rsp)
    16c4:	c7 44 24 0c 14 e7 00 	movl   $0xe714,0xc(%rsp)
    16cb:	00 
    16cc:	66 c7 04 24 14 e7    	movw   $0xe714,(%rsp)
    16d2:	66 c7 44 24 2e 03 00 	movw   $0x3,0x2e(%rsp)
    16d9:	e9 d9 fd ff ff       	jmpq   14b7 <main+0x357>
    16de:	66 90                	xchg   %ax,%ax
    16e0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    16e5:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
    16ea:	89 c3                	mov    %eax,%ebx
    16ec:	e8 3f 2a 00 00       	callq  4130 <check_data_types>
    16f1:	8b 54 24 68          	mov    0x68(%rsp),%edx
    16f5:	bf 01 00 00 00       	mov    $0x1,%edi
    16fa:	48 8d 35 c9 3b 00 00 	lea    0x3bc9(%rip),%rsi        # 52ca <_IO_stdin_used+0x2ca>
    1701:	0f b6 c0             	movzbl %al,%eax
    1704:	01 c3                	add    %eax,%ebx
    1706:	31 c0                	xor    %eax,%eax
    1708:	e8 23 fa ff ff       	callq  1130 <__printf_chk@plt>
    170d:	4c 89 e2             	mov    %r12,%rdx
    1710:	bf 01 00 00 00       	mov    $0x1,%edi
    1715:	31 c0                	xor    %eax,%eax
    1717:	48 8d 35 c4 3b 00 00 	lea    0x3bc4(%rip),%rsi        # 52e2 <_IO_stdin_used+0x2e2>
    171e:	e8 0d fa ff ff       	callq  1130 <__printf_chk@plt>
    1723:	4c 89 e7             	mov    %r12,%rdi
    1726:	e8 c5 2a 00 00       	callq  41f0 <time_in_secs>
    172b:	bf 01 00 00 00       	mov    $0x1,%edi
    1730:	b8 01 00 00 00       	mov    $0x1,%eax
    1735:	48 8d 35 be 3b 00 00 	lea    0x3bbe(%rip),%rsi        # 52fa <_IO_stdin_used+0x2fa>
    173c:	e8 ef f9 ff ff       	callq  1130 <__printf_chk@plt>
    1741:	4c 89 e7             	mov    %r12,%rdi
    1744:	e8 a7 2a 00 00       	callq  41f0 <time_in_secs>
    1749:	66 0f 2f 05 1f 3d 00 	comisd 0x3d1f(%rip),%xmm0        # 5470 <_IO_stdin_used+0x470>
    1750:	00 
    1751:	76 44                	jbe    1797 <main+0x637>
    1753:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1757:	0f af 05 ca 68 00 00 	imul   0x68ca(%rip),%eax        # 8028 <default_num_contexts>
    175e:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1762:	4c 89 e7             	mov    %r12,%rdi
    1765:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    176a:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    176f:	e8 7c 2a 00 00       	callq  41f0 <time_in_secs>
    1774:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    1779:	bf 01 00 00 00       	mov    $0x1,%edi
    177e:	48 8d 35 8c 3b 00 00 	lea    0x3b8c(%rip),%rsi        # 5311 <_IO_stdin_used+0x311>
    1785:	b8 01 00 00 00       	mov    $0x1,%eax
    178a:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    178e:	66 0f 28 c1          	movapd %xmm1,%xmm0
    1792:	e8 99 f9 ff ff       	callq  1130 <__printf_chk@plt>
    1797:	4c 89 e7             	mov    %r12,%rdi
    179a:	e8 51 2a 00 00       	callq  41f0 <time_in_secs>
    179f:	f2 0f 10 0d d1 3c 00 	movsd  0x3cd1(%rip),%xmm1        # 5478 <_IO_stdin_used+0x478>
    17a6:	00 
    17a7:	66 0f 2f c8          	comisd %xmm0,%xmm1
    17ab:	0f 87 56 02 00 00    	ja     1a07 <main+0x8a7>
    17b1:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    17b5:	8b 15 6d 68 00 00    	mov    0x686d(%rip),%edx        # 8028 <default_num_contexts>
    17bb:	bf 01 00 00 00       	mov    $0x1,%edi
    17c0:	48 8d 35 61 3b 00 00 	lea    0x3b61(%rip),%rsi        # 5328 <_IO_stdin_used+0x328>
    17c7:	48 0f af d0          	imul   %rax,%rdx
    17cb:	31 c0                	xor    %eax,%eax
    17cd:	e8 5e f9 ff ff       	callq  1130 <__printf_chk@plt>
    17d2:	48 8d 15 67 3b 00 00 	lea    0x3b67(%rip),%rdx        # 5340 <_IO_stdin_used+0x340>
    17d9:	48 8d 35 69 3b 00 00 	lea    0x3b69(%rip),%rsi        # 5349 <_IO_stdin_used+0x349>
    17e0:	31 c0                	xor    %eax,%eax
    17e2:	bf 01 00 00 00       	mov    $0x1,%edi
    17e7:	e8 44 f9 ff ff       	callq  1130 <__printf_chk@plt>
    17ec:	48 8d 15 6d 3b 00 00 	lea    0x3b6d(%rip),%rdx        # 5360 <_IO_stdin_used+0x360>
    17f3:	48 8d 35 71 3b 00 00 	lea    0x3b71(%rip),%rsi        # 536b <_IO_stdin_used+0x36b>
    17fa:	31 c0                	xor    %eax,%eax
    17fc:	bf 01 00 00 00       	mov    $0x1,%edi
    1801:	e8 2a f9 ff ff       	callq  1130 <__printf_chk@plt>
    1806:	48 8d 15 c3 39 00 00 	lea    0x39c3(%rip),%rdx        # 51d0 <_IO_stdin_used+0x1d0>
    180d:	48 8d 35 6e 3b 00 00 	lea    0x3b6e(%rip),%rsi        # 5382 <_IO_stdin_used+0x382>
    1814:	31 c0                	xor    %eax,%eax
    1816:	bf 01 00 00 00       	mov    $0x1,%edi
    181b:	e8 10 f9 ff ff       	callq  1130 <__printf_chk@plt>
    1820:	8b 54 24 28          	mov    0x28(%rsp),%edx
    1824:	bf 01 00 00 00       	mov    $0x1,%edi
    1829:	31 c0                	xor    %eax,%eax
    182b:	48 8d 35 67 3b 00 00 	lea    0x3b67(%rip),%rsi        # 5399 <_IO_stdin_used+0x399>
    1832:	e8 f9 f8 ff ff       	callq  1130 <__printf_chk@plt>
    1837:	8b 44 24 70          	mov    0x70(%rsp),%eax
    183b:	a8 01                	test   $0x1,%al
    183d:	74 56                	je     1895 <main+0x735>
    183f:	83 3d e2 67 00 00 00 	cmpl   $0x0,0x67e2(%rip)        # 8028 <default_num_contexts>
    1846:	74 4d                	je     1895 <main+0x735>
    1848:	45 31 f6             	xor    %r14d,%r14d
    184b:	31 d2                	xor    %edx,%edx
    184d:	4c 8d 2d 60 3b 00 00 	lea    0x3b60(%rip),%r13        # 53b4 <_IO_stdin_used+0x3b4>
    1854:	0f 1f 40 00          	nopl   0x0(%rax)
    1858:	48 63 ca             	movslq %edx,%rcx
    185b:	41 83 c6 01          	add    $0x1,%r14d
    185f:	4c 89 ee             	mov    %r13,%rsi
    1862:	bf 01 00 00 00       	mov    $0x1,%edi
    1867:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    186e:	00 
    186f:	48 29 c8             	sub    %rcx,%rax
    1872:	48 c1 e0 04          	shl    $0x4,%rax
    1876:	0f b7 8c 04 a2 00 00 	movzwl 0xa2(%rsp,%rax,1),%ecx
    187d:	00 
    187e:	31 c0                	xor    %eax,%eax
    1880:	e8 ab f8 ff ff       	callq  1130 <__printf_chk@plt>
    1885:	41 0f b7 d6          	movzwl %r14w,%edx
    1889:	3b 15 99 67 00 00    	cmp    0x6799(%rip),%edx        # 8028 <default_num_contexts>
    188f:	72 c7                	jb     1858 <main+0x6f8>
    1891:	8b 44 24 70          	mov    0x70(%rsp),%eax
    1895:	a8 02                	test   $0x2,%al
    1897:	74 5c                	je     18f5 <main+0x795>
    1899:	83 3d 88 67 00 00 00 	cmpl   $0x0,0x6788(%rip)        # 8028 <default_num_contexts>
    18a0:	0f 84 3c 02 00 00    	je     1ae2 <main+0x982>
    18a6:	45 31 f6             	xor    %r14d,%r14d
    18a9:	31 d2                	xor    %edx,%edx
    18ab:	4c 8d 2d 1e 3b 00 00 	lea    0x3b1e(%rip),%r13        # 53d0 <_IO_stdin_used+0x3d0>
    18b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    18b8:	48 63 ca             	movslq %edx,%rcx
    18bb:	41 83 c6 01          	add    $0x1,%r14d
    18bf:	4c 89 ee             	mov    %r13,%rsi
    18c2:	bf 01 00 00 00       	mov    $0x1,%edi
    18c7:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    18ce:	00 
    18cf:	48 29 c8             	sub    %rcx,%rax
    18d2:	48 c1 e0 04          	shl    $0x4,%rax
    18d6:	0f b7 8c 04 a4 00 00 	movzwl 0xa4(%rsp,%rax,1),%ecx
    18dd:	00 
    18de:	31 c0                	xor    %eax,%eax
    18e0:	e8 4b f8 ff ff       	callq  1130 <__printf_chk@plt>
    18e5:	41 0f b7 d6          	movzwl %r14w,%edx
    18e9:	3b 15 39 67 00 00    	cmp    0x6739(%rip),%edx        # 8028 <default_num_contexts>
    18ef:	72 c7                	jb     18b8 <main+0x758>
    18f1:	8b 44 24 70          	mov    0x70(%rsp),%eax
    18f5:	a8 04                	test   $0x4,%al
    18f7:	74 58                	je     1951 <main+0x7f1>
    18f9:	45 31 f6             	xor    %r14d,%r14d
    18fc:	31 d2                	xor    %edx,%edx
    18fe:	83 3d 23 67 00 00 00 	cmpl   $0x0,0x6723(%rip)        # 8028 <default_num_contexts>
    1905:	4c 8d 2d e0 3a 00 00 	lea    0x3ae0(%rip),%r13        # 53ec <_IO_stdin_used+0x3ec>
    190c:	0f 84 97 00 00 00    	je     19a9 <main+0x849>
    1912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1918:	48 63 ca             	movslq %edx,%rcx
    191b:	41 83 c6 01          	add    $0x1,%r14d
    191f:	4c 89 ee             	mov    %r13,%rsi
    1922:	bf 01 00 00 00       	mov    $0x1,%edi
    1927:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    192e:	00 
    192f:	48 29 c8             	sub    %rcx,%rax
    1932:	48 c1 e0 04          	shl    $0x4,%rax
    1936:	0f b7 8c 04 a6 00 00 	movzwl 0xa6(%rsp,%rax,1),%ecx
    193d:	00 
    193e:	31 c0                	xor    %eax,%eax
    1940:	e8 eb f7 ff ff       	callq  1130 <__printf_chk@plt>
    1945:	41 0f b7 d6          	movzwl %r14w,%edx
    1949:	3b 15 d9 66 00 00    	cmp    0x66d9(%rip),%edx        # 8028 <default_num_contexts>
    194f:	72 c7                	jb     1918 <main+0x7b8>
    1951:	8b 0d d1 66 00 00    	mov    0x66d1(%rip),%ecx        # 8028 <default_num_contexts>
    1957:	45 31 f6             	xor    %r14d,%r14d
    195a:	31 d2                	xor    %edx,%edx
    195c:	4c 8d 2d a5 3a 00 00 	lea    0x3aa5(%rip),%r13        # 5408 <_IO_stdin_used+0x408>
    1963:	85 c9                	test   %ecx,%ecx
    1965:	74 42                	je     19a9 <main+0x849>
    1967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    196e:	00 00 
    1970:	48 63 ca             	movslq %edx,%rcx
    1973:	41 83 c6 01          	add    $0x1,%r14d
    1977:	4c 89 ee             	mov    %r13,%rsi
    197a:	bf 01 00 00 00       	mov    $0x1,%edi
    197f:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    1986:	00 
    1987:	48 29 c8             	sub    %rcx,%rax
    198a:	48 c1 e0 04          	shl    $0x4,%rax
    198e:	0f b7 8c 04 a0 00 00 	movzwl 0xa0(%rsp,%rax,1),%ecx
    1995:	00 
    1996:	31 c0                	xor    %eax,%eax
    1998:	e8 93 f7 ff ff       	callq  1130 <__printf_chk@plt>
    199d:	41 0f b7 d6          	movzwl %r14w,%edx
    19a1:	3b 15 81 66 00 00    	cmp    0x6681(%rip),%edx        # 8028 <default_num_contexts>
    19a7:	72 c7                	jb     1970 <main+0x810>
    19a9:	66 85 db             	test   %bx,%bx
    19ac:	74 6d                	je     1a1b <main+0x8bb>
    19ae:	7e 49                	jle    19f9 <main+0x899>
    19b0:	48 8d 3d 8d 3a 00 00 	lea    0x3a8d(%rip),%rdi        # 5444 <_IO_stdin_used+0x444>
    19b7:	e8 24 f7 ff ff       	callq  10e0 <puts@plt>
    19bc:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    19c1:	e8 8a 27 00 00       	callq  4150 <portable_free>
    19c6:	48 89 ef             	mov    %rbp,%rdi
    19c9:	e8 52 28 00 00       	callq  4220 <portable_fini>
    19ce:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
    19d5:	00 
    19d6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    19dd:	00 00 
    19df:	0f 85 d7 01 00 00    	jne    1bbc <main+0xa5c>
    19e5:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    19ec:	31 c0                	xor    %eax,%eax
    19ee:	5b                   	pop    %rbx
    19ef:	5d                   	pop    %rbp
    19f0:	41 5c                	pop    %r12
    19f2:	41 5d                	pop    %r13
    19f4:	41 5e                	pop    %r14
    19f6:	41 5f                	pop    %r15
    19f8:	c3                   	retq   
    19f9:	48 8d 3d 68 38 00 00 	lea    0x3868(%rip),%rdi        # 5268 <_IO_stdin_used+0x268>
    1a00:	e8 db f6 ff ff       	callq  10e0 <puts@plt>
    1a05:	eb b5                	jmp    19bc <main+0x85c>
    1a07:	48 8d 3d 82 37 00 00 	lea    0x3782(%rip),%rdi        # 5190 <_IO_stdin_used+0x190>
    1a0e:	83 c3 01             	add    $0x1,%ebx
    1a11:	e8 ca f6 ff ff       	callq  10e0 <puts@plt>
    1a16:	e9 96 fd ff ff       	jmpq   17b1 <main+0x651>
    1a1b:	48 8d 3d fe 37 00 00 	lea    0x37fe(%rip),%rdi        # 5220 <_IO_stdin_used+0x220>
    1a22:	e8 b9 f6 ff ff       	callq  10e0 <puts@plt>
    1a27:	66 83 7c 24 2e 03    	cmpw   $0x3,0x2e(%rsp)
    1a2d:	75 8d                	jne    19bc <main+0x85c>
    1a2f:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    1a33:	0f af 05 ee 65 00 00 	imul   0x65ee(%rip),%eax        # 8028 <default_num_contexts>
    1a3a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1a3e:	4c 89 e7             	mov    %r12,%rdi
    1a41:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1a46:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    1a4b:	e8 a0 27 00 00       	callq  41f0 <time_in_secs>
    1a50:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    1a55:	48 8d 0d 04 39 00 00 	lea    0x3904(%rip),%rcx        # 5360 <_IO_stdin_used+0x360>
    1a5c:	48 8d 15 dd 38 00 00 	lea    0x38dd(%rip),%rdx        # 5340 <_IO_stdin_used+0x340>
    1a63:	48 8d 35 ba 39 00 00 	lea    0x39ba(%rip),%rsi        # 5424 <_IO_stdin_used+0x424>
    1a6a:	bf 01 00 00 00       	mov    $0x1,%edi
    1a6f:	b8 01 00 00 00       	mov    $0x1,%eax
    1a74:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    1a78:	66 0f 28 c1          	movapd %xmm1,%xmm0
    1a7c:	e8 af f6 ff ff       	callq  1130 <__printf_chk@plt>
    1a81:	48 8b 15 90 65 00 00 	mov    0x6590(%rip),%rdx        # 8018 <mem_name+0x8>
    1a88:	48 8d 35 af 39 00 00 	lea    0x39af(%rip),%rsi        # 543e <_IO_stdin_used+0x43e>
    1a8f:	31 c0                	xor    %eax,%eax
    1a91:	bf 01 00 00 00       	mov    $0x1,%edi
    1a96:	e8 95 f6 ff ff       	callq  1130 <__printf_chk@plt>
    1a9b:	bf 0a 00 00 00       	mov    $0xa,%edi
    1aa0:	e8 2b f6 ff ff       	callq  10d0 <putchar@plt>
    1aa5:	e9 12 ff ff ff       	jmpq   19bc <main+0x85c>
    1aaa:	0f b7 d2             	movzwl %dx,%edx
    1aad:	0f af d0             	imul   %eax,%edx
    1ab0:	49 01 d0             	add    %rdx,%r8
    1ab3:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
    1ab8:	e9 17 f8 ff ff       	jmpq   12d4 <main+0x174>
    1abd:	0f b7 f2             	movzwl %dx,%esi
    1ac0:	83 c2 01             	add    $0x1,%edx
    1ac3:	0f af f0             	imul   %eax,%esi
    1ac6:	4c 01 c6             	add    %r8,%rsi
    1ac9:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
    1ace:	e9 f8 f7 ff ff       	jmpq   12cb <main+0x16b>
    1ad3:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
    1ad8:	ba 01 00 00 00       	mov    $0x1,%edx
    1add:	e9 e1 f7 ff ff       	jmpq   12c3 <main+0x163>
    1ae2:	a8 04                	test   $0x4,%al
    1ae4:	0f 84 67 fe ff ff    	je     1951 <main+0x7f1>
    1aea:	e9 ba fe ff ff       	jmpq   19a9 <main+0x849>
    1aef:	48 8d 3d d2 35 00 00 	lea    0x35d2(%rip),%rdi        # 50c8 <_IO_stdin_used+0xc8>
    1af6:	e8 e5 f5 ff ff       	callq  10e0 <puts@plt>
    1afb:	c7 44 24 14 84 8d 00 	movl   $0x8d84,0x14(%rsp)
    1b02:	00 
    1b03:	b8 84 8d ff ff       	mov    $0xffff8d84,%eax
    1b08:	c7 44 24 10 47 07 00 	movl   $0x747,0x10(%rsp)
    1b0f:	00 
    1b10:	66 c7 44 24 2c 47 07 	movw   $0x747,0x2c(%rsp)
    1b17:	c7 44 24 0c c1 e3 00 	movl   $0xe3c1,0xc(%rsp)
    1b1e:	00 
    1b1f:	66 c7 04 24 c1 e3    	movw   $0xe3c1,(%rsp)
    1b25:	66 c7 44 24 2e 04 00 	movw   $0x4,0x2e(%rsp)
    1b2c:	e9 86 f9 ff ff       	jmpq   14b7 <main+0x357>
    1b31:	48 8d 3d d0 34 00 00 	lea    0x34d0(%rip),%rdi        # 5008 <_IO_stdin_used+0x8>
    1b38:	e8 a3 f5 ff ff       	callq  10e0 <puts@plt>
    1b3d:	c7 44 24 14 47 5e 00 	movl   $0x5e47,0x14(%rsp)
    1b44:	00 
    1b45:	b8 47 5e 00 00       	mov    $0x5e47,%eax
    1b4a:	c7 44 24 10 52 be 00 	movl   $0xbe52,0x10(%rsp)
    1b51:	00 
    1b52:	66 c7 44 24 2c 52 be 	movw   $0xbe52,0x2c(%rsp)
    1b59:	c7 44 24 0c b0 d4 00 	movl   $0xd4b0,0xc(%rsp)
    1b60:	00 
    1b61:	66 c7 04 24 b0 d4    	movw   $0xd4b0,(%rsp)
    1b67:	66 c7 44 24 2e 00 00 	movw   $0x0,0x2e(%rsp)
    1b6e:	e9 44 f9 ff ff       	jmpq   14b7 <main+0x357>
    1b73:	48 8d 3d be 34 00 00 	lea    0x34be(%rip),%rdi        # 5038 <_IO_stdin_used+0x38>
    1b7a:	e8 61 f5 ff ff       	callq  10e0 <puts@plt>
    1b7f:	c7 44 24 14 bf 39 00 	movl   $0x39bf,0x14(%rsp)
    1b86:	00 
    1b87:	b8 bf 39 00 00       	mov    $0x39bf,%eax
    1b8c:	c7 44 24 10 99 11 00 	movl   $0x1199,0x10(%rsp)
    1b93:	00 
    1b94:	66 c7 44 24 2c 99 11 	movw   $0x1199,0x2c(%rsp)
    1b9b:	c7 44 24 0c 40 33 00 	movl   $0x3340,0xc(%rsp)
    1ba2:	00 
    1ba3:	66 c7 04 24 40 33    	movw   $0x3340,(%rsp)
    1ba9:	66 c7 44 24 2e 01 00 	movw   $0x1,0x2e(%rsp)
    1bb0:	e9 02 f9 ff ff       	jmpq   14b7 <main+0x357>
    1bb5:	31 db                	xor    %ebx,%ebx
    1bb7:	e9 30 fb ff ff       	jmpq   16ec <main+0x58c>
    1bbc:	e8 3f f5 ff ff       	callq  1100 <__stack_chk_fail@plt>
    1bc1:	66 c7 44 24 2e ff ff 	movw   $0xffff,0x2e(%rsp)
    1bc8:	83 cb ff             	or     $0xffffffff,%ebx
    1bcb:	e9 1c fb ff ff       	jmpq   16ec <main+0x58c>

0000000000001bd0 <_start>:
    1bd0:	f3 0f 1e fa          	endbr64 
    1bd4:	31 ed                	xor    %ebp,%ebp
    1bd6:	49 89 d1             	mov    %rdx,%r9
    1bd9:	5e                   	pop    %rsi
    1bda:	48 89 e2             	mov    %rsp,%rdx
    1bdd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1be1:	50                   	push   %rax
    1be2:	54                   	push   %rsp
    1be3:	4c 8d 05 b6 26 00 00 	lea    0x26b6(%rip),%r8        # 42a0 <__libc_csu_fini>
    1bea:	48 8d 0d 3f 26 00 00 	lea    0x263f(%rip),%rcx        # 4230 <__libc_csu_init>
    1bf1:	48 8d 3d 68 f5 ff ff 	lea    -0xa98(%rip),%rdi        # 1160 <main>
    1bf8:	ff 15 d2 63 00 00    	callq  *0x63d2(%rip)        # 7fd0 <__libc_start_main@GLIBC_2.2.5>
    1bfe:	f4                   	hlt    
    1bff:	90                   	nop

0000000000001c00 <deregister_tm_clones>:
    1c00:	48 8d 3d 29 64 00 00 	lea    0x6429(%rip),%rdi        # 8030 <__TMC_END__>
    1c07:	48 8d 05 22 64 00 00 	lea    0x6422(%rip),%rax        # 8030 <__TMC_END__>
    1c0e:	48 39 f8             	cmp    %rdi,%rax
    1c11:	74 15                	je     1c28 <deregister_tm_clones+0x28>
    1c13:	48 8b 05 ae 63 00 00 	mov    0x63ae(%rip),%rax        # 7fc8 <_ITM_deregisterTMCloneTable>
    1c1a:	48 85 c0             	test   %rax,%rax
    1c1d:	74 09                	je     1c28 <deregister_tm_clones+0x28>
    1c1f:	ff e0                	jmpq   *%rax
    1c21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1c28:	c3                   	retq   
    1c29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001c30 <register_tm_clones>:
    1c30:	48 8d 3d f9 63 00 00 	lea    0x63f9(%rip),%rdi        # 8030 <__TMC_END__>
    1c37:	48 8d 35 f2 63 00 00 	lea    0x63f2(%rip),%rsi        # 8030 <__TMC_END__>
    1c3e:	48 29 fe             	sub    %rdi,%rsi
    1c41:	48 89 f0             	mov    %rsi,%rax
    1c44:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1c48:	48 c1 f8 03          	sar    $0x3,%rax
    1c4c:	48 01 c6             	add    %rax,%rsi
    1c4f:	48 d1 fe             	sar    %rsi
    1c52:	74 14                	je     1c68 <register_tm_clones+0x38>
    1c54:	48 8b 05 85 63 00 00 	mov    0x6385(%rip),%rax        # 7fe0 <_ITM_registerTMCloneTable>
    1c5b:	48 85 c0             	test   %rax,%rax
    1c5e:	74 08                	je     1c68 <register_tm_clones+0x38>
    1c60:	ff e0                	jmpq   *%rax
    1c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1c68:	c3                   	retq   
    1c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001c70 <__do_global_dtors_aux>:
    1c70:	f3 0f 1e fa          	endbr64 
    1c74:	80 3d b5 63 00 00 00 	cmpb   $0x0,0x63b5(%rip)        # 8030 <__TMC_END__>
    1c7b:	75 2b                	jne    1ca8 <__do_global_dtors_aux+0x38>
    1c7d:	55                   	push   %rbp
    1c7e:	48 83 3d 62 63 00 00 	cmpq   $0x0,0x6362(%rip)        # 7fe8 <__cxa_finalize@GLIBC_2.2.5>
    1c85:	00 
    1c86:	48 89 e5             	mov    %rsp,%rbp
    1c89:	74 0c                	je     1c97 <__do_global_dtors_aux+0x27>
    1c8b:	48 8b 3d 76 63 00 00 	mov    0x6376(%rip),%rdi        # 8008 <__dso_handle>
    1c92:	e8 19 f4 ff ff       	callq  10b0 <__cxa_finalize@plt>
    1c97:	e8 64 ff ff ff       	callq  1c00 <deregister_tm_clones>
    1c9c:	c6 05 8d 63 00 00 01 	movb   $0x1,0x638d(%rip)        # 8030 <__TMC_END__>
    1ca3:	5d                   	pop    %rbp
    1ca4:	c3                   	retq   
    1ca5:	0f 1f 00             	nopl   (%rax)
    1ca8:	c3                   	retq   
    1ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001cb0 <frame_dummy>:
    1cb0:	f3 0f 1e fa          	endbr64 
    1cb4:	e9 77 ff ff ff       	jmpq   1c30 <register_tm_clones>
    1cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001cc0 <calc_func>:
    1cc0:	f3 0f 1e fa          	endbr64 
    1cc4:	41 55                	push   %r13
    1cc6:	41 54                	push   %r12
    1cc8:	55                   	push   %rbp
    1cc9:	53                   	push   %rbx
    1cca:	48 83 ec 08          	sub    $0x8,%rsp
    1cce:	0f b7 1f             	movzwl (%rdi),%ebx
    1cd1:	84 db                	test   %bl,%bl
    1cd3:	79 13                	jns    1ce8 <calc_func+0x28>
    1cd5:	48 83 c4 08          	add    $0x8,%rsp
    1cd9:	89 d8                	mov    %ebx,%eax
    1cdb:	83 e0 7f             	and    $0x7f,%eax
    1cde:	5b                   	pop    %rbx
    1cdf:	5d                   	pop    %rbp
    1ce0:	41 5c                	pop    %r12
    1ce2:	41 5d                	pop    %r13
    1ce4:	c3                   	retq   
    1ce5:	0f 1f 00             	nopl   (%rax)
    1ce8:	89 d8                	mov    %ebx,%eax
    1cea:	48 89 f5             	mov    %rsi,%rbp
    1ced:	89 da                	mov    %ebx,%edx
    1cef:	49 89 fc             	mov    %rdi,%r12
    1cf2:	66 c1 f8 03          	sar    $0x3,%ax
    1cf6:	89 c6                	mov    %eax,%esi
    1cf8:	83 e0 0f             	and    $0xf,%eax
    1cfb:	83 e6 0f             	and    $0xf,%esi
    1cfe:	c1 e0 04             	shl    $0x4,%eax
    1d01:	09 f0                	or     %esi,%eax
    1d03:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1d07:	66 83 e2 07          	and    $0x7,%dx
    1d0b:	74 63                	je     1d70 <calc_func+0xb0>
    1d0d:	66 83 fa 01          	cmp    $0x1,%dx
    1d11:	75 2d                	jne    1d40 <calc_func+0x80>
    1d13:	44 0f bf c0          	movswl %ax,%r8d
    1d17:	89 f2                	mov    %esi,%edx
    1d19:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    1d1d:	44 89 c6             	mov    %r8d,%esi
    1d20:	e8 5b 11 00 00       	callq  2e80 <core_bench_matrix>
    1d25:	66 83 7d 64 00       	cmpw   $0x0,0x64(%rbp)
    1d2a:	41 89 c5             	mov    %eax,%r13d
    1d2d:	75 04                	jne    1d33 <calc_func+0x73>
    1d2f:	66 89 45 64          	mov    %ax,0x64(%rbp)
    1d33:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1d37:	eb 0c                	jmp    1d45 <calc_func+0x85>
    1d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1d40:	89 d8                	mov    %ebx,%eax
    1d42:	41 89 dd             	mov    %ebx,%r13d
    1d45:	0f b7 f8             	movzwl %ax,%edi
    1d48:	30 db                	xor    %bl,%bl
    1d4a:	e8 51 1d 00 00       	callq  3aa0 <crcu16>
    1d4f:	66 89 45 60          	mov    %ax,0x60(%rbp)
    1d53:	44 89 e8             	mov    %r13d,%eax
    1d56:	83 e0 7f             	and    $0x7f,%eax
    1d59:	09 c3                	or     %eax,%ebx
    1d5b:	80 cb 80             	or     $0x80,%bl
    1d5e:	66 41 89 1c 24       	mov    %bx,(%r12)
    1d63:	48 83 c4 08          	add    $0x8,%rsp
    1d67:	5b                   	pop    %rbx
    1d68:	5d                   	pop    %rbp
    1d69:	41 5c                	pop    %r12
    1d6b:	41 5d                	pop    %r13
    1d6d:	c3                   	retq   
    1d6e:	66 90                	xchg   %ax,%ax
    1d70:	66 83 f8 22          	cmp    $0x22,%ax
    1d74:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1d7a:	8b 7d 28             	mov    0x28(%rbp),%edi
    1d7d:	41 89 f1             	mov    %esi,%r9d
    1d80:	44 0f 4d c0          	cmovge %eax,%r8d
    1d84:	4c 8b 55 20          	mov    0x20(%rbp),%r10
    1d88:	0f bf 4d 02          	movswl 0x2(%rbp),%ecx
    1d8c:	0f bf 55 00          	movswl 0x0(%rbp),%edx
    1d90:	45 0f bf c0          	movswl %r8w,%r8d
    1d94:	4c 89 d6             	mov    %r10,%rsi
    1d97:	e8 d4 19 00 00       	callq  3770 <core_bench_state>
    1d9c:	66 83 7d 66 00       	cmpw   $0x0,0x66(%rbp)
    1da1:	41 89 c5             	mov    %eax,%r13d
    1da4:	75 8d                	jne    1d33 <calc_func+0x73>
    1da6:	66 89 45 66          	mov    %ax,0x66(%rbp)
    1daa:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    1dae:	eb 95                	jmp    1d45 <calc_func+0x85>

0000000000001db0 <cmp_complex>:
    1db0:	f3 0f 1e fa          	endbr64 
    1db4:	41 56                	push   %r14
    1db6:	41 55                	push   %r13
    1db8:	41 54                	push   %r12
    1dba:	49 89 f4             	mov    %rsi,%r12
    1dbd:	55                   	push   %rbp
    1dbe:	53                   	push   %rbx
    1dbf:	0f b7 2f             	movzwl (%rdi),%ebp
    1dc2:	48 89 d3             	mov    %rdx,%rbx
    1dc5:	40 84 ed             	test   %bpl,%bpl
    1dc8:	79 6e                	jns    1e38 <cmp_complex+0x88>
    1dca:	83 e5 7f             	and    $0x7f,%ebp
    1dcd:	41 89 ed             	mov    %ebp,%r13d
    1dd0:	41 0f b7 2c 24       	movzwl (%r12),%ebp
    1dd5:	40 84 ed             	test   %bpl,%bpl
    1dd8:	0f 88 b2 00 00 00    	js     1e90 <cmp_complex+0xe0>
    1dde:	89 e8                	mov    %ebp,%eax
    1de0:	89 ea                	mov    %ebp,%edx
    1de2:	66 c1 f8 03          	sar    $0x3,%ax
    1de6:	89 c6                	mov    %eax,%esi
    1de8:	83 e0 0f             	and    $0xf,%eax
    1deb:	83 e6 0f             	and    $0xf,%esi
    1dee:	c1 e0 04             	shl    $0x4,%eax
    1df1:	09 f0                	or     %esi,%eax
    1df3:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1df7:	66 83 e2 07          	and    $0x7,%dx
    1dfb:	0f 84 27 01 00 00    	je     1f28 <cmp_complex+0x178>
    1e01:	66 83 fa 01          	cmp    $0x1,%dx
    1e05:	0f 84 65 01 00 00    	je     1f70 <cmp_complex+0x1c0>
    1e0b:	89 e8                	mov    %ebp,%eax
    1e0d:	41 89 ee             	mov    %ebp,%r14d
    1e10:	0f b7 f8             	movzwl %ax,%edi
    1e13:	40 30 ed             	xor    %bpl,%bpl
    1e16:	e8 85 1c 00 00       	callq  3aa0 <crcu16>
    1e1b:	44 89 f2             	mov    %r14d,%edx
    1e1e:	83 e2 7f             	and    $0x7f,%edx
    1e21:	66 89 43 60          	mov    %ax,0x60(%rbx)
    1e25:	09 d5                	or     %edx,%ebp
    1e27:	40 80 cd 80          	or     $0x80,%bpl
    1e2b:	66 41 89 2c 24       	mov    %bp,(%r12)
    1e30:	eb 63                	jmp    1e95 <cmp_complex+0xe5>
    1e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e38:	89 e8                	mov    %ebp,%eax
    1e3a:	49 89 fe             	mov    %rdi,%r14
    1e3d:	66 c1 f8 03          	sar    $0x3,%ax
    1e41:	89 c6                	mov    %eax,%esi
    1e43:	83 e0 0f             	and    $0xf,%eax
    1e46:	83 e6 0f             	and    $0xf,%esi
    1e49:	c1 e0 04             	shl    $0x4,%eax
    1e4c:	09 f0                	or     %esi,%eax
    1e4e:	0f b7 72 60          	movzwl 0x60(%rdx),%esi
    1e52:	89 ea                	mov    %ebp,%edx
    1e54:	66 83 e2 07          	and    $0x7,%dx
    1e58:	0f 84 82 00 00 00    	je     1ee0 <cmp_complex+0x130>
    1e5e:	66 83 fa 01          	cmp    $0x1,%dx
    1e62:	75 4c                	jne    1eb0 <cmp_complex+0x100>
    1e64:	44 0f bf c0          	movswl %ax,%r8d
    1e68:	89 f2                	mov    %esi,%edx
    1e6a:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    1e6e:	44 89 c6             	mov    %r8d,%esi
    1e71:	e8 0a 10 00 00       	callq  2e80 <core_bench_matrix>
    1e76:	66 83 7b 64 00       	cmpw   $0x0,0x64(%rbx)
    1e7b:	41 89 c5             	mov    %eax,%r13d
    1e7e:	75 04                	jne    1e84 <cmp_complex+0xd4>
    1e80:	66 89 43 64          	mov    %ax,0x64(%rbx)
    1e84:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1e88:	eb 2b                	jmp    1eb5 <cmp_complex+0x105>
    1e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e90:	89 ea                	mov    %ebp,%edx
    1e92:	83 e2 7f             	and    $0x7f,%edx
    1e95:	41 0f bf c5          	movswl %r13w,%eax
    1e99:	0f bf d2             	movswl %dx,%edx
    1e9c:	5b                   	pop    %rbx
    1e9d:	5d                   	pop    %rbp
    1e9e:	29 d0                	sub    %edx,%eax
    1ea0:	41 5c                	pop    %r12
    1ea2:	41 5d                	pop    %r13
    1ea4:	41 5e                	pop    %r14
    1ea6:	c3                   	retq   
    1ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1eae:	00 00 
    1eb0:	89 e8                	mov    %ebp,%eax
    1eb2:	41 89 ed             	mov    %ebp,%r13d
    1eb5:	41 83 e5 7f          	and    $0x7f,%r13d
    1eb9:	40 30 ed             	xor    %bpl,%bpl
    1ebc:	0f b7 f8             	movzwl %ax,%edi
    1ebf:	e8 dc 1b 00 00       	callq  3aa0 <crcu16>
    1ec4:	44 09 ed             	or     %r13d,%ebp
    1ec7:	40 80 cd 80          	or     $0x80,%bpl
    1ecb:	66 89 43 60          	mov    %ax,0x60(%rbx)
    1ecf:	66 41 89 2e          	mov    %bp,(%r14)
    1ed3:	e9 f8 fe ff ff       	jmpq   1dd0 <cmp_complex+0x20>
    1ed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1edf:	00 
    1ee0:	66 83 f8 22          	cmp    $0x22,%ax
    1ee4:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1eea:	0f bf 13             	movswl (%rbx),%edx
    1eed:	8b 7b 28             	mov    0x28(%rbx),%edi
    1ef0:	44 0f 4d c0          	cmovge %eax,%r8d
    1ef4:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    1ef8:	0f bf 4b 02          	movswl 0x2(%rbx),%ecx
    1efc:	41 89 f1             	mov    %esi,%r9d
    1eff:	45 0f bf c0          	movswl %r8w,%r8d
    1f03:	4c 89 d6             	mov    %r10,%rsi
    1f06:	e8 65 18 00 00       	callq  3770 <core_bench_state>
    1f0b:	66 83 7b 66 00       	cmpw   $0x0,0x66(%rbx)
    1f10:	41 89 c5             	mov    %eax,%r13d
    1f13:	0f 85 6b ff ff ff    	jne    1e84 <cmp_complex+0xd4>
    1f19:	66 89 43 66          	mov    %ax,0x66(%rbx)
    1f1d:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1f21:	eb 92                	jmp    1eb5 <cmp_complex+0x105>
    1f23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1f28:	66 83 f8 22          	cmp    $0x22,%ax
    1f2c:	41 b8 22 00 00 00    	mov    $0x22,%r8d
    1f32:	0f bf 13             	movswl (%rbx),%edx
    1f35:	8b 7b 28             	mov    0x28(%rbx),%edi
    1f38:	44 0f 4d c0          	cmovge %eax,%r8d
    1f3c:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    1f40:	0f bf 4b 02          	movswl 0x2(%rbx),%ecx
    1f44:	41 89 f1             	mov    %esi,%r9d
    1f47:	45 0f bf c0          	movswl %r8w,%r8d
    1f4b:	4c 89 d6             	mov    %r10,%rsi
    1f4e:	e8 1d 18 00 00       	callq  3770 <core_bench_state>
    1f53:	66 83 7b 66 00       	cmpw   $0x0,0x66(%rbx)
    1f58:	41 89 c6             	mov    %eax,%r14d
    1f5b:	75 33                	jne    1f90 <cmp_complex+0x1e0>
    1f5d:	66 89 43 66          	mov    %ax,0x66(%rbx)
    1f61:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1f65:	e9 a6 fe ff ff       	jmpq   1e10 <cmp_complex+0x60>
    1f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1f70:	44 0f bf c0          	movswl %ax,%r8d
    1f74:	89 f2                	mov    %esi,%edx
    1f76:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
    1f7a:	44 89 c6             	mov    %r8d,%esi
    1f7d:	e8 fe 0e 00 00       	callq  2e80 <core_bench_matrix>
    1f82:	66 83 7b 64 00       	cmpw   $0x0,0x64(%rbx)
    1f87:	41 89 c6             	mov    %eax,%r14d
    1f8a:	75 04                	jne    1f90 <cmp_complex+0x1e0>
    1f8c:	66 89 43 64          	mov    %ax,0x64(%rbx)
    1f90:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1f94:	e9 77 fe ff ff       	jmpq   1e10 <cmp_complex+0x60>
    1f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001fa0 <cmp_idx>:
    1fa0:	f3 0f 1e fa          	endbr64 
    1fa4:	48 85 d2             	test   %rdx,%rdx
    1fa7:	74 0f                	je     1fb8 <cmp_idx+0x18>
    1fa9:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1fad:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1fb1:	29 d0                	sub    %edx,%eax
    1fb3:	c3                   	retq   
    1fb4:	0f 1f 40 00          	nopl   0x0(%rax)
    1fb8:	0f b7 07             	movzwl (%rdi),%eax
    1fbb:	89 c2                	mov    %eax,%edx
    1fbd:	66 c1 e8 08          	shr    $0x8,%ax
    1fc1:	30 d2                	xor    %dl,%dl
    1fc3:	09 d0                	or     %edx,%eax
    1fc5:	66 89 07             	mov    %ax,(%rdi)
    1fc8:	0f b7 06             	movzwl (%rsi),%eax
    1fcb:	89 c2                	mov    %eax,%edx
    1fcd:	66 c1 e8 08          	shr    $0x8,%ax
    1fd1:	30 d2                	xor    %dl,%dl
    1fd3:	09 d0                	or     %edx,%eax
    1fd5:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    1fd9:	66 89 06             	mov    %ax,(%rsi)
    1fdc:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1fe0:	29 d0                	sub    %edx,%eax
    1fe2:	c3                   	retq   
    1fe3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1fea:	00 00 00 00 
    1fee:	66 90                	xchg   %ax,%ax

0000000000001ff0 <copy_info>:
    1ff0:	f3 0f 1e fa          	endbr64 
    1ff4:	0f b7 06             	movzwl (%rsi),%eax
    1ff7:	66 89 07             	mov    %ax,(%rdi)
    1ffa:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
    1ffe:	66 89 47 02          	mov    %ax,0x2(%rdi)
    2002:	c3                   	retq   
    2003:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    200a:	00 00 00 00 
    200e:	66 90                	xchg   %ax,%ax

0000000000002010 <core_bench_list>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	41 57                	push   %r15
    2016:	41 56                	push   %r14
    2018:	41 55                	push   %r13
    201a:	49 89 fd             	mov    %rdi,%r13
    201d:	41 54                	push   %r12
    201f:	55                   	push   %rbp
    2020:	53                   	push   %rbx
    2021:	48 83 ec 28          	sub    $0x28,%rsp
    2025:	44 0f b7 5f 04       	movzwl 0x4(%rdi),%r11d
    202a:	4c 8b 7f 38          	mov    0x38(%rdi),%r15
    202e:	66 89 74 24 16       	mov    %si,0x16(%rsp)
    2033:	66 45 85 db          	test   %r11w,%r11w
    2037:	0f 8e 54 04 00 00    	jle    2491 <core_bench_list+0x481>
    203d:	45 31 c0             	xor    %r8d,%r8d
    2040:	31 db                	xor    %ebx,%ebx
    2042:	45 31 c9             	xor    %r9d,%r9d
    2045:	45 31 d2             	xor    %r10d,%r10d
    2048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    204f:	00 
    2050:	41 0f b6 c0          	movzbl %r8b,%eax
    2054:	66 83 7c 24 16 00    	cmpw   $0x0,0x16(%rsp)
    205a:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
    205f:	0f 88 eb 02 00 00    	js     2350 <core_bench_list+0x340>
    2065:	4d 85 ff             	test   %r15,%r15
    2068:	0f 84 45 04 00 00    	je     24b3 <core_bench_list+0x4a3>
    206e:	4c 89 f8             	mov    %r15,%rax
    2071:	eb 0d                	jmp    2080 <core_bench_list+0x70>
    2073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2078:	48 8b 00             	mov    (%rax),%rax
    207b:	48 85 c0             	test   %rax,%rax
    207e:	74 0f                	je     208f <core_bench_list+0x7f>
    2080:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2084:	0f b7 4c 24 16       	movzwl 0x16(%rsp),%ecx
    2089:	66 3b 4a 02          	cmp    0x2(%rdx),%cx
    208d:	75 e9                	jne    2078 <core_bench_list+0x68>
    208f:	31 ff                	xor    %edi,%edi
    2091:	eb 0b                	jmp    209e <core_bench_list+0x8e>
    2093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2098:	4c 89 ff             	mov    %r15,%rdi
    209b:	49 89 d7             	mov    %rdx,%r15
    209e:	49 8b 17             	mov    (%r15),%rdx
    20a1:	49 89 3f             	mov    %rdi,(%r15)
    20a4:	48 85 d2             	test   %rdx,%rdx
    20a7:	75 ef                	jne    2098 <core_bench_list+0x88>
    20a9:	48 85 c0             	test   %rax,%rax
    20ac:	0f 84 ce 02 00 00    	je     2380 <core_bench_list+0x370>
    20b2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    20b6:	41 83 c1 01          	add    $0x1,%r9d
    20ba:	0f b7 12             	movzwl (%rdx),%edx
    20bd:	f6 c2 01             	test   $0x1,%dl
    20c0:	74 0a                	je     20cc <core_bench_list+0xbc>
    20c2:	66 c1 fa 09          	sar    $0x9,%dx
    20c6:	83 e2 01             	and    $0x1,%edx
    20c9:	41 01 d2             	add    %edx,%r10d
    20cc:	48 8b 10             	mov    (%rax),%rdx
    20cf:	48 85 d2             	test   %rdx,%rdx
    20d2:	74 0f                	je     20e3 <core_bench_list+0xd3>
    20d4:	48 8b 3a             	mov    (%rdx),%rdi
    20d7:	48 89 38             	mov    %rdi,(%rax)
    20da:	49 8b 07             	mov    (%r15),%rax
    20dd:	48 89 02             	mov    %rax,(%rdx)
    20e0:	49 89 17             	mov    %rdx,(%r15)
    20e3:	0f b7 44 24 16       	movzwl 0x16(%rsp),%eax
    20e8:	66 3d 00 80          	cmp    $0x8000,%ax
    20ec:	66 83 d0 00          	adc    $0x0,%ax
    20f0:	41 83 c0 01          	add    $0x1,%r8d
    20f4:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
    20f9:	66 45 39 c3          	cmp    %r8w,%r11w
    20fd:	0f 85 4d ff ff ff    	jne    2050 <core_bench_list+0x40>
    2103:	43 8d 04 8a          	lea    (%r10,%r9,4),%eax
    2107:	29 d8                	sub    %ebx,%eax
    2109:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    210e:	66 85 f6             	test   %si,%si
    2111:	0f 8f 82 02 00 00    	jg     2399 <core_bench_list+0x389>
    2117:	49 8b 07             	mov    (%r15),%rax
    211a:	66 83 7c 24 16 00    	cmpw   $0x0,0x16(%rsp)
    2120:	4c 89 fb             	mov    %r15,%rbx
    2123:	4c 8b 20             	mov    (%rax),%r12
    2126:	48 8b 50 08          	mov    0x8(%rax),%rdx
    212a:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    212f:	48 89 70 08          	mov    %rsi,0x8(%rax)
    2133:	49 8b 34 24          	mov    (%r12),%rsi
    2137:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    213c:	48 89 30             	mov    %rsi,(%rax)
    213f:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    2146:	00 
    2147:	0f 88 5b 01 00 00    	js     22a8 <core_bench_list+0x298>
    214d:	0f 1f 00             	nopl   (%rax)
    2150:	48 8b 43 08          	mov    0x8(%rbx),%rax
    2154:	0f b7 4c 24 16       	movzwl 0x16(%rsp),%ecx
    2159:	66 3b 48 02          	cmp    0x2(%rax),%cx
    215d:	74 11                	je     2170 <core_bench_list+0x160>
    215f:	48 8b 1b             	mov    (%rbx),%rbx
    2162:	48 85 db             	test   %rbx,%rbx
    2165:	75 e9                	jne    2150 <core_bench_list+0x140>
    2167:	49 8b 1f             	mov    (%r15),%rbx
    216a:	48 85 db             	test   %rbx,%rbx
    216d:	74 27                	je     2196 <core_bench_list+0x186>
    216f:	90                   	nop
    2170:	49 8b 47 08          	mov    0x8(%r15),%rax
    2174:	0f b7 74 24 1e       	movzwl 0x1e(%rsp),%esi
    2179:	0f bf 38             	movswl (%rax),%edi
    217c:	e8 0f 1e 00 00       	callq  3f90 <crc16>
    2181:	48 8b 1b             	mov    (%rbx),%rbx
    2184:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    2189:	48 85 db             	test   %rbx,%rbx
    218c:	75 e2                	jne    2170 <core_bench_list+0x160>
    218e:	49 8b 1f             	mov    (%r15),%rbx
    2191:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    2196:	48 8b 43 08          	mov    0x8(%rbx),%rax
    219a:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    21a0:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    21a5:	48 8b 03             	mov    (%rbx),%rax
    21a8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    21ac:	49 89 04 24          	mov    %rax,(%r12)
    21b0:	4c 89 23             	mov    %r12,(%rbx)
    21b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    21b8:	4c 89 f8             	mov    %r15,%rax
    21bb:	45 31 c9             	xor    %r9d,%r9d
    21be:	45 31 ff             	xor    %r15d,%r15d
    21c1:	45 31 db             	xor    %r11d,%r11d
    21c4:	0f 1f 40 00          	nopl   0x0(%rax)
    21c8:	41 83 c3 01          	add    $0x1,%r11d
    21cc:	49 89 c0             	mov    %rax,%r8
    21cf:	31 d2                	xor    %edx,%edx
    21d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    21d8:	4d 8b 00             	mov    (%r8),%r8
    21db:	83 c2 01             	add    $0x1,%edx
    21de:	4d 85 c0             	test   %r8,%r8
    21e1:	74 05                	je     21e8 <core_bench_list+0x1d8>
    21e3:	44 39 d2             	cmp    %r10d,%edx
    21e6:	7c f0                	jl     21d8 <core_bench_list+0x1c8>
    21e8:	48 89 c6             	mov    %rax,%rsi
    21eb:	44 89 d7             	mov    %r10d,%edi
    21ee:	4c 89 c0             	mov    %r8,%rax
    21f1:	eb 75                	jmp    2268 <core_bench_list+0x258>
    21f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    21f8:	85 ff                	test   %edi,%edi
    21fa:	0f 84 e0 00 00 00    	je     22e0 <core_bench_list+0x2d0>
    2200:	48 85 c0             	test   %rax,%rax
    2203:	0f 84 d7 00 00 00    	je     22e0 <core_bench_list+0x2d0>
    2209:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    220d:	48 8b 58 08          	mov    0x8(%rax),%rbx
    2211:	44 0f b7 45 00       	movzwl 0x0(%rbp),%r8d
    2216:	45 89 c4             	mov    %r8d,%r12d
    2219:	66 41 c1 e8 08       	shr    $0x8,%r8w
    221e:	45 30 e4             	xor    %r12b,%r12b
    2221:	45 09 e0             	or     %r12d,%r8d
    2224:	66 44 89 45 00       	mov    %r8w,0x0(%rbp)
    2229:	44 0f b7 03          	movzwl (%rbx),%r8d
    222d:	45 89 c4             	mov    %r8d,%r12d
    2230:	66 41 c1 e8 08       	shr    $0x8,%r8w
    2235:	45 30 e4             	xor    %r12b,%r12b
    2238:	45 09 e0             	or     %r12d,%r8d
    223b:	66 44 89 03          	mov    %r8w,(%rbx)
    223f:	44 0f bf 45 02       	movswl 0x2(%rbp),%r8d
    2244:	0f bf 5b 02          	movswl 0x2(%rbx),%ebx
    2248:	41 29 d8             	sub    %ebx,%r8d
    224b:	45 85 c0             	test   %r8d,%r8d
    224e:	0f 8e 8c 00 00 00    	jle    22e0 <core_bench_list+0x2d0>
    2254:	49 89 c0             	mov    %rax,%r8
    2257:	48 8b 00             	mov    (%rax),%rax
    225a:	83 ef 01             	sub    $0x1,%edi
    225d:	4d 85 c9             	test   %r9,%r9
    2260:	74 76                	je     22d8 <core_bench_list+0x2c8>
    2262:	4d 89 01             	mov    %r8,(%r9)
    2265:	4d 89 c1             	mov    %r8,%r9
    2268:	85 d2                	test   %edx,%edx
    226a:	75 8c                	jne    21f8 <core_bench_list+0x1e8>
    226c:	85 ff                	test   %edi,%edi
    226e:	0f 8e 7c 00 00 00    	jle    22f0 <core_bench_list+0x2e0>
    2274:	48 85 c0             	test   %rax,%rax
    2277:	75 db                	jne    2254 <core_bench_list+0x244>
    2279:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    2280:	41 83 fb 01          	cmp    $0x1,%r11d
    2284:	0f 84 80 00 00 00    	je     230a <core_bench_list+0x2fa>
    228a:	45 01 d2             	add    %r10d,%r10d
    228d:	4d 85 ff             	test   %r15,%r15
    2290:	0f 85 22 ff ff ff    	jne    21b8 <core_bench_list+0x1a8>
    2296:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    229d:	00 00 00 00 00 
    22a2:	0f 0b                	ud2    
    22a4:	0f 1f 40 00          	nopl   0x0(%rax)
    22a8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    22ac:	0f b6 00             	movzbl (%rax),%eax
    22af:	66 39 44 24 1c       	cmp    %ax,0x1c(%rsp)
    22b4:	0f 84 b6 fe ff ff    	je     2170 <core_bench_list+0x160>
    22ba:	48 8b 1b             	mov    (%rbx),%rbx
    22bd:	48 85 db             	test   %rbx,%rbx
    22c0:	75 e6                	jne    22a8 <core_bench_list+0x298>
    22c2:	49 8b 1f             	mov    (%r15),%rbx
    22c5:	48 85 db             	test   %rbx,%rbx
    22c8:	0f 85 a2 fe ff ff    	jne    2170 <core_bench_list+0x160>
    22ce:	e9 c3 fe ff ff       	jmpq   2196 <core_bench_list+0x186>
    22d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    22d8:	4d 89 c7             	mov    %r8,%r15
    22db:	eb 88                	jmp    2265 <core_bench_list+0x255>
    22dd:	0f 1f 00             	nopl   (%rax)
    22e0:	49 89 f0             	mov    %rsi,%r8
    22e3:	83 ea 01             	sub    $0x1,%edx
    22e6:	48 8b 36             	mov    (%rsi),%rsi
    22e9:	e9 6f ff ff ff       	jmpq   225d <core_bench_list+0x24d>
    22ee:	66 90                	xchg   %ax,%ax
    22f0:	48 85 c0             	test   %rax,%rax
    22f3:	0f 85 cf fe ff ff    	jne    21c8 <core_bench_list+0x1b8>
    22f9:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    2300:	41 83 fb 01          	cmp    $0x1,%r11d
    2304:	0f 85 80 ff ff ff    	jne    228a <core_bench_list+0x27a>
    230a:	49 8b 1f             	mov    (%r15),%rbx
    230d:	48 85 db             	test   %rbx,%rbx
    2310:	0f 84 8e 01 00 00    	je     24a4 <core_bench_list+0x494>
    2316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    231d:	00 00 00 
    2320:	49 8b 47 08          	mov    0x8(%r15),%rax
    2324:	0f b7 74 24 1e       	movzwl 0x1e(%rsp),%esi
    2329:	0f bf 38             	movswl (%rax),%edi
    232c:	e8 5f 1c 00 00       	callq  3f90 <crc16>
    2331:	48 8b 1b             	mov    (%rbx),%rbx
    2334:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    2339:	48 85 db             	test   %rbx,%rbx
    233c:	75 e2                	jne    2320 <core_bench_list+0x310>
    233e:	48 83 c4 28          	add    $0x28,%rsp
    2342:	5b                   	pop    %rbx
    2343:	5d                   	pop    %rbp
    2344:	41 5c                	pop    %r12
    2346:	41 5d                	pop    %r13
    2348:	41 5e                	pop    %r14
    234a:	41 5f                	pop    %r15
    234c:	c3                   	retq   
    234d:	0f 1f 00             	nopl   (%rax)
    2350:	4d 85 ff             	test   %r15,%r15
    2353:	0f 84 55 01 00 00    	je     24ae <core_bench_list+0x49e>
    2359:	4c 89 f8             	mov    %r15,%rax
    235c:	eb 0e                	jmp    236c <core_bench_list+0x35c>
    235e:	66 90                	xchg   %ax,%ax
    2360:	48 8b 00             	mov    (%rax),%rax
    2363:	48 85 c0             	test   %rax,%rax
    2366:	0f 84 23 fd ff ff    	je     208f <core_bench_list+0x7f>
    236c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2370:	0f b6 12             	movzbl (%rdx),%edx
    2373:	66 39 54 24 1c       	cmp    %dx,0x1c(%rsp)
    2378:	75 e6                	jne    2360 <core_bench_list+0x350>
    237a:	e9 10 fd ff ff       	jmpq   208f <core_bench_list+0x7f>
    237f:	90                   	nop
    2380:	48 8b 47 08          	mov    0x8(%rdi),%rax
    2384:	83 c3 01             	add    $0x1,%ebx
    2387:	0f b7 00             	movzwl (%rax),%eax
    238a:	66 c1 f8 08          	sar    $0x8,%ax
    238e:	83 e0 01             	and    $0x1,%eax
    2391:	41 01 c2             	add    %eax,%r10d
    2394:	e9 4a fd ff ff       	jmpq   20e3 <core_bench_list+0xd3>
    2399:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
    23a0:	00 
    23a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23a8:	4d 85 ff             	test   %r15,%r15
    23ab:	0f 84 8f ed ff ff    	je     1140 <core_bench_list.cold>
    23b1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    23b8:	00 00 
    23ba:	45 31 f6             	xor    %r14d,%r14d
    23bd:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    23c4:	00 
    23c5:	83 44 24 18 01       	addl   $0x1,0x18(%rsp)
    23ca:	4c 89 f8             	mov    %r15,%rax
    23cd:	31 ed                	xor    %ebp,%ebp
    23cf:	90                   	nop
    23d0:	48 8b 00             	mov    (%rax),%rax
    23d3:	83 c5 01             	add    $0x1,%ebp
    23d6:	48 85 c0             	test   %rax,%rax
    23d9:	74 06                	je     23e1 <core_bench_list+0x3d1>
    23db:	3b 6c 24 10          	cmp    0x10(%rsp),%ebp
    23df:	75 ef                	jne    23d0 <core_bench_list+0x3c0>
    23e1:	4d 89 fc             	mov    %r15,%r12
    23e4:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    23e8:	49 89 c7             	mov    %rax,%r15
    23eb:	eb 35                	jmp    2422 <core_bench_list+0x412>
    23ed:	0f 1f 00             	nopl   (%rax)
    23f0:	85 db                	test   %ebx,%ebx
    23f2:	74 6c                	je     2460 <core_bench_list+0x450>
    23f4:	4d 85 ff             	test   %r15,%r15
    23f7:	74 67                	je     2460 <core_bench_list+0x450>
    23f9:	49 8b 77 08          	mov    0x8(%r15),%rsi
    23fd:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    2402:	4c 89 ea             	mov    %r13,%rdx
    2405:	e8 a6 f9 ff ff       	callq  1db0 <cmp_complex>
    240a:	85 c0                	test   %eax,%eax
    240c:	7e 52                	jle    2460 <core_bench_list+0x450>
    240e:	4c 89 f8             	mov    %r15,%rax
    2411:	4d 8b 3f             	mov    (%r15),%r15
    2414:	83 eb 01             	sub    $0x1,%ebx
    2417:	4d 85 f6             	test   %r14,%r14
    241a:	74 34                	je     2450 <core_bench_list+0x440>
    241c:	49 89 06             	mov    %rax,(%r14)
    241f:	49 89 c6             	mov    %rax,%r14
    2422:	85 ed                	test   %ebp,%ebp
    2424:	75 ca                	jne    23f0 <core_bench_list+0x3e0>
    2426:	85 db                	test   %ebx,%ebx
    2428:	7e 46                	jle    2470 <core_bench_list+0x460>
    242a:	4d 85 ff             	test   %r15,%r15
    242d:	75 df                	jne    240e <core_bench_list+0x3fe>
    242f:	83 7c 24 18 01       	cmpl   $0x1,0x18(%rsp)
    2434:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    243b:	74 4a                	je     2487 <core_bench_list+0x477>
    243d:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    2442:	d1 64 24 10          	shll   0x10(%rsp)
    2446:	e9 5d ff ff ff       	jmpq   23a8 <core_bench_list+0x398>
    244b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2450:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2455:	eb c8                	jmp    241f <core_bench_list+0x40f>
    2457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    245e:	00 00 
    2460:	4c 89 e0             	mov    %r12,%rax
    2463:	83 ed 01             	sub    $0x1,%ebp
    2466:	4d 8b 24 24          	mov    (%r12),%r12
    246a:	eb ab                	jmp    2417 <core_bench_list+0x407>
    246c:	0f 1f 40 00          	nopl   0x0(%rax)
    2470:	4d 85 ff             	test   %r15,%r15
    2473:	0f 85 4c ff ff ff    	jne    23c5 <core_bench_list+0x3b5>
    2479:	83 7c 24 18 01       	cmpl   $0x1,0x18(%rsp)
    247e:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    2485:	75 b6                	jne    243d <core_bench_list+0x42d>
    2487:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    248c:	e9 86 fc ff ff       	jmpq   2117 <core_bench_list+0x107>
    2491:	31 c0                	xor    %eax,%eax
    2493:	31 d2                	xor    %edx,%edx
    2495:	66 89 44 24 1e       	mov    %ax,0x1e(%rsp)
    249a:	66 89 54 24 1c       	mov    %dx,0x1c(%rsp)
    249f:	e9 6a fc ff ff       	jmpq   210e <core_bench_list+0xfe>
    24a4:	0f b7 44 24 1e       	movzwl 0x1e(%rsp),%eax
    24a9:	e9 90 fe ff ff       	jmpq   233e <core_bench_list+0x32e>
    24ae:	e9 9b ec ff ff       	jmpq   114e <core_bench_list.cold+0xe>
    24b3:	e9 96 ec ff ff       	jmpq   114e <core_bench_list.cold+0xe>
    24b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    24bf:	00 

00000000000024c0 <core_list_init>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	41 89 fb             	mov    %edi,%r11d
    24c7:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
    24cc:	41 57                	push   %r15
    24ce:	48 89 f0             	mov    %rsi,%rax
    24d1:	4c 0f af df          	imul   %rdi,%r11
    24d5:	41 56                	push   %r14
    24d7:	4c 8d 4e 10          	lea    0x10(%rsi),%r9
    24db:	41 89 d6             	mov    %edx,%r14d
    24de:	41 55                	push   %r13
    24e0:	41 54                	push   %r12
    24e2:	41 89 d4             	mov    %edx,%r12d
    24e5:	49 c1 eb 24          	shr    $0x24,%r11
    24e9:	55                   	push   %rbp
    24ea:	41 8d 6b fe          	lea    -0x2(%r11),%ebp
    24ee:	53                   	push   %rbx
    24ef:	48 89 eb             	mov    %rbp,%rbx
    24f2:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    24f9:	49 89 eb             	mov    %rbp,%r11
    24fc:	48 c1 e3 04          	shl    $0x4,%rbx
    2500:	48 01 f3             	add    %rsi,%rbx
    2503:	48 83 c6 20          	add    $0x20,%rsi
    2507:	48 89 5e e8          	mov    %rbx,-0x18(%rsi)
    250b:	4c 8d 2c ab          	lea    (%rbx,%rbp,4),%r13
    250f:	48 8d 53 04          	lea    0x4(%rbx),%rdx
    2513:	c7 03 80 80 00 00    	movl   $0x8080,(%rbx)
    2519:	48 39 f3             	cmp    %rsi,%rbx
    251c:	0f 86 16 02 00 00    	jbe    2738 <core_list_init+0x278>
    2522:	4c 8d 43 08          	lea    0x8(%rbx),%r8
    2526:	4d 39 c5             	cmp    %r8,%r13
    2529:	0f 86 09 02 00 00    	jbe    2738 <core_list_init+0x278>
    252f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    2536:	00 
    2537:	4c 89 08             	mov    %r9,(%rax)
    253a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    253e:	c7 43 04 ff ff ff 7f 	movl   $0x7fffffff,0x4(%rbx)
    2545:	45 85 db             	test   %r11d,%r11d
    2548:	74 60                	je     25aa <core_list_init+0xea>
    254a:	31 ff                	xor    %edi,%edi
    254c:	0f 1f 40 00          	nopl   0x0(%rax)
    2550:	4c 8d 56 10          	lea    0x10(%rsi),%r10
    2554:	4c 39 d3             	cmp    %r10,%rbx
    2557:	76 49                	jbe    25a2 <core_list_init+0xe2>
    2559:	49 8d 50 04          	lea    0x4(%r8),%rdx
    255d:	49 39 d5             	cmp    %rdx,%r13
    2560:	76 40                	jbe    25a2 <core_list_init+0xe2>
    2562:	44 89 e1             	mov    %r12d,%ecx
    2565:	41 89 ff             	mov    %edi,%r15d
    2568:	4c 89 0e             	mov    %r9,(%rsi)
    256b:	31 f9                	xor    %edi,%ecx
    256d:	41 83 e7 07          	and    $0x7,%r15d
    2571:	48 89 30             	mov    %rsi,(%rax)
    2574:	c1 e1 03             	shl    $0x3,%ecx
    2577:	4c 89 46 08          	mov    %r8,0x8(%rsi)
    257b:	83 e1 78             	and    $0x78,%ecx
    257e:	44 09 f9             	or     %r15d,%ecx
    2581:	41 89 c9             	mov    %ecx,%r9d
    2584:	41 c1 e1 08          	shl    $0x8,%r9d
    2588:	44 09 c9             	or     %r9d,%ecx
    258b:	49 89 f1             	mov    %rsi,%r9
    258e:	4c 89 d6             	mov    %r10,%rsi
    2591:	66 41 89 08          	mov    %cx,(%r8)
    2595:	b9 ff 7f 00 00       	mov    $0x7fff,%ecx
    259a:	66 41 89 48 02       	mov    %cx,0x2(%r8)
    259f:	49 89 d0             	mov    %rdx,%r8
    25a2:	83 c7 01             	add    $0x1,%edi
    25a5:	41 39 fb             	cmp    %edi,%r11d
    25a8:	75 a6                	jne    2550 <core_list_init+0x90>
    25aa:	49 8b 31             	mov    (%r9),%rsi
    25ad:	48 85 f6             	test   %rsi,%rsi
    25b0:	74 63                	je     2615 <core_list_init+0x155>
    25b2:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
    25b7:	b9 01 00 00 00       	mov    $0x1,%ecx
    25bc:	48 0f af ea          	imul   %rdx,%rbp
    25c0:	48 c1 ed 22          	shr    $0x22,%rbp
    25c4:	eb 1f                	jmp    25e5 <core_list_init+0x125>
    25c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    25cd:	00 00 00 
    25d0:	48 8b 16             	mov    (%rsi),%rdx
    25d3:	66 89 4f 02          	mov    %cx,0x2(%rdi)
    25d7:	83 c1 01             	add    $0x1,%ecx
    25da:	48 85 d2             	test   %rdx,%rdx
    25dd:	74 36                	je     2615 <core_list_init+0x155>
    25df:	49 89 f1             	mov    %rsi,%r9
    25e2:	48 89 d6             	mov    %rdx,%rsi
    25e5:	49 8b 79 08          	mov    0x8(%r9),%rdi
    25e9:	39 cd                	cmp    %ecx,%ebp
    25eb:	77 e3                	ja     25d0 <core_list_init+0x110>
    25ed:	8d 51 01             	lea    0x1(%rcx),%edx
    25f0:	45 89 f0             	mov    %r14d,%r8d
    25f3:	c1 e2 08             	shl    $0x8,%edx
    25f6:	41 31 c8             	xor    %ecx,%r8d
    25f9:	83 c1 01             	add    $0x1,%ecx
    25fc:	66 81 e2 00 07       	and    $0x700,%dx
    2601:	44 09 c2             	or     %r8d,%edx
    2604:	66 81 e2 ff 3f       	and    $0x3fff,%dx
    2609:	66 89 57 02          	mov    %dx,0x2(%rdi)
    260d:	48 8b 16             	mov    (%rsi),%rdx
    2610:	48 85 d2             	test   %rdx,%rdx
    2613:	75 ca                	jne    25df <core_list_init+0x11f>
    2615:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    261b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2620:	48 89 c2             	mov    %rax,%rdx
    2623:	45 31 d2             	xor    %r10d,%r10d
    2626:	31 c0                	xor    %eax,%eax
    2628:	31 db                	xor    %ebx,%ebx
    262a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2630:	83 c3 01             	add    $0x1,%ebx
    2633:	48 89 d6             	mov    %rdx,%rsi
    2636:	31 c9                	xor    %ecx,%ecx
    2638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    263f:	00 
    2640:	48 8b 36             	mov    (%rsi),%rsi
    2643:	83 c1 01             	add    $0x1,%ecx
    2646:	48 85 f6             	test   %rsi,%rsi
    2649:	74 08                	je     2653 <core_list_init+0x193>
    264b:	41 39 cb             	cmp    %ecx,%r11d
    264e:	75 f0                	jne    2640 <core_list_init+0x180>
    2650:	44 89 d9             	mov    %r11d,%ecx
    2653:	48 89 d7             	mov    %rdx,%rdi
    2656:	45 89 d8             	mov    %r11d,%r8d
    2659:	48 89 f2             	mov    %rsi,%rdx
    265c:	eb 6b                	jmp    26c9 <core_list_init+0x209>
    265e:	66 90                	xchg   %ax,%ax
    2660:	45 85 c0             	test   %r8d,%r8d
    2663:	0f 84 bf 00 00 00    	je     2728 <core_list_init+0x268>
    2669:	48 85 d2             	test   %rdx,%rdx
    266c:	0f 84 b6 00 00 00    	je     2728 <core_list_init+0x268>
    2672:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    2676:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    267a:	0f b7 75 00          	movzwl 0x0(%rbp),%esi
    267e:	41 89 f4             	mov    %esi,%r12d
    2681:	66 c1 ee 08          	shr    $0x8,%si
    2685:	45 30 e4             	xor    %r12b,%r12b
    2688:	44 09 e6             	or     %r12d,%esi
    268b:	66 89 75 00          	mov    %si,0x0(%rbp)
    268f:	41 0f b7 31          	movzwl (%r9),%esi
    2693:	41 89 f4             	mov    %esi,%r12d
    2696:	66 c1 ee 08          	shr    $0x8,%si
    269a:	45 30 e4             	xor    %r12b,%r12b
    269d:	44 09 e6             	or     %r12d,%esi
    26a0:	66 41 89 31          	mov    %si,(%r9)
    26a4:	0f bf 75 02          	movswl 0x2(%rbp),%esi
    26a8:	45 0f bf 49 02       	movswl 0x2(%r9),%r9d
    26ad:	44 29 ce             	sub    %r9d,%esi
    26b0:	85 f6                	test   %esi,%esi
    26b2:	7e 74                	jle    2728 <core_list_init+0x268>
    26b4:	49 89 d1             	mov    %rdx,%r9
    26b7:	48 8b 12             	mov    (%rdx),%rdx
    26ba:	41 83 e8 01          	sub    $0x1,%r8d
    26be:	4d 85 d2             	test   %r10,%r10
    26c1:	74 5d                	je     2720 <core_list_init+0x260>
    26c3:	4d 89 0a             	mov    %r9,(%r10)
    26c6:	4d 89 ca             	mov    %r9,%r10
    26c9:	85 c9                	test   %ecx,%ecx
    26cb:	75 93                	jne    2660 <core_list_init+0x1a0>
    26cd:	45 85 c0             	test   %r8d,%r8d
    26d0:	7e 2e                	jle    2700 <core_list_init+0x240>
    26d2:	48 85 d2             	test   %rdx,%rdx
    26d5:	75 dd                	jne    26b4 <core_list_init+0x1f4>
    26d7:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    26de:	83 fb 01             	cmp    $0x1,%ebx
    26e1:	74 32                	je     2715 <core_list_init+0x255>
    26e3:	45 01 db             	add    %r11d,%r11d
    26e6:	48 85 c0             	test   %rax,%rax
    26e9:	0f 85 31 ff ff ff    	jne    2620 <core_list_init+0x160>
    26ef:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    26f6:	00 00 00 00 00 
    26fb:	0f 0b                	ud2    
    26fd:	0f 1f 00             	nopl   (%rax)
    2700:	48 85 d2             	test   %rdx,%rdx
    2703:	0f 85 27 ff ff ff    	jne    2630 <core_list_init+0x170>
    2709:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    2710:	83 fb 01             	cmp    $0x1,%ebx
    2713:	75 ce                	jne    26e3 <core_list_init+0x223>
    2715:	5b                   	pop    %rbx
    2716:	5d                   	pop    %rbp
    2717:	41 5c                	pop    %r12
    2719:	41 5d                	pop    %r13
    271b:	41 5e                	pop    %r14
    271d:	41 5f                	pop    %r15
    271f:	c3                   	retq   
    2720:	4c 89 c8             	mov    %r9,%rax
    2723:	eb a1                	jmp    26c6 <core_list_init+0x206>
    2725:	0f 1f 00             	nopl   (%rax)
    2728:	49 89 f9             	mov    %rdi,%r9
    272b:	83 e9 01             	sub    $0x1,%ecx
    272e:	48 8b 3f             	mov    (%rdi),%rdi
    2731:	eb 8b                	jmp    26be <core_list_init+0x1fe>
    2733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2738:	4c 89 ce             	mov    %r9,%rsi
    273b:	49 89 d0             	mov    %rdx,%r8
    273e:	45 31 c9             	xor    %r9d,%r9d
    2741:	e9 ff fd ff ff       	jmpq   2545 <core_list_init+0x85>
    2746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    274d:	00 00 00 

0000000000002750 <core_list_insert_new>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	48 8b 02             	mov    (%rdx),%rax
    2757:	4c 8d 50 10          	lea    0x10(%rax),%r10
    275b:	4d 39 c2             	cmp    %r8,%r10
    275e:	73 38                	jae    2798 <core_list_insert_new+0x48>
    2760:	4c 8b 01             	mov    (%rcx),%r8
    2763:	4d 8d 58 04          	lea    0x4(%r8),%r11
    2767:	4d 39 d9             	cmp    %r11,%r9
    276a:	76 2c                	jbe    2798 <core_list_insert_new+0x48>
    276c:	4c 89 12             	mov    %r10,(%rdx)
    276f:	48 8b 17             	mov    (%rdi),%rdx
    2772:	48 89 10             	mov    %rdx,(%rax)
    2775:	48 89 07             	mov    %rax,(%rdi)
    2778:	4c 89 40 08          	mov    %r8,0x8(%rax)
    277c:	48 83 01 04          	addq   $0x4,(%rcx)
    2780:	0f b7 0e             	movzwl (%rsi),%ecx
    2783:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2787:	66 89 0a             	mov    %cx,(%rdx)
    278a:	0f b7 4e 02          	movzwl 0x2(%rsi),%ecx
    278e:	66 89 4a 02          	mov    %cx,0x2(%rdx)
    2792:	c3                   	retq   
    2793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2798:	31 c0                	xor    %eax,%eax
    279a:	c3                   	retq   
    279b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000027a0 <core_list_remove>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	48 8b 07             	mov    (%rdi),%rax
    27a7:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    27ab:	48 8b 48 08          	mov    0x8(%rax),%rcx
    27af:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    27b3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    27b7:	48 8b 10             	mov    (%rax),%rdx
    27ba:	48 89 17             	mov    %rdx,(%rdi)
    27bd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    27c4:	c3                   	retq   
    27c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    27cc:	00 00 00 00 

00000000000027d0 <core_list_undo_remove>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    27d8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    27dc:	48 89 f8             	mov    %rdi,%rax
    27df:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    27e3:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    27e7:	48 8b 16             	mov    (%rsi),%rdx
    27ea:	48 89 17             	mov    %rdx,(%rdi)
    27ed:	48 89 3e             	mov    %rdi,(%rsi)
    27f0:	c3                   	retq   
    27f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    27f8:	00 00 00 00 
    27fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002800 <core_list_find>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	0f b7 56 02          	movzwl 0x2(%rsi),%edx
    2808:	66 85 d2             	test   %dx,%dx
    280b:	79 10                	jns    281d <core_list_find+0x1d>
    280d:	eb 19                	jmp    2828 <core_list_find+0x28>
    280f:	90                   	nop
    2810:	48 8b 47 08          	mov    0x8(%rdi),%rax
    2814:	66 3b 50 02          	cmp    0x2(%rax),%dx
    2818:	74 36                	je     2850 <core_list_find+0x50>
    281a:	48 8b 3f             	mov    (%rdi),%rdi
    281d:	48 85 ff             	test   %rdi,%rdi
    2820:	75 ee                	jne    2810 <core_list_find+0x10>
    2822:	31 c0                	xor    %eax,%eax
    2824:	c3                   	retq   
    2825:	0f 1f 00             	nopl   (%rax)
    2828:	48 85 ff             	test   %rdi,%rdi
    282b:	74 f5                	je     2822 <core_list_find+0x22>
    282d:	0f b7 0e             	movzwl (%rsi),%ecx
    2830:	48 89 f8             	mov    %rdi,%rax
    2833:	eb 0b                	jmp    2840 <core_list_find+0x40>
    2835:	0f 1f 00             	nopl   (%rax)
    2838:	48 8b 00             	mov    (%rax),%rax
    283b:	48 85 c0             	test   %rax,%rax
    283e:	74 e4                	je     2824 <core_list_find+0x24>
    2840:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2844:	0f b6 12             	movzbl (%rdx),%edx
    2847:	66 39 ca             	cmp    %cx,%dx
    284a:	75 ec                	jne    2838 <core_list_find+0x38>
    284c:	c3                   	retq   
    284d:	0f 1f 00             	nopl   (%rax)
    2850:	48 89 f8             	mov    %rdi,%rax
    2853:	c3                   	retq   
    2854:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    285b:	00 00 00 00 
    285f:	90                   	nop

0000000000002860 <core_list_reverse>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	48 89 f8             	mov    %rdi,%rax
    2867:	48 85 ff             	test   %rdi,%rdi
    286a:	74 15                	je     2881 <core_list_reverse+0x21>
    286c:	31 c9                	xor    %ecx,%ecx
    286e:	eb 03                	jmp    2873 <core_list_reverse+0x13>
    2870:	48 89 d0             	mov    %rdx,%rax
    2873:	48 8b 10             	mov    (%rax),%rdx
    2876:	48 89 08             	mov    %rcx,(%rax)
    2879:	48 89 c1             	mov    %rax,%rcx
    287c:	48 85 d2             	test   %rdx,%rdx
    287f:	75 ef                	jne    2870 <core_list_reverse+0x10>
    2881:	c3                   	retq   
    2882:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    2889:	00 00 00 00 
    288d:	0f 1f 00             	nopl   (%rax)

0000000000002890 <core_list_mergesort>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	41 57                	push   %r15
    2896:	41 56                	push   %r14
    2898:	41 55                	push   %r13
    289a:	49 89 d5             	mov    %rdx,%r13
    289d:	41 54                	push   %r12
    289f:	55                   	push   %rbp
    28a0:	53                   	push   %rbx
    28a1:	48 89 fb             	mov    %rdi,%rbx
    28a4:	48 83 ec 28          	sub    $0x28,%rsp
    28a8:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    28ad:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%rsp)
    28b4:	00 
    28b5:	48 85 db             	test   %rbx,%rbx
    28b8:	0f 84 fd 00 00 00    	je     29bb <core_list_mergesort+0x12b>
    28be:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    28c5:	00 
    28c6:	45 31 ff             	xor    %r15d,%r15d
    28c9:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    28d0:	00 00 
    28d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    28d8:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    28dd:	48 89 d8             	mov    %rbx,%rax
    28e0:	45 31 f6             	xor    %r14d,%r14d
    28e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    28e8:	48 8b 00             	mov    (%rax),%rax
    28eb:	41 83 c6 01          	add    $0x1,%r14d
    28ef:	48 85 c0             	test   %rax,%rax
    28f2:	74 07                	je     28fb <core_list_mergesort+0x6b>
    28f4:	44 39 74 24 18       	cmp    %r14d,0x18(%rsp)
    28f9:	75 ed                	jne    28e8 <core_list_mergesort+0x58>
    28fb:	49 89 dc             	mov    %rbx,%r12
    28fe:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
    2902:	48 89 c3             	mov    %rax,%rbx
    2905:	eb 3d                	jmp    2944 <core_list_mergesort+0xb4>
    2907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    290e:	00 00 
    2910:	85 ed                	test   %ebp,%ebp
    2912:	74 5c                	je     2970 <core_list_mergesort+0xe0>
    2914:	48 85 db             	test   %rbx,%rbx
    2917:	74 57                	je     2970 <core_list_mergesort+0xe0>
    2919:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    291d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    2922:	4c 89 ea             	mov    %r13,%rdx
    2925:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    292a:	ff d0                	callq  *%rax
    292c:	85 c0                	test   %eax,%eax
    292e:	7e 40                	jle    2970 <core_list_mergesort+0xe0>
    2930:	48 89 d8             	mov    %rbx,%rax
    2933:	83 ed 01             	sub    $0x1,%ebp
    2936:	48 8b 1b             	mov    (%rbx),%rbx
    2939:	4d 85 ff             	test   %r15,%r15
    293c:	74 42                	je     2980 <core_list_mergesort+0xf0>
    293e:	49 89 07             	mov    %rax,(%r15)
    2941:	49 89 c7             	mov    %rax,%r15
    2944:	45 85 f6             	test   %r14d,%r14d
    2947:	75 c7                	jne    2910 <core_list_mergesort+0x80>
    2949:	85 ed                	test   %ebp,%ebp
    294b:	7e 43                	jle    2990 <core_list_mergesort+0x100>
    294d:	48 85 db             	test   %rbx,%rbx
    2950:	75 de                	jne    2930 <core_list_mergesort+0xa0>
    2952:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    2957:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    295e:	74 47                	je     29a7 <core_list_mergesort+0x117>
    2960:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    2965:	d1 64 24 18          	shll   0x18(%rsp)
    2969:	e9 47 ff ff ff       	jmpq   28b5 <core_list_mergesort+0x25>
    296e:	66 90                	xchg   %ax,%ax
    2970:	4c 89 e0             	mov    %r12,%rax
    2973:	41 83 ee 01          	sub    $0x1,%r14d
    2977:	4d 8b 24 24          	mov    (%r12),%r12
    297b:	4d 85 ff             	test   %r15,%r15
    297e:	75 be                	jne    293e <core_list_mergesort+0xae>
    2980:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2985:	eb ba                	jmp    2941 <core_list_mergesort+0xb1>
    2987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    298e:	00 00 
    2990:	48 85 db             	test   %rbx,%rbx
    2993:	0f 85 3f ff ff ff    	jne    28d8 <core_list_mergesort+0x48>
    2999:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    299e:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    29a5:	75 b9                	jne    2960 <core_list_mergesort+0xd0>
    29a7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    29ac:	48 83 c4 28          	add    $0x28,%rsp
    29b0:	5b                   	pop    %rbx
    29b1:	5d                   	pop    %rbp
    29b2:	41 5c                	pop    %r12
    29b4:	41 5d                	pop    %r13
    29b6:	41 5e                	pop    %r14
    29b8:	41 5f                	pop    %r15
    29ba:	c3                   	retq   
    29bb:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    29c2:	00 00 00 00 00 
    29c7:	0f 0b                	ud2    
    29c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000029d0 <iterate>:
    29d0:	f3 0f 1e fa          	endbr64 
    29d4:	41 54                	push   %r12
    29d6:	55                   	push   %rbp
    29d7:	53                   	push   %rbx
    29d8:	8b 6f 2c             	mov    0x2c(%rdi),%ebp
    29db:	48 c7 47 60 00 00 00 	movq   $0x0,0x60(%rdi)
    29e2:	00 
    29e3:	85 ed                	test   %ebp,%ebp
    29e5:	74 51                	je     2a38 <iterate+0x68>
    29e7:	48 89 fb             	mov    %rdi,%rbx
    29ea:	45 31 e4             	xor    %r12d,%r12d
    29ed:	0f 1f 00             	nopl   (%rax)
    29f0:	be 01 00 00 00       	mov    $0x1,%esi
    29f5:	48 89 df             	mov    %rbx,%rdi
    29f8:	e8 13 f6 ff ff       	callq  2010 <core_bench_list>
    29fd:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    2a01:	0f b7 f8             	movzwl %ax,%edi
    2a04:	e8 97 10 00 00       	callq  3aa0 <crcu16>
    2a09:	be ff ff ff ff       	mov    $0xffffffff,%esi
    2a0e:	48 89 df             	mov    %rbx,%rdi
    2a11:	66 89 43 60          	mov    %ax,0x60(%rbx)
    2a15:	e8 f6 f5 ff ff       	callq  2010 <core_bench_list>
    2a1a:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    2a1e:	0f b7 f8             	movzwl %ax,%edi
    2a21:	e8 7a 10 00 00       	callq  3aa0 <crcu16>
    2a26:	66 89 43 60          	mov    %ax,0x60(%rbx)
    2a2a:	45 85 e4             	test   %r12d,%r12d
    2a2d:	74 11                	je     2a40 <iterate+0x70>
    2a2f:	41 83 c4 01          	add    $0x1,%r12d
    2a33:	44 39 e5             	cmp    %r12d,%ebp
    2a36:	75 b8                	jne    29f0 <iterate+0x20>
    2a38:	5b                   	pop    %rbx
    2a39:	31 c0                	xor    %eax,%eax
    2a3b:	5d                   	pop    %rbp
    2a3c:	41 5c                	pop    %r12
    2a3e:	c3                   	retq   
    2a3f:	90                   	nop
    2a40:	66 89 43 62          	mov    %ax,0x62(%rbx)
    2a44:	83 fd 01             	cmp    $0x1,%ebp
    2a47:	74 ef                	je     2a38 <iterate+0x68>
    2a49:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2a4f:	eb 9f                	jmp    29f0 <iterate+0x20>
    2a51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2a58:	00 00 00 
    2a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002a60 <matrix_test>:
    2a60:	f3 0f 1e fa          	endbr64 
    2a64:	41 57                	push   %r15
    2a66:	41 56                	push   %r14
    2a68:	41 55                	push   %r13
    2a6a:	45 89 c5             	mov    %r8d,%r13d
    2a6d:	41 54                	push   %r12
    2a6f:	66 41 81 cd 00 f0    	or     $0xf000,%r13w
    2a75:	55                   	push   %rbp
    2a76:	53                   	push   %rbx
    2a77:	48 83 ec 18          	sub    $0x18,%rsp
    2a7b:	85 ff                	test   %edi,%edi
    2a7d:	0f 84 c5 03 00 00    	je     2e48 <matrix_test+0x3e8>
    2a83:	49 89 f4             	mov    %rsi,%r12
    2a86:	49 89 ce             	mov    %rcx,%r14
    2a89:	45 89 c7             	mov    %r8d,%r15d
    2a8c:	45 0f bf c8          	movswl %r8w,%r9d
    2a90:	48 89 d5             	mov    %rdx,%rbp
    2a93:	89 fe                	mov    %edi,%esi
    2a95:	45 31 c0             	xor    %r8d,%r8d
    2a98:	31 c9                	xor    %ecx,%ecx
    2a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2aa0:	44 89 c0             	mov    %r8d,%eax
    2aa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2aa8:	89 c2                	mov    %eax,%edx
    2aaa:	83 c0 01             	add    $0x1,%eax
    2aad:	66 44 01 7c 55 00    	add    %r15w,0x0(%rbp,%rdx,2)
    2ab3:	39 f0                	cmp    %esi,%eax
    2ab5:	75 f1                	jne    2aa8 <matrix_test+0x48>
    2ab7:	8d 59 01             	lea    0x1(%rcx),%ebx
    2aba:	41 01 f8             	add    %edi,%r8d
    2abd:	8d 34 38             	lea    (%rax,%rdi,1),%esi
    2ac0:	39 df                	cmp    %ebx,%edi
    2ac2:	74 0c                	je     2ad0 <matrix_test+0x70>
    2ac4:	89 d9                	mov    %ebx,%ecx
    2ac6:	eb d8                	jmp    2aa0 <matrix_test+0x40>
    2ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2acf:	00 
    2ad0:	89 df                	mov    %ebx,%edi
    2ad2:	45 31 c0             	xor    %r8d,%r8d
    2ad5:	45 31 d2             	xor    %r10d,%r10d
    2ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2adf:	00 
    2ae0:	44 89 c0             	mov    %r8d,%eax
    2ae3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ae8:	89 c6                	mov    %eax,%esi
    2aea:	83 c0 01             	add    $0x1,%eax
    2aed:	0f bf 54 75 00       	movswl 0x0(%rbp,%rsi,2),%edx
    2af2:	41 0f af d1          	imul   %r9d,%edx
    2af6:	41 89 14 b4          	mov    %edx,(%r12,%rsi,4)
    2afa:	39 c7                	cmp    %eax,%edi
    2afc:	75 ea                	jne    2ae8 <matrix_test+0x88>
    2afe:	41 8d 42 01          	lea    0x1(%r10),%eax
    2b02:	41 01 d8             	add    %ebx,%r8d
    2b05:	01 df                	add    %ebx,%edi
    2b07:	41 39 ca             	cmp    %ecx,%r10d
    2b0a:	74 0c                	je     2b18 <matrix_test+0xb8>
    2b0c:	41 89 c2             	mov    %eax,%r10d
    2b0f:	eb cf                	jmp    2ae0 <matrix_test+0x80>
    2b11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2b18:	45 0f bf ed          	movswl %r13w,%r13d
    2b1c:	41 89 d9             	mov    %ebx,%r9d
    2b1f:	45 31 d2             	xor    %r10d,%r10d
    2b22:	31 ff                	xor    %edi,%edi
    2b24:	31 f6                	xor    %esi,%esi
    2b26:	31 d2                	xor    %edx,%edx
    2b28:	45 31 db             	xor    %r11d,%r11d
    2b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2b30:	44 89 d0             	mov    %r10d,%eax
    2b33:	eb 19                	jmp    2b4e <matrix_test+0xee>
    2b35:	0f 1f 00             	nopl   (%rax)
    2b38:	44 39 c6             	cmp    %r8d,%esi
    2b3b:	41 0f 9f c0          	setg   %r8b
    2b3f:	83 c0 01             	add    $0x1,%eax
    2b42:	45 0f b6 c0          	movzbl %r8b,%r8d
    2b46:	44 01 c7             	add    %r8d,%edi
    2b49:	44 39 c8             	cmp    %r9d,%eax
    2b4c:	74 1d                	je     2b6b <matrix_test+0x10b>
    2b4e:	41 89 f0             	mov    %esi,%r8d
    2b51:	89 c6                	mov    %eax,%esi
    2b53:	41 8b 34 b4          	mov    (%r12,%rsi,4),%esi
    2b57:	01 f2                	add    %esi,%edx
    2b59:	41 39 d5             	cmp    %edx,%r13d
    2b5c:	7d da                	jge    2b38 <matrix_test+0xd8>
    2b5e:	83 c0 01             	add    $0x1,%eax
    2b61:	83 c7 0a             	add    $0xa,%edi
    2b64:	31 d2                	xor    %edx,%edx
    2b66:	44 39 c8             	cmp    %r9d,%eax
    2b69:	75 e3                	jne    2b4e <matrix_test+0xee>
    2b6b:	45 8d 43 01          	lea    0x1(%r11),%r8d
    2b6f:	44 8d 0c 18          	lea    (%rax,%rbx,1),%r9d
    2b73:	41 01 da             	add    %ebx,%r10d
    2b76:	44 39 d9             	cmp    %r11d,%ecx
    2b79:	74 05                	je     2b80 <matrix_test+0x120>
    2b7b:	45 89 c3             	mov    %r8d,%r11d
    2b7e:	eb b0                	jmp    2b30 <matrix_test+0xd0>
    2b80:	0f bf ff             	movswl %di,%edi
    2b83:	31 f6                	xor    %esi,%esi
    2b85:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    2b89:	e8 02 14 00 00       	callq  3f90 <crc16>
    2b8e:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    2b92:	31 f6                	xor    %esi,%esi
    2b94:	4c 89 e7             	mov    %r12,%rdi
    2b97:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2b9c:	48 8d 14 8d 04 00 00 	lea    0x4(,%rcx,4),%rdx
    2ba3:	00 
    2ba4:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    2ba9:	e8 62 e5 ff ff       	callq  1110 <memset@plt>
    2bae:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2bb3:	4d 89 e1             	mov    %r12,%r9
    2bb6:	41 89 d8             	mov    %ebx,%r8d
    2bb9:	45 31 d2             	xor    %r10d,%r10d
    2bbc:	4d 8d 5c 8c 04       	lea    0x4(%r12,%rcx,4),%r11
    2bc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2bc8:	4c 89 f1             	mov    %r14,%rcx
    2bcb:	44 89 d0             	mov    %r10d,%eax
    2bce:	31 f6                	xor    %esi,%esi
    2bd0:	89 c2                	mov    %eax,%edx
    2bd2:	0f bf 39             	movswl (%rcx),%edi
    2bd5:	83 c0 01             	add    $0x1,%eax
    2bd8:	48 83 c1 02          	add    $0x2,%rcx
    2bdc:	0f bf 54 55 00       	movswl 0x0(%rbp,%rdx,2),%edx
    2be1:	0f af d7             	imul   %edi,%edx
    2be4:	01 d6                	add    %edx,%esi
    2be6:	44 39 c0             	cmp    %r8d,%eax
    2be9:	75 e5                	jne    2bd0 <matrix_test+0x170>
    2beb:	41 89 31             	mov    %esi,(%r9)
    2bee:	49 83 c1 04          	add    $0x4,%r9
    2bf2:	41 01 da             	add    %ebx,%r10d
    2bf5:	44 8d 04 18          	lea    (%rax,%rbx,1),%r8d
    2bf9:	4d 39 cb             	cmp    %r9,%r11
    2bfc:	75 ca                	jne    2bc8 <matrix_test+0x168>
    2bfe:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2c04:	45 31 c0             	xor    %r8d,%r8d
    2c07:	31 f6                	xor    %esi,%esi
    2c09:	31 c9                	xor    %ecx,%ecx
    2c0b:	31 d2                	xor    %edx,%edx
    2c0d:	45 31 c9             	xor    %r9d,%r9d
    2c10:	31 c0                	xor    %eax,%eax
    2c12:	eb 17                	jmp    2c2b <matrix_test+0x1cb>
    2c14:	0f 1f 40 00          	nopl   0x0(%rax)
    2c18:	39 f9                	cmp    %edi,%ecx
    2c1a:	40 0f 9f c7          	setg   %dil
    2c1e:	83 c0 01             	add    $0x1,%eax
    2c21:	40 0f b6 ff          	movzbl %dil,%edi
    2c25:	01 fe                	add    %edi,%esi
    2c27:	39 c3                	cmp    %eax,%ebx
    2c29:	76 1d                	jbe    2c48 <matrix_test+0x1e8>
    2c2b:	89 cf                	mov    %ecx,%edi
    2c2d:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2c31:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2c35:	01 ca                	add    %ecx,%edx
    2c37:	41 39 d5             	cmp    %edx,%r13d
    2c3a:	7d dc                	jge    2c18 <matrix_test+0x1b8>
    2c3c:	83 c0 01             	add    $0x1,%eax
    2c3f:	83 c6 0a             	add    $0xa,%esi
    2c42:	31 d2                	xor    %edx,%edx
    2c44:	39 c3                	cmp    %eax,%ebx
    2c46:	77 e3                	ja     2c2b <matrix_test+0x1cb>
    2c48:	41 83 c1 01          	add    $0x1,%r9d
    2c4c:	41 01 d8             	add    %ebx,%r8d
    2c4f:	44 39 cb             	cmp    %r9d,%ebx
    2c52:	77 bc                	ja     2c10 <matrix_test+0x1b0>
    2c54:	0f bf fe             	movswl %si,%edi
    2c57:	44 89 d6             	mov    %r10d,%esi
    2c5a:	e8 31 13 00 00       	callq  3f90 <crc16>
    2c5f:	45 31 c0             	xor    %r8d,%r8d
    2c62:	45 31 db             	xor    %r11d,%r11d
    2c65:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2c70:	31 d2                	xor    %edx,%edx
    2c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2c78:	42 8d 04 02          	lea    (%rdx,%r8,1),%eax
    2c7c:	89 d6                	mov    %edx,%esi
    2c7e:	31 ff                	xor    %edi,%edi
    2c80:	4d 8d 0c 84          	lea    (%r12,%rax,4),%r9
    2c84:	31 c0                	xor    %eax,%eax
    2c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2c8d:	00 00 00 
    2c90:	42 8d 0c 00          	lea    (%rax,%r8,1),%ecx
    2c94:	41 89 f2             	mov    %esi,%r10d
    2c97:	83 c0 01             	add    $0x1,%eax
    2c9a:	01 de                	add    %ebx,%esi
    2c9c:	0f bf 4c 4d 00       	movswl 0x0(%rbp,%rcx,2),%ecx
    2ca1:	47 0f bf 14 56       	movswl (%r14,%r10,2),%r10d
    2ca6:	41 0f af ca          	imul   %r10d,%ecx
    2caa:	01 cf                	add    %ecx,%edi
    2cac:	39 c3                	cmp    %eax,%ebx
    2cae:	77 e0                	ja     2c90 <matrix_test+0x230>
    2cb0:	83 c2 01             	add    $0x1,%edx
    2cb3:	41 89 39             	mov    %edi,(%r9)
    2cb6:	39 d3                	cmp    %edx,%ebx
    2cb8:	77 be                	ja     2c78 <matrix_test+0x218>
    2cba:	41 83 c3 01          	add    $0x1,%r11d
    2cbe:	41 01 d8             	add    %ebx,%r8d
    2cc1:	44 39 db             	cmp    %r11d,%ebx
    2cc4:	77 aa                	ja     2c70 <matrix_test+0x210>
    2cc6:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2ccc:	45 31 c0             	xor    %r8d,%r8d
    2ccf:	31 f6                	xor    %esi,%esi
    2cd1:	31 c9                	xor    %ecx,%ecx
    2cd3:	31 d2                	xor    %edx,%edx
    2cd5:	45 31 c9             	xor    %r9d,%r9d
    2cd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2cdf:	00 
    2ce0:	31 c0                	xor    %eax,%eax
    2ce2:	eb 17                	jmp    2cfb <matrix_test+0x29b>
    2ce4:	0f 1f 40 00          	nopl   0x0(%rax)
    2ce8:	39 f9                	cmp    %edi,%ecx
    2cea:	40 0f 9f c7          	setg   %dil
    2cee:	83 c0 01             	add    $0x1,%eax
    2cf1:	40 0f b6 ff          	movzbl %dil,%edi
    2cf5:	01 fe                	add    %edi,%esi
    2cf7:	39 c3                	cmp    %eax,%ebx
    2cf9:	76 1d                	jbe    2d18 <matrix_test+0x2b8>
    2cfb:	89 cf                	mov    %ecx,%edi
    2cfd:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2d01:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2d05:	01 ca                	add    %ecx,%edx
    2d07:	41 39 d5             	cmp    %edx,%r13d
    2d0a:	7d dc                	jge    2ce8 <matrix_test+0x288>
    2d0c:	83 c0 01             	add    $0x1,%eax
    2d0f:	83 c6 0a             	add    $0xa,%esi
    2d12:	31 d2                	xor    %edx,%edx
    2d14:	39 c3                	cmp    %eax,%ebx
    2d16:	77 e3                	ja     2cfb <matrix_test+0x29b>
    2d18:	41 83 c1 01          	add    $0x1,%r9d
    2d1c:	41 01 d8             	add    %ebx,%r8d
    2d1f:	44 39 cb             	cmp    %r9d,%ebx
    2d22:	77 bc                	ja     2ce0 <matrix_test+0x280>
    2d24:	0f bf fe             	movswl %si,%edi
    2d27:	44 89 d6             	mov    %r10d,%esi
    2d2a:	e8 61 12 00 00       	callq  3f90 <crc16>
    2d2f:	45 31 c9             	xor    %r9d,%r9d
    2d32:	45 31 db             	xor    %r11d,%r11d
    2d35:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    2d3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d40:	31 f6                	xor    %esi,%esi
    2d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2d48:	42 8d 04 0e          	lea    (%rsi,%r9,1),%eax
    2d4c:	89 f7                	mov    %esi,%edi
    2d4e:	45 31 c0             	xor    %r8d,%r8d
    2d51:	31 c9                	xor    %ecx,%ecx
    2d53:	4d 8d 14 84          	lea    (%r12,%rax,4),%r10
    2d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2d5e:	00 00 
    2d60:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    2d64:	83 c1 01             	add    $0x1,%ecx
    2d67:	0f bf 54 45 00       	movswl 0x0(%rbp,%rax,2),%edx
    2d6c:	89 f8                	mov    %edi,%eax
    2d6e:	01 df                	add    %ebx,%edi
    2d70:	41 0f bf 04 46       	movswl (%r14,%rax,2),%eax
    2d75:	0f af c2             	imul   %edx,%eax
    2d78:	89 c2                	mov    %eax,%edx
    2d7a:	c1 f8 05             	sar    $0x5,%eax
    2d7d:	c1 fa 02             	sar    $0x2,%edx
    2d80:	83 e0 7f             	and    $0x7f,%eax
    2d83:	83 e2 0f             	and    $0xf,%edx
    2d86:	0f af c2             	imul   %edx,%eax
    2d89:	41 01 c0             	add    %eax,%r8d
    2d8c:	39 cb                	cmp    %ecx,%ebx
    2d8e:	77 d0                	ja     2d60 <matrix_test+0x300>
    2d90:	83 c6 01             	add    $0x1,%esi
    2d93:	45 89 02             	mov    %r8d,(%r10)
    2d96:	39 f3                	cmp    %esi,%ebx
    2d98:	77 ae                	ja     2d48 <matrix_test+0x2e8>
    2d9a:	41 83 c3 01          	add    $0x1,%r11d
    2d9e:	41 01 d9             	add    %ebx,%r9d
    2da1:	44 39 db             	cmp    %r11d,%ebx
    2da4:	77 9a                	ja     2d40 <matrix_test+0x2e0>
    2da6:	44 0f b7 54 24 06    	movzwl 0x6(%rsp),%r10d
    2dac:	45 31 c0             	xor    %r8d,%r8d
    2daf:	31 f6                	xor    %esi,%esi
    2db1:	31 c9                	xor    %ecx,%ecx
    2db3:	31 d2                	xor    %edx,%edx
    2db5:	45 31 c9             	xor    %r9d,%r9d
    2db8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2dbf:	00 
    2dc0:	31 c0                	xor    %eax,%eax
    2dc2:	eb 17                	jmp    2ddb <matrix_test+0x37b>
    2dc4:	0f 1f 40 00          	nopl   0x0(%rax)
    2dc8:	39 f9                	cmp    %edi,%ecx
    2dca:	40 0f 9f c7          	setg   %dil
    2dce:	83 c0 01             	add    $0x1,%eax
    2dd1:	40 0f b6 ff          	movzbl %dil,%edi
    2dd5:	01 fe                	add    %edi,%esi
    2dd7:	39 c3                	cmp    %eax,%ebx
    2dd9:	76 1d                	jbe    2df8 <matrix_test+0x398>
    2ddb:	89 cf                	mov    %ecx,%edi
    2ddd:	41 8d 0c 00          	lea    (%r8,%rax,1),%ecx
    2de1:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    2de5:	01 ca                	add    %ecx,%edx
    2de7:	41 39 d5             	cmp    %edx,%r13d
    2dea:	7d dc                	jge    2dc8 <matrix_test+0x368>
    2dec:	83 c0 01             	add    $0x1,%eax
    2def:	83 c6 0a             	add    $0xa,%esi
    2df2:	31 d2                	xor    %edx,%edx
    2df4:	39 c3                	cmp    %eax,%ebx
    2df6:	77 e3                	ja     2ddb <matrix_test+0x37b>
    2df8:	41 83 c1 01          	add    $0x1,%r9d
    2dfc:	41 01 d8             	add    %ebx,%r8d
    2dff:	44 39 cb             	cmp    %r9d,%ebx
    2e02:	77 bc                	ja     2dc0 <matrix_test+0x360>
    2e04:	0f bf fe             	movswl %si,%edi
    2e07:	44 89 d6             	mov    %r10d,%esi
    2e0a:	e8 81 11 00 00       	callq  3f90 <crc16>
    2e0f:	31 f6                	xor    %esi,%esi
    2e11:	31 ff                	xor    %edi,%edi
    2e13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2e18:	31 d2                	xor    %edx,%edx
    2e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e20:	8d 0c 32             	lea    (%rdx,%rsi,1),%ecx
    2e23:	83 c2 01             	add    $0x1,%edx
    2e26:	66 44 29 7c 4d 00    	sub    %r15w,0x0(%rbp,%rcx,2)
    2e2c:	39 da                	cmp    %ebx,%edx
    2e2e:	72 f0                	jb     2e20 <matrix_test+0x3c0>
    2e30:	83 c7 01             	add    $0x1,%edi
    2e33:	01 de                	add    %ebx,%esi
    2e35:	39 df                	cmp    %ebx,%edi
    2e37:	72 df                	jb     2e18 <matrix_test+0x3b8>
    2e39:	48 83 c4 18          	add    $0x18,%rsp
    2e3d:	5b                   	pop    %rbx
    2e3e:	5d                   	pop    %rbp
    2e3f:	41 5c                	pop    %r12
    2e41:	41 5d                	pop    %r13
    2e43:	41 5e                	pop    %r14
    2e45:	41 5f                	pop    %r15
    2e47:	c3                   	retq   
    2e48:	31 f6                	xor    %esi,%esi
    2e4a:	31 ff                	xor    %edi,%edi
    2e4c:	e8 3f 11 00 00       	callq  3f90 <crc16>
    2e51:	31 ff                	xor    %edi,%edi
    2e53:	0f b7 f0             	movzwl %ax,%esi
    2e56:	e8 35 11 00 00       	callq  3f90 <crc16>
    2e5b:	31 ff                	xor    %edi,%edi
    2e5d:	0f b7 f0             	movzwl %ax,%esi
    2e60:	e8 2b 11 00 00       	callq  3f90 <crc16>
    2e65:	48 83 c4 18          	add    $0x18,%rsp
    2e69:	31 ff                	xor    %edi,%edi
    2e6b:	5b                   	pop    %rbx
    2e6c:	0f b7 f0             	movzwl %ax,%esi
    2e6f:	5d                   	pop    %rbp
    2e70:	41 5c                	pop    %r12
    2e72:	41 5d                	pop    %r13
    2e74:	41 5e                	pop    %r14
    2e76:	41 5f                	pop    %r15
    2e78:	e9 13 11 00 00       	jmpq   3f90 <crc16>
    2e7d:	0f 1f 00             	nopl   (%rax)

0000000000002e80 <core_bench_matrix>:
    2e80:	f3 0f 1e fa          	endbr64 
    2e84:	55                   	push   %rbp
    2e85:	41 89 f0             	mov    %esi,%r8d
    2e88:	0f b7 ea             	movzwl %dx,%ebp
    2e8b:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    2e8f:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    2e93:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    2e97:	45 0f bf c0          	movswl %r8w,%r8d
    2e9b:	8b 3f                	mov    (%rdi),%edi
    2e9d:	e8 be fb ff ff       	callq  2a60 <matrix_test>
    2ea2:	89 ee                	mov    %ebp,%esi
    2ea4:	5d                   	pop    %rbp
    2ea5:	0f bf f8             	movswl %ax,%edi
    2ea8:	e9 e3 10 00 00       	jmpq   3f90 <crc16>
    2ead:	0f 1f 00             	nopl   (%rax)

0000000000002eb0 <core_init_matrix>:
    2eb0:	f3 0f 1e fa          	endbr64 
    2eb4:	85 d2                	test   %edx,%edx
    2eb6:	b8 01 00 00 00       	mov    $0x1,%eax
    2ebb:	4c 8d 56 ff          	lea    -0x1(%rsi),%r10
    2ebf:	41 57                	push   %r15
    2ec1:	0f 44 d0             	cmove  %eax,%edx
    2ec4:	49 83 e2 fc          	and    $0xfffffffffffffffc,%r10
    2ec8:	41 56                	push   %r14
    2eca:	49 89 cf             	mov    %rcx,%r15
    2ecd:	41 55                	push   %r13
    2ecf:	49 8d 4a 04          	lea    0x4(%r10),%rcx
    2ed3:	41 54                	push   %r12
    2ed5:	55                   	push   %rbp
    2ed6:	53                   	push   %rbx
    2ed7:	85 ff                	test   %edi,%edi
    2ed9:	0f 84 ec 00 00 00    	je     2fcb <core_init_matrix+0x11b>
    2edf:	31 c0                	xor    %eax,%eax
    2ee1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ee8:	41 89 c1             	mov    %eax,%r9d
    2eeb:	8d 40 01             	lea    0x1(%rax),%eax
    2eee:	89 c6                	mov    %eax,%esi
    2ef0:	0f af f0             	imul   %eax,%esi
    2ef3:	c1 e6 03             	shl    $0x3,%esi
    2ef6:	39 f7                	cmp    %esi,%edi
    2ef8:	77 ee                	ja     2ee8 <core_init_matrix+0x38>
    2efa:	44 89 c8             	mov    %r9d,%eax
    2efd:	44 89 4c 24 ec       	mov    %r9d,-0x14(%rsp)
    2f02:	41 0f af c1          	imul   %r9d,%eax
    2f06:	48 01 c0             	add    %rax,%rax
    2f09:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
    2f0e:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    2f12:	45 85 c9             	test   %r9d,%r9d
    2f15:	74 76                	je     2f8d <core_init_matrix+0xdd>
    2f17:	45 31 e4             	xor    %r12d,%r12d
    2f1a:	31 ed                	xor    %ebp,%ebp
    2f1c:	bb 01 00 00 00       	mov    $0x1,%ebx
    2f21:	45 31 ed             	xor    %r13d,%r13d
    2f24:	45 8d 71 ff          	lea    -0x1(%r9),%r14d
    2f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2f2f:	00 
    2f30:	45 89 e3             	mov    %r12d,%r11d
    2f33:	89 de                	mov    %ebx,%esi
    2f35:	31 ff                	xor    %edi,%edi
    2f37:	41 29 db             	sub    %ebx,%r11d
    2f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2f40:	0f af d6             	imul   %esi,%edx
    2f43:	45 8d 04 33          	lea    (%r11,%rsi,1),%r8d
    2f47:	83 c7 01             	add    $0x1,%edi
    2f4a:	89 d0                	mov    %edx,%eax
    2f4c:	c1 f8 1f             	sar    $0x1f,%eax
    2f4f:	c1 e8 10             	shr    $0x10,%eax
    2f52:	01 c2                	add    %eax,%edx
    2f54:	0f b7 d2             	movzwl %dx,%edx
    2f57:	29 c2                	sub    %eax,%edx
    2f59:	8d 04 16             	lea    (%rsi,%rdx,1),%eax
    2f5c:	66 43 89 04 42       	mov    %ax,(%r10,%r8,2)
    2f61:	01 f0                	add    %esi,%eax
    2f63:	83 c6 01             	add    $0x1,%esi
    2f66:	66 25 ff 00          	and    $0xff,%ax
    2f6a:	66 42 89 04 41       	mov    %ax,(%rcx,%r8,2)
    2f6f:	44 39 cf             	cmp    %r9d,%edi
    2f72:	72 cc                	jb     2f40 <core_init_matrix+0x90>
    2f74:	45 85 c9             	test   %r9d,%r9d
    2f77:	44 89 e8             	mov    %r13d,%eax
    2f7a:	41 0f 45 c6          	cmovne %r14d,%eax
    2f7e:	83 c5 01             	add    $0x1,%ebp
    2f81:	45 01 cc             	add    %r9d,%r12d
    2f84:	8d 5c 03 01          	lea    0x1(%rbx,%rax,1),%ebx
    2f88:	44 39 cd             	cmp    %r9d,%ebp
    2f8b:	72 a3                	jb     2f30 <core_init_matrix+0x80>
    2f8d:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
    2f92:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    2f97:	66 49 0f 6e ca       	movq   %r10,%xmm1
    2f9c:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    2fa0:	49 8d 44 02 ff       	lea    -0x1(%r10,%rax,1),%rax
    2fa5:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
    2faa:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    2fae:	48 83 c0 04          	add    $0x4,%rax
    2fb2:	49 89 47 18          	mov    %rax,0x18(%r15)
    2fb6:	8b 44 24 ec          	mov    -0x14(%rsp),%eax
    2fba:	5b                   	pop    %rbx
    2fbb:	5d                   	pop    %rbp
    2fbc:	41 89 07             	mov    %eax,(%r15)
    2fbf:	41 5c                	pop    %r12
    2fc1:	44 89 c8             	mov    %r9d,%eax
    2fc4:	41 5d                	pop    %r13
    2fc6:	41 5e                	pop    %r14
    2fc8:	41 5f                	pop    %r15
    2fca:	c3                   	retq   
    2fcb:	c7 44 24 ec ff ff ff 	movl   $0xffffffff,-0x14(%rsp)
    2fd2:	ff 
    2fd3:	49 83 c2 06          	add    $0x6,%r10
    2fd7:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
    2fdd:	48 c7 44 24 f0 02 00 	movq   $0x2,-0x10(%rsp)
    2fe4:	00 00 
    2fe6:	e9 2c ff ff ff       	jmpq   2f17 <core_init_matrix+0x67>
    2feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002ff0 <matrix_sum>:
    2ff0:	f3 0f 1e fa          	endbr64 
    2ff4:	85 ff                	test   %edi,%edi
    2ff6:	74 65                	je     305d <matrix_sum+0x6d>
    2ff8:	55                   	push   %rbp
    2ff9:	44 0f bf da          	movswl %dx,%r11d
    2ffd:	41 89 fa             	mov    %edi,%r10d
    3000:	31 ed                	xor    %ebp,%ebp
    3002:	53                   	push   %rbx
    3003:	45 31 c0             	xor    %r8d,%r8d
    3006:	31 db                	xor    %ebx,%ebx
    3008:	31 c9                	xor    %ecx,%ecx
    300a:	31 d2                	xor    %edx,%edx
    300c:	0f 1f 40 00          	nopl   0x0(%rax)
    3010:	89 e8                	mov    %ebp,%eax
    3012:	eb 1a                	jmp    302e <matrix_sum+0x3e>
    3014:	0f 1f 40 00          	nopl   0x0(%rax)
    3018:	41 39 c9             	cmp    %ecx,%r9d
    301b:	41 0f 9c c1          	setl   %r9b
    301f:	83 c0 01             	add    $0x1,%eax
    3022:	45 0f b6 c9          	movzbl %r9b,%r9d
    3026:	45 01 c8             	add    %r9d,%r8d
    3029:	41 39 c2             	cmp    %eax,%r10d
    302c:	74 1d                	je     304b <matrix_sum+0x5b>
    302e:	41 89 c9             	mov    %ecx,%r9d
    3031:	89 c1                	mov    %eax,%ecx
    3033:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
    3036:	01 ca                	add    %ecx,%edx
    3038:	41 39 d3             	cmp    %edx,%r11d
    303b:	7d db                	jge    3018 <matrix_sum+0x28>
    303d:	83 c0 01             	add    $0x1,%eax
    3040:	41 83 c0 0a          	add    $0xa,%r8d
    3044:	31 d2                	xor    %edx,%edx
    3046:	41 39 c2             	cmp    %eax,%r10d
    3049:	75 e3                	jne    302e <matrix_sum+0x3e>
    304b:	83 c3 01             	add    $0x1,%ebx
    304e:	41 01 fa             	add    %edi,%r10d
    3051:	01 fd                	add    %edi,%ebp
    3053:	39 df                	cmp    %ebx,%edi
    3055:	75 b9                	jne    3010 <matrix_sum+0x20>
    3057:	44 89 c0             	mov    %r8d,%eax
    305a:	5b                   	pop    %rbx
    305b:	5d                   	pop    %rbp
    305c:	c3                   	retq   
    305d:	45 31 c0             	xor    %r8d,%r8d
    3060:	44 89 c0             	mov    %r8d,%eax
    3063:	c3                   	retq   
    3064:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    306b:	00 00 00 00 
    306f:	90                   	nop

0000000000003070 <matrix_mul_const>:
    3070:	f3 0f 1e fa          	endbr64 
    3074:	85 ff                	test   %edi,%edi
    3076:	74 40                	je     30b8 <matrix_mul_const+0x48>
    3078:	53                   	push   %rbx
    3079:	44 0f bf d1          	movswl %cx,%r10d
    307d:	41 89 f9             	mov    %edi,%r9d
    3080:	31 db                	xor    %ebx,%ebx
    3082:	45 31 db             	xor    %r11d,%r11d
    3085:	0f 1f 00             	nopl   (%rax)
    3088:	89 d8                	mov    %ebx,%eax
    308a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3090:	41 89 c0             	mov    %eax,%r8d
    3093:	83 c0 01             	add    $0x1,%eax
    3096:	42 0f bf 0c 42       	movswl (%rdx,%r8,2),%ecx
    309b:	41 0f af ca          	imul   %r10d,%ecx
    309f:	42 89 0c 86          	mov    %ecx,(%rsi,%r8,4)
    30a3:	41 39 c1             	cmp    %eax,%r9d
    30a6:	75 e8                	jne    3090 <matrix_mul_const+0x20>
    30a8:	41 83 c3 01          	add    $0x1,%r11d
    30ac:	01 fb                	add    %edi,%ebx
    30ae:	41 01 f9             	add    %edi,%r9d
    30b1:	44 39 df             	cmp    %r11d,%edi
    30b4:	75 d2                	jne    3088 <matrix_mul_const+0x18>
    30b6:	5b                   	pop    %rbx
    30b7:	c3                   	retq   
    30b8:	c3                   	retq   
    30b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000030c0 <matrix_add_const>:
    30c0:	f3 0f 1e fa          	endbr64 
    30c4:	85 ff                	test   %edi,%edi
    30c6:	74 34                	je     30fc <matrix_add_const+0x3c>
    30c8:	41 89 d0             	mov    %edx,%r8d
    30cb:	89 f9                	mov    %edi,%ecx
    30cd:	45 31 d2             	xor    %r10d,%r10d
    30d0:	45 31 c9             	xor    %r9d,%r9d
    30d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    30d8:	44 89 d0             	mov    %r10d,%eax
    30db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    30e0:	89 c2                	mov    %eax,%edx
    30e2:	83 c0 01             	add    $0x1,%eax
    30e5:	66 44 01 04 56       	add    %r8w,(%rsi,%rdx,2)
    30ea:	39 c1                	cmp    %eax,%ecx
    30ec:	75 f2                	jne    30e0 <matrix_add_const+0x20>
    30ee:	41 83 c1 01          	add    $0x1,%r9d
    30f2:	41 01 fa             	add    %edi,%r10d
    30f5:	01 f9                	add    %edi,%ecx
    30f7:	44 39 cf             	cmp    %r9d,%edi
    30fa:	75 dc                	jne    30d8 <matrix_add_const+0x18>
    30fc:	c3                   	retq   
    30fd:	0f 1f 00             	nopl   (%rax)

0000000000003100 <matrix_mul_vect>:
    3100:	f3 0f 1e fa          	endbr64 
    3104:	41 55                	push   %r13
    3106:	41 54                	push   %r12
    3108:	55                   	push   %rbp
    3109:	89 fd                	mov    %edi,%ebp
    310b:	53                   	push   %rbx
    310c:	48 83 ec 08          	sub    $0x8,%rsp
    3110:	85 ff                	test   %edi,%edi
    3112:	74 69                	je     317d <matrix_mul_vect+0x7d>
    3114:	44 8d 6d ff          	lea    -0x1(%rbp),%r13d
    3118:	48 89 f7             	mov    %rsi,%rdi
    311b:	48 89 d3             	mov    %rdx,%rbx
    311e:	31 f6                	xor    %esi,%esi
    3120:	4a 8d 14 ad 04 00 00 	lea    0x4(,%r13,4),%rdx
    3127:	00 
    3128:	49 89 cc             	mov    %rcx,%r12
    312b:	e8 e0 df ff ff       	callq  1110 <memset@plt>
    3130:	41 89 e9             	mov    %ebp,%r9d
    3133:	45 31 d2             	xor    %r10d,%r10d
    3136:	48 89 c1             	mov    %rax,%rcx
    3139:	4e 8d 5c a8 04       	lea    0x4(%rax,%r13,4),%r11
    313e:	66 90                	xchg   %ax,%ax
    3140:	4c 89 e6             	mov    %r12,%rsi
    3143:	44 89 d0             	mov    %r10d,%eax
    3146:	31 ff                	xor    %edi,%edi
    3148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    314f:	00 
    3150:	89 c2                	mov    %eax,%edx
    3152:	44 0f bf 06          	movswl (%rsi),%r8d
    3156:	83 c0 01             	add    $0x1,%eax
    3159:	48 83 c6 02          	add    $0x2,%rsi
    315d:	0f bf 14 53          	movswl (%rbx,%rdx,2),%edx
    3161:	41 0f af d0          	imul   %r8d,%edx
    3165:	01 d7                	add    %edx,%edi
    3167:	41 39 c1             	cmp    %eax,%r9d
    316a:	75 e4                	jne    3150 <matrix_mul_vect+0x50>
    316c:	89 39                	mov    %edi,(%rcx)
    316e:	48 83 c1 04          	add    $0x4,%rcx
    3172:	41 01 ea             	add    %ebp,%r10d
    3175:	41 01 e9             	add    %ebp,%r9d
    3178:	49 39 cb             	cmp    %rcx,%r11
    317b:	75 c3                	jne    3140 <matrix_mul_vect+0x40>
    317d:	48 83 c4 08          	add    $0x8,%rsp
    3181:	5b                   	pop    %rbx
    3182:	5d                   	pop    %rbp
    3183:	41 5c                	pop    %r12
    3185:	41 5d                	pop    %r13
    3187:	c3                   	retq   
    3188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    318f:	00 

0000000000003190 <matrix_mul_matrix>:
    3190:	f3 0f 1e fa          	endbr64 
    3194:	85 ff                	test   %edi,%edi
    3196:	0f 84 91 00 00 00    	je     322d <matrix_mul_matrix+0x9d>
    319c:	41 56                	push   %r14
    319e:	41 89 f8             	mov    %edi,%r8d
    31a1:	49 89 d3             	mov    %rdx,%r11
    31a4:	49 89 ca             	mov    %rcx,%r10
    31a7:	41 55                	push   %r13
    31a9:	41 89 f9             	mov    %edi,%r9d
    31ac:	45 31 f6             	xor    %r14d,%r14d
    31af:	41 54                	push   %r12
    31b1:	49 89 f4             	mov    %rsi,%r12
    31b4:	55                   	push   %rbp
    31b5:	31 ed                	xor    %ebp,%ebp
    31b7:	53                   	push   %rbx
    31b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    31bf:	00 
    31c0:	31 db                	xor    %ebx,%ebx
    31c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    31c8:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    31cb:	89 d9                	mov    %ebx,%ecx
    31cd:	31 f6                	xor    %esi,%esi
    31cf:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    31d3:	89 e8                	mov    %ebp,%eax
    31d5:	0f 1f 00             	nopl   (%rax)
    31d8:	89 c2                	mov    %eax,%edx
    31da:	89 cf                	mov    %ecx,%edi
    31dc:	83 c0 01             	add    $0x1,%eax
    31df:	44 01 c1             	add    %r8d,%ecx
    31e2:	41 0f bf 14 53       	movswl (%r11,%rdx,2),%edx
    31e7:	41 0f bf 3c 7a       	movswl (%r10,%rdi,2),%edi
    31ec:	0f af d7             	imul   %edi,%edx
    31ef:	01 d6                	add    %edx,%esi
    31f1:	41 39 c1             	cmp    %eax,%r9d
    31f4:	75 e2                	jne    31d8 <matrix_mul_matrix+0x48>
    31f6:	8d 43 01             	lea    0x1(%rbx),%eax
    31f9:	41 89 75 00          	mov    %esi,0x0(%r13)
    31fd:	41 39 c0             	cmp    %eax,%r8d
    3200:	74 0e                	je     3210 <matrix_mul_matrix+0x80>
    3202:	89 c3                	mov    %eax,%ebx
    3204:	eb c2                	jmp    31c8 <matrix_mul_matrix+0x38>
    3206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    320d:	00 00 00 
    3210:	41 8d 46 01          	lea    0x1(%r14),%eax
    3214:	44 01 c5             	add    %r8d,%ebp
    3217:	45 01 c1             	add    %r8d,%r9d
    321a:	41 39 de             	cmp    %ebx,%r14d
    321d:	74 05                	je     3224 <matrix_mul_matrix+0x94>
    321f:	41 89 c6             	mov    %eax,%r14d
    3222:	eb 9c                	jmp    31c0 <matrix_mul_matrix+0x30>
    3224:	5b                   	pop    %rbx
    3225:	5d                   	pop    %rbp
    3226:	41 5c                	pop    %r12
    3228:	41 5d                	pop    %r13
    322a:	41 5e                	pop    %r14
    322c:	c3                   	retq   
    322d:	c3                   	retq   
    322e:	66 90                	xchg   %ax,%ax

0000000000003230 <matrix_mul_matrix_bitextract>:
    3230:	f3 0f 1e fa          	endbr64 
    3234:	85 ff                	test   %edi,%edi
    3236:	0f 84 a1 00 00 00    	je     32dd <matrix_mul_matrix_bitextract+0xad>
    323c:	41 56                	push   %r14
    323e:	41 89 f8             	mov    %edi,%r8d
    3241:	49 89 d3             	mov    %rdx,%r11
    3244:	49 89 ca             	mov    %rcx,%r10
    3247:	41 55                	push   %r13
    3249:	41 89 f9             	mov    %edi,%r9d
    324c:	45 31 f6             	xor    %r14d,%r14d
    324f:	41 54                	push   %r12
    3251:	49 89 f4             	mov    %rsi,%r12
    3254:	55                   	push   %rbp
    3255:	31 ed                	xor    %ebp,%ebp
    3257:	53                   	push   %rbx
    3258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    325f:	00 
    3260:	31 db                	xor    %ebx,%ebx
    3262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3268:	8d 04 2b             	lea    (%rbx,%rbp,1),%eax
    326b:	89 de                	mov    %ebx,%esi
    326d:	89 e9                	mov    %ebp,%ecx
    326f:	31 ff                	xor    %edi,%edi
    3271:	4d 8d 2c 84          	lea    (%r12,%rax,4),%r13
    3275:	0f 1f 00             	nopl   (%rax)
    3278:	89 c8                	mov    %ecx,%eax
    327a:	89 f2                	mov    %esi,%edx
    327c:	83 c1 01             	add    $0x1,%ecx
    327f:	44 01 c6             	add    %r8d,%esi
    3282:	41 0f bf 14 52       	movswl (%r10,%rdx,2),%edx
    3287:	41 0f bf 04 43       	movswl (%r11,%rax,2),%eax
    328c:	0f af c2             	imul   %edx,%eax
    328f:	89 c2                	mov    %eax,%edx
    3291:	c1 f8 05             	sar    $0x5,%eax
    3294:	c1 fa 02             	sar    $0x2,%edx
    3297:	83 e0 7f             	and    $0x7f,%eax
    329a:	83 e2 0f             	and    $0xf,%edx
    329d:	0f af c2             	imul   %edx,%eax
    32a0:	01 c7                	add    %eax,%edi
    32a2:	41 39 c9             	cmp    %ecx,%r9d
    32a5:	75 d1                	jne    3278 <matrix_mul_matrix_bitextract+0x48>
    32a7:	8d 43 01             	lea    0x1(%rbx),%eax
    32aa:	41 89 7d 00          	mov    %edi,0x0(%r13)
    32ae:	41 39 c0             	cmp    %eax,%r8d
    32b1:	74 0d                	je     32c0 <matrix_mul_matrix_bitextract+0x90>
    32b3:	89 c3                	mov    %eax,%ebx
    32b5:	eb b1                	jmp    3268 <matrix_mul_matrix_bitextract+0x38>
    32b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    32be:	00 00 
    32c0:	41 8d 46 01          	lea    0x1(%r14),%eax
    32c4:	44 01 c5             	add    %r8d,%ebp
    32c7:	45 01 c1             	add    %r8d,%r9d
    32ca:	41 39 de             	cmp    %ebx,%r14d
    32cd:	74 05                	je     32d4 <matrix_mul_matrix_bitextract+0xa4>
    32cf:	41 89 c6             	mov    %eax,%r14d
    32d2:	eb 8c                	jmp    3260 <matrix_mul_matrix_bitextract+0x30>
    32d4:	5b                   	pop    %rbx
    32d5:	5d                   	pop    %rbp
    32d6:	41 5c                	pop    %r12
    32d8:	41 5d                	pop    %r13
    32da:	41 5e                	pop    %r14
    32dc:	c3                   	retq   
    32dd:	c3                   	retq   
    32de:	66 90                	xchg   %ax,%ax

00000000000032e0 <core_init_state>:
    32e0:	f3 0f 1e fa          	endbr64 
    32e4:	44 8d 4f ff          	lea    -0x1(%rdi),%r9d
    32e8:	41 56                	push   %r14
    32ea:	41 89 fa             	mov    %edi,%r10d
    32ed:	31 c0                	xor    %eax,%eax
    32ef:	41 54                	push   %r12
    32f1:	4c 8d 1d 48 4a 00 00 	lea    0x4a48(%rip),%r11        # 7d40 <floatpat>
    32f8:	48 8d 3d 61 4a 00 00 	lea    0x4a61(%rip),%rdi        # 7d60 <intpat>
    32ff:	55                   	push   %rbp
    3300:	48 8d 2d f9 49 00 00 	lea    0x49f9(%rip),%rbp        # 7d00 <errpat>
    3307:	53                   	push   %rbx
    3308:	48 8d 1d 11 4a 00 00 	lea    0x4a11(%rip),%rbx        # 7d20 <scipat>
    330f:	41 83 f9 01          	cmp    $0x1,%r9d
    3313:	0f 87 a0 00 00 00    	ja     33b9 <core_init_state+0xd9>
    3319:	e9 de 00 00 00       	jmpq   33fc <core_init_state+0x11c>
    331e:	66 90                	xchg   %ax,%ax
    3320:	66 83 f9 04          	cmp    $0x4,%cx
    3324:	0f 8f 0e 01 00 00    	jg     3438 <core_init_state+0x158>
    332a:	83 e9 03             	sub    $0x3,%ecx
    332d:	4d 63 c0             	movslq %r8d,%r8
    3330:	66 83 f9 01          	cmp    $0x1,%cx
    3334:	0f 87 e6 00 00 00    	ja     3420 <core_init_state+0x140>
    333a:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
    333e:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    3344:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    334a:	41 01 c4             	add    %eax,%r12d
    334d:	45 39 cc             	cmp    %r9d,%r12d
    3350:	0f 83 a1 00 00 00    	jae    33f7 <core_init_state+0x117>
    3356:	44 0f b6 31          	movzbl (%rcx),%r14d
    335a:	44 88 34 02          	mov    %r14b,(%rdx,%rax,1)
    335e:	44 0f b6 71 01       	movzbl 0x1(%rcx),%r14d
    3363:	44 88 74 02 01       	mov    %r14b,0x1(%rdx,%rax,1)
    3368:	44 0f b6 71 02       	movzbl 0x2(%rcx),%r14d
    336d:	44 88 74 02 02       	mov    %r14b,0x2(%rdx,%rax,1)
    3372:	44 0f b6 71 03       	movzbl 0x3(%rcx),%r14d
    3377:	44 88 74 02 03       	mov    %r14b,0x3(%rdx,%rax,1)
    337c:	41 83 f8 04          	cmp    $0x4,%r8d
    3380:	74 2c                	je     33ae <core_init_state+0xce>
    3382:	44 0f b6 71 04       	movzbl 0x4(%rcx),%r14d
    3387:	44 88 74 02 04       	mov    %r14b,0x4(%rdx,%rax,1)
    338c:	44 0f b6 71 05       	movzbl 0x5(%rcx),%r14d
    3391:	44 88 74 02 05       	mov    %r14b,0x5(%rdx,%rax,1)
    3396:	44 0f b6 71 06       	movzbl 0x6(%rcx),%r14d
    339b:	44 88 74 02 06       	mov    %r14b,0x6(%rdx,%rax,1)
    33a0:	41 83 f8 08          	cmp    $0x8,%r8d
    33a4:	75 08                	jne    33ae <core_init_state+0xce>
    33a6:	0f b6 49 07          	movzbl 0x7(%rcx),%ecx
    33aa:	88 4c 02 07          	mov    %cl,0x7(%rdx,%rax,1)
    33ae:	48 01 d0             	add    %rdx,%rax
    33b1:	42 c6 04 00 2c       	movb   $0x2c,(%rax,%r8,1)
    33b6:	44 89 e0             	mov    %r12d,%eax
    33b9:	83 c6 01             	add    $0x1,%esi
    33bc:	89 f1                	mov    %esi,%ecx
    33be:	41 89 f0             	mov    %esi,%r8d
    33c1:	66 41 c1 f8 03       	sar    $0x3,%r8w
    33c6:	83 e1 07             	and    $0x7,%ecx
    33c9:	41 83 e0 03          	and    $0x3,%r8d
    33cd:	66 83 f9 07          	cmp    $0x7,%cx
    33d1:	0f 85 49 ff ff ff    	jne    3320 <core_init_state+0x40>
    33d7:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    33dd:	4d 63 c0             	movslq %r8d,%r8
    33e0:	41 01 c4             	add    %eax,%r12d
    33e3:	4a 8b 4c c5 00       	mov    0x0(%rbp,%r8,8),%rcx
    33e8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    33ee:	45 39 cc             	cmp    %r9d,%r12d
    33f1:	0f 82 5f ff ff ff    	jb     3356 <core_init_state+0x76>
    33f7:	44 39 d0             	cmp    %r10d,%eax
    33fa:	73 54                	jae    3450 <core_init_state+0x170>
    33fc:	41 29 c1             	sub    %eax,%r9d
    33ff:	5b                   	pop    %rbx
    3400:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    3404:	5d                   	pop    %rbp
    3405:	49 83 c1 01          	add    $0x1,%r9
    3409:	41 5c                	pop    %r12
    340b:	31 f6                	xor    %esi,%esi
    340d:	41 5e                	pop    %r14
    340f:	4c 89 ca             	mov    %r9,%rdx
    3412:	e9 f9 dc ff ff       	jmpq   1110 <memset@plt>
    3417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    341e:	00 00 
    3420:	4a 8b 0c c7          	mov    (%rdi,%r8,8),%rcx
    3424:	41 bc 05 00 00 00    	mov    $0x5,%r12d
    342a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    3430:	e9 15 ff ff ff       	jmpq   334a <core_init_state+0x6a>
    3435:	0f 1f 00             	nopl   (%rax)
    3438:	4d 63 c0             	movslq %r8d,%r8
    343b:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    3441:	4a 8b 0c c3          	mov    (%rbx,%r8,8),%rcx
    3445:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    344b:	e9 fa fe ff ff       	jmpq   334a <core_init_state+0x6a>
    3450:	5b                   	pop    %rbx
    3451:	5d                   	pop    %rbp
    3452:	41 5c                	pop    %r12
    3454:	41 5e                	pop    %r14
    3456:	c3                   	retq   
    3457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    345e:	00 00 

0000000000003460 <core_state_transition>:
    3460:	f3 0f 1e fa          	endbr64 
    3464:	48 8b 07             	mov    (%rdi),%rax
    3467:	0f b6 08             	movzbl (%rax),%ecx
    346a:	84 c9                	test   %cl,%cl
    346c:	0f 84 bd 02 00 00    	je     372f <core_state_transition+0x2cf>
    3472:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3476:	80 f9 2c             	cmp    $0x2c,%cl
    3479:	0f 84 85 02 00 00    	je     3704 <core_state_transition+0x2a4>
    347f:	44 8b 16             	mov    (%rsi),%r10d
    3482:	44 8d 49 d0          	lea    -0x30(%rcx),%r9d
    3486:	45 8d 42 01          	lea    0x1(%r10),%r8d
    348a:	41 80 f9 09          	cmp    $0x9,%r9b
    348e:	0f 87 1c 01 00 00    	ja     35b0 <core_state_transition+0x150>
    3494:	44 89 06             	mov    %r8d,(%rsi)
    3497:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    349b:	84 c9                	test   %cl,%cl
    349d:	0f 84 a8 01 00 00    	je     364b <core_state_transition+0x1eb>
    34a3:	48 83 c0 02          	add    $0x2,%rax
    34a7:	80 f9 2c             	cmp    $0x2c,%cl
    34aa:	0f 84 98 01 00 00    	je     3648 <core_state_transition+0x1e8>
    34b0:	80 f9 2e             	cmp    $0x2e,%cl
    34b3:	74 30                	je     34e5 <core_state_transition+0x85>
    34b5:	83 e9 30             	sub    $0x30,%ecx
    34b8:	80 f9 09             	cmp    $0x9,%cl
    34bb:	0f 87 3f 01 00 00    	ja     3600 <core_state_transition+0x1a0>
    34c1:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    34c5:	84 c9                	test   %cl,%cl
    34c7:	0f 84 7b 01 00 00    	je     3648 <core_state_transition+0x1e8>
    34cd:	4c 8d 40 01          	lea    0x1(%rax),%r8
    34d1:	48 89 c2             	mov    %rax,%rdx
    34d4:	80 f9 2c             	cmp    $0x2c,%cl
    34d7:	0f 84 80 02 00 00    	je     375d <core_state_transition+0x2fd>
    34dd:	4c 89 c0             	mov    %r8,%rax
    34e0:	80 f9 2e             	cmp    $0x2e,%cl
    34e3:	75 d0                	jne    34b5 <core_state_transition+0x55>
    34e5:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    34e9:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    34ee:	45 84 c0             	test   %r8b,%r8b
    34f1:	0f 84 59 02 00 00    	je     3750 <core_state_transition+0x2f0>
    34f7:	48 8d 48 01          	lea    0x1(%rax),%rcx
    34fb:	41 80 f8 2c          	cmp    $0x2c,%r8b
    34ff:	0f 84 f2 01 00 00    	je     36f7 <core_state_transition+0x297>
    3505:	44 89 c2             	mov    %r8d,%edx
    3508:	83 e2 df             	and    $0xffffffdf,%edx
    350b:	80 fa 45             	cmp    $0x45,%dl
    350e:	0f 85 44 01 00 00    	jne    3658 <core_state_transition+0x1f8>
    3514:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    3518:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    351c:	84 c0                	test   %al,%al
    351e:	0f 84 f4 01 00 00    	je     3718 <core_state_transition+0x2b8>
    3524:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    3528:	3c 2c                	cmp    $0x2c,%al
    352a:	0f 84 eb 01 00 00    	je     371b <core_state_transition+0x2bb>
    3530:	44 8b 5e 0c          	mov    0xc(%rsi),%r11d
    3534:	83 e8 2b             	sub    $0x2b,%eax
    3537:	45 8d 43 01          	lea    0x1(%r11),%r8d
    353b:	44 89 46 0c          	mov    %r8d,0xc(%rsi)
    353f:	a8 fd                	test   $0xfd,%al
    3541:	75 5c                	jne    359f <core_state_transition+0x13f>
    3543:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
    3547:	84 c0                	test   %al,%al
    3549:	0f 84 d6 01 00 00    	je     3725 <core_state_transition+0x2c5>
    354f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    3553:	3c 2c                	cmp    $0x2c,%al
    3555:	0f 84 ca 01 00 00    	je     3725 <core_state_transition+0x2c5>
    355b:	44 8b 56 18          	mov    0x18(%rsi),%r10d
    355f:	83 e8 30             	sub    $0x30,%eax
    3562:	45 8d 42 01          	lea    0x1(%r10),%r8d
    3566:	44 89 46 18          	mov    %r8d,0x18(%rsi)
    356a:	3c 09                	cmp    $0x9,%al
    356c:	77 31                	ja     359f <core_state_transition+0x13f>
    356e:	44 0f b6 41 02       	movzbl 0x2(%rcx),%r8d
    3573:	45 84 c0             	test   %r8b,%r8b
    3576:	0f 84 92 01 00 00    	je     370e <core_state_transition+0x2ae>
    357c:	48 8d 41 03          	lea    0x3(%rcx),%rax
    3580:	41 80 f8 2c          	cmp    $0x2c,%r8b
    3584:	0f 84 81 01 00 00    	je     370b <core_state_transition+0x2ab>
    358a:	41 83 e8 30          	sub    $0x30,%r8d
    358e:	41 80 f8 09          	cmp    $0x9,%r8b
    3592:	0f 86 d8 00 00 00    	jbe    3670 <core_state_transition+0x210>
    3598:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    359c:	48 89 c2             	mov    %rax,%rdx
    359f:	48 89 17             	mov    %rdx,(%rdi)
    35a2:	b8 01 00 00 00       	mov    $0x1,%eax
    35a7:	c3                   	retq   
    35a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    35af:	00 
    35b0:	44 8d 49 d5          	lea    -0x2b(%rcx),%r9d
    35b4:	41 81 e1 fd 00 00 00 	and    $0xfd,%r9d
    35bb:	75 53                	jne    3610 <core_state_transition+0x1b0>
    35bd:	44 89 06             	mov    %r8d,(%rsi)
    35c0:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    35c5:	45 84 c0             	test   %r8b,%r8b
    35c8:	0f 84 6b 01 00 00    	je     3739 <core_state_transition+0x2d9>
    35ce:	48 8d 50 02          	lea    0x2(%rax),%rdx
    35d2:	41 80 f8 2c          	cmp    $0x2c,%r8b
    35d6:	0f 84 5d 01 00 00    	je     3739 <core_state_transition+0x2d9>
    35dc:	8b 4e 08             	mov    0x8(%rsi),%ecx
    35df:	45 8d 48 d0          	lea    -0x30(%r8),%r9d
    35e3:	83 c1 01             	add    $0x1,%ecx
    35e6:	41 80 f9 09          	cmp    $0x9,%r9b
    35ea:	76 44                	jbe    3630 <core_state_transition+0x1d0>
    35ec:	41 80 f8 2e          	cmp    $0x2e,%r8b
    35f0:	0f 84 ea 00 00 00    	je     36e0 <core_state_transition+0x280>
    35f6:	89 4e 08             	mov    %ecx,0x8(%rsi)
    35f9:	b8 01 00 00 00       	mov    $0x1,%eax
    35fe:	eb 0c                	jmp    360c <core_state_transition+0x1ac>
    3600:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    3604:	48 89 c2             	mov    %rax,%rdx
    3607:	b8 01 00 00 00       	mov    $0x1,%eax
    360c:	48 89 17             	mov    %rdx,(%rdi)
    360f:	c3                   	retq   
    3610:	80 f9 2e             	cmp    $0x2e,%cl
    3613:	0f 84 a6 00 00 00    	je     36bf <core_state_transition+0x25f>
    3619:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    361d:	b8 01 00 00 00       	mov    $0x1,%eax
    3622:	44 89 06             	mov    %r8d,(%rsi)
    3625:	eb e5                	jmp    360c <core_state_transition+0x1ac>
    3627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    362e:	00 00 
    3630:	89 4e 08             	mov    %ecx,0x8(%rsi)
    3633:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    3637:	84 c9                	test   %cl,%cl
    3639:	74 10                	je     364b <core_state_transition+0x1eb>
    363b:	48 83 c0 03          	add    $0x3,%rax
    363f:	80 f9 2c             	cmp    $0x2c,%cl
    3642:	0f 85 68 fe ff ff    	jne    34b0 <core_state_transition+0x50>
    3648:	48 89 c2             	mov    %rax,%rdx
    364b:	b8 04 00 00 00       	mov    $0x4,%eax
    3650:	eb ba                	jmp    360c <core_state_transition+0x1ac>
    3652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3658:	41 83 e8 30          	sub    $0x30,%r8d
    365c:	41 80 f8 09          	cmp    $0x9,%r8b
    3660:	76 3e                	jbe    36a0 <core_state_transition+0x240>
    3662:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    3666:	48 89 ca             	mov    %rcx,%rdx
    3669:	b8 01 00 00 00       	mov    $0x1,%eax
    366e:	eb 9c                	jmp    360c <core_state_transition+0x1ac>
    3670:	44 0f b6 42 01       	movzbl 0x1(%rdx),%r8d
    3675:	45 84 c0             	test   %r8b,%r8b
    3678:	0f 84 8d 00 00 00    	je     370b <core_state_transition+0x2ab>
    367e:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3682:	48 89 c2             	mov    %rax,%rdx
    3685:	41 80 f8 2c          	cmp    $0x2c,%r8b
    3689:	0f 84 b4 00 00 00    	je     3743 <core_state_transition+0x2e3>
    368f:	48 89 c8             	mov    %rcx,%rax
    3692:	e9 f3 fe ff ff       	jmpq   358a <core_state_transition+0x12a>
    3697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    369e:	00 00 
    36a0:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    36a5:	45 84 c0             	test   %r8b,%r8b
    36a8:	74 4d                	je     36f7 <core_state_transition+0x297>
    36aa:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    36ae:	48 89 c8             	mov    %rcx,%rax
    36b1:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36b5:	74 43                	je     36fa <core_state_transition+0x29a>
    36b7:	48 89 d1             	mov    %rdx,%rcx
    36ba:	e9 46 fe ff ff       	jmpq   3505 <core_state_transition+0xa5>
    36bf:	44 89 06             	mov    %r8d,(%rsi)
    36c2:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
    36c7:	45 84 c0             	test   %r8b,%r8b
    36ca:	74 2e                	je     36fa <core_state_transition+0x29a>
    36cc:	48 8d 48 02          	lea    0x2(%rax),%rcx
    36d0:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36d4:	74 21                	je     36f7 <core_state_transition+0x297>
    36d6:	48 89 d0             	mov    %rdx,%rax
    36d9:	e9 27 fe ff ff       	jmpq   3505 <core_state_transition+0xa5>
    36de:	66 90                	xchg   %ax,%ax
    36e0:	89 4e 08             	mov    %ecx,0x8(%rsi)
    36e3:	44 0f b6 40 02       	movzbl 0x2(%rax),%r8d
    36e8:	45 84 c0             	test   %r8b,%r8b
    36eb:	74 0d                	je     36fa <core_state_transition+0x29a>
    36ed:	48 8d 48 03          	lea    0x3(%rax),%rcx
    36f1:	41 80 f8 2c          	cmp    $0x2c,%r8b
    36f5:	75 df                	jne    36d6 <core_state_transition+0x276>
    36f7:	48 89 ca             	mov    %rcx,%rdx
    36fa:	b8 05 00 00 00       	mov    $0x5,%eax
    36ff:	e9 08 ff ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3704:	31 c0                	xor    %eax,%eax
    3706:	e9 01 ff ff ff       	jmpq   360c <core_state_transition+0x1ac>
    370b:	48 89 c2             	mov    %rax,%rdx
    370e:	b8 07 00 00 00       	mov    $0x7,%eax
    3713:	e9 f4 fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3718:	48 89 ca             	mov    %rcx,%rdx
    371b:	b8 03 00 00 00       	mov    $0x3,%eax
    3720:	e9 e7 fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3725:	b8 06 00 00 00       	mov    $0x6,%eax
    372a:	e9 dd fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    372f:	48 89 c2             	mov    %rax,%rdx
    3732:	31 c0                	xor    %eax,%eax
    3734:	e9 d3 fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3739:	b8 02 00 00 00       	mov    $0x2,%eax
    373e:	e9 c9 fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3743:	48 89 ca             	mov    %rcx,%rdx
    3746:	b8 07 00 00 00       	mov    $0x7,%eax
    374b:	e9 bc fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    3750:	48 89 c2             	mov    %rax,%rdx
    3753:	b8 05 00 00 00       	mov    $0x5,%eax
    3758:	e9 af fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    375d:	4c 89 c2             	mov    %r8,%rdx
    3760:	b8 04 00 00 00       	mov    $0x4,%eax
    3765:	e9 a2 fe ff ff       	jmpq   360c <core_state_transition+0x1ac>
    376a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003770 <core_bench_state>:
    3770:	f3 0f 1e fa          	endbr64 
    3774:	41 57                	push   %r15
    3776:	66 0f ef c0          	pxor   %xmm0,%xmm0
    377a:	49 89 f7             	mov    %rsi,%r15
    377d:	41 56                	push   %r14
    377f:	41 89 ce             	mov    %ecx,%r14d
    3782:	41 55                	push   %r13
    3784:	41 89 d5             	mov    %edx,%r13d
    3787:	41 54                	push   %r12
    3789:	45 89 cc             	mov    %r9d,%r12d
    378c:	55                   	push   %rbp
    378d:	89 fd                	mov    %edi,%ebp
    378f:	53                   	push   %rbx
    3790:	48 83 ec 78          	sub    $0x78,%rsp
    3794:	0f b6 16             	movzbl (%rsi),%edx
    3797:	66 44 89 44 24 0e    	mov    %r8w,0xe(%rsp)
    379d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    37a4:	00 00 
    37a6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    37ab:	31 c0                	xor    %eax,%eax
    37ad:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    37b2:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    37b7:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    37bc:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    37c1:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    37c6:	84 d2                	test   %dl,%dl
    37c8:	0f 84 5a 01 00 00    	je     3928 <core_bench_state+0x1b8>
    37ce:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    37d3:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    37d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    37df:	00 
    37e0:	48 89 de             	mov    %rbx,%rsi
    37e3:	e8 78 fc ff ff       	callq  3460 <core_state_transition>
    37e8:	89 c0                	mov    %eax,%eax
    37ea:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    37ef:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    37f4:	80 38 00             	cmpb   $0x0,(%rax)
    37f7:	75 e7                	jne    37e0 <core_bench_state+0x70>
    37f9:	89 ed                	mov    %ebp,%ebp
    37fb:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3800:	41 0f b6 17          	movzbl (%r15),%edx
    3804:	4c 01 fd             	add    %r15,%rbp
    3807:	4c 39 fd             	cmp    %r15,%rbp
    380a:	0f 86 30 01 00 00    	jbe    3940 <core_bench_state+0x1d0>
    3810:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    3816:	4c 89 f8             	mov    %r15,%rax
    3819:	eb 1f                	jmp    383a <core_bench_state+0xca>
    381b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3820:	44 31 ea             	xor    %r13d,%edx
    3823:	88 10                	mov    %dl,(%rax)
    3825:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    382a:	48 01 c8             	add    %rcx,%rax
    382d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3832:	48 39 c5             	cmp    %rax,%rbp
    3835:	76 15                	jbe    384c <core_bench_state+0xdc>
    3837:	0f b6 10             	movzbl (%rax),%edx
    383a:	80 fa 2c             	cmp    $0x2c,%dl
    383d:	75 e1                	jne    3820 <core_bench_state+0xb0>
    383f:	48 01 c8             	add    %rcx,%rax
    3842:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3847:	48 39 c5             	cmp    %rax,%rbp
    384a:	77 eb                	ja     3837 <core_bench_state+0xc7>
    384c:	41 80 3f 00          	cmpb   $0x0,(%r15)
    3850:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3855:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    385a:	74 34                	je     3890 <core_bench_state+0x120>
    385c:	0f 1f 40 00          	nopl   0x0(%rax)
    3860:	48 89 de             	mov    %rbx,%rsi
    3863:	e8 f8 fb ff ff       	callq  3460 <core_state_transition>
    3868:	89 c0                	mov    %eax,%eax
    386a:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    386f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3874:	80 38 00             	cmpb   $0x0,(%rax)
    3877:	75 e7                	jne    3860 <core_bench_state+0xf0>
    3879:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    387e:	48 0f bf 4c 24 0e    	movswq 0xe(%rsp),%rcx
    3884:	4c 39 fd             	cmp    %r15,%rbp
    3887:	76 27                	jbe    38b0 <core_bench_state+0x140>
    3889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3890:	41 0f b6 07          	movzbl (%r15),%eax
    3894:	3c 2c                	cmp    $0x2c,%al
    3896:	74 78                	je     3910 <core_bench_state+0x1a0>
    3898:	44 31 f0             	xor    %r14d,%eax
    389b:	41 88 07             	mov    %al,(%r15)
    389e:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    38a3:	49 01 cf             	add    %rcx,%r15
    38a6:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    38ab:	4c 39 fd             	cmp    %r15,%rbp
    38ae:	77 e0                	ja     3890 <core_bench_state+0x120>
    38b0:	31 ed                	xor    %ebp,%ebp
    38b2:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    38b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    38be:	00 00 
    38c0:	41 8b 7c 2d 00       	mov    0x0(%r13,%rbp,1),%edi
    38c5:	41 0f b7 f4          	movzwl %r12w,%esi
    38c9:	e8 82 03 00 00       	callq  3c50 <crcu32>
    38ce:	8b 3c 2b             	mov    (%rbx,%rbp,1),%edi
    38d1:	48 83 c5 04          	add    $0x4,%rbp
    38d5:	0f b7 f0             	movzwl %ax,%esi
    38d8:	e8 73 03 00 00       	callq  3c50 <crcu32>
    38dd:	41 89 c4             	mov    %eax,%r12d
    38e0:	48 83 fd 20          	cmp    $0x20,%rbp
    38e4:	75 da                	jne    38c0 <core_bench_state+0x150>
    38e6:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    38eb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    38f2:	00 00 
    38f4:	75 57                	jne    394d <core_bench_state+0x1dd>
    38f6:	48 83 c4 78          	add    $0x78,%rsp
    38fa:	44 89 e0             	mov    %r12d,%eax
    38fd:	5b                   	pop    %rbx
    38fe:	5d                   	pop    %rbp
    38ff:	41 5c                	pop    %r12
    3901:	41 5d                	pop    %r13
    3903:	41 5e                	pop    %r14
    3905:	41 5f                	pop    %r15
    3907:	c3                   	retq   
    3908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    390f:	00 
    3910:	49 01 cf             	add    %rcx,%r15
    3913:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    3918:	4c 39 fd             	cmp    %r15,%rbp
    391b:	0f 87 6f ff ff ff    	ja     3890 <core_bench_state+0x120>
    3921:	eb 8d                	jmp    38b0 <core_bench_state+0x140>
    3923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3928:	48 01 f5             	add    %rsi,%rbp
    392b:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    3930:	48 39 f5             	cmp    %rsi,%rbp
    3933:	0f 87 d7 fe ff ff    	ja     3810 <core_bench_state+0xa0>
    3939:	e9 72 ff ff ff       	jmpq   38b0 <core_bench_state+0x140>
    393e:	66 90                	xchg   %ax,%ax
    3940:	84 d2                	test   %dl,%dl
    3942:	0f 85 18 ff ff ff    	jne    3860 <core_bench_state+0xf0>
    3948:	e9 63 ff ff ff       	jmpq   38b0 <core_bench_state+0x140>
    394d:	e8 ae d7 ff ff       	callq  1100 <__stack_chk_fail@plt>
    3952:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3959:	00 00 00 
    395c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003960 <get_seed_32>:
    3960:	f3 0f 1e fa          	endbr64 
    3964:	83 ff 05             	cmp    $0x5,%edi
    3967:	77 5e                	ja     39c7 <get_seed_32+0x67>
    3969:	48 8d 15 90 1b 00 00 	lea    0x1b90(%rip),%rdx        # 5500 <_IO_stdin_used+0x500>
    3970:	89 ff                	mov    %edi,%edi
    3972:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    3976:	48 01 d0             	add    %rdx,%rax
    3979:	3e ff e0             	notrack jmpq *%rax
    397c:	0f 1f 40 00          	nopl   0x0(%rax)
    3980:	8b 05 ba 46 00 00    	mov    0x46ba(%rip),%eax        # 8040 <seed5_volatile>
    3986:	c3                   	retq   
    3987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    398e:	00 00 
    3990:	8b 05 b6 46 00 00    	mov    0x46b6(%rip),%eax        # 804c <seed1_volatile>
    3996:	c3                   	retq   
    3997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    399e:	00 00 
    39a0:	8b 05 a2 46 00 00    	mov    0x46a2(%rip),%eax        # 8048 <seed2_volatile>
    39a6:	c3                   	retq   
    39a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39ae:	00 00 
    39b0:	8b 05 76 46 00 00    	mov    0x4676(%rip),%eax        # 802c <seed3_volatile>
    39b6:	c3                   	retq   
    39b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    39be:	00 00 
    39c0:	8b 05 7e 46 00 00    	mov    0x467e(%rip),%eax        # 8044 <seed4_volatile>
    39c6:	c3                   	retq   
    39c7:	31 c0                	xor    %eax,%eax
    39c9:	c3                   	retq   
    39ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000039d0 <crcu8>:
    39d0:	f3 0f 1e fa          	endbr64 
    39d4:	89 f0                	mov    %esi,%eax
    39d6:	41 89 f8             	mov    %edi,%r8d
    39d9:	31 fe                	xor    %edi,%esi
    39db:	89 f9                	mov    %edi,%ecx
    39dd:	66 d1 e8             	shr    %ax
    39e0:	41 d0 e8             	shr    %r8b
    39e3:	89 c2                	mov    %eax,%edx
    39e5:	66 81 f2 01 a0       	xor    $0xa001,%dx
    39ea:	83 e6 01             	and    $0x1,%esi
    39ed:	0f 45 c2             	cmovne %edx,%eax
    39f0:	c0 e9 02             	shr    $0x2,%cl
    39f3:	89 c2                	mov    %eax,%edx
    39f5:	44 31 c0             	xor    %r8d,%eax
    39f8:	66 d1 ea             	shr    %dx
    39fb:	89 d6                	mov    %edx,%esi
    39fd:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a02:	a8 01                	test   $0x1,%al
    3a04:	0f 45 d6             	cmovne %esi,%edx
    3a07:	89 fe                	mov    %edi,%esi
    3a09:	40 c0 ee 03          	shr    $0x3,%sil
    3a0d:	89 d0                	mov    %edx,%eax
    3a0f:	31 ca                	xor    %ecx,%edx
    3a11:	66 d1 e8             	shr    %ax
    3a14:	89 c1                	mov    %eax,%ecx
    3a16:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a1b:	83 e2 01             	and    $0x1,%edx
    3a1e:	0f 45 c1             	cmovne %ecx,%eax
    3a21:	89 f9                	mov    %edi,%ecx
    3a23:	c0 e9 04             	shr    $0x4,%cl
    3a26:	89 c2                	mov    %eax,%edx
    3a28:	31 f0                	xor    %esi,%eax
    3a2a:	66 d1 ea             	shr    %dx
    3a2d:	89 d6                	mov    %edx,%esi
    3a2f:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a34:	a8 01                	test   $0x1,%al
    3a36:	0f 45 d6             	cmovne %esi,%edx
    3a39:	89 fe                	mov    %edi,%esi
    3a3b:	40 c0 ee 05          	shr    $0x5,%sil
    3a3f:	89 d0                	mov    %edx,%eax
    3a41:	31 ca                	xor    %ecx,%edx
    3a43:	66 d1 e8             	shr    %ax
    3a46:	89 c1                	mov    %eax,%ecx
    3a48:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a4d:	83 e2 01             	and    $0x1,%edx
    3a50:	0f 45 c1             	cmovne %ecx,%eax
    3a53:	89 f9                	mov    %edi,%ecx
    3a55:	c0 e9 06             	shr    $0x6,%cl
    3a58:	89 c2                	mov    %eax,%edx
    3a5a:	31 f0                	xor    %esi,%eax
    3a5c:	66 d1 ea             	shr    %dx
    3a5f:	89 d6                	mov    %edx,%esi
    3a61:	66 81 f6 01 a0       	xor    $0xa001,%si
    3a66:	a8 01                	test   $0x1,%al
    3a68:	0f 45 d6             	cmovne %esi,%edx
    3a6b:	40 c0 ef 07          	shr    $0x7,%dil
    3a6f:	89 d0                	mov    %edx,%eax
    3a71:	31 ca                	xor    %ecx,%edx
    3a73:	66 d1 e8             	shr    %ax
    3a76:	89 c1                	mov    %eax,%ecx
    3a78:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3a7d:	83 e2 01             	and    $0x1,%edx
    3a80:	0f 45 c1             	cmovne %ecx,%eax
    3a83:	41 89 c0             	mov    %eax,%r8d
    3a86:	31 c7                	xor    %eax,%edi
    3a88:	66 41 d1 e8          	shr    %r8w
    3a8c:	44 89 c0             	mov    %r8d,%eax
    3a8f:	66 35 01 a0          	xor    $0xa001,%ax
    3a93:	83 e7 01             	and    $0x1,%edi
    3a96:	44 0f 45 c0          	cmovne %eax,%r8d
    3a9a:	44 89 c0             	mov    %r8d,%eax
    3a9d:	c3                   	retq   
    3a9e:	66 90                	xchg   %ax,%ax

0000000000003aa0 <crcu16>:
    3aa0:	f3 0f 1e fa          	endbr64 
    3aa4:	89 f1                	mov    %esi,%ecx
    3aa6:	41 89 f8             	mov    %edi,%r8d
    3aa9:	31 fe                	xor    %edi,%esi
    3aab:	89 f8                	mov    %edi,%eax
    3aad:	66 d1 e9             	shr    %cx
    3ab0:	41 d0 e8             	shr    %r8b
    3ab3:	89 ca                	mov    %ecx,%edx
    3ab5:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3aba:	83 e6 01             	and    $0x1,%esi
    3abd:	0f 45 ca             	cmovne %edx,%ecx
    3ac0:	40 c0 ef 02          	shr    $0x2,%dil
    3ac4:	89 ca                	mov    %ecx,%edx
    3ac6:	44 31 c1             	xor    %r8d,%ecx
    3ac9:	66 d1 ea             	shr    %dx
    3acc:	89 d6                	mov    %edx,%esi
    3ace:	66 81 f6 01 a0       	xor    $0xa001,%si
    3ad3:	83 e1 01             	and    $0x1,%ecx
    3ad6:	0f 45 d6             	cmovne %esi,%edx
    3ad9:	89 c6                	mov    %eax,%esi
    3adb:	40 c0 ee 03          	shr    $0x3,%sil
    3adf:	89 d1                	mov    %edx,%ecx
    3ae1:	31 fa                	xor    %edi,%edx
    3ae3:	66 d1 e9             	shr    %cx
    3ae6:	89 cf                	mov    %ecx,%edi
    3ae8:	66 81 f7 01 a0       	xor    $0xa001,%di
    3aed:	83 e2 01             	and    $0x1,%edx
    3af0:	0f 45 cf             	cmovne %edi,%ecx
    3af3:	89 c7                	mov    %eax,%edi
    3af5:	40 c0 ef 04          	shr    $0x4,%dil
    3af9:	89 ca                	mov    %ecx,%edx
    3afb:	31 f1                	xor    %esi,%ecx
    3afd:	66 d1 ea             	shr    %dx
    3b00:	89 d6                	mov    %edx,%esi
    3b02:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b07:	83 e1 01             	and    $0x1,%ecx
    3b0a:	0f 45 d6             	cmovne %esi,%edx
    3b0d:	89 c6                	mov    %eax,%esi
    3b0f:	40 c0 ee 05          	shr    $0x5,%sil
    3b13:	89 d1                	mov    %edx,%ecx
    3b15:	31 fa                	xor    %edi,%edx
    3b17:	66 d1 e9             	shr    %cx
    3b1a:	89 cf                	mov    %ecx,%edi
    3b1c:	66 81 f7 01 a0       	xor    $0xa001,%di
    3b21:	83 e2 01             	and    $0x1,%edx
    3b24:	0f 45 cf             	cmovne %edi,%ecx
    3b27:	89 c7                	mov    %eax,%edi
    3b29:	40 c0 ef 06          	shr    $0x6,%dil
    3b2d:	89 ca                	mov    %ecx,%edx
    3b2f:	31 f1                	xor    %esi,%ecx
    3b31:	66 d1 ea             	shr    %dx
    3b34:	89 d6                	mov    %edx,%esi
    3b36:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b3b:	83 e1 01             	and    $0x1,%ecx
    3b3e:	0f 45 d6             	cmovne %esi,%edx
    3b41:	89 c6                	mov    %eax,%esi
    3b43:	40 c0 ee 07          	shr    $0x7,%sil
    3b47:	89 d1                	mov    %edx,%ecx
    3b49:	31 fa                	xor    %edi,%edx
    3b4b:	66 d1 e9             	shr    %cx
    3b4e:	89 cf                	mov    %ecx,%edi
    3b50:	66 81 f7 01 a0       	xor    $0xa001,%di
    3b55:	83 e2 01             	and    $0x1,%edx
    3b58:	0f 45 cf             	cmovne %edi,%ecx
    3b5b:	89 ca                	mov    %ecx,%edx
    3b5d:	31 f1                	xor    %esi,%ecx
    3b5f:	66 d1 ea             	shr    %dx
    3b62:	89 d6                	mov    %edx,%esi
    3b64:	66 81 f6 01 a0       	xor    $0xa001,%si
    3b69:	83 e1 01             	and    $0x1,%ecx
    3b6c:	0f 45 d6             	cmovne %esi,%edx
    3b6f:	66 c1 e8 08          	shr    $0x8,%ax
    3b73:	89 c7                	mov    %eax,%edi
    3b75:	41 89 c0             	mov    %eax,%r8d
    3b78:	89 d6                	mov    %edx,%esi
    3b7a:	31 c2                	xor    %eax,%edx
    3b7c:	40 d0 ef             	shr    %dil
    3b7f:	66 d1 ee             	shr    %si
    3b82:	89 f1                	mov    %esi,%ecx
    3b84:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3b89:	83 e2 01             	and    $0x1,%edx
    3b8c:	0f 45 f1             	cmovne %ecx,%esi
    3b8f:	41 c0 e8 02          	shr    $0x2,%r8b
    3b93:	89 f1                	mov    %esi,%ecx
    3b95:	31 fe                	xor    %edi,%esi
    3b97:	89 c7                	mov    %eax,%edi
    3b99:	66 d1 e9             	shr    %cx
    3b9c:	89 ca                	mov    %ecx,%edx
    3b9e:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3ba3:	83 e6 01             	and    $0x1,%esi
    3ba6:	0f 45 ca             	cmovne %edx,%ecx
    3ba9:	40 c0 ef 03          	shr    $0x3,%dil
    3bad:	89 ca                	mov    %ecx,%edx
    3baf:	44 31 c1             	xor    %r8d,%ecx
    3bb2:	66 d1 ea             	shr    %dx
    3bb5:	89 d6                	mov    %edx,%esi
    3bb7:	66 81 f6 01 a0       	xor    $0xa001,%si
    3bbc:	83 e1 01             	and    $0x1,%ecx
    3bbf:	0f 45 d6             	cmovne %esi,%edx
    3bc2:	89 c6                	mov    %eax,%esi
    3bc4:	40 c0 ee 04          	shr    $0x4,%sil
    3bc8:	89 d1                	mov    %edx,%ecx
    3bca:	31 fa                	xor    %edi,%edx
    3bcc:	66 d1 e9             	shr    %cx
    3bcf:	89 cf                	mov    %ecx,%edi
    3bd1:	66 81 f7 01 a0       	xor    $0xa001,%di
    3bd6:	83 e2 01             	and    $0x1,%edx
    3bd9:	0f 45 cf             	cmovne %edi,%ecx
    3bdc:	89 c7                	mov    %eax,%edi
    3bde:	40 c0 ef 05          	shr    $0x5,%dil
    3be2:	89 ca                	mov    %ecx,%edx
    3be4:	31 f1                	xor    %esi,%ecx
    3be6:	66 d1 ea             	shr    %dx
    3be9:	89 d6                	mov    %edx,%esi
    3beb:	66 81 f6 01 a0       	xor    $0xa001,%si
    3bf0:	83 e1 01             	and    $0x1,%ecx
    3bf3:	0f 45 d6             	cmovne %esi,%edx
    3bf6:	89 c6                	mov    %eax,%esi
    3bf8:	40 c0 ee 06          	shr    $0x6,%sil
    3bfc:	89 d1                	mov    %edx,%ecx
    3bfe:	31 fa                	xor    %edi,%edx
    3c00:	66 d1 e9             	shr    %cx
    3c03:	89 cf                	mov    %ecx,%edi
    3c05:	66 81 f7 01 a0       	xor    $0xa001,%di
    3c0a:	83 e2 01             	and    $0x1,%edx
    3c0d:	0f 45 cf             	cmovne %edi,%ecx
    3c10:	c0 e8 07             	shr    $0x7,%al
    3c13:	89 ca                	mov    %ecx,%edx
    3c15:	31 f1                	xor    %esi,%ecx
    3c17:	66 d1 ea             	shr    %dx
    3c1a:	89 d6                	mov    %edx,%esi
    3c1c:	66 81 f6 01 a0       	xor    $0xa001,%si
    3c21:	83 e1 01             	and    $0x1,%ecx
    3c24:	0f 45 d6             	cmovne %esi,%edx
    3c27:	41 89 d0             	mov    %edx,%r8d
    3c2a:	31 d0                	xor    %edx,%eax
    3c2c:	66 41 d1 e8          	shr    %r8w
    3c30:	44 89 c2             	mov    %r8d,%edx
    3c33:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3c38:	a8 01                	test   $0x1,%al
    3c3a:	44 0f 45 c2          	cmovne %edx,%r8d
    3c3e:	44 89 c0             	mov    %r8d,%eax
    3c41:	c3                   	retq   
    3c42:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3c49:	00 00 00 00 
    3c4d:	0f 1f 00             	nopl   (%rax)

0000000000003c50 <crcu32>:
    3c50:	f3 0f 1e fa          	endbr64 
    3c54:	89 f0                	mov    %esi,%eax
    3c56:	89 f9                	mov    %edi,%ecx
    3c58:	31 fe                	xor    %edi,%esi
    3c5a:	66 d1 e8             	shr    %ax
    3c5d:	d0 e9                	shr    %cl
    3c5f:	89 c2                	mov    %eax,%edx
    3c61:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3c66:	83 e6 01             	and    $0x1,%esi
    3c69:	89 fe                	mov    %edi,%esi
    3c6b:	0f 45 c2             	cmovne %edx,%eax
    3c6e:	40 c0 ee 02          	shr    $0x2,%sil
    3c72:	89 c2                	mov    %eax,%edx
    3c74:	31 c8                	xor    %ecx,%eax
    3c76:	66 d1 ea             	shr    %dx
    3c79:	89 d1                	mov    %edx,%ecx
    3c7b:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3c80:	a8 01                	test   $0x1,%al
    3c82:	0f 45 d1             	cmovne %ecx,%edx
    3c85:	89 f9                	mov    %edi,%ecx
    3c87:	c0 e9 03             	shr    $0x3,%cl
    3c8a:	89 d0                	mov    %edx,%eax
    3c8c:	31 f2                	xor    %esi,%edx
    3c8e:	66 d1 e8             	shr    %ax
    3c91:	89 c6                	mov    %eax,%esi
    3c93:	66 81 f6 01 a0       	xor    $0xa001,%si
    3c98:	83 e2 01             	and    $0x1,%edx
    3c9b:	0f 45 c6             	cmovne %esi,%eax
    3c9e:	89 fe                	mov    %edi,%esi
    3ca0:	40 c0 ee 04          	shr    $0x4,%sil
    3ca4:	89 c2                	mov    %eax,%edx
    3ca6:	31 c8                	xor    %ecx,%eax
    3ca8:	66 d1 ea             	shr    %dx
    3cab:	89 d1                	mov    %edx,%ecx
    3cad:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3cb2:	a8 01                	test   $0x1,%al
    3cb4:	0f 45 d1             	cmovne %ecx,%edx
    3cb7:	89 f9                	mov    %edi,%ecx
    3cb9:	c0 e9 05             	shr    $0x5,%cl
    3cbc:	89 d0                	mov    %edx,%eax
    3cbe:	31 f2                	xor    %esi,%edx
    3cc0:	66 d1 e8             	shr    %ax
    3cc3:	89 c6                	mov    %eax,%esi
    3cc5:	66 81 f6 01 a0       	xor    $0xa001,%si
    3cca:	83 e2 01             	and    $0x1,%edx
    3ccd:	0f 45 c6             	cmovne %esi,%eax
    3cd0:	89 fe                	mov    %edi,%esi
    3cd2:	40 c0 ee 06          	shr    $0x6,%sil
    3cd6:	89 c2                	mov    %eax,%edx
    3cd8:	31 c8                	xor    %ecx,%eax
    3cda:	66 d1 ea             	shr    %dx
    3cdd:	89 d1                	mov    %edx,%ecx
    3cdf:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ce4:	a8 01                	test   $0x1,%al
    3ce6:	0f 45 d1             	cmovne %ecx,%edx
    3ce9:	89 f9                	mov    %edi,%ecx
    3ceb:	c0 e9 07             	shr    $0x7,%cl
    3cee:	89 d0                	mov    %edx,%eax
    3cf0:	31 f2                	xor    %esi,%edx
    3cf2:	66 d1 e8             	shr    %ax
    3cf5:	89 c6                	mov    %eax,%esi
    3cf7:	66 81 f6 01 a0       	xor    $0xa001,%si
    3cfc:	83 e2 01             	and    $0x1,%edx
    3cff:	0f 45 c6             	cmovne %esi,%eax
    3d02:	89 c2                	mov    %eax,%edx
    3d04:	31 c8                	xor    %ecx,%eax
    3d06:	66 d1 ea             	shr    %dx
    3d09:	89 d1                	mov    %edx,%ecx
    3d0b:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3d10:	a8 01                	test   $0x1,%al
    3d12:	89 f8                	mov    %edi,%eax
    3d14:	0f 45 d1             	cmovne %ecx,%edx
    3d17:	66 c1 e8 08          	shr    $0x8,%ax
    3d1b:	41 89 c0             	mov    %eax,%r8d
    3d1e:	89 d1                	mov    %edx,%ecx
    3d20:	31 c2                	xor    %eax,%edx
    3d22:	41 d0 e8             	shr    %r8b
    3d25:	66 d1 e9             	shr    %cx
    3d28:	89 ce                	mov    %ecx,%esi
    3d2a:	66 81 f6 01 a0       	xor    $0xa001,%si
    3d2f:	83 e2 01             	and    $0x1,%edx
    3d32:	0f 45 ce             	cmovne %esi,%ecx
    3d35:	89 c6                	mov    %eax,%esi
    3d37:	40 c0 ee 02          	shr    $0x2,%sil
    3d3b:	89 ca                	mov    %ecx,%edx
    3d3d:	44 31 c1             	xor    %r8d,%ecx
    3d40:	66 d1 ea             	shr    %dx
    3d43:	41 89 d0             	mov    %edx,%r8d
    3d46:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3d4c:	83 e1 01             	and    $0x1,%ecx
    3d4f:	41 0f 45 d0          	cmovne %r8d,%edx
    3d53:	41 89 c0             	mov    %eax,%r8d
    3d56:	41 c0 e8 03          	shr    $0x3,%r8b
    3d5a:	89 d1                	mov    %edx,%ecx
    3d5c:	31 f2                	xor    %esi,%edx
    3d5e:	66 d1 e9             	shr    %cx
    3d61:	89 ce                	mov    %ecx,%esi
    3d63:	66 81 f6 01 a0       	xor    $0xa001,%si
    3d68:	83 e2 01             	and    $0x1,%edx
    3d6b:	0f 45 ce             	cmovne %esi,%ecx
    3d6e:	89 c6                	mov    %eax,%esi
    3d70:	40 c0 ee 04          	shr    $0x4,%sil
    3d74:	89 ca                	mov    %ecx,%edx
    3d76:	44 31 c1             	xor    %r8d,%ecx
    3d79:	66 d1 ea             	shr    %dx
    3d7c:	41 89 d0             	mov    %edx,%r8d
    3d7f:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3d85:	83 e1 01             	and    $0x1,%ecx
    3d88:	41 0f 45 d0          	cmovne %r8d,%edx
    3d8c:	41 89 c0             	mov    %eax,%r8d
    3d8f:	41 c0 e8 05          	shr    $0x5,%r8b
    3d93:	89 d1                	mov    %edx,%ecx
    3d95:	31 f2                	xor    %esi,%edx
    3d97:	66 d1 e9             	shr    %cx
    3d9a:	89 ce                	mov    %ecx,%esi
    3d9c:	66 81 f6 01 a0       	xor    $0xa001,%si
    3da1:	83 e2 01             	and    $0x1,%edx
    3da4:	0f 45 ce             	cmovne %esi,%ecx
    3da7:	89 c6                	mov    %eax,%esi
    3da9:	40 c0 ee 06          	shr    $0x6,%sil
    3dad:	89 ca                	mov    %ecx,%edx
    3daf:	44 31 c1             	xor    %r8d,%ecx
    3db2:	66 d1 ea             	shr    %dx
    3db5:	41 89 d0             	mov    %edx,%r8d
    3db8:	66 41 81 f0 01 a0    	xor    $0xa001,%r8w
    3dbe:	83 e1 01             	and    $0x1,%ecx
    3dc1:	41 0f 45 d0          	cmovne %r8d,%edx
    3dc5:	c0 e8 07             	shr    $0x7,%al
    3dc8:	89 d1                	mov    %edx,%ecx
    3dca:	31 f2                	xor    %esi,%edx
    3dcc:	66 d1 e9             	shr    %cx
    3dcf:	89 ce                	mov    %ecx,%esi
    3dd1:	66 81 f6 01 a0       	xor    $0xa001,%si
    3dd6:	83 e2 01             	and    $0x1,%edx
    3dd9:	0f 45 ce             	cmovne %esi,%ecx
    3ddc:	89 ca                	mov    %ecx,%edx
    3dde:	31 c8                	xor    %ecx,%eax
    3de0:	66 d1 ea             	shr    %dx
    3de3:	89 d1                	mov    %edx,%ecx
    3de5:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3dea:	a8 01                	test   $0x1,%al
    3dec:	0f 45 d1             	cmovne %ecx,%edx
    3def:	c1 ef 10             	shr    $0x10,%edi
    3df2:	41 89 f8             	mov    %edi,%r8d
    3df5:	89 fe                	mov    %edi,%esi
    3df7:	89 d1                	mov    %edx,%ecx
    3df9:	31 fa                	xor    %edi,%edx
    3dfb:	41 d0 e8             	shr    %r8b
    3dfe:	66 d1 e9             	shr    %cx
    3e01:	89 c8                	mov    %ecx,%eax
    3e03:	66 35 01 a0          	xor    $0xa001,%ax
    3e07:	83 e2 01             	and    $0x1,%edx
    3e0a:	0f 45 c8             	cmovne %eax,%ecx
    3e0d:	40 c0 ee 02          	shr    $0x2,%sil
    3e11:	89 c8                	mov    %ecx,%eax
    3e13:	44 31 c1             	xor    %r8d,%ecx
    3e16:	66 d1 e8             	shr    %ax
    3e19:	89 c2                	mov    %eax,%edx
    3e1b:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3e20:	83 e1 01             	and    $0x1,%ecx
    3e23:	89 f9                	mov    %edi,%ecx
    3e25:	0f 45 c2             	cmovne %edx,%eax
    3e28:	c0 e9 03             	shr    $0x3,%cl
    3e2b:	89 c2                	mov    %eax,%edx
    3e2d:	31 f0                	xor    %esi,%eax
    3e2f:	66 d1 ea             	shr    %dx
    3e32:	89 d6                	mov    %edx,%esi
    3e34:	66 81 f6 01 a0       	xor    $0xa001,%si
    3e39:	a8 01                	test   $0x1,%al
    3e3b:	0f 45 d6             	cmovne %esi,%edx
    3e3e:	89 fe                	mov    %edi,%esi
    3e40:	40 c0 ee 04          	shr    $0x4,%sil
    3e44:	89 d0                	mov    %edx,%eax
    3e46:	31 ca                	xor    %ecx,%edx
    3e48:	66 d1 e8             	shr    %ax
    3e4b:	89 c1                	mov    %eax,%ecx
    3e4d:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3e52:	83 e2 01             	and    $0x1,%edx
    3e55:	0f 45 c1             	cmovne %ecx,%eax
    3e58:	89 f9                	mov    %edi,%ecx
    3e5a:	c0 e9 05             	shr    $0x5,%cl
    3e5d:	89 c2                	mov    %eax,%edx
    3e5f:	31 f0                	xor    %esi,%eax
    3e61:	66 d1 ea             	shr    %dx
    3e64:	89 d6                	mov    %edx,%esi
    3e66:	66 81 f6 01 a0       	xor    $0xa001,%si
    3e6b:	a8 01                	test   $0x1,%al
    3e6d:	0f 45 d6             	cmovne %esi,%edx
    3e70:	89 fe                	mov    %edi,%esi
    3e72:	40 c0 ee 06          	shr    $0x6,%sil
    3e76:	89 d0                	mov    %edx,%eax
    3e78:	31 ca                	xor    %ecx,%edx
    3e7a:	66 d1 e8             	shr    %ax
    3e7d:	89 c1                	mov    %eax,%ecx
    3e7f:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3e84:	83 e2 01             	and    $0x1,%edx
    3e87:	0f 45 c1             	cmovne %ecx,%eax
    3e8a:	89 f9                	mov    %edi,%ecx
    3e8c:	c0 e9 07             	shr    $0x7,%cl
    3e8f:	89 c2                	mov    %eax,%edx
    3e91:	31 f0                	xor    %esi,%eax
    3e93:	66 d1 ea             	shr    %dx
    3e96:	89 d6                	mov    %edx,%esi
    3e98:	66 81 f6 01 a0       	xor    $0xa001,%si
    3e9d:	a8 01                	test   $0x1,%al
    3e9f:	0f 45 d6             	cmovne %esi,%edx
    3ea2:	89 d0                	mov    %edx,%eax
    3ea4:	31 ca                	xor    %ecx,%edx
    3ea6:	66 d1 e8             	shr    %ax
    3ea9:	89 c1                	mov    %eax,%ecx
    3eab:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3eb0:	83 e2 01             	and    $0x1,%edx
    3eb3:	0f 45 c1             	cmovne %ecx,%eax
    3eb6:	66 c1 ef 08          	shr    $0x8,%di
    3eba:	89 fe                	mov    %edi,%esi
    3ebc:	41 89 f8             	mov    %edi,%r8d
    3ebf:	89 c1                	mov    %eax,%ecx
    3ec1:	31 f8                	xor    %edi,%eax
    3ec3:	40 d0 ee             	shr    %sil
    3ec6:	66 d1 e9             	shr    %cx
    3ec9:	89 ca                	mov    %ecx,%edx
    3ecb:	66 81 f2 01 a0       	xor    $0xa001,%dx
    3ed0:	a8 01                	test   $0x1,%al
    3ed2:	0f 45 ca             	cmovne %edx,%ecx
    3ed5:	41 c0 e8 02          	shr    $0x2,%r8b
    3ed9:	89 ca                	mov    %ecx,%edx
    3edb:	31 f1                	xor    %esi,%ecx
    3edd:	89 fe                	mov    %edi,%esi
    3edf:	66 d1 ea             	shr    %dx
    3ee2:	89 d0                	mov    %edx,%eax
    3ee4:	66 35 01 a0          	xor    $0xa001,%ax
    3ee8:	83 e1 01             	and    $0x1,%ecx
    3eeb:	0f 45 d0             	cmovne %eax,%edx
    3eee:	40 c0 ee 03          	shr    $0x3,%sil
    3ef2:	89 d0                	mov    %edx,%eax
    3ef4:	44 31 c2             	xor    %r8d,%edx
    3ef7:	66 d1 e8             	shr    %ax
    3efa:	89 c1                	mov    %eax,%ecx
    3efc:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f01:	83 e2 01             	and    $0x1,%edx
    3f04:	0f 45 c1             	cmovne %ecx,%eax
    3f07:	89 f9                	mov    %edi,%ecx
    3f09:	c0 e9 04             	shr    $0x4,%cl
    3f0c:	89 c2                	mov    %eax,%edx
    3f0e:	31 f0                	xor    %esi,%eax
    3f10:	66 d1 ea             	shr    %dx
    3f13:	89 d6                	mov    %edx,%esi
    3f15:	66 81 f6 01 a0       	xor    $0xa001,%si
    3f1a:	a8 01                	test   $0x1,%al
    3f1c:	0f 45 d6             	cmovne %esi,%edx
    3f1f:	89 fe                	mov    %edi,%esi
    3f21:	40 c0 ee 05          	shr    $0x5,%sil
    3f25:	89 d0                	mov    %edx,%eax
    3f27:	31 ca                	xor    %ecx,%edx
    3f29:	66 d1 e8             	shr    %ax
    3f2c:	89 c1                	mov    %eax,%ecx
    3f2e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f33:	83 e2 01             	and    $0x1,%edx
    3f36:	0f 45 c1             	cmovne %ecx,%eax
    3f39:	89 f9                	mov    %edi,%ecx
    3f3b:	c0 e9 06             	shr    $0x6,%cl
    3f3e:	89 c2                	mov    %eax,%edx
    3f40:	31 f0                	xor    %esi,%eax
    3f42:	66 d1 ea             	shr    %dx
    3f45:	89 d6                	mov    %edx,%esi
    3f47:	66 81 f6 01 a0       	xor    $0xa001,%si
    3f4c:	a8 01                	test   $0x1,%al
    3f4e:	0f 45 d6             	cmovne %esi,%edx
    3f51:	40 c0 ef 07          	shr    $0x7,%dil
    3f55:	89 d0                	mov    %edx,%eax
    3f57:	31 ca                	xor    %ecx,%edx
    3f59:	66 d1 e8             	shr    %ax
    3f5c:	89 c1                	mov    %eax,%ecx
    3f5e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3f63:	83 e2 01             	and    $0x1,%edx
    3f66:	0f 45 c1             	cmovne %ecx,%eax
    3f69:	41 89 c0             	mov    %eax,%r8d
    3f6c:	31 c7                	xor    %eax,%edi
    3f6e:	66 41 d1 e8          	shr    %r8w
    3f72:	44 89 c0             	mov    %r8d,%eax
    3f75:	66 35 01 a0          	xor    $0xa001,%ax
    3f79:	83 e7 01             	and    $0x1,%edi
    3f7c:	44 0f 45 c0          	cmovne %eax,%r8d
    3f80:	44 89 c0             	mov    %r8d,%eax
    3f83:	c3                   	retq   
    3f84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3f8b:	00 00 00 00 
    3f8f:	90                   	nop

0000000000003f90 <crc16>:
    3f90:	f3 0f 1e fa          	endbr64 
    3f94:	89 f2                	mov    %esi,%edx
    3f96:	89 f9                	mov    %edi,%ecx
    3f98:	31 fe                	xor    %edi,%esi
    3f9a:	66 d1 ea             	shr    %dx
    3f9d:	d0 e9                	shr    %cl
    3f9f:	89 d0                	mov    %edx,%eax
    3fa1:	66 35 01 a0          	xor    $0xa001,%ax
    3fa5:	83 e6 01             	and    $0x1,%esi
    3fa8:	89 fe                	mov    %edi,%esi
    3faa:	0f 45 d0             	cmovne %eax,%edx
    3fad:	40 c0 ee 02          	shr    $0x2,%sil
    3fb1:	89 d0                	mov    %edx,%eax
    3fb3:	31 ca                	xor    %ecx,%edx
    3fb5:	66 d1 e8             	shr    %ax
    3fb8:	89 c1                	mov    %eax,%ecx
    3fba:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3fbf:	83 e2 01             	and    $0x1,%edx
    3fc2:	0f 45 c1             	cmovne %ecx,%eax
    3fc5:	89 f9                	mov    %edi,%ecx
    3fc7:	c0 e9 03             	shr    $0x3,%cl
    3fca:	89 c2                	mov    %eax,%edx
    3fcc:	31 f0                	xor    %esi,%eax
    3fce:	66 d1 ea             	shr    %dx
    3fd1:	89 d6                	mov    %edx,%esi
    3fd3:	66 81 f6 01 a0       	xor    $0xa001,%si
    3fd8:	a8 01                	test   $0x1,%al
    3fda:	0f 45 d6             	cmovne %esi,%edx
    3fdd:	89 fe                	mov    %edi,%esi
    3fdf:	40 c0 ee 04          	shr    $0x4,%sil
    3fe3:	89 d0                	mov    %edx,%eax
    3fe5:	31 ca                	xor    %ecx,%edx
    3fe7:	66 d1 e8             	shr    %ax
    3fea:	89 c1                	mov    %eax,%ecx
    3fec:	66 81 f1 01 a0       	xor    $0xa001,%cx
    3ff1:	83 e2 01             	and    $0x1,%edx
    3ff4:	0f 45 c1             	cmovne %ecx,%eax
    3ff7:	89 f9                	mov    %edi,%ecx
    3ff9:	c0 e9 05             	shr    $0x5,%cl
    3ffc:	89 c2                	mov    %eax,%edx
    3ffe:	31 f0                	xor    %esi,%eax
    4000:	66 d1 ea             	shr    %dx
    4003:	89 d6                	mov    %edx,%esi
    4005:	66 81 f6 01 a0       	xor    $0xa001,%si
    400a:	a8 01                	test   $0x1,%al
    400c:	0f 45 d6             	cmovne %esi,%edx
    400f:	89 fe                	mov    %edi,%esi
    4011:	40 c0 ee 06          	shr    $0x6,%sil
    4015:	89 d0                	mov    %edx,%eax
    4017:	31 ca                	xor    %ecx,%edx
    4019:	66 d1 e8             	shr    %ax
    401c:	89 c1                	mov    %eax,%ecx
    401e:	66 81 f1 01 a0       	xor    $0xa001,%cx
    4023:	83 e2 01             	and    $0x1,%edx
    4026:	0f 45 c1             	cmovne %ecx,%eax
    4029:	89 f9                	mov    %edi,%ecx
    402b:	c0 e9 07             	shr    $0x7,%cl
    402e:	89 c2                	mov    %eax,%edx
    4030:	31 f0                	xor    %esi,%eax
    4032:	66 d1 ea             	shr    %dx
    4035:	89 d6                	mov    %edx,%esi
    4037:	66 81 f6 01 a0       	xor    $0xa001,%si
    403c:	a8 01                	test   $0x1,%al
    403e:	0f 45 d6             	cmovne %esi,%edx
    4041:	89 d0                	mov    %edx,%eax
    4043:	31 ca                	xor    %ecx,%edx
    4045:	66 d1 e8             	shr    %ax
    4048:	89 c1                	mov    %eax,%ecx
    404a:	66 81 f1 01 a0       	xor    $0xa001,%cx
    404f:	83 e2 01             	and    $0x1,%edx
    4052:	0f 45 c1             	cmovne %ecx,%eax
    4055:	66 c1 ef 08          	shr    $0x8,%di
    4059:	89 fe                	mov    %edi,%esi
    405b:	41 89 f8             	mov    %edi,%r8d
    405e:	89 c1                	mov    %eax,%ecx
    4060:	31 f8                	xor    %edi,%eax
    4062:	40 d0 ee             	shr    %sil
    4065:	66 d1 e9             	shr    %cx
    4068:	89 ca                	mov    %ecx,%edx
    406a:	66 81 f2 01 a0       	xor    $0xa001,%dx
    406f:	a8 01                	test   $0x1,%al
    4071:	0f 45 ca             	cmovne %edx,%ecx
    4074:	41 c0 e8 02          	shr    $0x2,%r8b
    4078:	89 ca                	mov    %ecx,%edx
    407a:	31 f1                	xor    %esi,%ecx
    407c:	89 fe                	mov    %edi,%esi
    407e:	66 d1 ea             	shr    %dx
    4081:	89 d0                	mov    %edx,%eax
    4083:	66 35 01 a0          	xor    $0xa001,%ax
    4087:	83 e1 01             	and    $0x1,%ecx
    408a:	0f 45 d0             	cmovne %eax,%edx
    408d:	40 c0 ee 03          	shr    $0x3,%sil
    4091:	89 d0                	mov    %edx,%eax
    4093:	44 31 c2             	xor    %r8d,%edx
    4096:	66 d1 e8             	shr    %ax
    4099:	89 c1                	mov    %eax,%ecx
    409b:	66 81 f1 01 a0       	xor    $0xa001,%cx
    40a0:	83 e2 01             	and    $0x1,%edx
    40a3:	0f 45 c1             	cmovne %ecx,%eax
    40a6:	89 f9                	mov    %edi,%ecx
    40a8:	c0 e9 04             	shr    $0x4,%cl
    40ab:	89 c2                	mov    %eax,%edx
    40ad:	31 f0                	xor    %esi,%eax
    40af:	66 d1 ea             	shr    %dx
    40b2:	89 d6                	mov    %edx,%esi
    40b4:	66 81 f6 01 a0       	xor    $0xa001,%si
    40b9:	a8 01                	test   $0x1,%al
    40bb:	0f 45 d6             	cmovne %esi,%edx
    40be:	89 fe                	mov    %edi,%esi
    40c0:	40 c0 ee 05          	shr    $0x5,%sil
    40c4:	89 d0                	mov    %edx,%eax
    40c6:	31 ca                	xor    %ecx,%edx
    40c8:	66 d1 e8             	shr    %ax
    40cb:	89 c1                	mov    %eax,%ecx
    40cd:	66 81 f1 01 a0       	xor    $0xa001,%cx
    40d2:	83 e2 01             	and    $0x1,%edx
    40d5:	0f 45 c1             	cmovne %ecx,%eax
    40d8:	89 f9                	mov    %edi,%ecx
    40da:	c0 e9 06             	shr    $0x6,%cl
    40dd:	89 c2                	mov    %eax,%edx
    40df:	31 f0                	xor    %esi,%eax
    40e1:	66 d1 ea             	shr    %dx
    40e4:	89 d6                	mov    %edx,%esi
    40e6:	66 81 f6 01 a0       	xor    $0xa001,%si
    40eb:	a8 01                	test   $0x1,%al
    40ed:	0f 45 d6             	cmovne %esi,%edx
    40f0:	40 c0 ef 07          	shr    $0x7,%dil
    40f4:	89 d0                	mov    %edx,%eax
    40f6:	31 ca                	xor    %ecx,%edx
    40f8:	66 d1 e8             	shr    %ax
    40fb:	89 c1                	mov    %eax,%ecx
    40fd:	66 81 f1 01 a0       	xor    $0xa001,%cx
    4102:	83 e2 01             	and    $0x1,%edx
    4105:	0f 45 c1             	cmovne %ecx,%eax
    4108:	41 89 c0             	mov    %eax,%r8d
    410b:	31 c7                	xor    %eax,%edi
    410d:	66 41 d1 e8          	shr    %r8w
    4111:	44 89 c0             	mov    %r8d,%eax
    4114:	66 35 01 a0          	xor    $0xa001,%ax
    4118:	83 e7 01             	and    $0x1,%edi
    411b:	44 0f 45 c0          	cmovne %eax,%r8d
    411f:	44 89 c0             	mov    %r8d,%eax
    4122:	c3                   	retq   
    4123:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    412a:	00 00 00 00 
    412e:	66 90                	xchg   %ax,%ax

0000000000004130 <check_data_types>:
    4130:	f3 0f 1e fa          	endbr64 
    4134:	31 c0                	xor    %eax,%eax
    4136:	c3                   	retq   
    4137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    413e:	00 00 

0000000000004140 <portable_malloc>:
    4140:	f3 0f 1e fa          	endbr64 
    4144:	e9 d7 cf ff ff       	jmpq   1120 <malloc@plt>
    4149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004150 <portable_free>:
    4150:	f3 0f 1e fa          	endbr64 
    4154:	e9 67 cf ff ff       	jmpq   10c0 <free@plt>
    4159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004160 <start_time>:
    4160:	f3 0f 1e fa          	endbr64 
    4164:	48 8d 35 f5 3e 00 00 	lea    0x3ef5(%rip),%rsi        # 8060 <start_time_val>
    416b:	31 ff                	xor    %edi,%edi
    416d:	e9 7e cf ff ff       	jmpq   10f0 <clock_gettime@plt>
    4172:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4179:	00 00 00 00 
    417d:	0f 1f 00             	nopl   (%rax)

0000000000004180 <stop_time>:
    4180:	f3 0f 1e fa          	endbr64 
    4184:	48 8d 35 c5 3e 00 00 	lea    0x3ec5(%rip),%rsi        # 8050 <stop_time_val>
    418b:	31 ff                	xor    %edi,%edi
    418d:	e9 5e cf ff ff       	jmpq   10f0 <clock_gettime@plt>
    4192:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4199:	00 00 00 00 
    419d:	0f 1f 00             	nopl   (%rax)

00000000000041a0 <get_time>:
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	48 8b 35 ad 3e 00 00 	mov    0x3ead(%rip),%rsi        # 8058 <stop_time_val+0x8>
    41ab:	48 2b 35 b6 3e 00 00 	sub    0x3eb6(%rip),%rsi        # 8068 <start_time_val+0x8>
    41b2:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    41b9:	de 1b 43 
    41bc:	48 89 f0             	mov    %rsi,%rax
    41bf:	48 8b 0d 8a 3e 00 00 	mov    0x3e8a(%rip),%rcx        # 8050 <stop_time_val>
    41c6:	48 c1 fe 3f          	sar    $0x3f,%rsi
    41ca:	48 2b 0d 8f 3e 00 00 	sub    0x3e8f(%rip),%rcx        # 8060 <start_time_val>
    41d1:	48 f7 ea             	imul   %rdx
    41d4:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
    41db:	48 c1 fa 12          	sar    $0x12,%rdx
    41df:	48 29 f2             	sub    %rsi,%rdx
    41e2:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    41e6:	c3                   	retq   
    41e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    41ee:	00 00 

00000000000041f0 <time_in_secs>:
    41f0:	f3 0f 1e fa          	endbr64 
    41f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    41f8:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
    41fd:	f2 0f 5e 05 13 13 00 	divsd  0x1313(%rip),%xmm0        # 5518 <_IO_stdin_used+0x518>
    4204:	00 
    4205:	c3                   	retq   
    4206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    420d:	00 00 00 

0000000000004210 <portable_init>:
    4210:	f3 0f 1e fa          	endbr64 
    4214:	c6 07 01             	movb   $0x1,(%rdi)
    4217:	c3                   	retq   
    4218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    421f:	00 

0000000000004220 <portable_fini>:
    4220:	f3 0f 1e fa          	endbr64 
    4224:	c6 07 00             	movb   $0x0,(%rdi)
    4227:	c3                   	retq   
    4228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    422f:	00 

0000000000004230 <__libc_csu_init>:
    4230:	f3 0f 1e fa          	endbr64 
    4234:	41 57                	push   %r15
    4236:	4c 8d 3d b3 3a 00 00 	lea    0x3ab3(%rip),%r15        # 7cf0 <__frame_dummy_init_array_entry>
    423d:	41 56                	push   %r14
    423f:	49 89 d6             	mov    %rdx,%r14
    4242:	41 55                	push   %r13
    4244:	49 89 f5             	mov    %rsi,%r13
    4247:	41 54                	push   %r12
    4249:	41 89 fc             	mov    %edi,%r12d
    424c:	55                   	push   %rbp
    424d:	48 8d 2d a4 3a 00 00 	lea    0x3aa4(%rip),%rbp        # 7cf8 <__do_global_dtors_aux_fini_array_entry>
    4254:	53                   	push   %rbx
    4255:	4c 29 fd             	sub    %r15,%rbp
    4258:	48 83 ec 08          	sub    $0x8,%rsp
    425c:	e8 9f cd ff ff       	callq  1000 <_init>
    4261:	48 c1 fd 03          	sar    $0x3,%rbp
    4265:	74 1f                	je     4286 <__libc_csu_init+0x56>
    4267:	31 db                	xor    %ebx,%ebx
    4269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4270:	4c 89 f2             	mov    %r14,%rdx
    4273:	4c 89 ee             	mov    %r13,%rsi
    4276:	44 89 e7             	mov    %r12d,%edi
    4279:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    427d:	48 83 c3 01          	add    $0x1,%rbx
    4281:	48 39 dd             	cmp    %rbx,%rbp
    4284:	75 ea                	jne    4270 <__libc_csu_init+0x40>
    4286:	48 83 c4 08          	add    $0x8,%rsp
    428a:	5b                   	pop    %rbx
    428b:	5d                   	pop    %rbp
    428c:	41 5c                	pop    %r12
    428e:	41 5d                	pop    %r13
    4290:	41 5e                	pop    %r14
    4292:	41 5f                	pop    %r15
    4294:	c3                   	retq   
    4295:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    429c:	00 00 00 00 

00000000000042a0 <__libc_csu_fini>:
    42a0:	f3 0f 1e fa          	endbr64 
    42a4:	c3                   	retq   

Disassembly of section .fini:

00000000000042a8 <_fini>:
    42a8:	f3 0f 1e fa          	endbr64 
    42ac:	48 83 ec 08          	sub    $0x8,%rsp
    42b0:	48 83 c4 08          	add    $0x8,%rsp
    42b4:	c3                   	retq   

Disassembly of section .rodata:

0000000000005000 <_IO_stdin_used>:
    5000:	01 00                	add    %eax,(%rax)
    5002:	02 00                	add    (%rax),%al
    5004:	00 00                	add    %al,(%rax)
    5006:	00 00                	add    %al,(%rax)
    5008:	36 6b 20 70          	imul   $0x70,%ss:(%rax),%esp
    500c:	65 72 66             	gs jb  5075 <_IO_stdin_used+0x75>
    500f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5010:	72 6d                	jb     507f <_IO_stdin_used+0x7f>
    5012:	61                   	(bad)  
    5013:	6e                   	outsb  %ds:(%rsi),(%dx)
    5014:	63 65 20             	movslq 0x20(%rbp),%esp
    5017:	72 75                	jb     508e <_IO_stdin_used+0x8e>
    5019:	6e                   	outsb  %ds:(%rsi),(%dx)
    501a:	20 70 61             	and    %dh,0x61(%rax)
    501d:	72 61                	jb     5080 <_IO_stdin_used+0x80>
    501f:	6d                   	insl   (%dx),%es:(%rdi)
    5020:	65 74 65             	gs je  5088 <_IO_stdin_used+0x88>
    5023:	72 73                	jb     5098 <_IO_stdin_used+0x98>
    5025:	20 66 6f             	and    %ah,0x6f(%rsi)
    5028:	72 20                	jb     504a <_IO_stdin_used+0x4a>
    502a:	63 6f 72             	movslq 0x72(%rdi),%ebp
    502d:	65 6d                	gs insl (%dx),%es:(%rdi)
    502f:	61                   	(bad)  
    5030:	72 6b                	jb     509d <_IO_stdin_used+0x9d>
    5032:	2e 00 00             	add    %al,%cs:(%rax)
    5035:	00 00                	add    %al,(%rax)
    5037:	00 36                	add    %dh,(%rsi)
    5039:	6b 20 76             	imul   $0x76,(%rax),%esp
    503c:	61                   	(bad)  
    503d:	6c                   	insb   (%dx),%es:(%rdi)
    503e:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    5045:	20 
    5046:	72 75                	jb     50bd <_IO_stdin_used+0xbd>
    5048:	6e                   	outsb  %ds:(%rsi),(%dx)
    5049:	20 70 61             	and    %dh,0x61(%rax)
    504c:	72 61                	jb     50af <_IO_stdin_used+0xaf>
    504e:	6d                   	insl   (%dx),%es:(%rdi)
    504f:	65 74 65             	gs je  50b7 <_IO_stdin_used+0xb7>
    5052:	72 73                	jb     50c7 <_IO_stdin_used+0xc7>
    5054:	20 66 6f             	and    %ah,0x6f(%rsi)
    5057:	72 20                	jb     5079 <_IO_stdin_used+0x79>
    5059:	63 6f 72             	movslq 0x72(%rdi),%ebp
    505c:	65 6d                	gs insl (%dx),%es:(%rdi)
    505e:	61                   	(bad)  
    505f:	72 6b                	jb     50cc <_IO_stdin_used+0xcc>
    5061:	2e 00 00             	add    %al,%cs:(%rax)
    5064:	00 00                	add    %al,(%rax)
    5066:	00 00                	add    %al,(%rax)
    5068:	50                   	push   %rax
    5069:	72 6f                	jb     50da <_IO_stdin_used+0xda>
    506b:	66 69 6c 65 20 67 65 	imul   $0x6567,0x20(%rbp,%riz,2),%bp
    5072:	6e                   	outsb  %ds:(%rsi),(%dx)
    5073:	65 72 61             	gs jb  50d7 <_IO_stdin_used+0xd7>
    5076:	74 69                	je     50e1 <_IO_stdin_used+0xe1>
    5078:	6f                   	outsl  %ds:(%rsi),(%dx)
    5079:	6e                   	outsb  %ds:(%rsi),(%dx)
    507a:	20 72 75             	and    %dh,0x75(%rdx)
    507d:	6e                   	outsb  %ds:(%rsi),(%dx)
    507e:	20 70 61             	and    %dh,0x61(%rax)
    5081:	72 61                	jb     50e4 <_IO_stdin_used+0xe4>
    5083:	6d                   	insl   (%dx),%es:(%rdi)
    5084:	65 74 65             	gs je  50ec <_IO_stdin_used+0xec>
    5087:	72 73                	jb     50fc <_IO_stdin_used+0xfc>
    5089:	20 66 6f             	and    %ah,0x6f(%rsi)
    508c:	72 20                	jb     50ae <_IO_stdin_used+0xae>
    508e:	63 6f 72             	movslq 0x72(%rdi),%ebp
    5091:	65 6d                	gs insl (%dx),%es:(%rdi)
    5093:	61                   	(bad)  
    5094:	72 6b                	jb     5101 <_IO_stdin_used+0x101>
    5096:	2e 00 32             	add    %dh,%cs:(%rdx)
    5099:	4b 20 70 65          	rex.WXB and %sil,0x65(%r8)
    509d:	72 66                	jb     5105 <_IO_stdin_used+0x105>
    509f:	6f                   	outsl  %ds:(%rsi),(%dx)
    50a0:	72 6d                	jb     510f <_IO_stdin_used+0x10f>
    50a2:	61                   	(bad)  
    50a3:	6e                   	outsb  %ds:(%rsi),(%dx)
    50a4:	63 65 20             	movslq 0x20(%rbp),%esp
    50a7:	72 75                	jb     511e <_IO_stdin_used+0x11e>
    50a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    50aa:	20 70 61             	and    %dh,0x61(%rax)
    50ad:	72 61                	jb     5110 <_IO_stdin_used+0x110>
    50af:	6d                   	insl   (%dx),%es:(%rdi)
    50b0:	65 74 65             	gs je  5118 <_IO_stdin_used+0x118>
    50b3:	72 73                	jb     5128 <_IO_stdin_used+0x128>
    50b5:	20 66 6f             	and    %ah,0x6f(%rsi)
    50b8:	72 20                	jb     50da <_IO_stdin_used+0xda>
    50ba:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50bd:	65 6d                	gs insl (%dx),%es:(%rdi)
    50bf:	61                   	(bad)  
    50c0:	72 6b                	jb     512d <_IO_stdin_used+0x12d>
    50c2:	2e 00 00             	add    %al,%cs:(%rax)
    50c5:	00 00                	add    %al,(%rax)
    50c7:	00 32                	add    %dh,(%rdx)
    50c9:	4b 20 76 61          	rex.WXB and %sil,0x61(%r14)
    50cd:	6c                   	insb   (%dx),%es:(%rdi)
    50ce:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    50d5:	20 
    50d6:	72 75                	jb     514d <_IO_stdin_used+0x14d>
    50d8:	6e                   	outsb  %ds:(%rsi),(%dx)
    50d9:	20 70 61             	and    %dh,0x61(%rax)
    50dc:	72 61                	jb     513f <_IO_stdin_used+0x13f>
    50de:	6d                   	insl   (%dx),%es:(%rdi)
    50df:	65 74 65             	gs je  5147 <_IO_stdin_used+0x147>
    50e2:	72 73                	jb     5157 <_IO_stdin_used+0x157>
    50e4:	20 66 6f             	and    %ah,0x6f(%rsi)
    50e7:	72 20                	jb     5109 <_IO_stdin_used+0x109>
    50e9:	63 6f 72             	movslq 0x72(%rdi),%ebp
    50ec:	65 6d                	gs insl (%dx),%es:(%rdi)
    50ee:	61                   	(bad)  
    50ef:	72 6b                	jb     515c <_IO_stdin_used+0x15c>
    50f1:	2e 00 00             	add    %al,%cs:(%rax)
    50f4:	00 00                	add    %al,(%rax)
    50f6:	00 00                	add    %al,(%rax)
    50f8:	5b                   	pop    %rbx
    50f9:	25 75 5d 45 52       	and    $0x52455d75,%eax
    50fe:	52                   	push   %rdx
    50ff:	4f 52                	rex.WRXB push %r10
    5101:	21 20                	and    %esp,(%rax)
    5103:	6c                   	insb   (%dx),%es:(%rdi)
    5104:	69 73 74 20 63 72 63 	imul   $0x63726320,0x74(%rbx),%esi
    510b:	20 30                	and    %dh,(%rax)
    510d:	78 25                	js     5134 <_IO_stdin_used+0x134>
    510f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5112:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c438 <_end+0x6f6843c8>
    5118:	75 6c                	jne    5186 <_IO_stdin_used+0x186>
    511a:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    511e:	20 30                	and    %dh,(%rax)
    5120:	78 25                	js     5147 <_IO_stdin_used+0x147>
    5122:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5125:	0a 00                	or     (%rax),%al
    5127:	00 5b 25             	add    %bl,0x25(%rbx)
    512a:	75 5d                	jne    5189 <_IO_stdin_used+0x189>
    512c:	45 52                	rex.RB push %r10
    512e:	52                   	push   %rdx
    512f:	4f 52                	rex.WRXB push %r10
    5131:	21 20                	and    %esp,(%rax)
    5133:	6d                   	insl   (%dx),%es:(%rdi)
    5134:	61                   	(bad)  
    5135:	74 72                	je     51a9 <_IO_stdin_used+0x1a9>
    5137:	69 78 20 63 72 63 20 	imul   $0x20637263,0x20(%rax),%edi
    513e:	30 78 25             	xor    %bh,0x25(%rax)
    5141:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5144:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c46a <_end+0x6f6843fa>
    514a:	75 6c                	jne    51b8 <_IO_stdin_used+0x1b8>
    514c:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5150:	20 30                	and    %dh,(%rax)
    5152:	78 25                	js     5179 <_IO_stdin_used+0x179>
    5154:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5157:	0a 00                	or     (%rax),%al
    5159:	00 00                	add    %al,(%rax)
    515b:	00 00                	add    %al,(%rax)
    515d:	00 00                	add    %al,(%rax)
    515f:	00 5b 25             	add    %bl,0x25(%rbx)
    5162:	75 5d                	jne    51c1 <_IO_stdin_used+0x1c1>
    5164:	45 52                	rex.RB push %r10
    5166:	52                   	push   %rdx
    5167:	4f 52                	rex.WRXB push %r10
    5169:	21 20                	and    %esp,(%rax)
    516b:	73 74                	jae    51e1 <_IO_stdin_used+0x1e1>
    516d:	61                   	(bad)  
    516e:	74 65                	je     51d5 <_IO_stdin_used+0x1d5>
    5170:	20 63 72             	and    %ah,0x72(%rbx)
    5173:	63 20                	movslq (%rax),%esp
    5175:	30 78 25             	xor    %bh,0x25(%rax)
    5178:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    517b:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68c4a1 <_end+0x6f684431>
    5181:	75 6c                	jne    51ef <_IO_stdin_used+0x1ef>
    5183:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    5187:	20 30                	and    %dh,(%rax)
    5189:	78 25                	js     51b0 <_IO_stdin_used+0x1b0>
    518b:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    518e:	0a 00                	or     (%rax),%al
    5190:	45 52                	rex.RB push %r10
    5192:	52                   	push   %rdx
    5193:	4f 52                	rex.WRXB push %r10
    5195:	21 20                	and    %esp,(%rax)
    5197:	4d 75 73             	rex.WRB jne 520d <_IO_stdin_used+0x20d>
    519a:	74 20                	je     51bc <_IO_stdin_used+0x1bc>
    519c:	65 78 65             	gs js  5204 <_IO_stdin_used+0x204>
    519f:	63 75 74             	movslq 0x74(%rbp),%esi
    51a2:	65 20 66 6f          	and    %ah,%gs:0x6f(%rsi)
    51a6:	72 20                	jb     51c8 <_IO_stdin_used+0x1c8>
    51a8:	61                   	(bad)  
    51a9:	74 20                	je     51cb <_IO_stdin_used+0x1cb>
    51ab:	6c                   	insb   (%dx),%es:(%rdi)
    51ac:	65 61                	gs (bad) 
    51ae:	73 74                	jae    5224 <_IO_stdin_used+0x224>
    51b0:	20 31                	and    %dh,(%rcx)
    51b2:	30 20                	xor    %ah,(%rax)
    51b4:	73 65                	jae    521b <_IO_stdin_used+0x21b>
    51b6:	63 73 20             	movslq 0x20(%rbx),%esi
    51b9:	66 6f                	outsw  %ds:(%rsi),(%dx)
    51bb:	72 20                	jb     51dd <_IO_stdin_used+0x1dd>
    51bd:	61                   	(bad)  
    51be:	20 76 61             	and    %dh,0x61(%rsi)
    51c1:	6c                   	insb   (%dx),%es:(%rdi)
    51c2:	69 64 20 72 65 73 75 	imul   $0x6c757365,0x72(%rax,%riz,1),%esp
    51c9:	6c 
    51ca:	74 21                	je     51ed <_IO_stdin_used+0x1ed>
    51cc:	00 00                	add    %al,(%rax)
    51ce:	00 00                	add    %al,(%rax)
    51d0:	50                   	push   %rax
    51d1:	6c                   	insb   (%dx),%es:(%rdi)
    51d2:	65 61                	gs (bad) 
    51d4:	73 65                	jae    523b <_IO_stdin_used+0x23b>
    51d6:	20 70 75             	and    %dh,0x75(%rax)
    51d9:	74 20                	je     51fb <_IO_stdin_used+0x1fb>
    51db:	64 61                	fs (bad) 
    51dd:	74 61                	je     5240 <_IO_stdin_used+0x240>
    51df:	20 6d 65             	and    %ch,0x65(%rbp)
    51e2:	6d                   	insl   (%dx),%es:(%rdi)
    51e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    51e4:	72 79                	jb     525f <_IO_stdin_used+0x25f>
    51e6:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    51ea:	61                   	(bad)  
    51eb:	74 69                	je     5256 <_IO_stdin_used+0x256>
    51ed:	6f                   	outsl  %ds:(%rsi),(%dx)
    51ee:	6e                   	outsb  %ds:(%rsi),(%dx)
    51ef:	20 68 65             	and    %ch,0x65(%rax)
    51f2:	72 65                	jb     5259 <_IO_stdin_used+0x259>
    51f4:	0a 09                	or     (%rcx),%cl
    51f6:	09 09                	or     %ecx,(%rcx)
    51f8:	28 65 2e             	sub    %ah,0x2e(%rbp)
    51fb:	67 2e 20 63 6f       	and    %ah,%cs:0x6f(%ebx)
    5200:	64 65 20 69 6e       	fs and %ch,%gs:0x6e(%rcx)
    5205:	20 66 6c             	and    %ah,0x6c(%rsi)
    5208:	61                   	(bad)  
    5209:	73 68                	jae    5273 <_IO_stdin_used+0x273>
    520b:	2c 20                	sub    $0x20,%al
    520d:	64 61                	fs (bad) 
    520f:	74 61                	je     5272 <_IO_stdin_used+0x272>
    5211:	20 6f 6e             	and    %ch,0x6e(%rdi)
    5214:	20 68 65             	and    %ch,0x65(%rax)
    5217:	61                   	(bad)  
    5218:	70 20                	jo     523a <_IO_stdin_used+0x23a>
    521a:	65 74 63             	gs je  5280 <_IO_stdin_used+0x280>
    521d:	29 00                	sub    %eax,(%rax)
    521f:	00 43 6f             	add    %al,0x6f(%rbx)
    5222:	72 72                	jb     5296 <_IO_stdin_used+0x296>
    5224:	65 63 74 20 6f       	movslq %gs:0x6f(%rax,%riz,1),%esi
    5229:	70 65                	jo     5290 <_IO_stdin_used+0x290>
    522b:	72 61                	jb     528e <_IO_stdin_used+0x28e>
    522d:	74 69                	je     5298 <_IO_stdin_used+0x298>
    522f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5230:	6e                   	outsb  %ds:(%rsi),(%dx)
    5231:	20 76 61             	and    %dh,0x61(%rsi)
    5234:	6c                   	insb   (%dx),%es:(%rdi)
    5235:	69 64 61 74 65 64 2e 	imul   $0x202e6465,0x74(%rcx,%riz,2),%esp
    523c:	20 
    523d:	53                   	push   %rbx
    523e:	65 65 20 52 45       	gs and %dl,%gs:0x45(%rdx)
    5243:	41                   	rex.B
    5244:	44                   	rex.R
    5245:	4d                   	rex.WRB
    5246:	45                   	rex.RB
    5247:	2e 6d                	cs insl (%dx),%es:(%rdi)
    5249:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    524d:	72 20                	jb     526f <_IO_stdin_used+0x26f>
    524f:	72 75                	jb     52c6 <_IO_stdin_used+0x2c6>
    5251:	6e                   	outsb  %ds:(%rsi),(%dx)
    5252:	20 61 6e             	and    %ah,0x6e(%rcx)
    5255:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
    5259:	70 6f                	jo     52ca <_IO_stdin_used+0x2ca>
    525b:	72 74                	jb     52d1 <_IO_stdin_used+0x2d1>
    525d:	69 6e 67 20 72 75 6c 	imul   $0x6c757220,0x67(%rsi),%ebp
    5264:	65 73 2e             	gs jae 5295 <_IO_stdin_used+0x295>
    5267:	00 43 61             	add    %al,0x61(%rbx)
    526a:	6e                   	outsb  %ds:(%rsi),(%dx)
    526b:	6e                   	outsb  %ds:(%rsi),(%dx)
    526c:	6f                   	outsl  %ds:(%rsi),(%dx)
    526d:	74 20                	je     528f <_IO_stdin_used+0x28f>
    526f:	76 61                	jbe    52d2 <_IO_stdin_used+0x2d2>
    5271:	6c                   	insb   (%dx),%es:(%rdi)
    5272:	69 64 61 74 65 20 6f 	imul   $0x706f2065,0x74(%rcx,%riz,2),%esp
    5279:	70 
    527a:	65 72 61             	gs jb  52de <_IO_stdin_used+0x2de>
    527d:	74 69                	je     52e8 <_IO_stdin_used+0x2e8>
    527f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5280:	6e                   	outsb  %ds:(%rsi),(%dx)
    5281:	20 66 6f             	and    %ah,0x6f(%rsi)
    5284:	72 20                	jb     52a6 <_IO_stdin_used+0x2a6>
    5286:	74 68                	je     52f0 <_IO_stdin_used+0x2f0>
    5288:	65 73 65             	gs jae 52f0 <_IO_stdin_used+0x2f0>
    528b:	20 73 65             	and    %dh,0x65(%rbx)
    528e:	65 64 20 76 61       	gs and %dh,%fs:0x61(%rsi)
    5293:	6c                   	insb   (%dx),%es:(%rdi)
    5294:	75 65                	jne    52fb <_IO_stdin_used+0x2fb>
    5296:	73 2c                	jae    52c4 <_IO_stdin_used+0x2c4>
    5298:	20 70 6c             	and    %dh,0x6c(%rax)
    529b:	65 61                	gs (bad) 
    529d:	73 65                	jae    5304 <_IO_stdin_used+0x304>
    529f:	20 63 6f             	and    %ah,0x6f(%rbx)
    52a2:	6d                   	insl   (%dx),%es:(%rdi)
    52a3:	70 61                	jo     5306 <_IO_stdin_used+0x306>
    52a5:	72 65                	jb     530c <_IO_stdin_used+0x30c>
    52a7:	20 77 69             	and    %dh,0x69(%rdi)
    52aa:	74 68                	je     5314 <_IO_stdin_used+0x314>
    52ac:	20 72 65             	and    %dh,0x65(%rdx)
    52af:	73 75                	jae    5326 <_IO_stdin_used+0x326>
    52b1:	6c                   	insb   (%dx),%es:(%rdi)
    52b2:	74 73                	je     5327 <_IO_stdin_used+0x327>
    52b4:	20 6f 6e             	and    %ch,0x6e(%rdi)
    52b7:	20 61 20             	and    %ah,0x20(%rcx)
    52ba:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    52be:	6e                   	outsb  %ds:(%rsi),(%dx)
    52bf:	20 70 6c             	and    %dh,0x6c(%rax)
    52c2:	61                   	(bad)  
    52c3:	74 66                	je     532b <_IO_stdin_used+0x32b>
    52c5:	6f                   	outsl  %ds:(%rsi),(%dx)
    52c6:	72 6d                	jb     5335 <_IO_stdin_used+0x335>
    52c8:	2e 00 43 6f          	add    %al,%cs:0x6f(%rbx)
    52cc:	72 65                	jb     5333 <_IO_stdin_used+0x333>
    52ce:	4d 61                	rex.WRB (bad) 
    52d0:	72 6b                	jb     533d <_IO_stdin_used+0x33d>
    52d2:	20 53 69             	and    %dl,0x69(%rbx)
    52d5:	7a 65                	jp     533c <_IO_stdin_used+0x33c>
    52d7:	20 20                	and    %ah,(%rax)
    52d9:	20 20                	and    %ah,(%rax)
    52db:	3a 20                	cmp    (%rax),%ah
    52dd:	25 6c 75 0a 00       	and    $0xa756c,%eax
    52e2:	54                   	push   %rsp
    52e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    52e4:	74 61                	je     5347 <_IO_stdin_used+0x347>
    52e6:	6c                   	insb   (%dx),%es:(%rdi)
    52e7:	20 74 69 63          	and    %dh,0x63(%rcx,%rbp,2)
    52eb:	6b 73 20 20          	imul   $0x20,0x20(%rbx),%esi
    52ef:	20 20                	and    %ah,(%rax)
    52f1:	20 20                	and    %ah,(%rax)
    52f3:	3a 20                	cmp    (%rax),%ah
    52f5:	25 6c 75 0a 00       	and    $0xa756c,%eax
    52fa:	54                   	push   %rsp
    52fb:	6f                   	outsl  %ds:(%rsi),(%dx)
    52fc:	74 61                	je     535f <_IO_stdin_used+0x35f>
    52fe:	6c                   	insb   (%dx),%es:(%rdi)
    52ff:	20 74 69 6d          	and    %dh,0x6d(%rcx,%rbp,2)
    5303:	65 20 28             	and    %ch,%gs:(%rax)
    5306:	73 65                	jae    536d <_IO_stdin_used+0x36d>
    5308:	63 73 29             	movslq 0x29(%rbx),%esi
    530b:	3a 20                	cmp    (%rax),%ah
    530d:	25 66 0a 00 49       	and    $0x49000a66,%eax
    5312:	74 65                	je     5379 <_IO_stdin_used+0x379>
    5314:	72 61                	jb     5377 <_IO_stdin_used+0x377>
    5316:	74 69                	je     5381 <_IO_stdin_used+0x381>
    5318:	6f                   	outsl  %ds:(%rsi),(%dx)
    5319:	6e                   	outsb  %ds:(%rsi),(%dx)
    531a:	73 2f                	jae    534b <_IO_stdin_used+0x34b>
    531c:	53                   	push   %rbx
    531d:	65 63 20             	movslq %gs:(%rax),%esp
    5320:	20 20                	and    %ah,(%rax)
    5322:	3a 20                	cmp    (%rax),%ah
    5324:	25 66 0a 00 49       	and    $0x49000a66,%eax
    5329:	74 65                	je     5390 <_IO_stdin_used+0x390>
    532b:	72 61                	jb     538e <_IO_stdin_used+0x38e>
    532d:	74 69                	je     5398 <_IO_stdin_used+0x398>
    532f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5330:	6e                   	outsb  %ds:(%rsi),(%dx)
    5331:	73 20                	jae    5353 <_IO_stdin_used+0x353>
    5333:	20 20                	and    %ah,(%rax)
    5335:	20 20                	and    %ah,(%rax)
    5337:	20 20                	and    %ah,(%rax)
    5339:	3a 20                	cmp    (%rax),%ah
    533b:	25 6c 75 0a 00       	and    $0xa756c,%eax
    5340:	47                   	rex.RXB
    5341:	43                   	rex.XB
    5342:	43 39 2e             	rex.XB cmp %ebp,(%r14)
    5345:	34 2e                	xor    $0x2e,%al
    5347:	30 00                	xor    %al,(%rax)
    5349:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    534b:	6d                   	insl   (%dx),%es:(%rdi)
    534c:	70 69                	jo     53b7 <_IO_stdin_used+0x3b7>
    534e:	6c                   	insb   (%dx),%es:(%rdi)
    534f:	65 72 20             	gs jb  5372 <_IO_stdin_used+0x372>
    5352:	76 65                	jbe    53b9 <_IO_stdin_used+0x3b9>
    5354:	72 73                	jb     53c9 <_IO_stdin_used+0x3c9>
    5356:	69 6f 6e 20 3a 20 25 	imul   $0x25203a20,0x6e(%rdi),%ebp
    535d:	73 0a                	jae    5369 <_IO_stdin_used+0x369>
    535f:	00 2d 4f 33 20 20    	add    %ch,0x2020334f(%rip)        # 202086b4 <_end+0x20200644>
    5365:	20 2d 6c 72 74 00    	and    %ch,0x74726c(%rip)        # 74c5d7 <_end+0x744567>
    536b:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    536d:	6d                   	insl   (%dx),%es:(%rdi)
    536e:	70 69                	jo     53d9 <_IO_stdin_used+0x3d9>
    5370:	6c                   	insb   (%dx),%es:(%rdi)
    5371:	65 72 20             	gs jb  5394 <_IO_stdin_used+0x394>
    5374:	66 6c                	data16 insb (%dx),%es:(%rdi)
    5376:	61                   	(bad)  
    5377:	67 73 20             	addr32 jae 539a <_IO_stdin_used+0x39a>
    537a:	20 20                	and    %ah,(%rax)
    537c:	3a 20                	cmp    (%rax),%ah
    537e:	25 73 0a 00 4d       	and    $0x4d000a73,%eax
    5383:	65 6d                	gs insl (%dx),%es:(%rdi)
    5385:	6f                   	outsl  %ds:(%rsi),(%dx)
    5386:	72 79                	jb     5401 <_IO_stdin_used+0x401>
    5388:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    538c:	61                   	(bad)  
    538d:	74 69                	je     53f8 <_IO_stdin_used+0x3f8>
    538f:	6f                   	outsl  %ds:(%rsi),(%dx)
    5390:	6e                   	outsb  %ds:(%rsi),(%dx)
    5391:	20 20                	and    %ah,(%rax)
    5393:	3a 20                	cmp    (%rax),%ah
    5395:	25 73 0a 00 73       	and    $0x73000a73,%eax
    539a:	65 65 64 63 72 63    	gs gs movslq %fs:0x63(%rdx),%esi
    53a0:	20 20                	and    %ah,(%rax)
    53a2:	20 20                	and    %ah,(%rax)
    53a4:	20 20                	and    %ah,(%rax)
    53a6:	20 20                	and    %ah,(%rax)
    53a8:	20 20                	and    %ah,(%rax)
    53aa:	3a 20                	cmp    (%rax),%ah
    53ac:	30 78 25             	xor    %bh,0x25(%rax)
    53af:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53b2:	0a 00                	or     (%rax),%al
    53b4:	5b                   	pop    %rbx
    53b5:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53ba:	63 6c 69 73          	movslq 0x73(%rcx,%rbp,2),%ebp
    53be:	74 20                	je     53e0 <_IO_stdin_used+0x3e0>
    53c0:	20 20                	and    %ah,(%rax)
    53c2:	20 20                	and    %ah,(%rax)
    53c4:	20 20                	and    %ah,(%rax)
    53c6:	3a 20                	cmp    (%rax),%ah
    53c8:	30 78 25             	xor    %bh,0x25(%rax)
    53cb:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53ce:	0a 00                	or     (%rax),%al
    53d0:	5b                   	pop    %rbx
    53d1:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53d6:	63 6d 61             	movslq 0x61(%rbp),%ebp
    53d9:	74 72                	je     544d <_IO_stdin_used+0x44d>
    53db:	69 78 20 20 20 20 20 	imul   $0x20202020,0x20(%rax),%edi
    53e2:	3a 20                	cmp    (%rax),%ah
    53e4:	30 78 25             	xor    %bh,0x25(%rax)
    53e7:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    53ea:	0a 00                	or     (%rax),%al
    53ec:	5b                   	pop    %rbx
    53ed:	25 64 5d 63 72       	and    $0x72635d64,%eax
    53f2:	63 73 74             	movslq 0x74(%rbx),%esi
    53f5:	61                   	(bad)  
    53f6:	74 65                	je     545d <_IO_stdin_used+0x45d>
    53f8:	20 20                	and    %ah,(%rax)
    53fa:	20 20                	and    %ah,(%rax)
    53fc:	20 20                	and    %ah,(%rax)
    53fe:	3a 20                	cmp    (%rax),%ah
    5400:	30 78 25             	xor    %bh,0x25(%rax)
    5403:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5406:	0a 00                	or     (%rax),%al
    5408:	5b                   	pop    %rbx
    5409:	25 64 5d 63 72       	and    $0x72635d64,%eax
    540e:	63 66 69             	movslq 0x69(%rsi),%esp
    5411:	6e                   	outsb  %ds:(%rsi),(%dx)
    5412:	61                   	(bad)  
    5413:	6c                   	insb   (%dx),%es:(%rdi)
    5414:	20 20                	and    %ah,(%rax)
    5416:	20 20                	and    %ah,(%rax)
    5418:	20 20                	and    %ah,(%rax)
    541a:	3a 20                	cmp    (%rax),%ah
    541c:	30 78 25             	xor    %bh,0x25(%rax)
    541f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    5422:	0a 00                	or     (%rax),%al
    5424:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    5426:	72 65                	jb     548d <_IO_stdin_used+0x48d>
    5428:	4d 61                	rex.WRB (bad) 
    542a:	72 6b                	jb     5497 <_IO_stdin_used+0x497>
    542c:	20 31                	and    %dh,(%rcx)
    542e:	2e 30 20             	xor    %ah,%cs:(%rax)
    5431:	3a 20                	cmp    (%rax),%ah
    5433:	25 66 20 2f 20       	and    $0x202f2066,%eax
    5438:	25 73 20 25 73       	and    $0x73252073,%eax
    543d:	00 20                	add    %ah,(%rax)
    543f:	2f                   	(bad)  
    5440:	20 25 73 00 45 72    	and    %ah,0x72450073(%rip)        # 724554b9 <_end+0x7244d449>
    5446:	72 6f                	jb     54b7 <_IO_stdin_used+0x4b7>
    5448:	72 73                	jb     54bd <_IO_stdin_used+0x4bd>
    544a:	20 64 65 74          	and    %ah,0x74(%rbp,%riz,2)
    544e:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    5453:	00 53 74             	add    %dl,0x74(%rbx)
    5456:	61                   	(bad)  
    5457:	74 69                	je     54c2 <_IO_stdin_used+0x4c2>
    5459:	63 00                	movslq (%rax),%eax
    545b:	48                   	rex.W
    545c:	65 61                	gs (bad) 
    545e:	70 00                	jo     5460 <_IO_stdin_used+0x460>
    5460:	53                   	push   %rbx
    5461:	74 61                	je     54c4 <_IO_stdin_used+0x4c4>
    5463:	63 6b 00             	movslq 0x0(%rbx),%ebp
	...
    546e:	f0 3f                	lock (bad) 
	...
    547c:	00 00                	add    %al,(%rax)
    547e:	24 40                	and    $0x40,%al
    5480:	54                   	push   %rsp
    5481:	30 2e                	xor    %ch,(%rsi)
    5483:	33 65 2d             	xor    0x2d(%rbp),%esp
    5486:	31 46 00             	xor    %eax,0x0(%rsi)
    5489:	2d 54 2e 54 2b       	sub    $0x2b542e54,%eax
    548e:	2b 54 71 00          	sub    0x0(%rcx,%rsi,2),%edx
    5492:	31 54 33 2e          	xor    %edx,0x2e(%rbx,%rsi,1)
    5496:	34 65                	xor    $0x65,%al
    5498:	34 7a                	xor    $0x7a,%al
    549a:	00 33                	add    %dh,(%rbx)
    549c:	34 2e                	xor    $0x2e,%al
    549e:	30 65 2d             	xor    %ah,0x2d(%rbp)
    54a1:	54                   	push   %rsp
    54a2:	5e                   	pop    %rsi
    54a3:	00 35 2e 35 30 30    	add    %dh,0x3030352e(%rip)        # 303089d7 <_end+0x30300967>
    54a9:	65 2b 33             	sub    %gs:(%rbx),%esi
    54ac:	00 2d 2e 31 32 33    	add    %ch,0x3332312e(%rip)        # 333285e0 <_end+0x33320570>
    54b2:	65 2d 32 00 2d 38    	gs sub $0x382d0032,%eax
    54b8:	37                   	(bad)  
    54b9:	65 2b 38             	sub    %gs:(%rax),%edi
    54bc:	33 32                	xor    (%rdx),%esi
    54be:	00 2b                	add    %ch,(%rbx)
    54c0:	30 2e                	xor    %ch,(%rsi)
    54c2:	36 65 2d 31 32 00 33 	ss gs sub $0x33003231,%eax
    54c9:	35 2e 35 34 34       	xor    $0x3434352e,%eax
    54ce:	30 30                	xor    %dh,(%rax)
    54d0:	00 2e                	add    %ch,(%rsi)
    54d2:	31 32                	xor    %esi,(%rdx)
    54d4:	33 34 35 30 30 00 2d 	xor    0x2d003030(,%rsi,1),%esi
    54db:	31 31                	xor    %esi,(%rcx)
    54dd:	30 2e                	xor    %ch,(%rsi)
    54df:	37                   	(bad)  
    54e0:	30 30                	xor    %dh,(%rax)
    54e2:	00 2b                	add    %ch,(%rbx)
    54e4:	30 2e                	xor    %ch,(%rsi)
    54e6:	36 34 34             	ss xor $0x34,%al
    54e9:	30 30                	xor    %dh,(%rax)
    54eb:	00 35 30 31 32 00    	add    %dh,0x323130(%rip)        # 328621 <_end+0x3205b1>
    54f1:	31 32                	xor    %esi,(%rdx)
    54f3:	33 34 00             	xor    (%rax,%rax,1),%esi
    54f6:	2d 38 37 34 00       	sub    $0x343738,%eax
    54fb:	2b 31                	sub    (%rcx),%esi
    54fd:	32 32                	xor    (%rdx),%dh
    54ff:	00 c7                	add    %al,%bh
    5501:	e4 ff                	in     $0xff,%al
    5503:	ff 90 e4 ff ff a0    	callq  *-0x5f00001c(%rax)
    5509:	e4 ff                	in     $0xff,%al
    550b:	ff b0 e4 ff ff c0    	pushq  -0x3f00001c(%rax)
    5511:	e4 ff                	in     $0xff,%al
    5513:	ff 80 e4 ff ff 00    	incl   0xffffe4(%rax)
    5519:	00 00                	add    %al,(%rax)
    551b:	00 00                	add    %al,(%rax)
    551d:	40                   	rex
    551e:	8f                   	.byte 0x8f
    551f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000005520 <__GNU_EH_FRAME_HDR>:
    5520:	01 1b                	add    %ebx,(%rbx)
    5522:	03 3b                	add    (%rbx),%edi
    5524:	84 01                	test   %al,(%rcx)
    5526:	00 00                	add    %al,(%rax)
    5528:	2f                   	(bad)  
    5529:	00 00                	add    %al,(%rax)
    552b:	00 00                	add    %al,(%rax)
    552d:	bb ff ff b8 01       	mov    $0x1b8ffff,%ebx
    5532:	00 00                	add    %al,(%rax)
    5534:	90                   	nop
    5535:	bb ff ff e0 01       	mov    $0x1e0ffff,%ebx
    553a:	00 00                	add    %al,(%rax)
    553c:	a0 bb ff ff f8 01 00 	movabs 0x20000001f8ffffbb,%al
    5543:	00 20 
    5545:	bc ff ff 38 03       	mov    $0x338ffff,%esp
    554a:	00 00                	add    %al,(%rax)
    554c:	40 bc ff ff 78 04    	rex mov $0x478ffff,%esp
    5552:	00 00                	add    %al,(%rax)
    5554:	b0 c6                	mov    $0xc6,%al
    5556:	ff                   	(bad)  
    5557:	ff a0 01 00 00 a0    	jmpq   *-0x5fffffff(%rax)
    555d:	c7                   	(bad)  
    555e:	ff                   	(bad)  
    555f:	ff 10                	callq  *(%rax)
    5561:	02 00                	add    (%rax),%al
    5563:	00 90 c8 ff ff 60    	add    %dl,0x60ffffc8(%rax)
    5569:	02 00                	add    (%rax),%al
    556b:	00 80 ca ff ff a0    	add    %al,-0x5f000036(%rax)
    5571:	02 00                	add    (%rax),%al
    5573:	00 d0                	add    %dl,%al
    5575:	ca ff ff             	lret   $0xffff
    5578:	b4 02                	mov    $0x2,%ah
    557a:	00 00                	add    %al,(%rax)
    557c:	f0 ca ff ff          	lock lret $0xffff
    5580:	c8 02 00 00          	enterq $0x2,$0x0
    5584:	a0 cf ff ff 4c 03 00 	movabs 0x300000034cffffcf,%al
    558b:	00 30 
    558d:	d2 ff                	sar    %cl,%bh
    558f:	ff 94 03 00 00 80 d2 	callq  *-0x2d800000(%rbx,%rax,1)
    5596:	ff                   	(bad)  
    5597:	ff a8 03 00 00 b0    	ljmp   *-0x4ffffffd(%rax)
    559d:	d2 ff                	sar    %cl,%bh
    559f:	ff                   	(bad)  
    55a0:	bc 03 00 00 e0       	mov    $0xe0000003,%esp
    55a5:	d2 ff                	sar    %cl,%bh
    55a7:	ff d0                	callq  *%rax
    55a9:	03 00                	add    (%rax),%eax
    55ab:	00 40 d3             	add    %al,-0x2d(%rax)
    55ae:	ff                   	(bad)  
    55af:	ff e4                	jmpq   *%rsp
    55b1:	03 00                	add    (%rax),%eax
    55b3:	00 70 d3             	add    %dh,-0x2d(%rax)
    55b6:	ff                   	(bad)  
    55b7:	ff                   	(bad)  
    55b8:	f8                   	clc    
    55b9:	03 00                	add    (%rax),%eax
    55bb:	00 b0 d4 ff ff 48    	add    %dh,0x48ffffd4(%rax)
    55c1:	04 00                	add    $0x0,%al
    55c3:	00 40 d5             	add    %al,-0x2b(%rax)
    55c6:	ff                   	(bad)  
    55c7:	ff c8                	dec    %eax
    55c9:	04 00                	add    $0x0,%al
    55cb:	00 60 d9             	add    %ah,-0x27(%rax)
    55ce:	ff                   	(bad)  
    55cf:	ff 2c 05 00 00 90 d9 	ljmp   *-0x26700000(,%rax,1)
    55d6:	ff                   	(bad)  
    55d7:	ff 48 05             	decl   0x5(%rax)
    55da:	00 00                	add    %al,(%rax)
    55dc:	d0 da                	rcr    %dl
    55de:	ff                   	(bad)  
    55df:	ff 90 05 00 00 50    	callq  *0x50000005(%rax)
    55e5:	db ff                	(bad)  
    55e7:	ff                   	(bad)  
    55e8:	b8 05 00 00 a0       	mov    $0xa0000005,%eax
    55ed:	db ff                	(bad)  
    55ef:	ff d4                	callq  *%rsp
    55f1:	05 00 00 e0 db       	add    $0xdbe00000,%eax
    55f6:	ff                   	(bad)  
    55f7:	ff                   	(bad)  
    55f8:	e8 05 00 00 70       	callq  70005602 <_end+0x6fffd592>
    55fd:	dc ff                	fdivr  %st,%st(7)
    55ff:	ff 20                	jmpq   *(%rax)
    5601:	06                   	(bad)  
    5602:	00 00                	add    %al,(%rax)
    5604:	10 dd                	adc    %bl,%ch
    5606:	ff                   	(bad)  
    5607:	ff 60 06             	jmpq   *0x6(%rax)
    560a:	00 00                	add    %al,(%rax)
    560c:	c0 dd ff             	rcr    $0xff,%ch
    560f:	ff a0 06 00 00 40    	jmpq   *0x40000006(%rax)
    5615:	df ff                	(bad)  
    5617:	ff e4                	jmpq   *%rsp
    5619:	06                   	(bad)  
    561a:	00 00                	add    %al,(%rax)
    561c:	50                   	push   %rax
    561d:	e2 ff                	loop   561e <__GNU_EH_FRAME_HDR+0xfe>
    561f:	ff                   	(bad)  
    5620:	f8                   	clc    
    5621:	06                   	(bad)  
    5622:	00 00                	add    %al,(%rax)
    5624:	40 e4 ff             	in     $0xff,%al
    5627:	ff 48 07             	decl   0x7(%rax)
    562a:	00 00                	add    %al,(%rax)
    562c:	b0 e4                	mov    $0xe4,%al
    562e:	ff                   	(bad)  
    562f:	ff 5c 07 00          	lcall  *0x0(%rdi,%rax,1)
    5633:	00 80 e5 ff ff 70    	add    %al,0x70ffffe5(%rax)
    5639:	07                   	(bad)  
    563a:	00 00                	add    %al,(%rax)
    563c:	30 e7                	xor    %ah,%bh
    563e:	ff                   	(bad)  
    563f:	ff 84 07 00 00 70 ea 	incl   -0x15900000(%rdi,%rax,1)
    5646:	ff                   	(bad)  
    5647:	ff 98 07 00 00 10    	lcall  *0x10000007(%rax)
    564d:	ec                   	in     (%dx),%al
    564e:	ff                   	(bad)  
    564f:	ff ac 07 00 00 20 ec 	ljmp   *-0x13e00000(%rdi,%rax,1)
    5656:	ff                   	(bad)  
    5657:	ff c0                	inc    %eax
    5659:	07                   	(bad)  
    565a:	00 00                	add    %al,(%rax)
    565c:	30 ec                	xor    %ch,%ah
    565e:	ff                   	(bad)  
    565f:	ff d4                	callq  *%rsp
    5661:	07                   	(bad)  
    5662:	00 00                	add    %al,(%rax)
    5664:	40 ec                	in     (%dx),%al
    5666:	ff                   	(bad)  
    5667:	ff                   	(bad)  
    5668:	e8 07 00 00 60       	callq  60005674 <_end+0x5fffd604>
    566d:	ec                   	in     (%dx),%al
    566e:	ff                   	(bad)  
    566f:	ff                   	(bad)  
    5670:	fc                   	cld    
    5671:	07                   	(bad)  
    5672:	00 00                	add    %al,(%rax)
    5674:	80 ec ff             	sub    $0xff,%ah
    5677:	ff 10                	callq  *(%rax)
    5679:	08 00                	or     %al,(%rax)
    567b:	00 d0                	add    %dl,%al
    567d:	ec                   	in     (%dx),%al
    567e:	ff                   	(bad)  
    567f:	ff 24 08             	jmpq   *(%rax,%rcx,1)
    5682:	00 00                	add    %al,(%rax)
    5684:	f0 ec                	lock in (%dx),%al
    5686:	ff                   	(bad)  
    5687:	ff                   	(bad)  
    5688:	38 08                	cmp    %cl,(%rax)
    568a:	00 00                	add    %al,(%rax)
    568c:	00 ed                	add    %ch,%ch
    568e:	ff                   	(bad)  
    568f:	ff 4c 08 00          	decl   0x0(%rax,%rcx,1)
    5693:	00 10                	add    %dl,(%rax)
    5695:	ed                   	in     (%dx),%eax
    5696:	ff                   	(bad)  
    5697:	ff 60 08             	jmpq   *0x8(%rax)
    569a:	00 00                	add    %al,(%rax)
    569c:	80 ed ff             	sub    $0xff,%ch
    569f:	ff                   	.byte 0xff
    56a0:	a8 08                	test   $0x8,%al
	...

Disassembly of section .eh_frame:

00000000000056a8 <__FRAME_END__-0x734>:
    56a8:	14 00                	adc    $0x0,%al
    56aa:	00 00                	add    %al,(%rax)
    56ac:	00 00                	add    %al,(%rax)
    56ae:	00 00                	add    %al,(%rax)
    56b0:	01 7a 52             	add    %edi,0x52(%rdx)
    56b3:	00 01                	add    %al,(%rcx)
    56b5:	78 10                	js     56c7 <__GNU_EH_FRAME_HDR+0x1a7>
    56b7:	01 1b                	add    %ebx,(%rbx)
    56b9:	0c 07                	or     $0x7,%al
    56bb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    56c1:	00 00                	add    %al,(%rax)
    56c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    56c6:	00 00                	add    %al,(%rax)
    56c8:	08 c5                	or     %al,%ch
    56ca:	ff                   	(bad)  
    56cb:	ff 2f                	ljmp   *(%rdi)
    56cd:	00 00                	add    %al,(%rax)
    56cf:	00 00                	add    %al,(%rax)
    56d1:	44 07                	rex.R (bad) 
    56d3:	10 00                	adc    %al,(%rax)
    56d5:	00 00                	add    %al,(%rax)
    56d7:	00 24 00             	add    %ah,(%rax,%rax,1)
    56da:	00 00                	add    %al,(%rax)
    56dc:	34 00                	xor    $0x0,%al
    56de:	00 00                	add    %al,(%rax)
    56e0:	40 b9 ff ff 90 00    	rex mov $0x90ffff,%ecx
    56e6:	00 00                	add    %al,(%rax)
    56e8:	00 0e                	add    %cl,(%rsi)
    56ea:	10 46 0e             	adc    %al,0xe(%rsi)
    56ed:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    56f0:	0b 77 08             	or     0x8(%rdi),%esi
    56f3:	80 00 3f             	addb   $0x3f,(%rax)
    56f6:	1a 3a                	sbb    (%rdx),%bh
    56f8:	2a 33                	sub    (%rbx),%dh
    56fa:	24 22                	and    $0x22,%al
    56fc:	00 00                	add    %al,(%rax)
    56fe:	00 00                	add    %al,(%rax)
    5700:	14 00                	adc    $0x0,%al
    5702:	00 00                	add    %al,(%rax)
    5704:	5c                   	pop    %rsp
    5705:	00 00                	add    %al,(%rax)
    5707:	00 a8 b9 ff ff 10    	add    %ch,0x10ffffb9(%rax)
	...
    5715:	00 00                	add    %al,(%rax)
    5717:	00 14 00             	add    %dl,(%rax,%rax,1)
    571a:	00 00                	add    %al,(%rax)
    571c:	74 00                	je     571e <__GNU_EH_FRAME_HDR+0x1fe>
    571e:	00 00                	add    %al,(%rax)
    5720:	a0 b9 ff ff 80 00 00 	movabs 0x80ffffb9,%al
    5727:	00 00 
    5729:	00 00                	add    %al,(%rax)
    572b:	00 00                	add    %al,(%rax)
    572d:	00 00                	add    %al,(%rax)
    572f:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    5733:	00 8c 00 00 00 88 c5 	add    %cl,-0x3a780000(%rax,%rax,1)
    573a:	ff                   	(bad)  
    573b:	ff f0                	push   %rax
    573d:	00 00                	add    %al,(%rax)
    573f:	00 00                	add    %al,(%rax)
    5741:	46 0e                	rex.RX (bad) 
    5743:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    5749:	8c 03                	mov    %es,(%rbx)
    574b:	41 0e                	rex.B (bad) 
    574d:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
    5753:	83 05 44 0e 30 4b 0a 	addl   $0xa,0x4b300e44(%rip)        # 4b30659e <_end+0x4b2fe52e>
    575a:	0e                   	(bad)  
    575b:	28 46 0e             	sub    %al,0xe(%rsi)
    575e:	20 41 0e             	and    %al,0xe(%rcx)
    5761:	18 42 0e             	sbb    %al,0xe(%rdx)
    5764:	10 42 0e             	adc    %al,0xe(%rdx)
    5767:	08 44 0b 02          	or     %al,0x2(%rbx,%rcx,1)
    576b:	7f 0a                	jg     5777 <__GNU_EH_FRAME_HDR+0x257>
    576d:	0e                   	(bad)  
    576e:	28 41 0e             	sub    %al,0xe(%rcx)
    5771:	20 41 0e             	and    %al,0xe(%rcx)
    5774:	18 42 0e             	sbb    %al,0xe(%rdx)
    5777:	10 42 0e             	adc    %al,0xe(%rdx)
    577a:	08 43 0b             	or     %al,0xb(%rbx)
    577d:	00 00                	add    %al,(%rax)
    577f:	00 3c 00             	add    %bh,(%rax,%rax,1)
    5782:	00 00                	add    %al,(%rax)
    5784:	dc 00                	faddl  (%rax)
    5786:	00 00                	add    %al,(%rax)
    5788:	28 c6                	sub    %al,%dh
    578a:	ff                   	(bad)  
    578b:	ff                   	(bad)  
    578c:	e9 01 00 00 00       	jmpq   5792 <__GNU_EH_FRAME_HDR+0x272>
    5791:	46 0e                	rex.RX (bad) 
    5793:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    5799:	8d 03                	lea    (%rbx),%eax
    579b:	42 0e                	rex.X (bad) 
    579d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    57a4:	05 41 0e 30 83       	add    $0x83300e41,%eax
    57a9:	06                   	(bad)  
    57aa:	02 de                	add    %dh,%bl
    57ac:	0a 0e                	or     (%rsi),%cl
    57ae:	28 41 0e             	sub    %al,0xe(%rcx)
    57b1:	20 44 0e 18          	and    %al,0x18(%rsi,%rcx,1)
    57b5:	42 0e                	rex.X (bad) 
    57b7:	10 42 0e             	adc    %al,0xe(%rdx)
    57ba:	08 4a 0b             	or     %cl,0xb(%rdx)
    57bd:	00 00                	add    %al,(%rax)
    57bf:	00 10                	add    %dl,(%rax)
    57c1:	00 00                	add    %al,(%rax)
    57c3:	00 1c 01             	add    %bl,(%rcx,%rax,1)
    57c6:	00 00                	add    %al,(%rax)
    57c8:	d8 c7                	fadd   %st(7),%st
    57ca:	ff                   	(bad)  
    57cb:	ff 43 00             	incl   0x0(%rbx)
    57ce:	00 00                	add    %al,(%rax)
    57d0:	00 00                	add    %al,(%rax)
    57d2:	00 00                	add    %al,(%rax)
    57d4:	10 00                	adc    %al,(%rax)
    57d6:	00 00                	add    %al,(%rax)
    57d8:	30 01                	xor    %al,(%rcx)
    57da:	00 00                	add    %al,(%rax)
    57dc:	14 c8                	adc    $0xc8,%al
    57de:	ff                   	(bad)  
    57df:	ff 13                	callq  *(%rbx)
    57e1:	00 00                	add    %al,(%rax)
    57e3:	00 00                	add    %al,(%rax)
    57e5:	00 00                	add    %al,(%rax)
    57e7:	00 48 00             	add    %cl,0x0(%rax)
    57ea:	00 00                	add    %al,(%rax)
    57ec:	44 01 00             	add    %r8d,(%rax)
    57ef:	00 20                	add    %ah,(%rax)
    57f1:	c8 ff ff a8          	enterq $0xffff,$0xa8
    57f5:	04 00                	add    $0x0,%al
    57f7:	00 00                	add    %al,(%rax)
    57f9:	46 0e                	rex.RX (bad) 
    57fb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5801:	8e 03                	mov    (%rbx),%es
    5803:	42 0e                	rex.X (bad) 
    5805:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    580b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306652 <_end+0xffffffff862fe5e2>
    5811:	06                   	(bad)  
    5812:	41 0e                	rex.B (bad) 
    5814:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
    581a:	03 1d 03 0a 0e 38    	add    0x380e0a03(%rip),%ebx        # 380e6223 <_end+0x380de1b3>
    5820:	41 0e                	rex.B (bad) 
    5822:	30 41 0e             	xor    %al,0xe(%rcx)
    5825:	28 42 0e             	sub    %al,0xe(%rdx)
    5828:	20 42 0e             	and    %al,0xe(%rdx)
    582b:	18 42 0e             	sbb    %al,0xe(%rdx)
    582e:	10 42 0e             	adc    %al,0xe(%rdx)
    5831:	08 44 0b 20          	or     %al,0x20(%rbx,%rcx,1)
    5835:	00 00                	add    %al,(%rax)
    5837:	00 00                	add    %al,(%rax)
    5839:	00 00                	add    %al,(%rax)
    583b:	00 01                	add    %al,(%rcx)
    583d:	7a 52                	jp     5891 <__GNU_EH_FRAME_HDR+0x371>
    583f:	00 01                	add    %al,(%rcx)
    5841:	78 10                	js     5853 <__GNU_EH_FRAME_HDR+0x333>
    5843:	01 1b                	add    %ebx,(%rbx)
    5845:	0c 07                	or     $0x7,%al
    5847:	08 90 01 0e 60 83    	or     %dl,-0x7c9ff1ff(%rax)
    584d:	07                   	(bad)  
    584e:	86 06                	xchg   %al,(%rsi)
    5850:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 38e5ce3 <_end+0x38ddc73>
    5856:	8f 02                	popq   (%rdx)
    5858:	10 00                	adc    %al,(%rax)
    585a:	00 00                	add    %al,(%rax)
    585c:	28 00                	sub    %al,(%rax)
    585e:	00 00                	add    %al,(%rax)
    5860:	e0 b8                	loopne 581a <__GNU_EH_FRAME_HDR+0x2fa>
    5862:	ff                   	(bad)  
    5863:	ff 18                	lcall  *(%rax)
    5865:	00 00                	add    %al,(%rax)
    5867:	00 00                	add    %al,(%rax)
    5869:	00 00                	add    %al,(%rax)
    586b:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    586f:	00 c8                	add    %cl,%al
    5871:	01 00                	add    %eax,(%rax)
    5873:	00 4c cc ff          	add    %cl,-0x1(%rsp,%rcx,8)
    5877:	ff 86 02 00 00 00    	incl   0x2(%rsi)
    587d:	4e 0e                	rex.WRX (bad) 
    587f:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5885:	8e 03                	mov    (%rbx),%es
    5887:	49 0e                	rex.WB (bad) 
    5889:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    588f:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863066dd <_end+0xffffffff862fe66d>
    5895:	06                   	(bad)  
    5896:	45 0e                	rex.RB (bad) 
    5898:	38 83 07 03 27 02    	cmp    %al,0x2270307(%rbx)
    589e:	0a 0e                	or     (%rsi),%cl
    58a0:	30 41 0e             	xor    %al,0xe(%rcx)
    58a3:	28 42 0e             	sub    %al,0xe(%rdx)
    58a6:	20 42 0e             	and    %al,0xe(%rdx)
    58a9:	18 42 0e             	sbb    %al,0xe(%rdx)
    58ac:	10 42 0e             	adc    %al,0xe(%rdx)
    58af:	08 41 0b             	or     %al,0xb(%rcx)
    58b2:	00 00                	add    %al,(%rax)
    58b4:	10 00                	adc    %al,(%rax)
    58b6:	00 00                	add    %al,(%rax)
    58b8:	10 02                	adc    %al,(%rdx)
    58ba:	00 00                	add    %al,(%rax)
    58bc:	94                   	xchg   %eax,%esp
    58bd:	ce                   	(bad)  
    58be:	ff                   	(bad)  
    58bf:	ff 4b 00             	decl   0x0(%rbx)
    58c2:	00 00                	add    %al,(%rax)
    58c4:	00 00                	add    %al,(%rax)
    58c6:	00 00                	add    %al,(%rax)
    58c8:	10 00                	adc    %al,(%rax)
    58ca:	00 00                	add    %al,(%rax)
    58cc:	24 02                	and    $0x2,%al
    58ce:	00 00                	add    %al,(%rax)
    58d0:	d0 ce                	ror    %dh
    58d2:	ff                   	(bad)  
    58d3:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 58d9 <__GNU_EH_FRAME_HDR+0x3b9>
    58d9:	00 00                	add    %al,(%rax)
    58db:	00 10                	add    %dl,(%rax)
    58dd:	00 00                	add    %al,(%rax)
    58df:	00 38                	add    %bh,(%rax)
    58e1:	02 00                	add    (%rax),%al
    58e3:	00 ec                	add    %ch,%ah
    58e5:	ce                   	(bad)  
    58e6:	ff                   	(bad)  
    58e7:	ff 21                	jmpq   *(%rcx)
    58e9:	00 00                	add    %al,(%rax)
    58eb:	00 00                	add    %al,(%rax)
    58ed:	00 00                	add    %al,(%rax)
    58ef:	00 10                	add    %dl,(%rax)
    58f1:	00 00                	add    %al,(%rax)
    58f3:	00 4c 02 00          	add    %cl,0x0(%rdx,%rax,1)
    58f7:	00 08                	add    %cl,(%rax)
    58f9:	cf                   	iret   
    58fa:	ff                   	(bad)  
    58fb:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
    58ff:	00 00                	add    %al,(%rax)
    5901:	00 00                	add    %al,(%rax)
    5903:	00 10                	add    %dl,(%rax)
    5905:	00 00                	add    %al,(%rax)
    5907:	00 60 02             	add    %ah,0x2(%rax)
    590a:	00 00                	add    %al,(%rax)
    590c:	54                   	push   %rsp
    590d:	cf                   	iret   
    590e:	ff                   	(bad)  
    590f:	ff 22                	jmpq   *(%rdx)
    5911:	00 00                	add    %al,(%rax)
    5913:	00 00                	add    %al,(%rax)
    5915:	00 00                	add    %al,(%rax)
    5917:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    591b:	00 74 02 00          	add    %dh,0x0(%rdx,%rax,1)
    591f:	00 70 cf             	add    %dh,-0x31(%rax)
    5922:	ff                   	(bad)  
    5923:	ff                   	(bad)  
    5924:	39 01                	cmp    %eax,(%rcx)
    5926:	00 00                	add    %al,(%rax)
    5928:	00 46 0e             	add    %al,0xe(%rsi)
    592b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5931:	8e 03                	mov    (%rbx),%es
    5933:	42 0e                	rex.X (bad) 
    5935:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    593b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306782 <_end+0xffffffff862fe712>
    5941:	06                   	(bad)  
    5942:	41 0e                	rex.B (bad) 
    5944:	38 83 07 47 0e 60    	cmp    %al,0x600e4707(%rbx)
    594a:	03 08                	add    (%rax),%ecx
    594c:	01 0a                	add    %ecx,(%rdx)
    594e:	0e                   	(bad)  
    594f:	38 41 0e             	cmp    %al,0xe(%rcx)
    5952:	30 41 0e             	xor    %al,0xe(%rcx)
    5955:	28 42 0e             	sub    %al,0xe(%rdx)
    5958:	20 42 0e             	and    %al,0xe(%rdx)
    595b:	18 42 0e             	sbb    %al,0xe(%rdx)
    595e:	10 42 0e             	adc    %al,0xe(%rdx)
    5961:	08 41 0b             	or     %al,0xb(%rcx)
    5964:	00 00                	add    %al,(%rax)
    5966:	00 00                	add    %al,(%rax)
    5968:	2c 00                	sub    $0x0,%al
    596a:	00 00                	add    %al,(%rax)
    596c:	c4 02 00 00          	(bad)
    5970:	60                   	(bad)  
    5971:	d0 ff                	sar    %bh
    5973:	ff 81 00 00 00 00    	incl   0x0(%rcx)
    5979:	46 0e                	rex.RX (bad) 
    597b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    5982:	03 41 0e             	add    0xe(%rcx),%eax
    5985:	20 83 04 02 61 0a    	and    %al,0xa610204(%rbx)
    598b:	0e                   	(bad)  
    598c:	18 43 0e             	sbb    %al,0xe(%rbx)
    598f:	10 42 0e             	adc    %al,0xe(%rdx)
    5992:	08 42 0b             	or     %al,0xb(%rdx)
    5995:	00 00                	add    %al,(%rax)
    5997:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    599b:	00 f4                	add    %dh,%ah
    599d:	02 00                	add    (%rax),%al
    599f:	00 c0                	add    %al,%al
    59a1:	b7 ff                	mov    $0xff,%bh
    59a3:	ff 70 0a             	pushq  0xa(%rax)
    59a6:	00 00                	add    %al,(%rax)
    59a8:	00 46 0e             	add    %al,0xe(%rsi)
    59ab:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    59b1:	8e 03                	mov    (%rbx),%es
    59b3:	42 0e                	rex.X (bad) 
    59b5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    59bb:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86306802 <_end+0xffffffff862fe792>
    59c1:	06                   	(bad)  
    59c2:	41 0e                	rex.B (bad) 
    59c4:	38 83 07 47 0e 80    	cmp    %al,-0x7ff1b8f9(%rbx)
    59ca:	02 03                	add    (%rbx),%al
    59cc:	77 08                	ja     59d6 <__GNU_EH_FRAME_HDR+0x4b6>
    59ce:	0a 0e                	or     (%rsi),%cl
    59d0:	38 43 0e             	cmp    %al,0xe(%rbx)
    59d3:	30 41 0e             	xor    %al,0xe(%rcx)
    59d6:	28 42 0e             	sub    %al,0xe(%rdx)
    59d9:	20 42 0e             	and    %al,0xe(%rdx)
    59dc:	18 42 0e             	sbb    %al,0xe(%rdx)
    59df:	10 42 0e             	adc    %al,0xe(%rdx)
    59e2:	08 41 0b             	or     %al,0xb(%rcx)
    59e5:	00 00                	add    %al,(%rax)
    59e7:	00 60 00             	add    %ah,0x0(%rax)
    59ea:	00 00                	add    %al,(%rax)
    59ec:	44 03 00             	add    (%rax),%r8d
    59ef:	00 70 d0             	add    %dh,-0x30(%rax)
    59f2:	ff                   	(bad)  
    59f3:	ff 1d 04 00 00 00    	lcall  *0x4(%rip)        # 59fd <__GNU_EH_FRAME_HDR+0x4dd>
    59f9:	46 0e                	rex.RX (bad) 
    59fb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    5a01:	8e 03                	mov    (%rbx),%es
    5a03:	42 0e                	rex.X (bad) 
    5a05:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5a0b:	8c 05 47 0e 30 86    	mov    %es,-0x79cff1b9(%rip)        # ffffffff86306858 <_end+0xffffffff862fe7e8>
    5a11:	06                   	(bad)  
    5a12:	41 0e                	rex.B (bad) 
    5a14:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
    5a1a:	03 c2                	add    %edx,%eax
    5a1c:	03 0a                	add    (%rdx),%ecx
    5a1e:	0e                   	(bad)  
    5a1f:	38 41 0e             	cmp    %al,0xe(%rcx)
    5a22:	30 41 0e             	xor    %al,0xe(%rcx)
    5a25:	28 42 0e             	sub    %al,0xe(%rdx)
    5a28:	20 42 0e             	and    %al,0xe(%rdx)
    5a2b:	18 42 0e             	sbb    %al,0xe(%rdx)
    5a2e:	10 42 0e             	adc    %al,0xe(%rdx)
    5a31:	08 41 0b             	or     %al,0xb(%rcx)
    5a34:	61                   	(bad)  
    5a35:	0e                   	(bad)  
    5a36:	38 43 0e             	cmp    %al,0xe(%rbx)
    5a39:	30 44 0e 28          	xor    %al,0x28(%rsi,%rcx,1)
    5a3d:	42 0e                	rex.X (bad) 
    5a3f:	20 42 0e             	and    %al,0xe(%rdx)
    5a42:	18 42 0e             	sbb    %al,0xe(%rdx)
    5a45:	10 42 0e             	adc    %al,0xe(%rdx)
    5a48:	08 00                	or     %al,(%rax)
    5a4a:	00 00                	add    %al,(%rax)
    5a4c:	18 00                	sbb    %al,(%rax)
    5a4e:	00 00                	add    %al,(%rax)
    5a50:	a8 03                	test   $0x3,%al
    5a52:	00 00                	add    %al,(%rax)
    5a54:	2c d4                	sub    $0xd4,%al
    5a56:	ff                   	(bad)  
    5a57:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 5a5d <__GNU_EH_FRAME_HDR+0x53d>
    5a5d:	45 0e                	rex.RB (bad) 
    5a5f:	10 86 02 60 0e 08    	adc    %al,0x80e6002(%rsi)
    5a65:	00 00                	add    %al,(%rax)
    5a67:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    5a6b:	00 c4                	add    %al,%ah
    5a6d:	03 00                	add    (%rax),%eax
    5a6f:	00 40 d4             	add    %al,-0x2c(%rax)
    5a72:	ff                   	(bad)  
    5a73:	ff                   	(bad)  
    5a74:	3b 01                	cmp    (%rcx),%eax
    5a76:	00 00                	add    %al,(%rax)
    5a78:	00 51 0e             	add    %dl,0xe(%rcx)
    5a7b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5a81:	8e 03                	mov    (%rbx),%es
    5a83:	45 0e                	rex.RB (bad) 
    5a85:	20 8d 04 46 0e 28    	and    %cl,0x280e4604(%rbp)
    5a8b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863068d2 <_end+0xffffffff862fe862>
    5a91:	06                   	(bad)  
    5a92:	41 0e                	rex.B (bad) 
    5a94:	38 83 07 02 e4 0a    	cmp    %al,0xae40207(%rbx)
    5a9a:	0e                   	(bad)  
    5a9b:	30 41 0e             	xor    %al,0xe(%rcx)
    5a9e:	28 45 0e             	sub    %al,0xe(%rbp)
    5aa1:	20 45 0e             	and    %al,0xe(%rbp)
    5aa4:	18 42 0e             	sbb    %al,0xe(%rdx)
    5aa7:	10 42 0e             	adc    %al,0xe(%rdx)
    5aaa:	08 41 0b             	or     %al,0xb(%rcx)
    5aad:	00 00                	add    %al,(%rax)
    5aaf:	00 24 00             	add    %ah,(%rax,%rax,1)
    5ab2:	00 00                	add    %al,(%rax)
    5ab4:	0c 04                	or     $0x4,%al
    5ab6:	00 00                	add    %al,(%rax)
    5ab8:	38 d5                	cmp    %dl,%ch
    5aba:	ff                   	(bad)  
    5abb:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
    5abf:	00 00                	add    %al,(%rax)
    5ac1:	49 0e                	rex.WB (bad) 
    5ac3:	10 86 02 4a 0e 18    	adc    %al,0x180e4a02(%rsi)
    5ac9:	83 03 02             	addl   $0x2,(%rbx)
    5acc:	58                   	pop    %rax
    5acd:	0e                   	(bad)  
    5ace:	10 41 0e             	adc    %al,0xe(%rcx)
    5ad1:	08 41 c3             	or     %al,-0x3d(%rcx)
    5ad4:	c6 00 00             	movb   $0x0,(%rax)
    5ad7:	00 18                	add    %bl,(%rax)
    5ad9:	00 00                	add    %al,(%rax)
    5adb:	00 34 04             	add    %dh,(%rsp,%rax,1)
    5ade:	00 00                	add    %al,(%rax)
    5ae0:	90                   	nop
    5ae1:	d5                   	(bad)  
    5ae2:	ff                   	(bad)  
    5ae3:	ff 49 00             	decl   0x0(%rcx)
    5ae6:	00 00                	add    %al,(%rax)
    5ae8:	00 49 0e             	add    %cl,0xe(%rcx)
    5aeb:	10 83 02 7e 0e 08    	adc    %al,0x80e7e02(%rbx)
    5af1:	41 c3                	rex.B retq 
    5af3:	00 10                	add    %dl,(%rax)
    5af5:	00 00                	add    %al,(%rax)
    5af7:	00 50 04             	add    %dl,0x4(%rax)
    5afa:	00 00                	add    %al,(%rax)
    5afc:	c4                   	(bad)  
    5afd:	d5                   	(bad)  
    5afe:	ff                   	(bad)  
    5aff:	ff                   	(bad)  
    5b00:	3d 00 00 00 00       	cmp    $0x0,%eax
    5b05:	00 00                	add    %al,(%rax)
    5b07:	00 34 00             	add    %dh,(%rax,%rax,1)
    5b0a:	00 00                	add    %al,(%rax)
    5b0c:	64 04 00             	fs add $0x0,%al
    5b0f:	00 f0                	add    %dh,%al
    5b11:	d5                   	(bad)  
    5b12:	ff                   	(bad)  
    5b13:	ff 88 00 00 00 00    	decl   0x0(%rax)
    5b19:	46 0e                	rex.RX (bad) 
    5b1b:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    5b21:	8c 03                	mov    %es,(%rbx)
    5b23:	41 0e                	rex.B (bad) 
    5b25:	20 86 04 43 0e 28    	and    %al,0x280e4304(%rsi)
    5b2b:	83 05 44 0e 30 02 71 	addl   $0x71,0x2300e44(%rip)        # 2306976 <_end+0x22fe906>
    5b32:	0e                   	(bad)  
    5b33:	28 41 0e             	sub    %al,0xe(%rcx)
    5b36:	20 41 0e             	and    %al,0xe(%rcx)
    5b39:	18 42 0e             	sbb    %al,0xe(%rdx)
    5b3c:	10 42 0e             	adc    %al,0xe(%rdx)
    5b3f:	08 3c 00             	or     %bh,(%rax,%rax,1)
    5b42:	00 00                	add    %al,(%rax)
    5b44:	9c                   	pushfq 
    5b45:	04 00                	add    $0x0,%al
    5b47:	00 48 d6             	add    %cl,-0x2a(%rax)
    5b4a:	ff                   	(bad)  
    5b4b:	ff 9e 00 00 00 00    	lcall  *0x0(%rsi)
    5b51:	4e 0e                	rex.WRX (bad) 
    5b53:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    5b59:	8d 03                	lea    (%rbx),%eax
    5b5b:	48 0e                	rex.W (bad) 
    5b5d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    5b64:	05 43 0e 30 83       	add    $0x83300e43,%eax
    5b69:	06                   	(bad)  
    5b6a:	02 6d 0e             	add    0xe(%rbp),%ch
    5b6d:	28 41 0e             	sub    %al,0xe(%rcx)
    5b70:	20 42 0e             	and    %al,0xe(%rdx)
    5b73:	18 42 0e             	sbb    %al,0xe(%rdx)
    5b76:	10 42 0e             	adc    %al,0xe(%rdx)
    5b79:	08 41 c3             	or     %al,-0x3d(%rcx)
    5b7c:	c6                   	(bad)  
    5b7d:	cc                   	int3   
    5b7e:	cd ce                	int    $0xce
    5b80:	3c 00                	cmp    $0x0,%al
    5b82:	00 00                	add    %al,(%rax)
    5b84:	dc 04 00             	faddl  (%rax,%rax,1)
    5b87:	00 a8 d6 ff ff ae    	add    %ch,-0x5100002a(%rax)
    5b8d:	00 00                	add    %al,(%rax)
    5b8f:	00 00                	add    %al,(%rax)
    5b91:	4e 0e                	rex.WRX (bad) 
    5b93:	10 8e 02 4b 0e 18    	adc    %cl,0x180e4b02(%rsi)
    5b99:	8d 03                	lea    (%rbx),%eax
    5b9b:	48 0e                	rex.W (bad) 
    5b9d:	20 8c 04 44 0e 28 86 	and    %cl,-0x79d7f1bc(%rsp,%rax,1)
    5ba4:	05 43 0e 30 83       	add    $0x83300e43,%eax
    5ba9:	06                   	(bad)  
    5baa:	02 7d 0e             	add    0xe(%rbp),%bh
    5bad:	28 41 0e             	sub    %al,0xe(%rcx)
    5bb0:	20 42 0e             	and    %al,0xe(%rdx)
    5bb3:	18 42 0e             	sbb    %al,0xe(%rdx)
    5bb6:	10 42 0e             	adc    %al,0xe(%rdx)
    5bb9:	08 41 c3             	or     %al,-0x3d(%rcx)
    5bbc:	c6                   	(bad)  
    5bbd:	cc                   	int3   
    5bbe:	cd ce                	int    $0xce
    5bc0:	40 00 00             	add    %al,(%rax)
    5bc3:	00 1c 05 00 00 18 d7 	add    %bl,-0x28e80000(,%rax,1)
    5bca:	ff                   	(bad)  
    5bcb:	ff 77 01             	pushq  0x1(%rdi)
    5bce:	00 00                	add    %al,(%rax)
    5bd0:	00 4a 0e             	add    %cl,0xe(%rdx)
    5bd3:	10 8e 02 47 0e 18    	adc    %cl,0x180e4702(%rsi)
    5bd9:	8c 03                	mov    %es,(%rbx)
    5bdb:	4f 0e                	rex.WRXB (bad) 
    5bdd:	20 86 04 48 0e 28    	and    %al,0x280e4804(%rsi)
    5be3:	83 05 02 f8 0a 0e 20 	addl   $0x20,0xe0af802(%rip)        # e0b53ec <_end+0xe0ad37c>
    5bea:	45 0e                	rex.RB (bad) 
    5bec:	18 46 0e             	sbb    %al,0xe(%rsi)
    5bef:	10 44 0e 08          	adc    %al,0x8(%rsi,%rcx,1)
    5bf3:	51                   	push   %rcx
    5bf4:	0b 71 0e             	or     0xe(%rcx),%esi
    5bf7:	20 41 0e             	and    %al,0xe(%rcx)
    5bfa:	18 42 0e             	sbb    %al,0xe(%rdx)
    5bfd:	10 42 0e             	adc    %al,0xe(%rdx)
    5c00:	08 00                	or     %al,(%rax)
    5c02:	00 00                	add    %al,(%rax)
    5c04:	10 00                	adc    %al,(%rax)
    5c06:	00 00                	add    %al,(%rax)
    5c08:	60                   	(bad)  
    5c09:	05 00 00 54 d8       	add    $0xd8540000,%eax
    5c0e:	ff                   	(bad)  
    5c0f:	ff 0a                	decl   (%rdx)
    5c11:	03 00                	add    (%rax),%eax
    5c13:	00 00                	add    %al,(%rax)
    5c15:	00 00                	add    %al,(%rax)
    5c17:	00 4c 00 00          	add    %cl,0x0(%rax,%rax,1)
    5c1b:	00 74 05 00          	add    %dh,0x0(%rbp,%rax,1)
    5c1f:	00 50 db             	add    %dl,-0x25(%rax)
    5c22:	ff                   	(bad)  
    5c23:	ff e2                	jmpq   *%rdx
    5c25:	01 00                	add    %eax,(%rax)
    5c27:	00 00                	add    %al,(%rax)
    5c29:	46 0e                	rex.RX (bad) 
    5c2b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5c31:	8e 03                	mov    (%rbx),%es
    5c33:	45 0e                	rex.RB (bad) 
    5c35:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5c3b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86306a85 <_end+0xffffffff862fea15>
    5c41:	06                   	(bad)  
    5c42:	43 0e                	rex.XB (bad) 
    5c44:	38 83 07 44 0e b0    	cmp    %al,-0x4ff1bbf9(%rbx)
    5c4a:	01 03                	add    %eax,(%rbx)
    5c4c:	66 01 0a             	add    %cx,(%rdx)
    5c4f:	0e                   	(bad)  
    5c50:	38 44 0e 30          	cmp    %al,0x30(%rsi,%rcx,1)
    5c54:	41 0e                	rex.B (bad) 
    5c56:	28 42 0e             	sub    %al,0xe(%rdx)
    5c59:	20 42 0e             	and    %al,0xe(%rdx)
    5c5c:	18 42 0e             	sbb    %al,0xe(%rdx)
    5c5f:	10 42 0e             	adc    %al,0xe(%rdx)
    5c62:	08 49 0b             	or     %cl,0xb(%rcx)
    5c65:	00 00                	add    %al,(%rax)
    5c67:	00 10                	add    %dl,(%rax)
    5c69:	00 00                	add    %al,(%rax)
    5c6b:	00 c4                	add    %al,%ah
    5c6d:	05 00 00 f0 dc       	add    $0xdcf00000,%eax
    5c72:	ff                   	(bad)  
    5c73:	ff 6a 00             	ljmp   *0x0(%rdx)
    5c76:	00 00                	add    %al,(%rax)
    5c78:	00 00                	add    %al,(%rax)
    5c7a:	00 00                	add    %al,(%rax)
    5c7c:	10 00                	adc    %al,(%rax)
    5c7e:	00 00                	add    %al,(%rax)
    5c80:	d8 05 00 00 4c dd    	fadds  -0x22b40000(%rip)        # ffffffffdd4c5c86 <_end+0xffffffffdd4bdc16>
    5c86:	ff                   	(bad)  
    5c87:	ff ce                	dec    %esi
    5c89:	00 00                	add    %al,(%rax)
    5c8b:	00 00                	add    %al,(%rax)
    5c8d:	00 00                	add    %al,(%rax)
    5c8f:	00 10                	add    %dl,(%rax)
    5c91:	00 00                	add    %al,(%rax)
    5c93:	00 ec                	add    %ch,%ah
    5c95:	05 00 00 08 de       	add    $0xde080000,%eax
    5c9a:	ff                   	(bad)  
    5c9b:	ff a2 01 00 00 00    	jmpq   *0x1(%rdx)
    5ca1:	00 00                	add    %al,(%rax)
    5ca3:	00 10                	add    %dl,(%rax)
    5ca5:	00 00                	add    %al,(%rax)
    5ca7:	00 00                	add    %al,(%rax)
    5ca9:	06                   	(bad)  
    5caa:	00 00                	add    %al,(%rax)
    5cac:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    5cad:	df ff                	(bad)  
    5caf:	ff 34 03             	pushq  (%rbx,%rax,1)
    5cb2:	00 00                	add    %al,(%rax)
    5cb4:	00 00                	add    %al,(%rax)
    5cb6:	00 00                	add    %al,(%rax)
    5cb8:	10 00                	adc    %al,(%rax)
    5cba:	00 00                	add    %al,(%rax)
    5cbc:	14 06                	adc    $0x6,%al
    5cbe:	00 00                	add    %al,(%rax)
    5cc0:	d0 e2                	shl    %dl
    5cc2:	ff                   	(bad)  
    5cc3:	ff 93 01 00 00 00    	callq  *0x1(%rbx)
    5cc9:	00 00                	add    %al,(%rax)
    5ccb:	00 10                	add    %dl,(%rax)
    5ccd:	00 00                	add    %al,(%rax)
    5ccf:	00 28                	add    %ch,(%rax)
    5cd1:	06                   	(bad)  
    5cd2:	00 00                	add    %al,(%rax)
    5cd4:	5c                   	pop    %rsp
    5cd5:	e4 ff                	in     $0xff,%al
    5cd7:	ff 07                	incl   (%rdi)
    5cd9:	00 00                	add    %al,(%rax)
    5cdb:	00 00                	add    %al,(%rax)
    5cdd:	00 00                	add    %al,(%rax)
    5cdf:	00 10                	add    %dl,(%rax)
    5ce1:	00 00                	add    %al,(%rax)
    5ce3:	00 3c 06             	add    %bh,(%rsi,%rax,1)
    5ce6:	00 00                	add    %al,(%rax)
    5ce8:	58                   	pop    %rax
    5ce9:	e4 ff                	in     $0xff,%al
    5ceb:	ff 09                	decl   (%rcx)
    5ced:	00 00                	add    %al,(%rax)
    5cef:	00 00                	add    %al,(%rax)
    5cf1:	00 00                	add    %al,(%rax)
    5cf3:	00 10                	add    %dl,(%rax)
    5cf5:	00 00                	add    %al,(%rax)
    5cf7:	00 50 06             	add    %dl,0x6(%rax)
    5cfa:	00 00                	add    %al,(%rax)
    5cfc:	54                   	push   %rsp
    5cfd:	e4 ff                	in     $0xff,%al
    5cff:	ff 09                	decl   (%rcx)
    5d01:	00 00                	add    %al,(%rax)
    5d03:	00 00                	add    %al,(%rax)
    5d05:	00 00                	add    %al,(%rax)
    5d07:	00 10                	add    %dl,(%rax)
    5d09:	00 00                	add    %al,(%rax)
    5d0b:	00 64 06 00          	add    %ah,0x0(%rsi,%rax,1)
    5d0f:	00 50 e4             	add    %dl,-0x1c(%rax)
    5d12:	ff                   	(bad)  
    5d13:	ff 12                	callq  *(%rdx)
    5d15:	00 00                	add    %al,(%rax)
    5d17:	00 00                	add    %al,(%rax)
    5d19:	00 00                	add    %al,(%rax)
    5d1b:	00 10                	add    %dl,(%rax)
    5d1d:	00 00                	add    %al,(%rax)
    5d1f:	00 78 06             	add    %bh,0x6(%rax)
    5d22:	00 00                	add    %al,(%rax)
    5d24:	5c                   	pop    %rsp
    5d25:	e4 ff                	in     $0xff,%al
    5d27:	ff 12                	callq  *(%rdx)
    5d29:	00 00                	add    %al,(%rax)
    5d2b:	00 00                	add    %al,(%rax)
    5d2d:	00 00                	add    %al,(%rax)
    5d2f:	00 10                	add    %dl,(%rax)
    5d31:	00 00                	add    %al,(%rax)
    5d33:	00 8c 06 00 00 68 e4 	add    %cl,-0x1b980000(%rsi,%rax,1)
    5d3a:	ff                   	(bad)  
    5d3b:	ff 47 00             	incl   0x0(%rdi)
    5d3e:	00 00                	add    %al,(%rax)
    5d40:	00 00                	add    %al,(%rax)
    5d42:	00 00                	add    %al,(%rax)
    5d44:	10 00                	adc    %al,(%rax)
    5d46:	00 00                	add    %al,(%rax)
    5d48:	a0 06 00 00 a4 e4 ff 	movabs 0x16ffffe4a4000006,%al
    5d4f:	ff 16 
    5d51:	00 00                	add    %al,(%rax)
    5d53:	00 00                	add    %al,(%rax)
    5d55:	00 00                	add    %al,(%rax)
    5d57:	00 10                	add    %dl,(%rax)
    5d59:	00 00                	add    %al,(%rax)
    5d5b:	00 b4 06 00 00 b0 e4 	add    %dh,-0x1b500000(%rsi,%rax,1)
    5d62:	ff                   	(bad)  
    5d63:	ff 08                	decl   (%rax)
    5d65:	00 00                	add    %al,(%rax)
    5d67:	00 00                	add    %al,(%rax)
    5d69:	00 00                	add    %al,(%rax)
    5d6b:	00 10                	add    %dl,(%rax)
    5d6d:	00 00                	add    %al,(%rax)
    5d6f:	00 c8                	add    %cl,%al
    5d71:	06                   	(bad)  
    5d72:	00 00                	add    %al,(%rax)
    5d74:	ac                   	lods   %ds:(%rsi),%al
    5d75:	e4 ff                	in     $0xff,%al
    5d77:	ff 08                	decl   (%rax)
    5d79:	00 00                	add    %al,(%rax)
    5d7b:	00 00                	add    %al,(%rax)
    5d7d:	00 00                	add    %al,(%rax)
    5d7f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    5d83:	00 dc                	add    %bl,%ah
    5d85:	06                   	(bad)  
    5d86:	00 00                	add    %al,(%rax)
    5d88:	a8 e4                	test   $0xe4,%al
    5d8a:	ff                   	(bad)  
    5d8b:	ff 65 00             	jmpq   *0x0(%rbp)
    5d8e:	00 00                	add    %al,(%rax)
    5d90:	00 46 0e             	add    %al,0xe(%rsi)
    5d93:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    5d99:	8e 03                	mov    (%rbx),%es
    5d9b:	45 0e                	rex.RB (bad) 
    5d9d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    5da3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86306bed <_end+0xffffffff862feb7d>
    5da9:	06                   	(bad)  
    5daa:	48 0e                	rex.W (bad) 
    5dac:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    5db2:	6e                   	outsb  %ds:(%rsi),(%dx)
    5db3:	0e                   	(bad)  
    5db4:	38 41 0e             	cmp    %al,0xe(%rcx)
    5db7:	30 41 0e             	xor    %al,0xe(%rcx)
    5dba:	28 42 0e             	sub    %al,0xe(%rdx)
    5dbd:	20 42 0e             	and    %al,0xe(%rdx)
    5dc0:	18 42 0e             	sbb    %al,0xe(%rdx)
    5dc3:	10 42 0e             	adc    %al,0xe(%rdx)
    5dc6:	08 00                	or     %al,(%rax)
    5dc8:	10 00                	adc    %al,(%rax)
    5dca:	00 00                	add    %al,(%rax)
    5dcc:	24 07                	and    $0x7,%al
    5dce:	00 00                	add    %al,(%rax)
    5dd0:	d0 e4                	shl    %ah
    5dd2:	ff                   	(bad)  
    5dd3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 5dd9 <__GNU_EH_FRAME_HDR+0x8b9>
    5dd9:	00 00                	add    %al,(%rax)
	...

0000000000005ddc <__FRAME_END__>:
    5ddc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000007cf0 <__frame_dummy_init_array_entry>:
    7cf0:	b0 1c                	mov    $0x1c,%al
    7cf2:	00 00                	add    %al,(%rax)
    7cf4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000007cf8 <__do_global_dtors_aux_fini_array_entry>:
    7cf8:	70 1c                	jo     7d16 <errpat+0x16>
    7cfa:	00 00                	add    %al,(%rax)
    7cfc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000007d00 <errpat>:
    7d00:	80 54 00 00 00       	adcb   $0x0,0x0(%rax,%rax,1)
    7d05:	00 00                	add    %al,(%rax)
    7d07:	00 89 54 00 00 00    	add    %cl,0x54(%rcx)
    7d0d:	00 00                	add    %al,(%rax)
    7d0f:	00 92 54 00 00 00    	add    %dl,0x54(%rdx)
    7d15:	00 00                	add    %al,(%rax)
    7d17:	00 9b 54 00 00 00    	add    %bl,0x54(%rbx)
    7d1d:	00 00                	add    %al,(%rax)
	...

0000000000007d20 <scipat>:
    7d20:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    7d21:	54                   	push   %rsp
    7d22:	00 00                	add    %al,(%rax)
    7d24:	00 00                	add    %al,(%rax)
    7d26:	00 00                	add    %al,(%rax)
    7d28:	ad                   	lods   %ds:(%rsi),%eax
    7d29:	54                   	push   %rsp
    7d2a:	00 00                	add    %al,(%rax)
    7d2c:	00 00                	add    %al,(%rax)
    7d2e:	00 00                	add    %al,(%rax)
    7d30:	b6 54                	mov    $0x54,%dh
    7d32:	00 00                	add    %al,(%rax)
    7d34:	00 00                	add    %al,(%rax)
    7d36:	00 00                	add    %al,(%rax)
    7d38:	bf 54 00 00 00       	mov    $0x54,%edi
    7d3d:	00 00                	add    %al,(%rax)
	...

0000000000007d40 <floatpat>:
    7d40:	c8 54 00 00          	enterq $0x54,$0x0
    7d44:	00 00                	add    %al,(%rax)
    7d46:	00 00                	add    %al,(%rax)
    7d48:	d1 54 00 00          	rcll   0x0(%rax,%rax,1)
    7d4c:	00 00                	add    %al,(%rax)
    7d4e:	00 00                	add    %al,(%rax)
    7d50:	da 54 00 00          	ficoml 0x0(%rax,%rax,1)
    7d54:	00 00                	add    %al,(%rax)
    7d56:	00 00                	add    %al,(%rax)
    7d58:	e3 54                	jrcxz  7dae <_DYNAMIC+0x2e>
    7d5a:	00 00                	add    %al,(%rax)
    7d5c:	00 00                	add    %al,(%rax)
	...

0000000000007d60 <intpat>:
    7d60:	ec                   	in     (%dx),%al
    7d61:	54                   	push   %rsp
    7d62:	00 00                	add    %al,(%rax)
    7d64:	00 00                	add    %al,(%rax)
    7d66:	00 00                	add    %al,(%rax)
    7d68:	f1                   	icebp  
    7d69:	54                   	push   %rsp
    7d6a:	00 00                	add    %al,(%rax)
    7d6c:	00 00                	add    %al,(%rax)
    7d6e:	00 00                	add    %al,(%rax)
    7d70:	f6 54 00 00          	notb   0x0(%rax,%rax,1)
    7d74:	00 00                	add    %al,(%rax)
    7d76:	00 00                	add    %al,(%rax)
    7d78:	fb                   	sti    
    7d79:	54                   	push   %rsp
    7d7a:	00 00                	add    %al,(%rax)
    7d7c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000007d80 <_DYNAMIC>:
    7d80:	01 00                	add    %eax,(%rax)
    7d82:	00 00                	add    %al,(%rax)
    7d84:	00 00                	add    %al,(%rax)
    7d86:	00 00                	add    %al,(%rax)
    7d88:	01 00                	add    %eax,(%rax)
    7d8a:	00 00                	add    %al,(%rax)
    7d8c:	00 00                	add    %al,(%rax)
    7d8e:	00 00                	add    %al,(%rax)
    7d90:	0c 00                	or     $0x0,%al
    7d92:	00 00                	add    %al,(%rax)
    7d94:	00 00                	add    %al,(%rax)
    7d96:	00 00                	add    %al,(%rax)
    7d98:	00 10                	add    %dl,(%rax)
    7d9a:	00 00                	add    %al,(%rax)
    7d9c:	00 00                	add    %al,(%rax)
    7d9e:	00 00                	add    %al,(%rax)
    7da0:	0d 00 00 00 00       	or     $0x0,%eax
    7da5:	00 00                	add    %al,(%rax)
    7da7:	00 a8 42 00 00 00    	add    %ch,0x42(%rax)
    7dad:	00 00                	add    %al,(%rax)
    7daf:	00 19                	add    %bl,(%rcx)
    7db1:	00 00                	add    %al,(%rax)
    7db3:	00 00                	add    %al,(%rax)
    7db5:	00 00                	add    %al,(%rax)
    7db7:	00 f0                	add    %dh,%al
    7db9:	7c 00                	jl     7dbb <_DYNAMIC+0x3b>
    7dbb:	00 00                	add    %al,(%rax)
    7dbd:	00 00                	add    %al,(%rax)
    7dbf:	00 1b                	add    %bl,(%rbx)
    7dc1:	00 00                	add    %al,(%rax)
    7dc3:	00 00                	add    %al,(%rax)
    7dc5:	00 00                	add    %al,(%rax)
    7dc7:	00 08                	add    %cl,(%rax)
    7dc9:	00 00                	add    %al,(%rax)
    7dcb:	00 00                	add    %al,(%rax)
    7dcd:	00 00                	add    %al,(%rax)
    7dcf:	00 1a                	add    %bl,(%rdx)
    7dd1:	00 00                	add    %al,(%rax)
    7dd3:	00 00                	add    %al,(%rax)
    7dd5:	00 00                	add    %al,(%rax)
    7dd7:	00 f8                	add    %bh,%al
    7dd9:	7c 00                	jl     7ddb <_DYNAMIC+0x5b>
    7ddb:	00 00                	add    %al,(%rax)
    7ddd:	00 00                	add    %al,(%rax)
    7ddf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    7de2:	00 00                	add    %al,(%rax)
    7de4:	00 00                	add    %al,(%rax)
    7de6:	00 00                	add    %al,(%rax)
    7de8:	08 00                	or     %al,(%rax)
    7dea:	00 00                	add    %al,(%rax)
    7dec:	00 00                	add    %al,(%rax)
    7dee:	00 00                	add    %al,(%rax)
    7df0:	f5                   	cmc    
    7df1:	fe                   	(bad)  
    7df2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7df5:	00 00                	add    %al,(%rax)
    7df7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    7dfd:	00 00                	add    %al,(%rax)
    7dff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7e05 <_DYNAMIC+0x85>
    7e05:	00 00                	add    %al,(%rax)
    7e07:	00 18                	add    %bl,(%rax)
    7e09:	05 00 00 00 00       	add    $0x0,%eax
    7e0e:	00 00                	add    %al,(%rax)
    7e10:	06                   	(bad)  
    7e11:	00 00                	add    %al,(%rax)
    7e13:	00 00                	add    %al,(%rax)
    7e15:	00 00                	add    %al,(%rax)
    7e17:	00 c8                	add    %cl,%al
    7e19:	03 00                	add    (%rax),%eax
    7e1b:	00 00                	add    %al,(%rax)
    7e1d:	00 00                	add    %al,(%rax)
    7e1f:	00 0a                	add    %cl,(%rdx)
    7e21:	00 00                	add    %al,(%rax)
    7e23:	00 00                	add    %al,(%rax)
    7e25:	00 00                	add    %al,(%rax)
    7e27:	00 ea                	add    %ch,%dl
    7e29:	00 00                	add    %al,(%rax)
    7e2b:	00 00                	add    %al,(%rax)
    7e2d:	00 00                	add    %al,(%rax)
    7e2f:	00 0b                	add    %cl,(%rbx)
    7e31:	00 00                	add    %al,(%rax)
    7e33:	00 00                	add    %al,(%rax)
    7e35:	00 00                	add    %al,(%rax)
    7e37:	00 18                	add    %bl,(%rax)
    7e39:	00 00                	add    %al,(%rax)
    7e3b:	00 00                	add    %al,(%rax)
    7e3d:	00 00                	add    %al,(%rax)
    7e3f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 7e45 <_DYNAMIC+0xc5>
	...
    7e4d:	00 00                	add    %al,(%rax)
    7e4f:	00 03                	add    %al,(%rbx)
    7e51:	00 00                	add    %al,(%rax)
    7e53:	00 00                	add    %al,(%rax)
    7e55:	00 00                	add    %al,(%rax)
    7e57:	00 70 7f             	add    %dh,0x7f(%rax)
    7e5a:	00 00                	add    %al,(%rax)
    7e5c:	00 00                	add    %al,(%rax)
    7e5e:	00 00                	add    %al,(%rax)
    7e60:	02 00                	add    (%rax),%al
    7e62:	00 00                	add    %al,(%rax)
    7e64:	00 00                	add    %al,(%rax)
    7e66:	00 00                	add    %al,(%rax)
    7e68:	c0 00 00             	rolb   $0x0,(%rax)
    7e6b:	00 00                	add    %al,(%rax)
    7e6d:	00 00                	add    %al,(%rax)
    7e6f:	00 14 00             	add    %dl,(%rax,%rax,1)
    7e72:	00 00                	add    %al,(%rax)
    7e74:	00 00                	add    %al,(%rax)
    7e76:	00 00                	add    %al,(%rax)
    7e78:	07                   	(bad)  
    7e79:	00 00                	add    %al,(%rax)
    7e7b:	00 00                	add    %al,(%rax)
    7e7d:	00 00                	add    %al,(%rax)
    7e7f:	00 17                	add    %dl,(%rdi)
    7e81:	00 00                	add    %al,(%rax)
    7e83:	00 00                	add    %al,(%rax)
    7e85:	00 00                	add    %al,(%rax)
    7e87:	00 f8                	add    %bh,%al
    7e89:	08 00                	or     %al,(%rax)
    7e8b:	00 00                	add    %al,(%rax)
    7e8d:	00 00                	add    %al,(%rax)
    7e8f:	00 07                	add    %al,(%rdi)
    7e91:	00 00                	add    %al,(%rax)
    7e93:	00 00                	add    %al,(%rax)
    7e95:	00 00                	add    %al,(%rax)
    7e97:	00 70 06             	add    %dh,0x6(%rax)
    7e9a:	00 00                	add    %al,(%rax)
    7e9c:	00 00                	add    %al,(%rax)
    7e9e:	00 00                	add    %al,(%rax)
    7ea0:	08 00                	or     %al,(%rax)
    7ea2:	00 00                	add    %al,(%rax)
    7ea4:	00 00                	add    %al,(%rax)
    7ea6:	00 00                	add    %al,(%rax)
    7ea8:	88 02                	mov    %al,(%rdx)
    7eaa:	00 00                	add    %al,(%rax)
    7eac:	00 00                	add    %al,(%rax)
    7eae:	00 00                	add    %al,(%rax)
    7eb0:	09 00                	or     %eax,(%rax)
    7eb2:	00 00                	add    %al,(%rax)
    7eb4:	00 00                	add    %al,(%rax)
    7eb6:	00 00                	add    %al,(%rax)
    7eb8:	18 00                	sbb    %al,(%rax)
    7eba:	00 00                	add    %al,(%rax)
    7ebc:	00 00                	add    %al,(%rax)
    7ebe:	00 00                	add    %al,(%rax)
    7ec0:	1e                   	(bad)  
    7ec1:	00 00                	add    %al,(%rax)
    7ec3:	00 00                	add    %al,(%rax)
    7ec5:	00 00                	add    %al,(%rax)
    7ec7:	00 08                	add    %cl,(%rax)
    7ec9:	00 00                	add    %al,(%rax)
    7ecb:	00 00                	add    %al,(%rax)
    7ecd:	00 00                	add    %al,(%rax)
    7ecf:	00 fb                	add    %bh,%bl
    7ed1:	ff                   	(bad)  
    7ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ed5:	00 00                	add    %al,(%rax)
    7ed7:	00 01                	add    %al,(%rcx)
    7ed9:	00 00                	add    %al,(%rax)
    7edb:	08 00                	or     %al,(%rax)
    7edd:	00 00                	add    %al,(%rax)
    7edf:	00 fe                	add    %bh,%dh
    7ee1:	ff                   	(bad)  
    7ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ee5:	00 00                	add    %al,(%rax)
    7ee7:	00 20                	add    %ah,(%rax)
    7ee9:	06                   	(bad)  
    7eea:	00 00                	add    %al,(%rax)
    7eec:	00 00                	add    %al,(%rax)
    7eee:	00 00                	add    %al,(%rax)
    7ef0:	ff                   	(bad)  
    7ef1:	ff                   	(bad)  
    7ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    7ef5:	00 00                	add    %al,(%rax)
    7ef7:	00 01                	add    %al,(%rcx)
    7ef9:	00 00                	add    %al,(%rax)
    7efb:	00 00                	add    %al,(%rax)
    7efd:	00 00                	add    %al,(%rax)
    7eff:	00 f0                	add    %dh,%al
    7f01:	ff                   	(bad)  
    7f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    7f05:	00 00                	add    %al,(%rax)
    7f07:	00 02                	add    %al,(%rdx)
    7f09:	06                   	(bad)  
    7f0a:	00 00                	add    %al,(%rax)
    7f0c:	00 00                	add    %al,(%rax)
    7f0e:	00 00                	add    %al,(%rax)
    7f10:	f9                   	stc    
    7f11:	ff                   	(bad)  
    7f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    7f15:	00 00                	add    %al,(%rax)
    7f17:	00 16                	add    %dl,(%rsi)
	...

Disassembly of section .got:

0000000000007f70 <_GLOBAL_OFFSET_TABLE_>:
    7f70:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
	...
    7f88:	30 10                	xor    %dl,(%rax)
    7f8a:	00 00                	add    %al,(%rax)
    7f8c:	00 00                	add    %al,(%rax)
    7f8e:	00 00                	add    %al,(%rax)
    7f90:	40 10 00             	adc    %al,(%rax)
    7f93:	00 00                	add    %al,(%rax)
    7f95:	00 00                	add    %al,(%rax)
    7f97:	00 50 10             	add    %dl,0x10(%rax)
    7f9a:	00 00                	add    %al,(%rax)
    7f9c:	00 00                	add    %al,(%rax)
    7f9e:	00 00                	add    %al,(%rax)
    7fa0:	60                   	(bad)  
    7fa1:	10 00                	adc    %al,(%rax)
    7fa3:	00 00                	add    %al,(%rax)
    7fa5:	00 00                	add    %al,(%rax)
    7fa7:	00 70 10             	add    %dh,0x10(%rax)
    7faa:	00 00                	add    %al,(%rax)
    7fac:	00 00                	add    %al,(%rax)
    7fae:	00 00                	add    %al,(%rax)
    7fb0:	80 10 00             	adcb   $0x0,(%rax)
    7fb3:	00 00                	add    %al,(%rax)
    7fb5:	00 00                	add    %al,(%rax)
    7fb7:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    7fbd:	00 00                	add    %al,(%rax)
    7fbf:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
	...

Disassembly of section .data:

0000000000008000 <__data_start>:
	...

0000000000008008 <__dso_handle>:
    8008:	08 80 00 00 00 00    	or     %al,0x0(%rax)
	...

0000000000008010 <mem_name>:
    8010:	54                   	push   %rsp
    8011:	54                   	push   %rsp
    8012:	00 00                	add    %al,(%rax)
    8014:	00 00                	add    %al,(%rax)
    8016:	00 00                	add    %al,(%rax)
    8018:	5b                   	pop    %rbx
    8019:	54                   	push   %rsp
    801a:	00 00                	add    %al,(%rax)
    801c:	00 00                	add    %al,(%rax)
    801e:	00 00                	add    %al,(%rax)
    8020:	60                   	(bad)  
    8021:	54                   	push   %rsp
    8022:	00 00                	add    %al,(%rax)
    8024:	00 00                	add    %al,(%rax)
	...

0000000000008028 <default_num_contexts>:
    8028:	01 00                	add    %eax,(%rax)
	...

000000000000802c <seed3_volatile>:
    802c:	66 00 00             	data16 add %al,(%rax)
	...

Disassembly of section .bss:

0000000000008030 <completed.8061>:
	...

0000000000008040 <seed5_volatile>:
    8040:	00 00                	add    %al,(%rax)
	...

0000000000008044 <seed4_volatile>:
    8044:	00 00                	add    %al,(%rax)
	...

0000000000008048 <seed2_volatile>:
    8048:	00 00                	add    %al,(%rax)
	...

000000000000804c <seed1_volatile>:
    804c:	00 00                	add    %al,(%rax)
	...

0000000000008050 <stop_time_val>:
	...

0000000000008060 <start_time_val>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x7561f4d8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
