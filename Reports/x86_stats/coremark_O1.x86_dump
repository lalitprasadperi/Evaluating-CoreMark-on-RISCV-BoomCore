
coremark.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 8e 89 dc 63 39    	add    %cl,0x3963dc89(%rsi)
 36d:	8d 4d 58             	lea    0x58(%rbp),%ecx
 370:	43 6e                	rex.XB outsb %ds:(%rsi),(%dx)
 372:	96                   	xchg   %eax,%esi
 373:	f1                   	icebp  
 374:	7a 28                	jp     39e <_init-0xc62>
 376:	6d                   	insl   (%dx),%es:(%rdi)
 377:	91                   	xchg   %eax,%ecx
 378:	b4 2d                	mov    $0x2d,%ah
 37a:	4a                   	rex.WX
 37b:	77                   	.byte 0x77

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0c 00                	or     $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	00 00                	add    %al,(%rax)
 3be:	00 00                	add    %al,(%rax)
 3c0:	d1 65 ce             	shll   -0x32(%rbp)
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	6c                   	insb   (%dx),%es:(%rdi)
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 2e                	add    %ch,(%rsi)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 9e 00 00 00 20    	add    %bl,0x20000000(%rsi)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 18                	add    %bl,(%rax)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 3d 00 00 00 12    	add    %bh,0x12000000(%rip)        # 12000445 <_end+0x11ffa3d5>
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 1d 00 00 00 12    	add    %bl,0x12000000(%rip)        # 1200045d <_end+0x11ffa3ed>
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 5a 00             	add    %bl,0x0(%rdx)
 472:	00 00                	add    %al,(%rax)
 474:	12 00                	adc    (%rax),%al
	...
 486:	00 00                	add    %al,(%rax)
 488:	ba 00 00 00 20       	mov    $0x20000000,%edx
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 36                	add    %dh,(%rsi)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 12                	add    %dl,(%rdx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 0b                	add    %cl,(%rbx)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 c9                	add    %cl,%cl
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 20                	add    %ah,(%rax)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 4b 00             	add    %cl,0x0(%rbx)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000500 <.dynstr>:
 500:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 504:	63 2e                	movslq (%rsi),%ebp
 506:	73 6f                	jae    577 <_init-0xa89>
 508:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 50d:	70 72                	jo     581 <_init-0xa7f>
 50f:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
 516:	6b 00 70             	imul   $0x70,(%rax),%eax
 519:	75 74                	jne    58f <_init-0xa71>
 51b:	73 00                	jae    51d <_init-0xae3>
 51d:	5f                   	pop    %rdi
 51e:	5f                   	pop    %rdi
 51f:	73 74                	jae    595 <_init-0xa6b>
 521:	61                   	(bad)  
 522:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 525:	63 68 6b             	movslq 0x6b(%rax),%ebp
 528:	5f                   	pop    %rdi
 529:	66 61                	data16 (bad) 
 52b:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 532:	68 
 533:	61                   	(bad)  
 534:	72 00                	jb     536 <_init-0xaca>
 536:	6d                   	insl   (%dx),%es:(%rdi)
 537:	61                   	(bad)  
 538:	6c                   	insb   (%dx),%es:(%rdi)
 539:	6c                   	insb   (%dx),%es:(%rdi)
 53a:	6f                   	outsl  %ds:(%rsi),(%dx)
 53b:	63 00                	movslq (%rax),%eax
 53d:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
 541:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 545:	74 74                	je     5bb <_init-0xa45>
 547:	69 6d 65 00 5f 5f 63 	imul   $0x635f5f00,0x65(%rbp),%ebp
 54e:	78 61                	js     5b1 <_init-0xa4f>
 550:	5f                   	pop    %rdi
 551:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 557:	7a 65                	jp     5be <_init-0xa42>
 559:	00 5f 5f             	add    %bl,0x5f(%rdi)
 55c:	6c                   	insb   (%dx),%es:(%rdi)
 55d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 564:	72 74                	jb     5da <_init-0xa26>
 566:	5f                   	pop    %rdi
 567:	6d                   	insl   (%dx),%es:(%rdi)
 568:	61                   	(bad)  
 569:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 570:	00 47 4c             	add    %al,0x4c(%rdi)
 573:	49                   	rex.WB
 574:	42                   	rex.X
 575:	43 5f                	rex.XB pop %r15
 577:	32 2e                	xor    (%rsi),%ch
 579:	33 2e                	xor    (%rsi),%ebp
 57b:	34 00                	xor    $0x0,%al
 57d:	47                   	rex.RXB
 57e:	4c                   	rex.WR
 57f:	49                   	rex.WB
 580:	42                   	rex.X
 581:	43 5f                	rex.XB pop %r15
 583:	32 2e                	xor    (%rsi),%ch
 585:	34 00                	xor    $0x0,%al
 587:	47                   	rex.RXB
 588:	4c                   	rex.WR
 589:	49                   	rex.WB
 58a:	42                   	rex.X
 58b:	43 5f                	rex.XB pop %r15
 58d:	32 2e                	xor    (%rsi),%ch
 58f:	31 37                	xor    %esi,(%rdi)
 591:	00 47 4c             	add    %al,0x4c(%rdi)
 594:	49                   	rex.WB
 595:	42                   	rex.X
 596:	43 5f                	rex.XB pop %r15
 598:	32 2e                	xor    (%rsi),%ch
 59a:	32 2e                	xor    (%rsi),%ch
 59c:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 5a1:	4d 5f                	rex.WRB pop %r15
 5a3:	64 65 72 65          	fs gs jb 60c <_init-0x9f4>
 5a7:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5ae:	4d 
 5af:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5b1:	6f                   	outsl  %ds:(%rsi),(%dx)
 5b2:	6e                   	outsb  %ds:(%rsi),(%dx)
 5b3:	65 54                	gs push %rsp
 5b5:	61                   	(bad)  
 5b6:	62                   	(bad)  
 5b7:	6c                   	insb   (%dx),%es:(%rdi)
 5b8:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5bc:	67 6d                	insl   (%dx),%es:(%edi)
 5be:	6f                   	outsl  %ds:(%rsi),(%dx)
 5bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 5c0:	5f                   	pop    %rdi
 5c1:	73 74                	jae    637 <_init-0x9c9>
 5c3:	61                   	(bad)  
 5c4:	72 74                	jb     63a <_init-0x9c6>
 5c6:	5f                   	pop    %rdi
 5c7:	5f                   	pop    %rdi
 5c8:	00 5f 49             	add    %bl,0x49(%rdi)
 5cb:	54                   	push   %rsp
 5cc:	4d 5f                	rex.WRB pop %r15
 5ce:	72 65                	jb     635 <_init-0x9cb>
 5d0:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5d7:	4d 
 5d8:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5da:	6f                   	outsl  %ds:(%rsi),(%dx)
 5db:	6e                   	outsb  %ds:(%rsi),(%dx)
 5dc:	65 54                	gs push %rsp
 5de:	61                   	(bad)  
 5df:	62                   	.byte 0x62
 5e0:	6c                   	insb   (%dx),%es:(%rdi)
 5e1:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000005e4 <.gnu.version>:
 5e4:	00 00                	add    %al,(%rax)
 5e6:	02 00                	add    (%rax),%al
 5e8:	02 00                	add    (%rax),%al
 5ea:	00 00                	add    %al,(%rax)
 5ec:	02 00                	add    (%rax),%al
 5ee:	03 00                	add    (%rax),%eax
 5f0:	04 00                	add    $0x0,%al
 5f2:	02 00                	add    (%rax),%al
 5f4:	00 00                	add    %al,(%rax)
 5f6:	02 00                	add    (%rax),%al
 5f8:	05 00 00 00 02       	add    $0x2000000,%eax
	...

Disassembly of section .gnu.version_r:

0000000000000600 <.gnu.version_r>:
 600:	01 00                	add    %eax,(%rax)
 602:	04 00                	add    $0x0,%al
 604:	01 00                	add    %eax,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	10 00                	adc    %al,(%rax)
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	74 19                	je     62b <_init-0x9d5>
 612:	69 09 00 00 05 00    	imul   $0x50000,(%rcx),%ecx
 618:	71 00                	jno    61a <_init-0x9e6>
 61a:	00 00                	add    %al,(%rax)
 61c:	10 00                	adc    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	14 69                	adc    $0x69,%al
 622:	69 0d 00 00 04 00 7d 	imul   $0x7d,0x40000(%rip),%ecx        # 4062c <_end+0x3a5bc>
 629:	00 00 00 
 62c:	10 00                	adc    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	97                   	xchg   %eax,%edi
 631:	91                   	xchg   %eax,%ecx
 632:	96                   	xchg   %eax,%esi
 633:	06                   	(bad)  
 634:	00 00                	add    %al,(%rax)
 636:	03 00                	add    (%rax),%eax
 638:	87 00                	xchg   %eax,(%rax)
 63a:	00 00                	add    %al,(%rax)
 63c:	10 00                	adc    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	75 1a                	jne    65c <_init-0x9a4>
 642:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 648:	92                   	xchg   %eax,%edx
 649:	00 00                	add    %al,(%rax)
 64b:	00 00                	add    %al,(%rax)
 64d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000650 <.rela.dyn>:
 650:	f0 5c                	lock pop %rsp
 652:	00 00                	add    %al,(%rax)
 654:	00 00                	add    %al,(%rax)
 656:	00 00                	add    %al,(%rax)
 658:	08 00                	or     %al,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	00 12                	add    %dl,(%rdx)
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	f8                   	clc    
 669:	5c                   	pop    %rsp
 66a:	00 00                	add    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	08 00                	or     %al,(%rax)
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	c0 11 00             	rclb   $0x0,(%rcx)
 67b:	00 00                	add    %al,(%rax)
 67d:	00 00                	add    %al,(%rax)
 67f:	00 00                	add    %al,(%rax)
 681:	5d                   	pop    %rbp
 682:	00 00                	add    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	08 00                	or     %al,(%rax)
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	d0 34 00             	shlb   (%rax,%rax,1)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 08                	add    %cl,(%rax)
 699:	5d                   	pop    %rbp
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	08 00                	or     %al,(%rax)
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	d9 34 00             	fnstenv (%rax,%rax,1)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 10                	add    %dl,(%rax)
 6b1:	5d                   	pop    %rbp
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	08 00                	or     %al,(%rax)
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	e2 34                	loop   6f6 <_init-0x90a>
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 00                	add    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	18 5d 00             	sbb    %bl,0x0(%rbp)
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 08                	add    %cl,(%rax)
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 eb                	add    %ch,%bl
 6d9:	34 00                	xor    $0x0,%al
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 20                	add    %ah,(%rax)
 6e1:	5d                   	pop    %rbp
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	08 00                	or     %al,(%rax)
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	f4                   	hlt    
 6f1:	34 00                	xor    $0x0,%al
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 28                	add    %ch,(%rax)
 6f9:	5d                   	pop    %rbp
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	08 00                	or     %al,(%rax)
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	fd                   	std    
 709:	34 00                	xor    $0x0,%al
 70b:	00 00                	add    %al,(%rax)
 70d:	00 00                	add    %al,(%rax)
 70f:	00 30                	add    %dh,(%rax)
 711:	5d                   	pop    %rbp
 712:	00 00                	add    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	08 00                	or     %al,(%rax)
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	35 00 00 00 00       	xor    $0x0,%eax
 726:	00 00                	add    %al,(%rax)
 728:	38 5d 00             	cmp    %bl,0x0(%rbp)
 72b:	00 00                	add    %al,(%rax)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 08                	add    %cl,(%rax)
 731:	00 00                	add    %al,(%rax)
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 0f                	add    %cl,(%rdi)
 739:	35 00 00 00 00       	xor    $0x0,%eax
 73e:	00 00                	add    %al,(%rax)
 740:	40 5d                	rex pop %rbp
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	08 00                	or     %al,(%rax)
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	18 35 00 00 00 00    	sbb    %dh,0x0(%rip)        # 756 <_init-0x8aa>
 756:	00 00                	add    %al,(%rax)
 758:	48 5d                	rex.W pop %rbp
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	08 00                	or     %al,(%rax)
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	21 35 00 00 00 00    	and    %esi,0x0(%rip)        # 76e <_init-0x892>
 76e:	00 00                	add    %al,(%rax)
 770:	50                   	push   %rax
 771:	5d                   	pop    %rbp
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	08 00                	or     %al,(%rax)
 77a:	00 00                	add    %al,(%rax)
 77c:	00 00                	add    %al,(%rax)
 77e:	00 00                	add    %al,(%rax)
 780:	2a 35 00 00 00 00    	sub    0x0(%rip),%dh        # 786 <_init-0x87a>
 786:	00 00                	add    %al,(%rax)
 788:	58                   	pop    %rax
 789:	5d                   	pop    %rbp
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	08 00                	or     %al,(%rax)
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	33 35 00 00 00 00    	xor    0x0(%rip),%esi        # 79e <_init-0x862>
 79e:	00 00                	add    %al,(%rax)
 7a0:	60                   	(bad)  
 7a1:	5d                   	pop    %rbp
 7a2:	00 00                	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	08 00                	or     %al,(%rax)
 7aa:	00 00                	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	3c 35                	cmp    $0x35,%al
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	68 5d 00 00 00       	pushq  $0x5d
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 08                	add    %cl,(%rax)
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 41 35             	add    %al,0x35(%rcx)
 7ca:	00 00                	add    %al,(%rax)
 7cc:	00 00                	add    %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	70 5d                	jo     82f <_init-0x7d1>
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	08 00                	or     %al,(%rax)
 7da:	00 00                	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	46 35 00 00 00 00    	rex.RX xor $0x0,%eax
 7e6:	00 00                	add    %al,(%rax)
 7e8:	78 5d                	js     847 <_init-0x7b9>
 7ea:	00 00                	add    %al,(%rax)
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	08 00                	or     %al,(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	4b 35 00 00 00 00    	rex.WXB xor $0x0,%rax
 7fe:	00 00                	add    %al,(%rax)
 800:	08 60 00             	or     %ah,0x0(%rax)
 803:	00 00                	add    %al,(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 08                	add    %cl,(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 00                	add    %al,(%rax)
 80d:	00 00                	add    %al,(%rax)
 80f:	00 08                	add    %cl,(%rax)
 811:	60                   	(bad)  
 812:	00 00                	add    %al,(%rax)
 814:	00 00                	add    %al,(%rax)
 816:	00 00                	add    %al,(%rax)
 818:	10 60 00             	adc    %ah,0x0(%rax)
 81b:	00 00                	add    %al,(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 08                	add    %cl,(%rax)
 821:	00 00                	add    %al,(%rax)
 823:	00 00                	add    %al,(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 54 34 00          	add    %dl,0x0(%rsp,%rsi,1)
 82b:	00 00                	add    %al,(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 18                	add    %bl,(%rax)
 831:	60                   	(bad)  
 832:	00 00                	add    %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	08 00                	or     %al,(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	5b                   	pop    %rbx
 841:	34 00                	xor    $0x0,%al
 843:	00 00                	add    %al,(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	00 20                	add    %ah,(%rax)
 849:	60                   	(bad)  
 84a:	00 00                	add    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	08 00                	or     %al,(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	60                   	(bad)  
 859:	34 00                	xor    $0x0,%al
 85b:	00 00                	add    %al,(%rax)
 85d:	00 00                	add    %al,(%rax)
 85f:	00 c0                	add    %al,%al
 861:	5f                   	pop    %rdi
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	06                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 03                	add    %al,(%rbx)
	...
 875:	00 00                	add    %al,(%rax)
 877:	00 c8                	add    %cl,%al
 879:	5f                   	pop    %rdi
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	06                   	(bad)  
 881:	00 00                	add    %al,(%rax)
 883:	00 07                	add    %al,(%rdi)
	...
 88d:	00 00                	add    %al,(%rax)
 88f:	00 d0                	add    %dl,%al
 891:	5f                   	pop    %rdi
 892:	00 00                	add    %al,(%rax)
 894:	00 00                	add    %al,(%rax)
 896:	00 00                	add    %al,(%rax)
 898:	06                   	(bad)  
 899:	00 00                	add    %al,(%rax)
 89b:	00 08                	add    %cl,(%rax)
	...
 8a5:	00 00                	add    %al,(%rax)
 8a7:	00 d8                	add    %bl,%al
 8a9:	5f                   	pop    %rdi
 8aa:	00 00                	add    %al,(%rax)
 8ac:	00 00                	add    %al,(%rax)
 8ae:	00 00                	add    %al,(%rax)
 8b0:	06                   	(bad)  
 8b1:	00 00                	add    %al,(%rax)
 8b3:	00 0b                	add    %cl,(%rbx)
	...
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 e0                	add    %ah,%al
 8c1:	5f                   	pop    %rdi
 8c2:	00 00                	add    %al,(%rax)
 8c4:	00 00                	add    %al,(%rax)
 8c6:	00 00                	add    %al,(%rax)
 8c8:	06                   	(bad)  
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000008d8 <.rela.plt>:
 8d8:	88 5f 00             	mov    %bl,0x0(%rdi)
 8db:	00 00                	add    %al,(%rax)
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 07                	add    %al,(%rdi)
 8e1:	00 00                	add    %al,(%rax)
 8e3:	00 01                	add    %al,(%rcx)
	...
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 90 5f 00 00 00    	add    %dl,0x5f(%rax)
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 07                	add    %al,(%rdi)
 8f9:	00 00                	add    %al,(%rax)
 8fb:	00 02                	add    %al,(%rdx)
	...
 905:	00 00                	add    %al,(%rax)
 907:	00 98 5f 00 00 00    	add    %bl,0x5f(%rax)
 90d:	00 00                	add    %al,(%rax)
 90f:	00 07                	add    %al,(%rdi)
 911:	00 00                	add    %al,(%rax)
 913:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 91e:	00 00                	add    %al,(%rax)
 920:	a0 5f 00 00 00 00 00 	movabs 0x70000000000005f,%al
 927:	00 07 
 929:	00 00                	add    %al,(%rax)
 92b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 931 <_init-0x6cf>
 931:	00 00                	add    %al,(%rax)
 933:	00 00                	add    %al,(%rax)
 935:	00 00                	add    %al,(%rax)
 937:	00 a8 5f 00 00 00    	add    %ch,0x5f(%rax)
 93d:	00 00                	add    %al,(%rax)
 93f:	00 07                	add    %al,(%rdi)
 941:	00 00                	add    %al,(%rax)
 943:	00 06                	add    %al,(%rsi)
	...
 94d:	00 00                	add    %al,(%rax)
 94f:	00 b0 5f 00 00 00    	add    %dh,0x5f(%rax)
 955:	00 00                	add    %al,(%rax)
 957:	00 07                	add    %al,(%rdi)
 959:	00 00                	add    %al,(%rax)
 95b:	00 09                	add    %cl,(%rcx)
	...
 965:	00 00                	add    %al,(%rax)
 967:	00 b8 5f 00 00 00    	add    %bh,0x5f(%rax)
 96d:	00 00                	add    %al,(%rax)
 96f:	00 07                	add    %al,(%rdi)
 971:	00 00                	add    %al,(%rax)
 973:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 4f 00 00 	mov    0x4fc1(%rip),%rax        # 5fd0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 52 4f 00 00    	pushq  0x4f52(%rip)        # 5f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 53 4f 00 00 	bnd jmpq *0x4f53(%rip)        # 5f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 35 4f 00 00 	bnd jmpq *0x4f35(%rip)        # 5fe0 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <free@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 cd 4e 00 00 	bnd jmpq *0x4ecd(%rip)        # 5f88 <free@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <putchar@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 c5 4e 00 00 	bnd jmpq *0x4ec5(%rip)        # 5f90 <putchar@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <puts@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 bd 4e 00 00 	bnd jmpq *0x4ebd(%rip)        # 5f98 <puts@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <clock_gettime@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 b5 4e 00 00 	bnd jmpq *0x4eb5(%rip)        # 5fa0 <clock_gettime@GLIBC_2.17>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <__stack_chk_fail@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 ad 4e 00 00 	bnd jmpq *0x4ead(%rip)        # 5fa8 <__stack_chk_fail@GLIBC_2.4>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <malloc@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 a5 4e 00 00 	bnd jmpq *0x4ea5(%rip)        # 5fb0 <malloc@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <__printf_chk@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 9d 4e 00 00 	bnd jmpq *0x4e9d(%rip)        # 5fb8 <__printf_chk@GLIBC_2.3.4>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 76 1d 00 00 	lea    0x1d76(%rip),%r8        # 2eb0 <__libc_csu_fini>
    113a:	48 8d 0d ff 1c 00 00 	lea    0x1cff(%rip),%rcx        # 2e40 <__libc_csu_init>
    1141:	48 8d 3d 79 08 00 00 	lea    0x879(%rip),%rdi        # 19c1 <main>
    1148:	ff 15 7a 4e 00 00    	callq  *0x4e7a(%rip)        # 5fc8 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d d9 4e 00 00 	lea    0x4ed9(%rip),%rdi        # 6030 <__TMC_END__>
    1157:	48 8d 05 d2 4e 00 00 	lea    0x4ed2(%rip),%rax        # 6030 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 56 4e 00 00 	mov    0x4e56(%rip),%rax        # 5fc0 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d a9 4e 00 00 	lea    0x4ea9(%rip),%rdi        # 6030 <__TMC_END__>
    1187:	48 8d 35 a2 4e 00 00 	lea    0x4ea2(%rip),%rsi        # 6030 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 2d 4e 00 00 	mov    0x4e2d(%rip),%rax        # 5fd8 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 65 4e 00 00 00 	cmpb   $0x0,0x4e65(%rip)        # 6030 <__TMC_END__>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 0a 4e 00 00 	cmpq   $0x0,0x4e0a(%rip)        # 5fe0 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 4e 00 00 	mov    0x4e26(%rip),%rdi        # 6008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 3d 4e 00 00 01 	movb   $0x1,0x4e3d(%rip)        # 6030 <__TMC_END__>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <cmp_idx>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	48 85 d2             	test   %rdx,%rdx
    1210:	74 0b                	je     121d <cmp_idx+0x14>
    1212:	0f bf 47 02          	movswl 0x2(%rdi),%eax
    1216:	0f bf 56 02          	movswl 0x2(%rsi),%edx
    121a:	29 d0                	sub    %edx,%eax
    121c:	c3                   	retq   
    121d:	0f b7 07             	movzwl (%rdi),%eax
    1220:	89 c2                	mov    %eax,%edx
    1222:	b2 00                	mov    $0x0,%dl
    1224:	66 c1 e8 08          	shr    $0x8,%ax
    1228:	09 d0                	or     %edx,%eax
    122a:	66 89 07             	mov    %ax,(%rdi)
    122d:	0f b7 06             	movzwl (%rsi),%eax
    1230:	89 c2                	mov    %eax,%edx
    1232:	b2 00                	mov    $0x0,%dl
    1234:	66 c1 e8 08          	shr    $0x8,%ax
    1238:	09 d0                	or     %edx,%eax
    123a:	66 89 06             	mov    %ax,(%rsi)
    123d:	eb d3                	jmp    1212 <cmp_idx+0x9>

000000000000123f <calc_func>:
    123f:	f3 0f 1e fa          	endbr64 
    1243:	41 55                	push   %r13
    1245:	41 54                	push   %r12
    1247:	55                   	push   %rbp
    1248:	53                   	push   %rbx
    1249:	48 83 ec 08          	sub    $0x8,%rsp
    124d:	0f b7 1f             	movzwl (%rdi),%ebx
    1250:	84 db                	test   %bl,%bl
    1252:	79 10                	jns    1264 <calc_func+0x25>
    1254:	89 d8                	mov    %ebx,%eax
    1256:	83 e0 7f             	and    $0x7f,%eax
    1259:	48 83 c4 08          	add    $0x8,%rsp
    125d:	5b                   	pop    %rbx
    125e:	5d                   	pop    %rbp
    125f:	41 5c                	pop    %r12
    1261:	41 5d                	pop    %r13
    1263:	c3                   	retq   
    1264:	49 89 fc             	mov    %rdi,%r12
    1267:	48 89 f5             	mov    %rsi,%rbp
    126a:	89 d8                	mov    %ebx,%eax
    126c:	66 c1 f8 03          	sar    $0x3,%ax
    1270:	89 c6                	mov    %eax,%esi
    1272:	83 e6 0f             	and    $0xf,%esi
    1275:	83 e0 0f             	and    $0xf,%eax
    1278:	c1 e0 04             	shl    $0x4,%eax
    127b:	09 f0                	or     %esi,%eax
    127d:	89 da                	mov    %ebx,%edx
    127f:	66 83 e2 07          	and    $0x7,%dx
    1283:	74 29                	je     12ae <calc_func+0x6f>
    1285:	41 89 dd             	mov    %ebx,%r13d
    1288:	66 83 fa 01          	cmp    $0x1,%dx
    128c:	75 57                	jne    12e5 <calc_func+0xa6>
    128e:	0f b7 55 60          	movzwl 0x60(%rbp),%edx
    1292:	0f bf f0             	movswl %ax,%esi
    1295:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    1299:	e8 d8 15 00 00       	callq  2876 <core_bench_matrix>
    129e:	41 89 c5             	mov    %eax,%r13d
    12a1:	66 83 7d 64 00       	cmpw   $0x0,0x64(%rbp)
    12a6:	75 3d                	jne    12e5 <calc_func+0xa6>
    12a8:	66 89 45 64          	mov    %ax,0x64(%rbp)
    12ac:	eb 37                	jmp    12e5 <calc_func+0xa6>
    12ae:	66 83 f8 22          	cmp    $0x22,%ax
    12b2:	be 22 00 00 00       	mov    $0x22,%esi
    12b7:	0f 4c c6             	cmovl  %esi,%eax
    12ba:	0f bf 4d 02          	movswl 0x2(%rbp),%ecx
    12be:	0f bf 55 00          	movswl 0x0(%rbp),%edx
    12c2:	48 8b 75 20          	mov    0x20(%rbp),%rsi
    12c6:	8b 7d 28             	mov    0x28(%rbp),%edi
    12c9:	44 0f b7 4d 60       	movzwl 0x60(%rbp),%r9d
    12ce:	44 0f bf c0          	movswl %ax,%r8d
    12d2:	e8 4e 18 00 00       	callq  2b25 <core_bench_state>
    12d7:	41 89 c5             	mov    %eax,%r13d
    12da:	66 83 7d 66 00       	cmpw   $0x0,0x66(%rbp)
    12df:	75 04                	jne    12e5 <calc_func+0xa6>
    12e1:	66 89 45 66          	mov    %ax,0x66(%rbp)
    12e5:	0f b7 75 60          	movzwl 0x60(%rbp),%esi
    12e9:	41 0f b7 fd          	movzwl %r13w,%edi
    12ed:	e8 21 1a 00 00       	callq  2d13 <crcu16>
    12f2:	66 89 45 60          	mov    %ax,0x60(%rbp)
    12f6:	44 89 e8             	mov    %r13d,%eax
    12f9:	83 e0 7f             	and    $0x7f,%eax
    12fc:	b3 00                	mov    $0x0,%bl
    12fe:	09 c3                	or     %eax,%ebx
    1300:	80 cb 80             	or     $0x80,%bl
    1303:	66 41 89 1c 24       	mov    %bx,(%r12)
    1308:	e9 4c ff ff ff       	jmpq   1259 <calc_func+0x1a>

000000000000130d <cmp_complex>:
    130d:	f3 0f 1e fa          	endbr64 
    1311:	41 54                	push   %r12
    1313:	55                   	push   %rbp
    1314:	53                   	push   %rbx
    1315:	49 89 f4             	mov    %rsi,%r12
    1318:	48 89 d5             	mov    %rdx,%rbp
    131b:	48 89 d6             	mov    %rdx,%rsi
    131e:	e8 1c ff ff ff       	callq  123f <calc_func>
    1323:	89 c3                	mov    %eax,%ebx
    1325:	48 89 ee             	mov    %rbp,%rsi
    1328:	4c 89 e7             	mov    %r12,%rdi
    132b:	e8 0f ff ff ff       	callq  123f <calc_func>
    1330:	89 c2                	mov    %eax,%edx
    1332:	0f bf c3             	movswl %bx,%eax
    1335:	0f bf d2             	movswl %dx,%edx
    1338:	29 d0                	sub    %edx,%eax
    133a:	5b                   	pop    %rbx
    133b:	5d                   	pop    %rbp
    133c:	41 5c                	pop    %r12
    133e:	c3                   	retq   

000000000000133f <copy_info>:
    133f:	f3 0f 1e fa          	endbr64 
    1343:	0f b7 06             	movzwl (%rsi),%eax
    1346:	66 89 07             	mov    %ax,(%rdi)
    1349:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
    134d:	66 89 47 02          	mov    %ax,0x2(%rdi)
    1351:	c3                   	retq   

0000000000001352 <core_list_insert_new>:
    1352:	f3 0f 1e fa          	endbr64 
    1356:	48 8b 02             	mov    (%rdx),%rax
    1359:	4c 8d 50 10          	lea    0x10(%rax),%r10
    135d:	4d 39 c2             	cmp    %r8,%r10
    1360:	73 39                	jae    139b <core_list_insert_new+0x49>
    1362:	4c 8b 19             	mov    (%rcx),%r11
    1365:	4d 8d 43 04          	lea    0x4(%r11),%r8
    1369:	4d 39 c1             	cmp    %r8,%r9
    136c:	76 33                	jbe    13a1 <core_list_insert_new+0x4f>
    136e:	4c 89 12             	mov    %r10,(%rdx)
    1371:	48 8b 17             	mov    (%rdi),%rdx
    1374:	48 89 10             	mov    %rdx,(%rax)
    1377:	48 89 07             	mov    %rax,(%rdi)
    137a:	48 8b 11             	mov    (%rcx),%rdx
    137d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1381:	48 83 c2 04          	add    $0x4,%rdx
    1385:	48 89 11             	mov    %rdx,(%rcx)
    1388:	48 8b 50 08          	mov    0x8(%rax),%rdx
    138c:	0f b7 0e             	movzwl (%rsi),%ecx
    138f:	66 89 0a             	mov    %cx,(%rdx)
    1392:	0f b7 4e 02          	movzwl 0x2(%rsi),%ecx
    1396:	66 89 4a 02          	mov    %cx,0x2(%rdx)
    139a:	c3                   	retq   
    139b:	b8 00 00 00 00       	mov    $0x0,%eax
    13a0:	c3                   	retq   
    13a1:	b8 00 00 00 00       	mov    $0x0,%eax
    13a6:	c3                   	retq   

00000000000013a7 <core_list_remove>:
    13a7:	f3 0f 1e fa          	endbr64 
    13ab:	48 8b 07             	mov    (%rdi),%rax
    13ae:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    13b2:	48 8b 48 08          	mov    0x8(%rax),%rcx
    13b6:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    13ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
    13be:	48 8b 17             	mov    (%rdi),%rdx
    13c1:	48 8b 12             	mov    (%rdx),%rdx
    13c4:	48 89 17             	mov    %rdx,(%rdi)
    13c7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    13ce:	c3                   	retq   

00000000000013cf <core_list_undo_remove>:
    13cf:	f3 0f 1e fa          	endbr64 
    13d3:	48 89 f8             	mov    %rdi,%rax
    13d6:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    13da:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    13de:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    13e2:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    13e6:	48 8b 16             	mov    (%rsi),%rdx
    13e9:	48 89 17             	mov    %rdx,(%rdi)
    13ec:	48 89 3e             	mov    %rdi,(%rsi)
    13ef:	c3                   	retq   

00000000000013f0 <core_list_find>:
    13f0:	f3 0f 1e fa          	endbr64 
    13f4:	0f b7 56 02          	movzwl 0x2(%rsi),%edx
    13f8:	66 85 d2             	test   %dx,%dx
    13fb:	78 1b                	js     1418 <core_list_find+0x28>
    13fd:	48 85 ff             	test   %rdi,%rdi
    1400:	74 37                	je     1439 <core_list_find+0x49>
    1402:	48 8b 47 08          	mov    0x8(%rdi),%rax
    1406:	66 3b 50 02          	cmp    0x2(%rax),%dx
    140a:	74 31                	je     143d <core_list_find+0x4d>
    140c:	48 8b 3f             	mov    (%rdi),%rdi
    140f:	48 85 ff             	test   %rdi,%rdi
    1412:	75 ee                	jne    1402 <core_list_find+0x12>
    1414:	48 89 f8             	mov    %rdi,%rax
    1417:	c3                   	retq   
    1418:	48 85 ff             	test   %rdi,%rdi
    141b:	74 25                	je     1442 <core_list_find+0x52>
    141d:	0f b7 0e             	movzwl (%rsi),%ecx
    1420:	48 89 f8             	mov    %rdi,%rax
    1423:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1427:	0f b6 12             	movzbl (%rdx),%edx
    142a:	66 39 d1             	cmp    %dx,%cx
    142d:	74 12                	je     1441 <core_list_find+0x51>
    142f:	48 8b 00             	mov    (%rax),%rax
    1432:	48 85 c0             	test   %rax,%rax
    1435:	75 ec                	jne    1423 <core_list_find+0x33>
    1437:	eb de                	jmp    1417 <core_list_find+0x27>
    1439:	48 89 f8             	mov    %rdi,%rax
    143c:	c3                   	retq   
    143d:	48 89 f8             	mov    %rdi,%rax
    1440:	c3                   	retq   
    1441:	c3                   	retq   
    1442:	48 89 f8             	mov    %rdi,%rax
    1445:	c3                   	retq   

0000000000001446 <core_list_reverse>:
    1446:	f3 0f 1e fa          	endbr64 
    144a:	48 89 f8             	mov    %rdi,%rax
    144d:	48 85 ff             	test   %rdi,%rdi
    1450:	74 18                	je     146a <core_list_reverse+0x24>
    1452:	b9 00 00 00 00       	mov    $0x0,%ecx
    1457:	eb 03                	jmp    145c <core_list_reverse+0x16>
    1459:	48 89 d0             	mov    %rdx,%rax
    145c:	48 8b 10             	mov    (%rax),%rdx
    145f:	48 89 08             	mov    %rcx,(%rax)
    1462:	48 89 c1             	mov    %rax,%rcx
    1465:	48 85 d2             	test   %rdx,%rdx
    1468:	75 ef                	jne    1459 <core_list_reverse+0x13>
    146a:	c3                   	retq   

000000000000146b <core_list_mergesort>:
    146b:	f3 0f 1e fa          	endbr64 
    146f:	41 57                	push   %r15
    1471:	41 56                	push   %r14
    1473:	41 55                	push   %r13
    1475:	41 54                	push   %r12
    1477:	55                   	push   %rbp
    1478:	53                   	push   %rbx
    1479:	48 83 ec 28          	sub    $0x28,%rsp
    147d:	48 89 fd             	mov    %rdi,%rbp
    1480:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    1485:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    148a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    1490:	48 85 ed             	test   %rbp,%rbp
    1493:	0f 84 00 01 00 00    	je     1599 <core_list_mergesort+0x12e>
    1499:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    14a0:	00 
    14a1:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    14a7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    14ae:	00 
    14af:	e9 86 00 00 00       	jmpq   153a <core_list_mergesort+0xcf>
    14b4:	48 89 e8             	mov    %rbp,%rax
    14b7:	bb 00 00 00 00       	mov    $0x0,%ebx
    14bc:	e9 9f 00 00 00       	jmpq   1560 <core_list_mergesort+0xf5>
    14c1:	83 eb 01             	sub    $0x1,%ebx
    14c4:	4c 89 f0             	mov    %r14,%rax
    14c7:	4d 8b 36             	mov    (%r14),%r14
    14ca:	eb 2a                	jmp    14f6 <core_list_mergesort+0x8b>
    14cc:	83 eb 01             	sub    $0x1,%ebx
    14cf:	4c 89 f0             	mov    %r14,%rax
    14d2:	4d 8b 36             	mov    (%r14),%r14
    14d5:	eb 1f                	jmp    14f6 <core_list_mergesort+0x8b>
    14d7:	48 89 04 24          	mov    %rax,(%rsp)
    14db:	eb 22                	jmp    14ff <core_list_mergesort+0x94>
    14dd:	45 85 ed             	test   %r13d,%r13d
    14e0:	7e 53                	jle    1535 <core_list_mergesort+0xca>
    14e2:	48 85 ed             	test   %rbp,%rbp
    14e5:	74 4e                	je     1535 <core_list_mergesort+0xca>
    14e7:	85 db                	test   %ebx,%ebx
    14e9:	75 25                	jne    1510 <core_list_mergesort+0xa5>
    14eb:	41 83 ed 01          	sub    $0x1,%r13d
    14ef:	48 89 e8             	mov    %rbp,%rax
    14f2:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    14f6:	4d 85 e4             	test   %r12,%r12
    14f9:	74 dc                	je     14d7 <core_list_mergesort+0x6c>
    14fb:	49 89 04 24          	mov    %rax,(%r12)
    14ff:	49 89 c4             	mov    %rax,%r12
    1502:	85 db                	test   %ebx,%ebx
    1504:	7e d7                	jle    14dd <core_list_mergesort+0x72>
    1506:	45 85 ed             	test   %r13d,%r13d
    1509:	74 b6                	je     14c1 <core_list_mergesort+0x56>
    150b:	48 85 ed             	test   %rbp,%rbp
    150e:	74 b1                	je     14c1 <core_list_mergesort+0x56>
    1510:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    1514:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    1518:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    151d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1522:	ff d0                	callq  *%rax
    1524:	85 c0                	test   %eax,%eax
    1526:	7e a4                	jle    14cc <core_list_mergesort+0x61>
    1528:	41 83 ed 01          	sub    $0x1,%r13d
    152c:	48 89 e8             	mov    %rbp,%rax
    152f:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    1533:	eb c1                	jmp    14f6 <core_list_mergesort+0x8b>
    1535:	48 85 ed             	test   %rbp,%rbp
    1538:	74 31                	je     156b <core_list_mergesort+0x100>
    153a:	83 44 24 1c 01       	addl   $0x1,0x1c(%rsp)
    153f:	45 85 ff             	test   %r15d,%r15d
    1542:	0f 8e 6c ff ff ff    	jle    14b4 <core_list_mergesort+0x49>
    1548:	48 89 e8             	mov    %rbp,%rax
    154b:	bb 00 00 00 00       	mov    $0x0,%ebx
    1550:	83 c3 01             	add    $0x1,%ebx
    1553:	48 8b 00             	mov    (%rax),%rax
    1556:	48 85 c0             	test   %rax,%rax
    1559:	74 05                	je     1560 <core_list_mergesort+0xf5>
    155b:	41 39 df             	cmp    %ebx,%r15d
    155e:	75 f0                	jne    1550 <core_list_mergesort+0xe5>
    1560:	45 89 fd             	mov    %r15d,%r13d
    1563:	49 89 ee             	mov    %rbp,%r14
    1566:	48 89 c5             	mov    %rax,%rbp
    1569:	eb 97                	jmp    1502 <core_list_mergesort+0x97>
    156b:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    1572:	00 
    1573:	83 7c 24 1c 01       	cmpl   $0x1,0x1c(%rsp)
    1578:	7f 13                	jg     158d <core_list_mergesort+0x122>
    157a:	48 8b 04 24          	mov    (%rsp),%rax
    157e:	48 83 c4 28          	add    $0x28,%rsp
    1582:	5b                   	pop    %rbx
    1583:	5d                   	pop    %rbp
    1584:	41 5c                	pop    %r12
    1586:	41 5d                	pop    %r13
    1588:	41 5e                	pop    %r14
    158a:	41 5f                	pop    %r15
    158c:	c3                   	retq   
    158d:	45 01 ff             	add    %r15d,%r15d
    1590:	48 8b 2c 24          	mov    (%rsp),%rbp
    1594:	e9 f7 fe ff ff       	jmpq   1490 <core_list_mergesort+0x25>
    1599:	48 c7 04 25 00 00 00 	movq   $0x0,0x0
    15a0:	00 00 00 00 00 
    15a5:	48 89 2c 24          	mov    %rbp,(%rsp)
    15a9:	eb cf                	jmp    157a <core_list_mergesort+0x10f>

00000000000015ab <core_bench_list>:
    15ab:	f3 0f 1e fa          	endbr64 
    15af:	41 57                	push   %r15
    15b1:	41 56                	push   %r14
    15b3:	41 55                	push   %r13
    15b5:	41 54                	push   %r12
    15b7:	55                   	push   %rbp
    15b8:	53                   	push   %rbx
    15b9:	48 83 ec 38          	sub    $0x38,%rsp
    15bd:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    15c2:	89 74 24 14          	mov    %esi,0x14(%rsp)
    15c6:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    15cd:	00 00 
    15cf:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    15d4:	31 c9                	xor    %ecx,%ecx
    15d6:	48 8b 6f 38          	mov    0x38(%rdi),%rbp
    15da:	44 0f b7 7f 04       	movzwl 0x4(%rdi),%r15d
    15df:	66 c7 44 24 24 00 00 	movw   $0x0,0x24(%rsp)
    15e6:	66 89 74 24 26       	mov    %si,0x26(%rsp)
    15eb:	66 45 85 ff          	test   %r15w,%r15w
    15ef:	0f 8e bb 00 00 00    	jle    16b0 <core_bench_list+0x105>
    15f5:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    15fb:	66 c7 44 24 12 00 00 	movw   $0x0,0x12(%rsp)
    1602:	bb 00 00 00 00       	mov    $0x0,%ebx
    1607:	41 be 00 00 00 00    	mov    $0x0,%r14d
    160d:	48 8d 44 24 24       	lea    0x24(%rsp),%rax
    1612:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1617:	eb 53                	jmp    166c <core_bench_list+0xc1>
    1619:	66 83 44 24 12 01    	addw   $0x1,0x12(%rsp)
    161f:	48 8b 00             	mov    (%rax),%rax
    1622:	48 8b 40 08          	mov    0x8(%rax),%rax
    1626:	0f b7 00             	movzwl (%rax),%eax
    1629:	66 c1 f8 08          	sar    $0x8,%ax
    162d:	83 e0 01             	and    $0x1,%eax
    1630:	41 01 c6             	add    %eax,%r14d
    1633:	eb 1b                	jmp    1650 <core_bench_list+0xa5>
    1635:	49 8b 04 24          	mov    (%r12),%rax
    1639:	48 85 c0             	test   %rax,%rax
    163c:	74 12                	je     1650 <core_bench_list+0xa5>
    163e:	48 8b 10             	mov    (%rax),%rdx
    1641:	49 89 14 24          	mov    %rdx,(%r12)
    1645:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    1649:	48 89 10             	mov    %rdx,(%rax)
    164c:	48 89 45 00          	mov    %rax,0x0(%rbp)
    1650:	0f b7 44 24 26       	movzwl 0x26(%rsp),%eax
    1655:	66 85 c0             	test   %ax,%ax
    1658:	78 08                	js     1662 <core_bench_list+0xb7>
    165a:	83 c0 01             	add    $0x1,%eax
    165d:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
    1662:	41 83 c5 01          	add    $0x1,%r13d
    1666:	66 45 39 ef          	cmp    %r13w,%r15w
    166a:	74 56                	je     16c2 <core_bench_list+0x117>
    166c:	41 0f b6 c5          	movzbl %r13b,%eax
    1670:	66 89 44 24 24       	mov    %ax,0x24(%rsp)
    1675:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    167a:	48 89 ef             	mov    %rbp,%rdi
    167d:	e8 6e fd ff ff       	callq  13f0 <core_list_find>
    1682:	49 89 c4             	mov    %rax,%r12
    1685:	48 89 ef             	mov    %rbp,%rdi
    1688:	e8 b9 fd ff ff       	callq  1446 <core_list_reverse>
    168d:	48 89 c5             	mov    %rax,%rbp
    1690:	4d 85 e4             	test   %r12,%r12
    1693:	74 84                	je     1619 <core_bench_list+0x6e>
    1695:	83 c3 01             	add    $0x1,%ebx
    1698:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    169d:	0f b7 00             	movzwl (%rax),%eax
    16a0:	a8 01                	test   $0x1,%al
    16a2:	74 91                	je     1635 <core_bench_list+0x8a>
    16a4:	66 c1 f8 09          	sar    $0x9,%ax
    16a8:	83 e0 01             	and    $0x1,%eax
    16ab:	41 01 c6             	add    %eax,%r14d
    16ae:	eb 85                	jmp    1635 <core_bench_list+0x8a>
    16b0:	66 c7 44 24 12 00 00 	movw   $0x0,0x12(%rsp)
    16b7:	bb 00 00 00 00       	mov    $0x0,%ebx
    16bc:	41 be 00 00 00 00    	mov    $0x0,%r14d
    16c2:	41 8d 1c 9e          	lea    (%r14,%rbx,4),%ebx
    16c6:	66 2b 5c 24 12       	sub    0x12(%rsp),%bx
    16cb:	66 83 7c 24 14 00    	cmpw   $0x0,0x14(%rsp)
    16d1:	0f 8f a6 00 00 00    	jg     177d <core_bench_list+0x1d2>
    16d7:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    16db:	e8 c7 fc ff ff       	callq  13a7 <core_list_remove>
    16e0:	49 89 c5             	mov    %rax,%r13
    16e3:	48 8d 74 24 24       	lea    0x24(%rsp),%rsi
    16e8:	48 89 ef             	mov    %rbp,%rdi
    16eb:	e8 00 fd ff ff       	callq  13f0 <core_list_find>
    16f0:	49 89 c4             	mov    %rax,%r12
    16f3:	48 85 c0             	test   %rax,%rax
    16f6:	0f 84 9d 00 00 00    	je     1799 <core_bench_list+0x1ee>
    16fc:	0f b7 f3             	movzwl %bx,%esi
    16ff:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1703:	0f bf 38             	movswl (%rax),%edi
    1706:	e8 49 16 00 00       	callq  2d54 <crc16>
    170b:	89 c3                	mov    %eax,%ebx
    170d:	4d 8b 24 24          	mov    (%r12),%r12
    1711:	4d 85 e4             	test   %r12,%r12
    1714:	75 e6                	jne    16fc <core_bench_list+0x151>
    1716:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    171a:	4c 89 ef             	mov    %r13,%rdi
    171d:	e8 ad fc ff ff       	callq  13cf <core_list_undo_remove>
    1722:	ba 00 00 00 00       	mov    $0x0,%edx
    1727:	48 8d 35 db fa ff ff 	lea    -0x525(%rip),%rsi        # 1209 <cmp_idx>
    172e:	48 89 ef             	mov    %rbp,%rdi
    1731:	e8 35 fd ff ff       	callq  146b <core_list_mergesort>
    1736:	49 89 c4             	mov    %rax,%r12
    1739:	48 8b 28             	mov    (%rax),%rbp
    173c:	48 85 ed             	test   %rbp,%rbp
    173f:	74 1b                	je     175c <core_bench_list+0x1b1>
    1741:	0f b7 f3             	movzwl %bx,%esi
    1744:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    1749:	0f bf 38             	movswl (%rax),%edi
    174c:	e8 03 16 00 00       	callq  2d54 <crc16>
    1751:	89 c3                	mov    %eax,%ebx
    1753:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    1757:	48 85 ed             	test   %rbp,%rbp
    175a:	75 e5                	jne    1741 <core_bench_list+0x196>
    175c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1761:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1768:	00 00 
    176a:	75 3f                	jne    17ab <core_bench_list+0x200>
    176c:	89 d8                	mov    %ebx,%eax
    176e:	48 83 c4 38          	add    $0x38,%rsp
    1772:	5b                   	pop    %rbx
    1773:	5d                   	pop    %rbp
    1774:	41 5c                	pop    %r12
    1776:	41 5d                	pop    %r13
    1778:	41 5e                	pop    %r14
    177a:	41 5f                	pop    %r15
    177c:	c3                   	retq   
    177d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    1782:	48 8d 35 84 fb ff ff 	lea    -0x47c(%rip),%rsi        # 130d <cmp_complex>
    1789:	48 89 ef             	mov    %rbp,%rdi
    178c:	e8 da fc ff ff       	callq  146b <core_list_mergesort>
    1791:	48 89 c5             	mov    %rax,%rbp
    1794:	e9 3e ff ff ff       	jmpq   16d7 <core_bench_list+0x12c>
    1799:	4c 8b 65 00          	mov    0x0(%rbp),%r12
    179d:	4d 85 e4             	test   %r12,%r12
    17a0:	0f 85 56 ff ff ff    	jne    16fc <core_bench_list+0x151>
    17a6:	e9 6b ff ff ff       	jmpq   1716 <core_bench_list+0x16b>
    17ab:	e8 40 f9 ff ff       	callq  10f0 <__stack_chk_fail@plt>

00000000000017b0 <core_list_init>:
    17b0:	f3 0f 1e fa          	endbr64 
    17b4:	41 57                	push   %r15
    17b6:	41 56                	push   %r14
    17b8:	41 55                	push   %r13
    17ba:	41 54                	push   %r12
    17bc:	55                   	push   %rbp
    17bd:	53                   	push   %rbx
    17be:	48 83 ec 38          	sub    $0x38,%rsp
    17c2:	49 89 f4             	mov    %rsi,%r12
    17c5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    17ca:	41 89 d5             	mov    %edx,%r13d
    17cd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17d4:	00 00 
    17d6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    17db:	31 c0                	xor    %eax,%eax
    17dd:	89 fd                	mov    %edi,%ebp
    17df:	bf cd cc cc cc       	mov    $0xcccccccd,%edi
    17e4:	48 0f af ef          	imul   %rdi,%rbp
    17e8:	48 c1 ed 24          	shr    $0x24,%rbp
    17ec:	83 ed 02             	sub    $0x2,%ebp
    17ef:	89 e8                	mov    %ebp,%eax
    17f1:	49 89 c6             	mov    %rax,%r14
    17f4:	49 c1 e6 04          	shl    $0x4,%r14
    17f8:	49 01 f6             	add    %rsi,%r14
    17fb:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    1800:	4d 8d 3c 86          	lea    (%r14,%rax,4),%r15
    1804:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    180b:	4c 89 76 08          	mov    %r14,0x8(%rsi)
    180f:	66 41 c7 46 02 00 00 	movw   $0x0,0x2(%r14)
    1816:	48 8b 46 08          	mov    0x8(%rsi),%rax
    181a:	66 c7 00 80 80       	movw   $0x8080,(%rax)
    181f:	48 83 44 24 08 10    	addq   $0x10,0x8(%rsp)
    1825:	48 83 44 24 20 04    	addq   $0x4,0x20(%rsp)
    182b:	66 c7 44 24 1e ff 7f 	movw   $0x7fff,0x1e(%rsp)
    1832:	66 c7 44 24 1c ff ff 	movw   $0xffff,0x1c(%rsp)
    1839:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    183e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    1843:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    1848:	4d 89 f9             	mov    %r15,%r9
    184b:	4d 89 f0             	mov    %r14,%r8
    184e:	4c 89 e7             	mov    %r12,%rdi
    1851:	e8 fc fa ff ff       	callq  1352 <core_list_insert_new>
    1856:	85 ed                	test   %ebp,%ebp
    1858:	74 4f                	je     18a9 <core_list_init+0xf9>
    185a:	bb 00 00 00 00       	mov    $0x0,%ebx
    185f:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    1864:	48 89 04 24          	mov    %rax,(%rsp)
    1868:	44 89 e8             	mov    %r13d,%eax
    186b:	31 d8                	xor    %ebx,%eax
    186d:	c1 e0 03             	shl    $0x3,%eax
    1870:	83 e0 78             	and    $0x78,%eax
    1873:	89 da                	mov    %ebx,%edx
    1875:	83 e2 07             	and    $0x7,%edx
    1878:	09 d0                	or     %edx,%eax
    187a:	89 c2                	mov    %eax,%edx
    187c:	c1 e2 08             	shl    $0x8,%edx
    187f:	09 d0                	or     %edx,%eax
    1881:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
    1886:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    188b:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    1890:	4d 89 f9             	mov    %r15,%r9
    1893:	4d 89 f0             	mov    %r14,%r8
    1896:	48 8b 0c 24          	mov    (%rsp),%rcx
    189a:	4c 89 e7             	mov    %r12,%rdi
    189d:	e8 b0 fa ff ff       	callq  1352 <core_list_insert_new>
    18a2:	83 c3 01             	add    $0x1,%ebx
    18a5:	39 dd                	cmp    %ebx,%ebp
    18a7:	75 bf                	jne    1868 <core_list_init+0xb8>
    18a9:	49 8b 0c 24          	mov    (%r12),%rcx
    18ad:	48 83 39 00          	cmpq   $0x0,(%rcx)
    18b1:	74 4d                	je     1900 <core_list_init+0x150>
    18b3:	89 ed                	mov    %ebp,%ebp
    18b5:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
    18ba:	48 0f af e8          	imul   %rax,%rbp
    18be:	48 c1 ed 22          	shr    $0x22,%rbp
    18c2:	ba 01 00 00 00       	mov    $0x1,%edx
    18c7:	eb 29                	jmp    18f2 <core_list_init+0x142>
    18c9:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    18cd:	8d 42 01             	lea    0x1(%rdx),%eax
    18d0:	c1 e0 08             	shl    $0x8,%eax
    18d3:	66 25 00 07          	and    $0x700,%ax
    18d7:	44 89 ef             	mov    %r13d,%edi
    18da:	31 d7                	xor    %edx,%edi
    18dc:	09 f8                	or     %edi,%eax
    18de:	66 25 ff 3f          	and    $0x3fff,%ax
    18e2:	66 89 46 02          	mov    %ax,0x2(%rsi)
    18e6:	48 8b 09             	mov    (%rcx),%rcx
    18e9:	83 c2 01             	add    $0x1,%edx
    18ec:	48 83 39 00          	cmpq   $0x0,(%rcx)
    18f0:	74 0e                	je     1900 <core_list_init+0x150>
    18f2:	39 d5                	cmp    %edx,%ebp
    18f4:	76 d3                	jbe    18c9 <core_list_init+0x119>
    18f6:	48 8b 41 08          	mov    0x8(%rcx),%rax
    18fa:	66 89 50 02          	mov    %dx,0x2(%rax)
    18fe:	eb e6                	jmp    18e6 <core_list_init+0x136>
    1900:	ba 00 00 00 00       	mov    $0x0,%edx
    1905:	48 8d 35 fd f8 ff ff 	lea    -0x703(%rip),%rsi        # 1209 <cmp_idx>
    190c:	4c 89 e7             	mov    %r12,%rdi
    190f:	e8 57 fb ff ff       	callq  146b <core_list_mergesort>
    1914:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    1919:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    1920:	00 00 
    1922:	75 0f                	jne    1933 <core_list_init+0x183>
    1924:	48 83 c4 38          	add    $0x38,%rsp
    1928:	5b                   	pop    %rbx
    1929:	5d                   	pop    %rbp
    192a:	41 5c                	pop    %r12
    192c:	41 5d                	pop    %r13
    192e:	41 5e                	pop    %r14
    1930:	41 5f                	pop    %r15
    1932:	c3                   	retq   
    1933:	e8 b8 f7 ff ff       	callq  10f0 <__stack_chk_fail@plt>

0000000000001938 <iterate>:
    1938:	f3 0f 1e fa          	endbr64 
    193c:	41 54                	push   %r12
    193e:	55                   	push   %rbp
    193f:	53                   	push   %rbx
    1940:	44 8b 67 2c          	mov    0x2c(%rdi),%r12d
    1944:	66 c7 47 60 00 00    	movw   $0x0,0x60(%rdi)
    194a:	66 c7 47 62 00 00    	movw   $0x0,0x62(%rdi)
    1950:	66 c7 47 64 00 00    	movw   $0x0,0x64(%rdi)
    1956:	66 c7 47 66 00 00    	movw   $0x0,0x66(%rdi)
    195c:	45 85 e4             	test   %r12d,%r12d
    195f:	74 56                	je     19b7 <iterate+0x7f>
    1961:	48 89 fb             	mov    %rdi,%rbx
    1964:	bd 00 00 00 00       	mov    $0x0,%ebp
    1969:	eb 08                	jmp    1973 <iterate+0x3b>
    196b:	83 c5 01             	add    $0x1,%ebp
    196e:	41 39 ec             	cmp    %ebp,%r12d
    1971:	74 44                	je     19b7 <iterate+0x7f>
    1973:	be 01 00 00 00       	mov    $0x1,%esi
    1978:	48 89 df             	mov    %rbx,%rdi
    197b:	e8 2b fc ff ff       	callq  15ab <core_bench_list>
    1980:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    1984:	0f b7 f8             	movzwl %ax,%edi
    1987:	e8 87 13 00 00       	callq  2d13 <crcu16>
    198c:	66 89 43 60          	mov    %ax,0x60(%rbx)
    1990:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1995:	48 89 df             	mov    %rbx,%rdi
    1998:	e8 0e fc ff ff       	callq  15ab <core_bench_list>
    199d:	0f b7 73 60          	movzwl 0x60(%rbx),%esi
    19a1:	0f b7 f8             	movzwl %ax,%edi
    19a4:	e8 6a 13 00 00       	callq  2d13 <crcu16>
    19a9:	66 89 43 60          	mov    %ax,0x60(%rbx)
    19ad:	85 ed                	test   %ebp,%ebp
    19af:	75 ba                	jne    196b <iterate+0x33>
    19b1:	66 89 43 62          	mov    %ax,0x62(%rbx)
    19b5:	eb b4                	jmp    196b <iterate+0x33>
    19b7:	b8 00 00 00 00       	mov    $0x0,%eax
    19bc:	5b                   	pop    %rbx
    19bd:	5d                   	pop    %rbp
    19be:	41 5c                	pop    %r12
    19c0:	c3                   	retq   

00000000000019c1 <main>:
    19c1:	f3 0f 1e fa          	endbr64 
    19c5:	41 57                	push   %r15
    19c7:	41 56                	push   %r14
    19c9:	41 55                	push   %r13
    19cb:	41 54                	push   %r12
    19cd:	55                   	push   %rbp
    19ce:	53                   	push   %rbx
    19cf:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    19d6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    19dd:	00 00 
    19df:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    19e6:	00 
    19e7:	31 c0                	xor    %eax,%eax
    19e9:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
    19f0:	00 
    19f1:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
    19f6:	48 8d 74 24 24       	lea    0x24(%rsp),%rsi
    19fb:	48 8d bc 24 9a 00 00 	lea    0x9a(%rsp),%rdi
    1a02:	00 
    1a03:	e8 23 14 00 00       	callq  2e2b <portable_init>
    1a08:	bf 01 00 00 00       	mov    $0x1,%edi
    1a0d:	e8 90 12 00 00       	callq  2ca2 <get_seed_32>
    1a12:	66 89 44 24 30       	mov    %ax,0x30(%rsp)
    1a17:	bf 02 00 00 00       	mov    $0x2,%edi
    1a1c:	e8 81 12 00 00       	callq  2ca2 <get_seed_32>
    1a21:	66 89 44 24 32       	mov    %ax,0x32(%rsp)
    1a26:	bf 03 00 00 00       	mov    $0x3,%edi
    1a2b:	e8 72 12 00 00       	callq  2ca2 <get_seed_32>
    1a30:	66 89 44 24 34       	mov    %ax,0x34(%rsp)
    1a35:	bf 04 00 00 00       	mov    $0x4,%edi
    1a3a:	e8 63 12 00 00       	callq  2ca2 <get_seed_32>
    1a3f:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    1a43:	bf 05 00 00 00       	mov    $0x5,%edi
    1a48:	e8 55 12 00 00       	callq  2ca2 <get_seed_32>
    1a4d:	85 c0                	test   %eax,%eax
    1a4f:	ba 07 00 00 00       	mov    $0x7,%edx
    1a54:	0f 44 c2             	cmove  %edx,%eax
    1a57:	89 44 24 60          	mov    %eax,0x60(%rsp)
    1a5b:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1a62:	ff 00 00 
    1a65:	48 85 44 24 30       	test   %rax,0x30(%rsp)
    1a6a:	75 15                	jne    1a81 <main+0xc0>
    1a6c:	66 c7 44 24 30 00 00 	movw   $0x0,0x30(%rsp)
    1a73:	66 c7 44 24 32 00 00 	movw   $0x0,0x32(%rsp)
    1a7a:	66 c7 44 24 34 66 00 	movw   $0x66,0x34(%rsp)
    1a81:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    1a88:	ff 00 00 
    1a8b:	48 23 44 24 30       	and    0x30(%rsp),%rax
    1a90:	48 83 f8 01          	cmp    $0x1,%rax
    1a94:	74 7d                	je     1b13 <main+0x152>
    1a96:	bf 07 00 00 00       	mov    $0x7,%edi
    1a9b:	e8 02 12 00 00       	callq  2ca2 <get_seed_32>
    1aa0:	0f bf f8             	movswl %ax,%edi
    1aa3:	66 85 c0             	test   %ax,%ax
    1aa6:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    1aab:	0f 44 f8             	cmove  %eax,%edi
    1aae:	89 7c 24 58          	mov    %edi,0x58(%rsp)
    1ab2:	89 ff                	mov    %edi,%edi
    1ab4:	e8 b5 12 00 00       	callq  2d6e <portable_malloc>
    1ab9:	48 89 c7             	mov    %rax,%rdi
    1abc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    1ac1:	66 c7 84 24 98 00 00 	movw   $0x0,0x98(%rsp)
    1ac8:	00 00 00 
    1acb:	8b 74 24 60          	mov    0x60(%rsp),%esi
    1acf:	89 f0                	mov    %esi,%eax
    1ad1:	83 e0 01             	and    $0x1,%eax
    1ad4:	89 f2                	mov    %esi,%edx
    1ad6:	83 e2 02             	and    $0x2,%edx
    1ad9:	83 fa 01             	cmp    $0x1,%edx
    1adc:	66 83 d8 ff          	sbb    $0xffff,%ax
    1ae0:	89 f2                	mov    %esi,%edx
    1ae2:	83 e2 04             	and    $0x4,%edx
    1ae5:	83 fa 01             	cmp    $0x1,%edx
    1ae8:	66 83 d8 ff          	sbb    $0xffff,%ax
    1aec:	0f b7 c8             	movzwl %ax,%ecx
    1aef:	8b 44 24 58          	mov    0x58(%rsp),%eax
    1af3:	ba 00 00 00 00       	mov    $0x0,%edx
    1af8:	f7 f1                	div    %ecx
    1afa:	41 89 c1             	mov    %eax,%r9d
    1afd:	89 44 24 58          	mov    %eax,0x58(%rsp)
    1b01:	b9 00 00 00 00       	mov    $0x0,%ecx
    1b06:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    1b0c:	ba 01 00 00 00       	mov    $0x1,%edx
    1b11:	eb 24                	jmp    1b37 <main+0x176>
    1b13:	66 c7 44 24 30 15 34 	movw   $0x3415,0x30(%rsp)
    1b1a:	66 c7 44 24 32 15 34 	movw   $0x3415,0x32(%rsp)
    1b21:	66 c7 44 24 34 66 00 	movw   $0x66,0x34(%rsp)
    1b28:	e9 69 ff ff ff       	jmpq   1a96 <main+0xd5>
    1b2d:	48 83 c1 01          	add    $0x1,%rcx
    1b31:	48 83 f9 03          	cmp    $0x3,%rcx
    1b35:	74 1e                	je     1b55 <main+0x194>
    1b37:	89 d0                	mov    %edx,%eax
    1b39:	d3 e0                	shl    %cl,%eax
    1b3b:	85 f0                	test   %esi,%eax
    1b3d:	74 ee                	je     1b2d <main+0x16c>
    1b3f:	41 0f b7 c0          	movzwl %r8w,%eax
    1b43:	41 0f af c1          	imul   %r9d,%eax
    1b47:	48 01 f8             	add    %rdi,%rax
    1b4a:	48 89 44 cc 40       	mov    %rax,0x40(%rsp,%rcx,8)
    1b4f:	41 83 c0 01          	add    $0x1,%r8d
    1b53:	eb d8                	jmp    1b2d <main+0x16c>
    1b55:	f6 44 24 60 01       	testb  $0x1,0x60(%rsp)
    1b5a:	0f 85 1e 01 00 00    	jne    1c7e <main+0x2bd>
    1b60:	f6 44 24 60 02       	testb  $0x2,0x60(%rsp)
    1b65:	0f 85 30 01 00 00    	jne    1c9b <main+0x2da>
    1b6b:	f6 44 24 60 04       	testb  $0x4,0x60(%rsp)
    1b70:	0f 85 4c 01 00 00    	jne    1cc2 <main+0x301>
    1b76:	83 7c 24 5c 00       	cmpl   $0x0,0x5c(%rsp)
    1b7b:	75 6b                	jne    1be8 <main+0x227>
    1b7d:	c7 44 24 5c 01 00 00 	movl   $0x1,0x5c(%rsp)
    1b84:	00 
    1b85:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    1b89:	8d 04 80             	lea    (%rax,%rax,4),%eax
    1b8c:	01 c0                	add    %eax,%eax
    1b8e:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    1b92:	e8 fb 11 00 00       	callq  2d92 <start_time>
    1b97:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    1b9c:	e8 97 fd ff ff       	callq  1938 <iterate>
    1ba1:	e8 0a 12 00 00       	callq  2db0 <stop_time>
    1ba6:	e8 23 12 00 00       	callq  2dce <get_time>
    1bab:	48 89 c7             	mov    %rax,%rdi
    1bae:	e8 62 12 00 00       	callq  2e15 <time_in_secs>
    1bb3:	f2 0f 10 15 dd 18 00 	movsd  0x18dd(%rip),%xmm2        # 3498 <list_known_crc+0x10>
    1bba:	00 
    1bbb:	66 0f 2f d0          	comisd %xmm0,%xmm2
    1bbf:	77 c4                	ja     1b85 <main+0x1c4>
    1bc1:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    1bc6:	85 c9                	test   %ecx,%ecx
    1bc8:	b8 01 00 00 00       	mov    $0x1,%eax
    1bcd:	0f 44 c8             	cmove  %eax,%ecx
    1bd0:	b8 0a 00 00 00       	mov    $0xa,%eax
    1bd5:	ba 00 00 00 00       	mov    $0x0,%edx
    1bda:	f7 f1                	div    %ecx
    1bdc:	83 c0 01             	add    $0x1,%eax
    1bdf:	0f af 44 24 5c       	imul   0x5c(%rsp),%eax
    1be4:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    1be8:	e8 a5 11 00 00       	callq  2d92 <start_time>
    1bed:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    1bf2:	e8 41 fd ff ff       	callq  1938 <iterate>
    1bf7:	e8 b4 11 00 00       	callq  2db0 <stop_time>
    1bfc:	e8 cd 11 00 00       	callq  2dce <get_time>
    1c01:	48 89 04 24          	mov    %rax,(%rsp)
    1c05:	0f bf 7c 24 30       	movswl 0x30(%rsp),%edi
    1c0a:	be 00 00 00 00       	mov    $0x0,%esi
    1c0f:	e8 40 11 00 00       	callq  2d54 <crc16>
    1c14:	0f b7 f0             	movzwl %ax,%esi
    1c17:	0f bf 7c 24 32       	movswl 0x32(%rsp),%edi
    1c1c:	e8 33 11 00 00       	callq  2d54 <crc16>
    1c21:	0f b7 f0             	movzwl %ax,%esi
    1c24:	0f bf 7c 24 34       	movswl 0x34(%rsp),%edi
    1c29:	e8 26 11 00 00       	callq  2d54 <crc16>
    1c2e:	0f b7 f0             	movzwl %ax,%esi
    1c31:	0f bf 7c 24 58       	movswl 0x58(%rsp),%edi
    1c36:	e8 19 11 00 00       	callq  2d54 <crc16>
    1c3b:	0f b7 f0             	movzwl %ax,%esi
    1c3e:	89 74 24 08          	mov    %esi,0x8(%rsp)
    1c42:	66 3d 05 7b          	cmp    $0x7b05,%ax
    1c46:	0f 84 04 04 00 00    	je     2050 <main+0x68f>
    1c4c:	0f 86 88 00 00 00    	jbe    1cda <main+0x319>
    1c52:	66 3d 02 8a          	cmp    $0x8a02,%ax
    1c56:	0f 84 c1 00 00 00    	je     1d1d <main+0x35c>
    1c5c:	66 3d f5 e9          	cmp    $0xe9f5,%ax
    1c60:	0f 85 a8 00 00 00    	jne    1d0e <main+0x34d>
    1c66:	48 8d 3d 2b 14 00 00 	lea    0x142b(%rip),%rdi        # 3098 <_IO_stdin_used+0x98>
    1c6d:	e8 5e f4 ff ff       	callq  10d0 <puts@plt>
    1c72:	66 c7 44 24 16 03 00 	movw   $0x3,0x16(%rsp)
    1c79:	e9 b2 00 00 00       	jmpq   1d30 <main+0x36f>
    1c7e:	0f bf 54 24 30       	movswl 0x30(%rsp),%edx
    1c83:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    1c88:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    1c8c:	e8 1f fb ff ff       	callq  17b0 <core_list_init>
    1c91:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    1c96:	e9 c5 fe ff ff       	jmpq   1b60 <main+0x19f>
    1c9b:	48 8d 4c 24 70       	lea    0x70(%rsp),%rcx
    1ca0:	0f bf 54 24 32       	movswl 0x32(%rsp),%edx
    1ca5:	c1 e2 10             	shl    $0x10,%edx
    1ca8:	0f bf 44 24 30       	movswl 0x30(%rsp),%eax
    1cad:	09 c2                	or     %eax,%edx
    1caf:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    1cb4:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    1cb8:	e8 d4 06 00 00       	callq  2391 <core_init_matrix>
    1cbd:	e9 a9 fe ff ff       	jmpq   1b6b <main+0x1aa>
    1cc2:	0f bf 74 24 30       	movswl 0x30(%rsp),%esi
    1cc7:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    1ccc:	8b 7c 24 58          	mov    0x58(%rsp),%edi
    1cd0:	e8 cc 0b 00 00       	callq  28a1 <core_init_state>
    1cd5:	e9 9c fe ff ff       	jmpq   1b76 <main+0x1b5>
    1cda:	66 3d f2 18          	cmp    $0x18f2,%ax
    1cde:	0f 84 84 03 00 00    	je     2068 <main+0x6a7>
    1ce4:	66 3d af 4e          	cmp    $0x4eaf,%ax
    1ce8:	75 15                	jne    1cff <main+0x33e>
    1cea:	48 8d 3d 77 13 00 00 	lea    0x1377(%rip),%rdi        # 3068 <_IO_stdin_used+0x68>
    1cf1:	e8 da f3 ff ff       	callq  10d0 <puts@plt>
    1cf6:	66 c7 44 24 16 02 00 	movw   $0x2,0x16(%rsp)
    1cfd:	eb 31                	jmp    1d30 <main+0x36f>
    1cff:	66 c7 44 24 16 ff ff 	movw   $0xffff,0x16(%rsp)
    1d06:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    1d0c:	eb 4e                	jmp    1d5c <main+0x39b>
    1d0e:	66 c7 44 24 16 ff ff 	movw   $0xffff,0x16(%rsp)
    1d15:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    1d1b:	eb 3f                	jmp    1d5c <main+0x39b>
    1d1d:	48 8d 3d e4 12 00 00 	lea    0x12e4(%rip),%rdi        # 3008 <_IO_stdin_used+0x8>
    1d24:	e8 a7 f3 ff ff       	callq  10d0 <puts@plt>
    1d29:	66 c7 44 24 16 00 00 	movw   $0x0,0x16(%rsp)
    1d30:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    1d36:	bd 00 00 00 00       	mov    $0x0,%ebp
    1d3b:	4c 8d 3d 46 17 00 00 	lea    0x1746(%rip),%r15        # 3488 <list_known_crc>
    1d42:	4c 0f bf 6c 24 16    	movswq 0x16(%rsp),%r13
    1d48:	4c 8d 35 29 17 00 00 	lea    0x1729(%rip),%r14        # 3478 <matrix_known_crc>
    1d4f:	83 3d d2 42 00 00 00 	cmpl   $0x0,0x42d2(%rip)        # 6028 <default_num_contexts>
    1d56:	0f 85 30 04 00 00    	jne    218c <main+0x7cb>
    1d5c:	e8 03 10 00 00       	callq  2d64 <check_data_types>
    1d61:	0f b6 c0             	movzbl %al,%eax
    1d64:	41 01 c4             	add    %eax,%r12d
    1d67:	8b 54 24 58          	mov    0x58(%rsp),%edx
    1d6b:	48 8d 35 58 15 00 00 	lea    0x1558(%rip),%rsi        # 32ca <_IO_stdin_used+0x2ca>
    1d72:	bf 01 00 00 00       	mov    $0x1,%edi
    1d77:	b8 00 00 00 00       	mov    $0x0,%eax
    1d7c:	e8 8f f3 ff ff       	callq  1110 <__printf_chk@plt>
    1d81:	48 8b 1c 24          	mov    (%rsp),%rbx
    1d85:	48 89 da             	mov    %rbx,%rdx
    1d88:	48 8d 35 53 15 00 00 	lea    0x1553(%rip),%rsi        # 32e2 <_IO_stdin_used+0x2e2>
    1d8f:	bf 01 00 00 00       	mov    $0x1,%edi
    1d94:	b8 00 00 00 00       	mov    $0x0,%eax
    1d99:	e8 72 f3 ff ff       	callq  1110 <__printf_chk@plt>
    1d9e:	48 89 df             	mov    %rbx,%rdi
    1da1:	e8 6f 10 00 00       	callq  2e15 <time_in_secs>
    1da6:	48 8d 35 4d 15 00 00 	lea    0x154d(%rip),%rsi        # 32fa <_IO_stdin_used+0x2fa>
    1dad:	bf 01 00 00 00       	mov    $0x1,%edi
    1db2:	b8 01 00 00 00       	mov    $0x1,%eax
    1db7:	e8 54 f3 ff ff       	callq  1110 <__printf_chk@plt>
    1dbc:	48 89 df             	mov    %rbx,%rdi
    1dbf:	e8 51 10 00 00       	callq  2e15 <time_in_secs>
    1dc4:	66 0f 2f 05 d4 16 00 	comisd 0x16d4(%rip),%xmm0        # 34a0 <list_known_crc+0x18>
    1dcb:	00 
    1dcc:	0f 87 9a 04 00 00    	ja     226c <main+0x8ab>
    1dd2:	48 8b 3c 24          	mov    (%rsp),%rdi
    1dd6:	e8 3a 10 00 00       	callq  2e15 <time_in_secs>
    1ddb:	f2 0f 10 0d c5 16 00 	movsd  0x16c5(%rip),%xmm1        # 34a8 <list_known_crc+0x20>
    1de2:	00 
    1de3:	66 0f 2f c8          	comisd %xmm0,%xmm1
    1de7:	0f 87 ca 04 00 00    	ja     22b7 <main+0x8f6>
    1ded:	8b 15 35 42 00 00    	mov    0x4235(%rip),%edx        # 6028 <default_num_contexts>
    1df3:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    1df7:	48 0f af d0          	imul   %rax,%rdx
    1dfb:	48 8d 35 26 15 00 00 	lea    0x1526(%rip),%rsi        # 3328 <_IO_stdin_used+0x328>
    1e02:	bf 01 00 00 00       	mov    $0x1,%edi
    1e07:	b8 00 00 00 00       	mov    $0x0,%eax
    1e0c:	e8 ff f2 ff ff       	callq  1110 <__printf_chk@plt>
    1e11:	48 8d 15 28 15 00 00 	lea    0x1528(%rip),%rdx        # 3340 <_IO_stdin_used+0x340>
    1e18:	48 8d 35 2a 15 00 00 	lea    0x152a(%rip),%rsi        # 3349 <_IO_stdin_used+0x349>
    1e1f:	bf 01 00 00 00       	mov    $0x1,%edi
    1e24:	b8 00 00 00 00       	mov    $0x0,%eax
    1e29:	e8 e2 f2 ff ff       	callq  1110 <__printf_chk@plt>
    1e2e:	48 8d 15 2b 15 00 00 	lea    0x152b(%rip),%rdx        # 3360 <_IO_stdin_used+0x360>
    1e35:	48 8d 35 2f 15 00 00 	lea    0x152f(%rip),%rsi        # 336b <_IO_stdin_used+0x36b>
    1e3c:	bf 01 00 00 00       	mov    $0x1,%edi
    1e41:	b8 00 00 00 00       	mov    $0x0,%eax
    1e46:	e8 c5 f2 ff ff       	callq  1110 <__printf_chk@plt>
    1e4b:	48 8d 15 7e 13 00 00 	lea    0x137e(%rip),%rdx        # 31d0 <_IO_stdin_used+0x1d0>
    1e52:	48 8d 35 29 15 00 00 	lea    0x1529(%rip),%rsi        # 3382 <_IO_stdin_used+0x382>
    1e59:	bf 01 00 00 00       	mov    $0x1,%edi
    1e5e:	b8 00 00 00 00       	mov    $0x0,%eax
    1e63:	e8 a8 f2 ff ff       	callq  1110 <__printf_chk@plt>
    1e68:	8b 54 24 08          	mov    0x8(%rsp),%edx
    1e6c:	48 8d 35 26 15 00 00 	lea    0x1526(%rip),%rsi        # 3399 <_IO_stdin_used+0x399>
    1e73:	bf 01 00 00 00       	mov    $0x1,%edi
    1e78:	b8 00 00 00 00       	mov    $0x0,%eax
    1e7d:	e8 8e f2 ff ff       	callq  1110 <__printf_chk@plt>
    1e82:	f6 44 24 60 01       	testb  $0x1,0x60(%rsp)
    1e87:	74 54                	je     1edd <main+0x51c>
    1e89:	83 3d 98 41 00 00 00 	cmpl   $0x0,0x4198(%rip)        # 6028 <default_num_contexts>
    1e90:	74 4b                	je     1edd <main+0x51c>
    1e92:	bb 00 00 00 00       	mov    $0x0,%ebx
    1e97:	48 8d 2d 16 15 00 00 	lea    0x1516(%rip),%rbp        # 33b4 <_IO_stdin_used+0x3b4>
    1e9e:	0f b7 f3             	movzwl %bx,%esi
    1ea1:	0f b7 d3             	movzwl %bx,%edx
    1ea4:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    1eab:	00 
    1eac:	48 29 d0             	sub    %rdx,%rax
    1eaf:	48 c1 e0 04          	shl    $0x4,%rax
    1eb3:	0f b7 8c 04 92 00 00 	movzwl 0x92(%rsp,%rax,1),%ecx
    1eba:	00 
    1ebb:	89 f2                	mov    %esi,%edx
    1ebd:	48 89 ee             	mov    %rbp,%rsi
    1ec0:	bf 01 00 00 00       	mov    $0x1,%edi
    1ec5:	b8 00 00 00 00       	mov    $0x0,%eax
    1eca:	e8 41 f2 ff ff       	callq  1110 <__printf_chk@plt>
    1ecf:	83 c3 01             	add    $0x1,%ebx
    1ed2:	0f b7 c3             	movzwl %bx,%eax
    1ed5:	3b 05 4d 41 00 00    	cmp    0x414d(%rip),%eax        # 6028 <default_num_contexts>
    1edb:	72 c1                	jb     1e9e <main+0x4dd>
    1edd:	f6 44 24 60 02       	testb  $0x2,0x60(%rsp)
    1ee2:	74 58                	je     1f3c <main+0x57b>
    1ee4:	83 3d 3d 41 00 00 00 	cmpl   $0x0,0x413d(%rip)        # 6028 <default_num_contexts>
    1eeb:	0f 84 8b 04 00 00    	je     237c <main+0x9bb>
    1ef1:	bb 00 00 00 00       	mov    $0x0,%ebx
    1ef6:	48 8d 2d d3 14 00 00 	lea    0x14d3(%rip),%rbp        # 33d0 <_IO_stdin_used+0x3d0>
    1efd:	0f b7 f3             	movzwl %bx,%esi
    1f00:	0f b7 d3             	movzwl %bx,%edx
    1f03:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    1f0a:	00 
    1f0b:	48 29 d0             	sub    %rdx,%rax
    1f0e:	48 c1 e0 04          	shl    $0x4,%rax
    1f12:	0f b7 8c 04 94 00 00 	movzwl 0x94(%rsp,%rax,1),%ecx
    1f19:	00 
    1f1a:	89 f2                	mov    %esi,%edx
    1f1c:	48 89 ee             	mov    %rbp,%rsi
    1f1f:	bf 01 00 00 00       	mov    $0x1,%edi
    1f24:	b8 00 00 00 00       	mov    $0x0,%eax
    1f29:	e8 e2 f1 ff ff       	callq  1110 <__printf_chk@plt>
    1f2e:	83 c3 01             	add    $0x1,%ebx
    1f31:	0f b7 c3             	movzwl %bx,%eax
    1f34:	3b 05 ee 40 00 00    	cmp    0x40ee(%rip),%eax        # 6028 <default_num_contexts>
    1f3a:	72 c1                	jb     1efd <main+0x53c>
    1f3c:	f6 44 24 60 04       	testb  $0x4,0x60(%rsp)
    1f41:	74 58                	je     1f9b <main+0x5da>
    1f43:	83 3d de 40 00 00 00 	cmpl   $0x0,0x40de(%rip)        # 6028 <default_num_contexts>
    1f4a:	0f 84 9f 00 00 00    	je     1fef <main+0x62e>
    1f50:	bb 00 00 00 00       	mov    $0x0,%ebx
    1f55:	48 8d 2d 90 14 00 00 	lea    0x1490(%rip),%rbp        # 33ec <_IO_stdin_used+0x3ec>
    1f5c:	0f b7 f3             	movzwl %bx,%esi
    1f5f:	0f b7 d3             	movzwl %bx,%edx
    1f62:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    1f69:	00 
    1f6a:	48 29 d0             	sub    %rdx,%rax
    1f6d:	48 c1 e0 04          	shl    $0x4,%rax
    1f71:	0f b7 8c 04 96 00 00 	movzwl 0x96(%rsp,%rax,1),%ecx
    1f78:	00 
    1f79:	89 f2                	mov    %esi,%edx
    1f7b:	48 89 ee             	mov    %rbp,%rsi
    1f7e:	bf 01 00 00 00       	mov    $0x1,%edi
    1f83:	b8 00 00 00 00       	mov    $0x0,%eax
    1f88:	e8 83 f1 ff ff       	callq  1110 <__printf_chk@plt>
    1f8d:	83 c3 01             	add    $0x1,%ebx
    1f90:	0f b7 c3             	movzwl %bx,%eax
    1f93:	3b 05 8f 40 00 00    	cmp    0x408f(%rip),%eax        # 6028 <default_num_contexts>
    1f99:	72 c1                	jb     1f5c <main+0x59b>
    1f9b:	83 3d 86 40 00 00 00 	cmpl   $0x0,0x4086(%rip)        # 6028 <default_num_contexts>
    1fa2:	74 4b                	je     1fef <main+0x62e>
    1fa4:	bb 00 00 00 00       	mov    $0x0,%ebx
    1fa9:	48 8d 2d 58 14 00 00 	lea    0x1458(%rip),%rbp        # 3408 <_IO_stdin_used+0x408>
    1fb0:	0f b7 f3             	movzwl %bx,%esi
    1fb3:	0f b7 d3             	movzwl %bx,%edx
    1fb6:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    1fbd:	00 
    1fbe:	48 29 d0             	sub    %rdx,%rax
    1fc1:	48 c1 e0 04          	shl    $0x4,%rax
    1fc5:	0f b7 8c 04 90 00 00 	movzwl 0x90(%rsp,%rax,1),%ecx
    1fcc:	00 
    1fcd:	89 f2                	mov    %esi,%edx
    1fcf:	48 89 ee             	mov    %rbp,%rsi
    1fd2:	bf 01 00 00 00       	mov    $0x1,%edi
    1fd7:	b8 00 00 00 00       	mov    $0x0,%eax
    1fdc:	e8 2f f1 ff ff       	callq  1110 <__printf_chk@plt>
    1fe1:	83 c3 01             	add    $0x1,%ebx
    1fe4:	0f b7 c3             	movzwl %bx,%eax
    1fe7:	3b 05 3b 40 00 00    	cmp    0x403b(%rip),%eax        # 6028 <default_num_contexts>
    1fed:	72 c1                	jb     1fb0 <main+0x5ef>
    1fef:	66 45 85 e4          	test   %r12w,%r12w
    1ff3:	0f 84 d3 02 00 00    	je     22cc <main+0x90b>
    1ff9:	0f 8e 66 03 00 00    	jle    2365 <main+0x9a4>
    1fff:	48 8d 3d 3e 14 00 00 	lea    0x143e(%rip),%rdi        # 3444 <_IO_stdin_used+0x444>
    2006:	e8 c5 f0 ff ff       	callq  10d0 <puts@plt>
    200b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    2010:	e8 6b 0d 00 00       	callq  2d80 <portable_free>
    2015:	48 8d bc 24 9a 00 00 	lea    0x9a(%rsp),%rdi
    201c:	00 
    201d:	e8 11 0e 00 00       	callq  2e33 <portable_fini>
    2022:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    2029:	00 
    202a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2031:	00 00 
    2033:	0f 85 53 03 00 00    	jne    238c <main+0x9cb>
    2039:	b8 00 00 00 00       	mov    $0x0,%eax
    203e:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    2045:	5b                   	pop    %rbx
    2046:	5d                   	pop    %rbp
    2047:	41 5c                	pop    %r12
    2049:	41 5d                	pop    %r13
    204b:	41 5e                	pop    %r14
    204d:	41 5f                	pop    %r15
    204f:	c3                   	retq   
    2050:	48 8d 3d e1 0f 00 00 	lea    0xfe1(%rip),%rdi        # 3038 <_IO_stdin_used+0x38>
    2057:	e8 74 f0 ff ff       	callq  10d0 <puts@plt>
    205c:	66 c7 44 24 16 01 00 	movw   $0x1,0x16(%rsp)
    2063:	e9 c8 fc ff ff       	jmpq   1d30 <main+0x36f>
    2068:	48 8d 3d 59 10 00 00 	lea    0x1059(%rip),%rdi        # 30c8 <_IO_stdin_used+0xc8>
    206f:	e8 5c f0 ff ff       	callq  10d0 <puts@plt>
    2074:	66 c7 44 24 16 04 00 	movw   $0x4,0x16(%rsp)
    207b:	e9 b0 fc ff ff       	jmpq   1d30 <main+0x36f>
    2080:	0f b7 c9             	movzwl %cx,%ecx
    2083:	45 0f b7 c0          	movzwl %r8w,%r8d
    2087:	89 da                	mov    %ebx,%edx
    2089:	48 8d 35 68 10 00 00 	lea    0x1068(%rip),%rsi        # 30f8 <_IO_stdin_used+0xf8>
    2090:	bf 01 00 00 00       	mov    $0x1,%edi
    2095:	b8 00 00 00 00       	mov    $0x0,%eax
    209a:	e8 71 f0 ff ff       	callq  1110 <__printf_chk@plt>
    209f:	48 63 cb             	movslq %ebx,%rcx
    20a2:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    20a9:	00 
    20aa:	48 89 c2             	mov    %rax,%rdx
    20ad:	48 29 ca             	sub    %rcx,%rdx
    20b0:	48 c1 e2 04          	shl    $0x4,%rdx
    20b4:	0f b7 84 14 98 00 00 	movzwl 0x98(%rsp,%rdx,1),%eax
    20bb:	00 
    20bc:	83 c0 01             	add    $0x1,%eax
    20bf:	66 89 84 14 98 00 00 	mov    %ax,0x98(%rsp,%rdx,1)
    20c6:	00 
    20c7:	e9 12 01 00 00       	jmpq   21de <main+0x81d>
    20cc:	0f b7 c9             	movzwl %cx,%ecx
    20cf:	45 0f b7 c0          	movzwl %r8w,%r8d
    20d3:	89 da                	mov    %ebx,%edx
    20d5:	48 8d 35 4c 10 00 00 	lea    0x104c(%rip),%rsi        # 3128 <_IO_stdin_used+0x128>
    20dc:	bf 01 00 00 00       	mov    $0x1,%edi
    20e1:	b8 00 00 00 00       	mov    $0x0,%eax
    20e6:	e8 25 f0 ff ff       	callq  1110 <__printf_chk@plt>
    20eb:	48 63 cb             	movslq %ebx,%rcx
    20ee:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    20f5:	00 
    20f6:	48 89 c2             	mov    %rax,%rdx
    20f9:	48 29 ca             	sub    %rcx,%rdx
    20fc:	48 c1 e2 04          	shl    $0x4,%rdx
    2100:	0f b7 84 14 98 00 00 	movzwl 0x98(%rsp,%rdx,1),%eax
    2107:	00 
    2108:	83 c0 01             	add    $0x1,%eax
    210b:	66 89 84 14 98 00 00 	mov    %ax,0x98(%rsp,%rdx,1)
    2112:	00 
    2113:	e9 05 01 00 00       	jmpq   221d <main+0x85c>
    2118:	0f b7 c9             	movzwl %cx,%ecx
    211b:	45 0f b7 c0          	movzwl %r8w,%r8d
    211f:	89 da                	mov    %ebx,%edx
    2121:	48 8d 35 38 10 00 00 	lea    0x1038(%rip),%rsi        # 3160 <_IO_stdin_used+0x160>
    2128:	bf 01 00 00 00       	mov    $0x1,%edi
    212d:	b8 00 00 00 00       	mov    $0x0,%eax
    2132:	e8 d9 ef ff ff       	callq  1110 <__printf_chk@plt>
    2137:	48 63 cb             	movslq %ebx,%rcx
    213a:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    2141:	00 
    2142:	48 89 c2             	mov    %rax,%rdx
    2145:	48 29 ca             	sub    %rcx,%rdx
    2148:	48 c1 e2 04          	shl    $0x4,%rdx
    214c:	0f b7 84 14 98 00 00 	movzwl 0x98(%rsp,%rdx,1),%eax
    2153:	00 
    2154:	83 c0 01             	add    $0x1,%eax
    2157:	66 89 84 14 98 00 00 	mov    %ax,0x98(%rsp,%rdx,1)
    215e:	00 
    215f:	48 63 db             	movslq %ebx,%rbx
    2162:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    2169:	00 
    216a:	48 29 d8             	sub    %rbx,%rax
    216d:	48 c1 e0 04          	shl    $0x4,%rax
    2171:	66 44 03 a4 04 98 00 	add    0x98(%rsp,%rax,1),%r12w
    2178:	00 00 
    217a:	83 c5 01             	add    $0x1,%ebp
    217d:	0f b7 c5             	movzwl %bp,%eax
    2180:	3b 05 a2 3e 00 00    	cmp    0x3ea2(%rip),%eax        # 6028 <default_num_contexts>
    2186:	0f 83 d0 fb ff ff    	jae    1d5c <main+0x39b>
    218c:	0f b7 dd             	movzwl %bp,%ebx
    218f:	0f b7 d5             	movzwl %bp,%edx
    2192:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    2199:	00 
    219a:	48 89 c1             	mov    %rax,%rcx
    219d:	48 29 d1             	sub    %rdx,%rcx
    21a0:	48 c1 e1 04          	shl    $0x4,%rcx
    21a4:	66 c7 84 0c 98 00 00 	movw   $0x0,0x98(%rsp,%rcx,1)
    21ab:	00 00 00 
    21ae:	f6 44 0c 60 01       	testb  $0x1,0x60(%rsp,%rcx,1)
    21b3:	74 29                	je     21de <main+0x81d>
    21b5:	48 63 d3             	movslq %ebx,%rdx
    21b8:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    21bf:	00 
    21c0:	48 29 d0             	sub    %rdx,%rax
    21c3:	48 c1 e0 04          	shl    $0x4,%rax
    21c7:	0f b7 8c 04 92 00 00 	movzwl 0x92(%rsp,%rax,1),%ecx
    21ce:	00 
    21cf:	47 0f b7 04 6f       	movzwl (%r15,%r13,2),%r8d
    21d4:	66 44 39 c1          	cmp    %r8w,%cx
    21d8:	0f 85 a2 fe ff ff    	jne    2080 <main+0x6bf>
    21de:	48 63 d3             	movslq %ebx,%rdx
    21e1:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    21e8:	00 
    21e9:	48 29 d0             	sub    %rdx,%rax
    21ec:	48 c1 e0 04          	shl    $0x4,%rax
    21f0:	f6 44 04 60 02       	testb  $0x2,0x60(%rsp,%rax,1)
    21f5:	74 26                	je     221d <main+0x85c>
    21f7:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    21fe:	00 
    21ff:	48 29 d0             	sub    %rdx,%rax
    2202:	48 c1 e0 04          	shl    $0x4,%rax
    2206:	0f b7 8c 04 94 00 00 	movzwl 0x94(%rsp,%rax,1),%ecx
    220d:	00 
    220e:	47 0f b7 04 6e       	movzwl (%r14,%r13,2),%r8d
    2213:	66 44 39 c1          	cmp    %r8w,%cx
    2217:	0f 85 af fe ff ff    	jne    20cc <main+0x70b>
    221d:	48 63 d3             	movslq %ebx,%rdx
    2220:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    2227:	00 
    2228:	48 29 d0             	sub    %rdx,%rax
    222b:	48 c1 e0 04          	shl    $0x4,%rax
    222f:	f6 44 04 60 04       	testb  $0x4,0x60(%rsp,%rax,1)
    2234:	0f 84 25 ff ff ff    	je     215f <main+0x79e>
    223a:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    2241:	00 
    2242:	48 29 d0             	sub    %rdx,%rax
    2245:	48 c1 e0 04          	shl    $0x4,%rax
    2249:	0f b7 8c 04 96 00 00 	movzwl 0x96(%rsp,%rax,1),%ecx
    2250:	00 
    2251:	48 8d 05 10 12 00 00 	lea    0x1210(%rip),%rax        # 3468 <state_known_crc>
    2258:	46 0f b7 04 68       	movzwl (%rax,%r13,2),%r8d
    225d:	66 44 39 c1          	cmp    %r8w,%cx
    2261:	0f 84 f8 fe ff ff    	je     215f <main+0x79e>
    2267:	e9 ac fe ff ff       	jmpq   2118 <main+0x757>
    226c:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    2270:	0f af 05 b1 3d 00 00 	imul   0x3db1(%rip),%eax        # 6028 <default_num_contexts>
    2277:	66 0f ef db          	pxor   %xmm3,%xmm3
    227b:	f2 48 0f 2a d8       	cvtsi2sd %rax,%xmm3
    2280:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
    2286:	48 89 df             	mov    %rbx,%rdi
    2289:	e8 87 0b 00 00       	callq  2e15 <time_in_secs>
    228e:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
    2294:	f2 0f 5e d8          	divsd  %xmm0,%xmm3
    2298:	66 0f 28 c3          	movapd %xmm3,%xmm0
    229c:	48 8d 35 6e 10 00 00 	lea    0x106e(%rip),%rsi        # 3311 <_IO_stdin_used+0x311>
    22a3:	bf 01 00 00 00       	mov    $0x1,%edi
    22a8:	b8 01 00 00 00       	mov    $0x1,%eax
    22ad:	e8 5e ee ff ff       	callq  1110 <__printf_chk@plt>
    22b2:	e9 1b fb ff ff       	jmpq   1dd2 <main+0x411>
    22b7:	48 8d 3d d2 0e 00 00 	lea    0xed2(%rip),%rdi        # 3190 <_IO_stdin_used+0x190>
    22be:	e8 0d ee ff ff       	callq  10d0 <puts@plt>
    22c3:	41 83 c4 01          	add    $0x1,%r12d
    22c7:	e9 21 fb ff ff       	jmpq   1ded <main+0x42c>
    22cc:	48 8d 3d 4d 0f 00 00 	lea    0xf4d(%rip),%rdi        # 3220 <_IO_stdin_used+0x220>
    22d3:	e8 f8 ed ff ff       	callq  10d0 <puts@plt>
    22d8:	66 83 7c 24 16 03    	cmpw   $0x3,0x16(%rsp)
    22de:	0f 85 27 fd ff ff    	jne    200b <main+0x64a>
    22e4:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
    22e8:	0f af 05 39 3d 00 00 	imul   0x3d39(%rip),%eax        # 6028 <default_num_contexts>
    22ef:	66 0f ef e4          	pxor   %xmm4,%xmm4
    22f3:	f2 48 0f 2a e0       	cvtsi2sd %rax,%xmm4
    22f8:	f2 0f 11 64 24 08    	movsd  %xmm4,0x8(%rsp)
    22fe:	48 8b 3c 24          	mov    (%rsp),%rdi
    2302:	e8 0e 0b 00 00       	callq  2e15 <time_in_secs>
    2307:	f2 0f 10 64 24 08    	movsd  0x8(%rsp),%xmm4
    230d:	f2 0f 5e e0          	divsd  %xmm0,%xmm4
    2311:	66 0f 28 c4          	movapd %xmm4,%xmm0
    2315:	48 8d 0d 44 10 00 00 	lea    0x1044(%rip),%rcx        # 3360 <_IO_stdin_used+0x360>
    231c:	48 8d 15 1d 10 00 00 	lea    0x101d(%rip),%rdx        # 3340 <_IO_stdin_used+0x340>
    2323:	48 8d 35 fa 10 00 00 	lea    0x10fa(%rip),%rsi        # 3424 <_IO_stdin_used+0x424>
    232a:	bf 01 00 00 00       	mov    $0x1,%edi
    232f:	b8 01 00 00 00       	mov    $0x1,%eax
    2334:	e8 d7 ed ff ff       	callq  1110 <__printf_chk@plt>
    2339:	48 8b 15 d8 3c 00 00 	mov    0x3cd8(%rip),%rdx        # 6018 <mem_name+0x8>
    2340:	48 8d 35 f7 10 00 00 	lea    0x10f7(%rip),%rsi        # 343e <_IO_stdin_used+0x43e>
    2347:	bf 01 00 00 00       	mov    $0x1,%edi
    234c:	b8 00 00 00 00       	mov    $0x0,%eax
    2351:	e8 ba ed ff ff       	callq  1110 <__printf_chk@plt>
    2356:	bf 0a 00 00 00       	mov    $0xa,%edi
    235b:	e8 60 ed ff ff       	callq  10c0 <putchar@plt>
    2360:	e9 a6 fc ff ff       	jmpq   200b <main+0x64a>
    2365:	0f 89 a0 fc ff ff    	jns    200b <main+0x64a>
    236b:	48 8d 3d f6 0e 00 00 	lea    0xef6(%rip),%rdi        # 3268 <_IO_stdin_used+0x268>
    2372:	e8 59 ed ff ff       	callq  10d0 <puts@plt>
    2377:	e9 8f fc ff ff       	jmpq   200b <main+0x64a>
    237c:	f6 44 24 60 04       	testb  $0x4,0x60(%rsp)
    2381:	0f 85 68 fc ff ff    	jne    1fef <main+0x62e>
    2387:	e9 0f fc ff ff       	jmpq   1f9b <main+0x5da>
    238c:	e8 5f ed ff ff       	callq  10f0 <__stack_chk_fail@plt>

0000000000002391 <core_init_matrix>:
    2391:	f3 0f 1e fa          	endbr64 
    2395:	41 57                	push   %r15
    2397:	41 56                	push   %r14
    2399:	41 55                	push   %r13
    239b:	41 54                	push   %r12
    239d:	55                   	push   %rbp
    239e:	53                   	push   %rbx
    239f:	49 89 cd             	mov    %rcx,%r13
    23a2:	85 d2                	test   %edx,%edx
    23a4:	b8 01 00 00 00       	mov    $0x1,%eax
    23a9:	0f 44 d0             	cmove  %eax,%edx
    23ac:	b8 00 00 00 00       	mov    $0x0,%eax
    23b1:	85 ff                	test   %edi,%edi
    23b3:	0f 84 b0 00 00 00    	je     2469 <core_init_matrix+0xd8>
    23b9:	41 89 c0             	mov    %eax,%r8d
    23bc:	83 c0 01             	add    $0x1,%eax
    23bf:	89 c1                	mov    %eax,%ecx
    23c1:	0f af c8             	imul   %eax,%ecx
    23c4:	c1 e1 03             	shl    $0x3,%ecx
    23c7:	39 cf                	cmp    %ecx,%edi
    23c9:	77 ee                	ja     23b9 <core_init_matrix+0x28>
    23cb:	48 83 ee 01          	sub    $0x1,%rsi
    23cf:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
    23d3:	4c 8d 5e 04          	lea    0x4(%rsi),%r11
    23d7:	45 89 c6             	mov    %r8d,%r14d
    23da:	45 0f af f0          	imul   %r8d,%r14d
    23de:	4d 01 f6             	add    %r14,%r14
    23e1:	4f 8d 0c 33          	lea    (%r11,%r14,1),%r9
    23e5:	45 85 c0             	test   %r8d,%r8d
    23e8:	0f 84 9c 00 00 00    	je     248a <core_init_matrix+0xf9>
    23ee:	bd 00 00 00 00       	mov    $0x0,%ebp
    23f3:	bb 00 00 00 00       	mov    $0x0,%ebx
    23f8:	b9 01 00 00 00       	mov    $0x1,%ecx
    23fd:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    2403:	eb 1a                	jmp    241f <core_init_matrix+0x8e>
    2405:	41 8d 40 ff          	lea    -0x1(%r8),%eax
    2409:	45 85 c0             	test   %r8d,%r8d
    240c:	41 0f 44 c4          	cmove  %r12d,%eax
    2410:	8d 4c 01 01          	lea    0x1(%rcx,%rax,1),%ecx
    2414:	83 c3 01             	add    $0x1,%ebx
    2417:	44 01 c5             	add    %r8d,%ebp
    241a:	44 39 c3             	cmp    %r8d,%ebx
    241d:	73 6b                	jae    248a <core_init_matrix+0xf9>
    241f:	89 ce                	mov    %ecx,%esi
    2421:	bf 00 00 00 00       	mov    $0x0,%edi
    2426:	41 89 ea             	mov    %ebp,%r10d
    2429:	41 29 ca             	sub    %ecx,%r10d
    242c:	0f af d6             	imul   %esi,%edx
    242f:	41 89 d7             	mov    %edx,%r15d
    2432:	41 c1 ff 1f          	sar    $0x1f,%r15d
    2436:	41 c1 ef 10          	shr    $0x10,%r15d
    243a:	42 8d 04 3a          	lea    (%rdx,%r15,1),%eax
    243e:	0f b7 c0             	movzwl %ax,%eax
    2441:	44 29 f8             	sub    %r15d,%eax
    2444:	89 c2                	mov    %eax,%edx
    2446:	01 f0                	add    %esi,%eax
    2448:	45 8d 3c 32          	lea    (%r10,%rsi,1),%r15d
    244c:	66 43 89 04 79       	mov    %ax,(%r9,%r15,2)
    2451:	01 f0                	add    %esi,%eax
    2453:	66 25 ff 00          	and    $0xff,%ax
    2457:	66 43 89 04 7b       	mov    %ax,(%r11,%r15,2)
    245c:	83 c6 01             	add    $0x1,%esi
    245f:	83 c7 01             	add    $0x1,%edi
    2462:	44 39 c7             	cmp    %r8d,%edi
    2465:	72 c5                	jb     242c <core_init_matrix+0x9b>
    2467:	eb 9c                	jmp    2405 <core_init_matrix+0x74>
    2469:	4c 8d 4e ff          	lea    -0x1(%rsi),%r9
    246d:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    2471:	4d 8d 59 04          	lea    0x4(%r9),%r11
    2475:	49 83 c1 06          	add    $0x6,%r9
    2479:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    247f:	41 be 02 00 00 00    	mov    $0x2,%r14d
    2485:	e9 64 ff ff ff       	jmpq   23ee <core_init_matrix+0x5d>
    248a:	4d 89 5d 08          	mov    %r11,0x8(%r13)
    248e:	4d 89 4d 10          	mov    %r9,0x10(%r13)
    2492:	4b 8d 44 31 ff       	lea    -0x1(%r9,%r14,1),%rax
    2497:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    249b:	48 83 c0 04          	add    $0x4,%rax
    249f:	49 89 45 18          	mov    %rax,0x18(%r13)
    24a3:	45 89 45 00          	mov    %r8d,0x0(%r13)
    24a7:	44 89 c0             	mov    %r8d,%eax
    24aa:	5b                   	pop    %rbx
    24ab:	5d                   	pop    %rbp
    24ac:	41 5c                	pop    %r12
    24ae:	41 5d                	pop    %r13
    24b0:	41 5e                	pop    %r14
    24b2:	41 5f                	pop    %r15
    24b4:	c3                   	retq   

00000000000024b5 <matrix_sum>:
    24b5:	f3 0f 1e fa          	endbr64 
    24b9:	85 ff                	test   %edi,%edi
    24bb:	74 2b                	je     24e8 <matrix_sum+0x33>
    24bd:	41 54                	push   %r12
    24bf:	55                   	push   %rbp
    24c0:	53                   	push   %rbx
    24c1:	48 89 f3             	mov    %rsi,%rbx
    24c4:	41 89 fb             	mov    %edi,%r11d
    24c7:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    24cd:	bd 00 00 00 00       	mov    $0x0,%ebp
    24d2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    24d8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    24de:	b9 00 00 00 00       	mov    $0x0,%ecx
    24e3:	0f bf f2             	movswl %dx,%esi
    24e6:	eb 46                	jmp    252e <matrix_sum+0x79>
    24e8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    24ee:	44 89 c8             	mov    %r9d,%eax
    24f1:	c3                   	retq   
    24f2:	45 39 d0             	cmp    %r10d,%r8d
    24f5:	0f 9f c2             	setg   %dl
    24f8:	0f b6 d2             	movzbl %dl,%edx
    24fb:	41 01 d1             	add    %edx,%r9d
    24fe:	83 c0 01             	add    $0x1,%eax
    2501:	41 39 c3             	cmp    %eax,%r11d
    2504:	74 1b                	je     2521 <matrix_sum+0x6c>
    2506:	45 89 c2             	mov    %r8d,%r10d
    2509:	89 c2                	mov    %eax,%edx
    250b:	44 8b 04 93          	mov    (%rbx,%rdx,4),%r8d
    250f:	44 01 c1             	add    %r8d,%ecx
    2512:	39 ce                	cmp    %ecx,%esi
    2514:	7d dc                	jge    24f2 <matrix_sum+0x3d>
    2516:	41 83 c1 0a          	add    $0xa,%r9d
    251a:	b9 00 00 00 00       	mov    $0x0,%ecx
    251f:	eb dd                	jmp    24fe <matrix_sum+0x49>
    2521:	83 c5 01             	add    $0x1,%ebp
    2524:	41 01 fb             	add    %edi,%r11d
    2527:	41 01 fc             	add    %edi,%r12d
    252a:	39 ef                	cmp    %ebp,%edi
    252c:	74 05                	je     2533 <matrix_sum+0x7e>
    252e:	44 89 e0             	mov    %r12d,%eax
    2531:	eb d3                	jmp    2506 <matrix_sum+0x51>
    2533:	44 89 c8             	mov    %r9d,%eax
    2536:	5b                   	pop    %rbx
    2537:	5d                   	pop    %rbp
    2538:	41 5c                	pop    %r12
    253a:	c3                   	retq   

000000000000253b <matrix_mul_const>:
    253b:	f3 0f 1e fa          	endbr64 
    253f:	53                   	push   %rbx
    2540:	41 89 f9             	mov    %edi,%r9d
    2543:	bb 00 00 00 00       	mov    $0x0,%ebx
    2548:	41 bb 00 00 00 00    	mov    $0x0,%r11d
    254e:	44 0f bf d1          	movswl %cx,%r10d
    2552:	85 ff                	test   %edi,%edi
    2554:	75 10                	jne    2566 <matrix_mul_const+0x2b>
    2556:	5b                   	pop    %rbx
    2557:	c3                   	retq   
    2558:	41 83 c3 01          	add    $0x1,%r11d
    255c:	01 fb                	add    %edi,%ebx
    255e:	41 01 f9             	add    %edi,%r9d
    2561:	44 39 df             	cmp    %r11d,%edi
    2564:	74 f0                	je     2556 <matrix_mul_const+0x1b>
    2566:	89 d8                	mov    %ebx,%eax
    2568:	41 89 c0             	mov    %eax,%r8d
    256b:	42 0f bf 0c 42       	movswl (%rdx,%r8,2),%ecx
    2570:	41 0f af ca          	imul   %r10d,%ecx
    2574:	42 89 0c 86          	mov    %ecx,(%rsi,%r8,4)
    2578:	83 c0 01             	add    $0x1,%eax
    257b:	41 39 c1             	cmp    %eax,%r9d
    257e:	75 e8                	jne    2568 <matrix_mul_const+0x2d>
    2580:	eb d6                	jmp    2558 <matrix_mul_const+0x1d>

0000000000002582 <matrix_add_const>:
    2582:	f3 0f 1e fa          	endbr64 
    2586:	41 89 f8             	mov    %edi,%r8d
    2589:	41 ba 00 00 00 00    	mov    $0x0,%r10d
    258f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    2595:	85 ff                	test   %edi,%edi
    2597:	75 10                	jne    25a9 <matrix_add_const+0x27>
    2599:	c3                   	retq   
    259a:	41 83 c1 01          	add    $0x1,%r9d
    259e:	41 01 fa             	add    %edi,%r10d
    25a1:	41 01 f8             	add    %edi,%r8d
    25a4:	44 39 cf             	cmp    %r9d,%edi
    25a7:	74 13                	je     25bc <matrix_add_const+0x3a>
    25a9:	44 89 d0             	mov    %r10d,%eax
    25ac:	89 c1                	mov    %eax,%ecx
    25ae:	66 01 14 4e          	add    %dx,(%rsi,%rcx,2)
    25b2:	83 c0 01             	add    $0x1,%eax
    25b5:	41 39 c0             	cmp    %eax,%r8d
    25b8:	75 f2                	jne    25ac <matrix_add_const+0x2a>
    25ba:	eb de                	jmp    259a <matrix_add_const+0x18>
    25bc:	c3                   	retq   

00000000000025bd <matrix_mul_vect>:
    25bd:	f3 0f 1e fa          	endbr64 
    25c1:	85 ff                	test   %edi,%edi
    25c3:	74 5e                	je     2623 <matrix_mul_vect+0x66>
    25c5:	41 54                	push   %r12
    25c7:	55                   	push   %rbp
    25c8:	53                   	push   %rbx
    25c9:	89 fb                	mov    %edi,%ebx
    25cb:	48 89 cd             	mov    %rcx,%rbp
    25ce:	48 89 f1             	mov    %rsi,%rcx
    25d1:	8d 47 ff             	lea    -0x1(%rdi),%eax
    25d4:	4c 8d 64 86 04       	lea    0x4(%rsi,%rax,4),%r12
    25d9:	41 89 fb             	mov    %edi,%r11d
    25dc:	bf 00 00 00 00       	mov    $0x0,%edi
    25e1:	eb 0e                	jmp    25f1 <matrix_mul_vect+0x34>
    25e3:	48 83 c1 04          	add    $0x4,%rcx
    25e7:	01 df                	add    %ebx,%edi
    25e9:	41 01 db             	add    %ebx,%r11d
    25ec:	4c 39 e1             	cmp    %r12,%rcx
    25ef:	74 2d                	je     261e <matrix_mul_vect+0x61>
    25f1:	49 89 c9             	mov    %rcx,%r9
    25f4:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
    25fa:	49 89 e8             	mov    %rbp,%r8
    25fd:	89 f8                	mov    %edi,%eax
    25ff:	89 c6                	mov    %eax,%esi
    2601:	0f bf 34 72          	movswl (%rdx,%rsi,2),%esi
    2605:	45 0f bf 10          	movswl (%r8),%r10d
    2609:	41 0f af f2          	imul   %r10d,%esi
    260d:	41 01 31             	add    %esi,(%r9)
    2610:	83 c0 01             	add    $0x1,%eax
    2613:	49 83 c0 02          	add    $0x2,%r8
    2617:	44 39 d8             	cmp    %r11d,%eax
    261a:	75 e3                	jne    25ff <matrix_mul_vect+0x42>
    261c:	eb c5                	jmp    25e3 <matrix_mul_vect+0x26>
    261e:	5b                   	pop    %rbx
    261f:	5d                   	pop    %rbp
    2620:	41 5c                	pop    %r12
    2622:	c3                   	retq   
    2623:	c3                   	retq   

0000000000002624 <matrix_mul_matrix>:
    2624:	f3 0f 1e fa          	endbr64 
    2628:	41 56                	push   %r14
    262a:	41 55                	push   %r13
    262c:	41 54                	push   %r12
    262e:	55                   	push   %rbp
    262f:	53                   	push   %rbx
    2630:	41 89 f8             	mov    %edi,%r8d
    2633:	49 89 f4             	mov    %rsi,%r12
    2636:	49 89 d3             	mov    %rdx,%r11
    2639:	49 89 ca             	mov    %rcx,%r10
    263c:	41 89 f9             	mov    %edi,%r9d
    263f:	bd 00 00 00 00       	mov    $0x0,%ebp
    2644:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    264a:	41 be 00 00 00 00    	mov    $0x0,%r14d
    2650:	85 ff                	test   %edi,%edi
    2652:	75 56                	jne    26aa <matrix_mul_matrix+0x86>
    2654:	5b                   	pop    %rbx
    2655:	5d                   	pop    %rbp
    2656:	41 5c                	pop    %r12
    2658:	41 5d                	pop    %r13
    265a:	41 5e                	pop    %r14
    265c:	c3                   	retq   
    265d:	8d 43 01             	lea    0x1(%rbx),%eax
    2660:	41 39 c0             	cmp    %eax,%r8d
    2663:	74 34                	je     2699 <matrix_mul_matrix+0x75>
    2665:	89 c3                	mov    %eax,%ebx
    2667:	8d 44 1d 00          	lea    0x0(%rbp,%rbx,1),%eax
    266b:	49 8d 34 84          	lea    (%r12,%rax,4),%rsi
    266f:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
    2675:	89 d9                	mov    %ebx,%ecx
    2677:	89 e8                	mov    %ebp,%eax
    2679:	89 c2                	mov    %eax,%edx
    267b:	41 0f bf 14 53       	movswl (%r11,%rdx,2),%edx
    2680:	89 cf                	mov    %ecx,%edi
    2682:	41 0f bf 3c 7a       	movswl (%r10,%rdi,2),%edi
    2687:	0f af d7             	imul   %edi,%edx
    268a:	01 16                	add    %edx,(%rsi)
    268c:	83 c0 01             	add    $0x1,%eax
    268f:	44 01 c1             	add    %r8d,%ecx
    2692:	41 39 c1             	cmp    %eax,%r9d
    2695:	75 e2                	jne    2679 <matrix_mul_matrix+0x55>
    2697:	eb c4                	jmp    265d <matrix_mul_matrix+0x39>
    2699:	41 8d 55 01          	lea    0x1(%r13),%edx
    269d:	01 c5                	add    %eax,%ebp
    269f:	41 01 c1             	add    %eax,%r9d
    26a2:	41 39 dd             	cmp    %ebx,%r13d
    26a5:	74 ad                	je     2654 <matrix_mul_matrix+0x30>
    26a7:	41 89 d5             	mov    %edx,%r13d
    26aa:	44 89 f3             	mov    %r14d,%ebx
    26ad:	eb b8                	jmp    2667 <matrix_mul_matrix+0x43>

00000000000026af <matrix_mul_matrix_bitextract>:
    26af:	f3 0f 1e fa          	endbr64 
    26b3:	41 56                	push   %r14
    26b5:	41 55                	push   %r13
    26b7:	41 54                	push   %r12
    26b9:	55                   	push   %rbp
    26ba:	53                   	push   %rbx
    26bb:	41 89 f8             	mov    %edi,%r8d
    26be:	49 89 f4             	mov    %rsi,%r12
    26c1:	49 89 d3             	mov    %rdx,%r11
    26c4:	49 89 ca             	mov    %rcx,%r10
    26c7:	41 89 f9             	mov    %edi,%r9d
    26ca:	bd 00 00 00 00       	mov    $0x0,%ebp
    26cf:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    26d5:	41 be 00 00 00 00    	mov    $0x0,%r14d
    26db:	85 ff                	test   %edi,%edi
    26dd:	75 67                	jne    2746 <matrix_mul_matrix_bitextract+0x97>
    26df:	5b                   	pop    %rbx
    26e0:	5d                   	pop    %rbp
    26e1:	41 5c                	pop    %r12
    26e3:	41 5d                	pop    %r13
    26e5:	41 5e                	pop    %r14
    26e7:	c3                   	retq   
    26e8:	8d 43 01             	lea    0x1(%rbx),%eax
    26eb:	41 39 c0             	cmp    %eax,%r8d
    26ee:	74 45                	je     2735 <matrix_mul_matrix_bitextract+0x86>
    26f0:	89 c3                	mov    %eax,%ebx
    26f2:	8d 44 1d 00          	lea    0x0(%rbp,%rbx,1),%eax
    26f6:	49 8d 3c 84          	lea    (%r12,%rax,4),%rdi
    26fa:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    2700:	89 de                	mov    %ebx,%esi
    2702:	89 e9                	mov    %ebp,%ecx
    2704:	89 c8                	mov    %ecx,%eax
    2706:	41 0f bf 04 43       	movswl (%r11,%rax,2),%eax
    270b:	89 f2                	mov    %esi,%edx
    270d:	41 0f bf 14 52       	movswl (%r10,%rdx,2),%edx
    2712:	0f af c2             	imul   %edx,%eax
    2715:	89 c2                	mov    %eax,%edx
    2717:	c1 fa 02             	sar    $0x2,%edx
    271a:	83 e2 0f             	and    $0xf,%edx
    271d:	c1 f8 05             	sar    $0x5,%eax
    2720:	83 e0 7f             	and    $0x7f,%eax
    2723:	0f af c2             	imul   %edx,%eax
    2726:	01 07                	add    %eax,(%rdi)
    2728:	83 c1 01             	add    $0x1,%ecx
    272b:	44 01 c6             	add    %r8d,%esi
    272e:	41 39 c9             	cmp    %ecx,%r9d
    2731:	75 d1                	jne    2704 <matrix_mul_matrix_bitextract+0x55>
    2733:	eb b3                	jmp    26e8 <matrix_mul_matrix_bitextract+0x39>
    2735:	41 8d 55 01          	lea    0x1(%r13),%edx
    2739:	01 c5                	add    %eax,%ebp
    273b:	41 01 c1             	add    %eax,%r9d
    273e:	41 39 dd             	cmp    %ebx,%r13d
    2741:	74 9c                	je     26df <matrix_mul_matrix_bitextract+0x30>
    2743:	41 89 d5             	mov    %edx,%r13d
    2746:	44 89 f3             	mov    %r14d,%ebx
    2749:	eb a7                	jmp    26f2 <matrix_mul_matrix_bitextract+0x43>

000000000000274b <matrix_test>:
    274b:	f3 0f 1e fa          	endbr64 
    274f:	41 57                	push   %r15
    2751:	41 56                	push   %r14
    2753:	41 55                	push   %r13
    2755:	41 54                	push   %r12
    2757:	55                   	push   %rbp
    2758:	53                   	push   %rbx
    2759:	48 83 ec 18          	sub    $0x18,%rsp
    275d:	89 fb                	mov    %edi,%ebx
    275f:	48 89 f5             	mov    %rsi,%rbp
    2762:	49 89 d5             	mov    %rdx,%r13
    2765:	49 89 cf             	mov    %rcx,%r15
    2768:	45 89 c4             	mov    %r8d,%r12d
    276b:	45 0f bf f0          	movswl %r8w,%r14d
    276f:	44 89 f2             	mov    %r14d,%edx
    2772:	4c 89 ee             	mov    %r13,%rsi
    2775:	e8 08 fe ff ff       	callq  2582 <matrix_add_const>
    277a:	44 89 f1             	mov    %r14d,%ecx
    277d:	4c 89 ea             	mov    %r13,%rdx
    2780:	48 89 ee             	mov    %rbp,%rsi
    2783:	89 df                	mov    %ebx,%edi
    2785:	e8 b1 fd ff ff       	callq  253b <matrix_mul_const>
    278a:	45 89 e6             	mov    %r12d,%r14d
    278d:	66 41 81 ce 00 f0    	or     $0xf000,%r14w
    2793:	45 0f bf f6          	movswl %r14w,%r14d
    2797:	44 89 f2             	mov    %r14d,%edx
    279a:	48 89 ee             	mov    %rbp,%rsi
    279d:	89 df                	mov    %ebx,%edi
    279f:	e8 11 fd ff ff       	callq  24b5 <matrix_sum>
    27a4:	0f bf f8             	movswl %ax,%edi
    27a7:	be 00 00 00 00       	mov    $0x0,%esi
    27ac:	e8 a3 05 00 00       	callq  2d54 <crc16>
    27b1:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    27b6:	4c 89 f9             	mov    %r15,%rcx
    27b9:	4c 89 ea             	mov    %r13,%rdx
    27bc:	48 89 ee             	mov    %rbp,%rsi
    27bf:	89 df                	mov    %ebx,%edi
    27c1:	e8 f7 fd ff ff       	callq  25bd <matrix_mul_vect>
    27c6:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    27cb:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    27cf:	44 89 f2             	mov    %r14d,%edx
    27d2:	48 89 ee             	mov    %rbp,%rsi
    27d5:	89 df                	mov    %ebx,%edi
    27d7:	e8 d9 fc ff ff       	callq  24b5 <matrix_sum>
    27dc:	0f bf f8             	movswl %ax,%edi
    27df:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    27e3:	e8 6c 05 00 00       	callq  2d54 <crc16>
    27e8:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    27ed:	4c 89 f9             	mov    %r15,%rcx
    27f0:	4c 89 ea             	mov    %r13,%rdx
    27f3:	48 89 ee             	mov    %rbp,%rsi
    27f6:	89 df                	mov    %ebx,%edi
    27f8:	e8 27 fe ff ff       	callq  2624 <matrix_mul_matrix>
    27fd:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
    2802:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    2806:	44 89 f2             	mov    %r14d,%edx
    2809:	48 89 ee             	mov    %rbp,%rsi
    280c:	89 df                	mov    %ebx,%edi
    280e:	e8 a2 fc ff ff       	callq  24b5 <matrix_sum>
    2813:	0f bf f8             	movswl %ax,%edi
    2816:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    281a:	e8 35 05 00 00       	callq  2d54 <crc16>
    281f:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    2824:	4c 89 f9             	mov    %r15,%rcx
    2827:	4c 89 ea             	mov    %r13,%rdx
    282a:	48 89 ee             	mov    %rbp,%rsi
    282d:	89 df                	mov    %ebx,%edi
    282f:	e8 7b fe ff ff       	callq  26af <matrix_mul_matrix_bitextract>
    2834:	44 0f b7 7c 24 0c    	movzwl 0xc(%rsp),%r15d
    283a:	44 89 f2             	mov    %r14d,%edx
    283d:	48 89 ee             	mov    %rbp,%rsi
    2840:	89 df                	mov    %ebx,%edi
    2842:	e8 6e fc ff ff       	callq  24b5 <matrix_sum>
    2847:	0f bf f8             	movswl %ax,%edi
    284a:	44 89 fe             	mov    %r15d,%esi
    284d:	e8 02 05 00 00       	callq  2d54 <crc16>
    2852:	89 c5                	mov    %eax,%ebp
    2854:	41 f7 dc             	neg    %r12d
    2857:	41 0f bf d4          	movswl %r12w,%edx
    285b:	4c 89 ee             	mov    %r13,%rsi
    285e:	89 df                	mov    %ebx,%edi
    2860:	e8 1d fd ff ff       	callq  2582 <matrix_add_const>
    2865:	89 e8                	mov    %ebp,%eax
    2867:	48 83 c4 18          	add    $0x18,%rsp
    286b:	5b                   	pop    %rbx
    286c:	5d                   	pop    %rbp
    286d:	41 5c                	pop    %r12
    286f:	41 5d                	pop    %r13
    2871:	41 5e                	pop    %r14
    2873:	41 5f                	pop    %r15
    2875:	c3                   	retq   

0000000000002876 <core_bench_matrix>:
    2876:	f3 0f 1e fa          	endbr64 
    287a:	53                   	push   %rbx
    287b:	0f b7 da             	movzwl %dx,%ebx
    287e:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    2882:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    2886:	44 0f bf c6          	movswl %si,%r8d
    288a:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    288e:	8b 3f                	mov    (%rdi),%edi
    2890:	e8 b6 fe ff ff       	callq  274b <matrix_test>
    2895:	0f bf f8             	movswl %ax,%edi
    2898:	89 de                	mov    %ebx,%esi
    289a:	e8 b5 04 00 00       	callq  2d54 <crc16>
    289f:	5b                   	pop    %rbx
    28a0:	c3                   	retq   

00000000000028a1 <core_init_state>:
    28a1:	f3 0f 1e fa          	endbr64 
    28a5:	41 57                	push   %r15
    28a7:	41 56                	push   %r14
    28a9:	41 55                	push   %r13
    28ab:	41 54                	push   %r12
    28ad:	55                   	push   %rbp
    28ae:	53                   	push   %rbx
    28af:	89 7c 24 fc          	mov    %edi,-0x4(%rsp)
    28b3:	48 89 d3             	mov    %rdx,%rbx
    28b6:	8d 6f ff             	lea    -0x1(%rdi),%ebp
    28b9:	b9 00 00 00 00       	mov    $0x0,%ecx
    28be:	4c 8d 3d 3b 34 00 00 	lea    0x343b(%rip),%r15        # 5d00 <errpat>
    28c5:	41 bc 08 00 00 00    	mov    $0x8,%r12d
    28cb:	4c 8d 35 4e 34 00 00 	lea    0x344e(%rip),%r14        # 5d20 <scipat>
    28d2:	4c 8d 2d 67 34 00 00 	lea    0x3467(%rip),%r13        # 5d40 <floatpat>
    28d9:	83 fd 01             	cmp    $0x1,%ebp
    28dc:	77 39                	ja     2917 <core_init_state+0x76>
    28de:	39 4c 24 fc          	cmp    %ecx,-0x4(%rsp)
    28e2:	76 1c                	jbe    2900 <core_init_state+0x5f>
    28e4:	89 ca                	mov    %ecx,%edx
    28e6:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    28ea:	48 8d 54 13 01       	lea    0x1(%rbx,%rdx,1),%rdx
    28ef:	29 cd                	sub    %ecx,%ebp
    28f1:	48 01 d5             	add    %rdx,%rbp
    28f4:	c6 00 00             	movb   $0x0,(%rax)
    28f7:	48 83 c0 01          	add    $0x1,%rax
    28fb:	48 39 e8             	cmp    %rbp,%rax
    28fe:	75 f4                	jne    28f4 <core_init_state+0x53>
    2900:	5b                   	pop    %rbx
    2901:	5d                   	pop    %rbp
    2902:	41 5c                	pop    %r12
    2904:	41 5d                	pop    %r13
    2906:	41 5e                	pop    %r14
    2908:	41 5f                	pop    %r15
    290a:	c3                   	retq   
    290b:	89 d2                	mov    %edx,%edx
    290d:	48 01 d9             	add    %rbx,%rcx
    2910:	c6 04 11 2c          	movb   $0x2c,(%rcx,%rdx,1)
    2914:	44 89 c9             	mov    %r9d,%ecx
    2917:	83 c6 01             	add    $0x1,%esi
    291a:	89 f0                	mov    %esi,%eax
    291c:	83 e0 07             	and    $0x7,%eax
    291f:	66 83 f8 06          	cmp    $0x6,%ax
    2923:	7f 7a                	jg     299f <core_init_state+0xfe>
    2925:	66 83 f8 04          	cmp    $0x4,%ax
    2929:	7f 62                	jg     298d <core_init_state+0xec>
    292b:	66 83 f8 02          	cmp    $0x2,%ax
    292f:	7e 41                	jle    2972 <core_init_state+0xd1>
    2931:	89 f0                	mov    %esi,%eax
    2933:	66 c1 f8 03          	sar    $0x3,%ax
    2937:	83 e0 03             	and    $0x3,%eax
    293a:	4d 8b 44 c5 00       	mov    0x0(%r13,%rax,8),%r8
    293f:	44 89 e2             	mov    %r12d,%edx
    2942:	44 8d 4c 0a 01       	lea    0x1(%rdx,%rcx,1),%r9d
    2947:	41 39 e9             	cmp    %ebp,%r9d
    294a:	73 92                	jae    28de <core_init_state+0x3d>
    294c:	44 8d 5a ff          	lea    -0x1(%rdx),%r11d
    2950:	b8 00 00 00 00       	mov    $0x0,%eax
    2955:	89 c9                	mov    %ecx,%ecx
    2957:	4c 8d 14 0b          	lea    (%rbx,%rcx,1),%r10
    295b:	41 0f b6 3c 00       	movzbl (%r8,%rax,1),%edi
    2960:	41 88 3c 02          	mov    %dil,(%r10,%rax,1)
    2964:	48 89 c7             	mov    %rax,%rdi
    2967:	48 83 c0 01          	add    $0x1,%rax
    296b:	4c 39 df             	cmp    %r11,%rdi
    296e:	75 eb                	jne    295b <core_init_state+0xba>
    2970:	eb 99                	jmp    290b <core_init_state+0x6a>
    2972:	89 f0                	mov    %esi,%eax
    2974:	66 c1 f8 03          	sar    $0x3,%ax
    2978:	83 e0 03             	and    $0x3,%eax
    297b:	48 8d 15 de 33 00 00 	lea    0x33de(%rip),%rdx        # 5d60 <intpat>
    2982:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    2986:	ba 04 00 00 00       	mov    $0x4,%edx
    298b:	eb b5                	jmp    2942 <core_init_state+0xa1>
    298d:	89 f0                	mov    %esi,%eax
    298f:	66 c1 f8 03          	sar    $0x3,%ax
    2993:	83 e0 03             	and    $0x3,%eax
    2996:	4d 8b 04 c6          	mov    (%r14,%rax,8),%r8
    299a:	44 89 e2             	mov    %r12d,%edx
    299d:	eb a3                	jmp    2942 <core_init_state+0xa1>
    299f:	89 f0                	mov    %esi,%eax
    29a1:	66 c1 f8 03          	sar    $0x3,%ax
    29a5:	83 e0 03             	and    $0x3,%eax
    29a8:	4d 8b 04 c7          	mov    (%r15,%rax,8),%r8
    29ac:	44 89 e2             	mov    %r12d,%edx
    29af:	eb 91                	jmp    2942 <core_init_state+0xa1>

00000000000029b1 <core_state_transition>:
    29b1:	f3 0f 1e fa          	endbr64 
    29b5:	48 8b 0f             	mov    (%rdi),%rcx
    29b8:	0f b6 01             	movzbl (%rcx),%eax
    29bb:	84 c0                	test   %al,%al
    29bd:	0f 84 55 01 00 00    	je     2b18 <core_state_transition+0x167>
    29c3:	41 56                	push   %r14
    29c5:	41 55                	push   %r13
    29c7:	41 54                	push   %r12
    29c9:	55                   	push   %rbp
    29ca:	53                   	push   %rbx
    29cb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    29d1:	4c 8d 0d d8 0a 00 00 	lea    0xad8(%rip),%r9        # 34b0 <list_known_crc+0x28>
    29d8:	41 bd 07 00 00 00    	mov    $0x7,%r13d
    29de:	41 bc 06 00 00 00    	mov    $0x6,%r12d
    29e4:	bd 03 00 00 00       	mov    $0x3,%ebp
    29e9:	41 bb 05 00 00 00    	mov    $0x5,%r11d
    29ef:	41 ba 04 00 00 00    	mov    $0x4,%r10d
    29f5:	bb 02 00 00 00       	mov    $0x2,%ebx
    29fa:	41 be 01 00 00 00    	mov    $0x1,%r14d
    2a00:	eb 49                	jmp    2a4b <core_state_transition+0x9a>
    2a02:	48 83 c1 01          	add    $0x1,%rcx
    2a06:	e9 d4 00 00 00       	jmpq   2adf <core_state_transition+0x12e>
    2a0b:	8d 50 d0             	lea    -0x30(%rax),%edx
    2a0e:	45 89 d0             	mov    %r10d,%r8d
    2a11:	80 fa 09             	cmp    $0x9,%dl
    2a14:	76 19                	jbe    2a2f <core_state_transition+0x7e>
    2a16:	8d 50 d5             	lea    -0x2b(%rax),%edx
    2a19:	41 89 d8             	mov    %ebx,%r8d
    2a1c:	f6 c2 fd             	test   $0xfd,%dl
    2a1f:	74 0e                	je     2a2f <core_state_transition+0x7e>
    2a21:	45 89 d8             	mov    %r11d,%r8d
    2a24:	3c 2e                	cmp    $0x2e,%al
    2a26:	74 07                	je     2a2f <core_state_transition+0x7e>
    2a28:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    2a2c:	45 89 f0             	mov    %r14d,%r8d
    2a2f:	83 06 01             	addl   $0x1,(%rsi)
    2a32:	48 83 c1 01          	add    $0x1,%rcx
    2a36:	0f b6 01             	movzbl (%rcx),%eax
    2a39:	84 c0                	test   %al,%al
    2a3b:	0f 84 9e 00 00 00    	je     2adf <core_state_transition+0x12e>
    2a41:	41 83 f8 01          	cmp    $0x1,%r8d
    2a45:	0f 84 94 00 00 00    	je     2adf <core_state_transition+0x12e>
    2a4b:	3c 2c                	cmp    $0x2c,%al
    2a4d:	74 b3                	je     2a02 <core_state_transition+0x51>
    2a4f:	44 89 c2             	mov    %r8d,%edx
    2a52:	49 63 14 91          	movslq (%r9,%rdx,4),%rdx
    2a56:	4c 01 ca             	add    %r9,%rdx
    2a59:	3e ff e2             	notrack jmpq *%rdx
    2a5c:	8d 50 d0             	lea    -0x30(%rax),%edx
    2a5f:	80 fa 09             	cmp    $0x9,%dl
    2a62:	77 09                	ja     2a6d <core_state_transition+0xbc>
    2a64:	83 46 08 01          	addl   $0x1,0x8(%rsi)
    2a68:	45 89 d0             	mov    %r10d,%r8d
    2a6b:	eb c5                	jmp    2a32 <core_state_transition+0x81>
    2a6d:	3c 2e                	cmp    $0x2e,%al
    2a6f:	74 06                	je     2a77 <core_state_transition+0xc6>
    2a71:	83 46 08 01          	addl   $0x1,0x8(%rsi)
    2a75:	eb 5e                	jmp    2ad5 <core_state_transition+0x124>
    2a77:	83 46 08 01          	addl   $0x1,0x8(%rsi)
    2a7b:	45 89 d8             	mov    %r11d,%r8d
    2a7e:	eb b2                	jmp    2a32 <core_state_transition+0x81>
    2a80:	3c 2e                	cmp    $0x2e,%al
    2a82:	74 0d                	je     2a91 <core_state_transition+0xe0>
    2a84:	83 e8 30             	sub    $0x30,%eax
    2a87:	3c 09                	cmp    $0x9,%al
    2a89:	76 a7                	jbe    2a32 <core_state_transition+0x81>
    2a8b:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    2a8f:	eb 44                	jmp    2ad5 <core_state_transition+0x124>
    2a91:	83 46 10 01          	addl   $0x1,0x10(%rsi)
    2a95:	45 89 d8             	mov    %r11d,%r8d
    2a98:	eb 98                	jmp    2a32 <core_state_transition+0x81>
    2a9a:	89 c2                	mov    %eax,%edx
    2a9c:	83 e2 df             	and    $0xffffffdf,%edx
    2a9f:	80 fa 45             	cmp    $0x45,%dl
    2aa2:	75 09                	jne    2aad <core_state_transition+0xfc>
    2aa4:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    2aa8:	41 89 e8             	mov    %ebp,%r8d
    2aab:	eb 85                	jmp    2a32 <core_state_transition+0x81>
    2aad:	83 e8 30             	sub    $0x30,%eax
    2ab0:	3c 09                	cmp    $0x9,%al
    2ab2:	0f 86 7a ff ff ff    	jbe    2a32 <core_state_transition+0x81>
    2ab8:	83 46 14 01          	addl   $0x1,0x14(%rsi)
    2abc:	eb 17                	jmp    2ad5 <core_state_transition+0x124>
    2abe:	83 e8 2b             	sub    $0x2b,%eax
    2ac1:	a8 fd                	test   $0xfd,%al
    2ac3:	75 0c                	jne    2ad1 <core_state_transition+0x120>
    2ac5:	83 46 0c 01          	addl   $0x1,0xc(%rsi)
    2ac9:	45 89 e0             	mov    %r12d,%r8d
    2acc:	e9 61 ff ff ff       	jmpq   2a32 <core_state_transition+0x81>
    2ad1:	83 46 0c 01          	addl   $0x1,0xc(%rsi)
    2ad5:	48 83 c1 01          	add    $0x1,%rcx
    2ad9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    2adf:	48 89 0f             	mov    %rcx,(%rdi)
    2ae2:	44 89 c0             	mov    %r8d,%eax
    2ae5:	5b                   	pop    %rbx
    2ae6:	5d                   	pop    %rbp
    2ae7:	41 5c                	pop    %r12
    2ae9:	41 5d                	pop    %r13
    2aeb:	41 5e                	pop    %r14
    2aed:	c3                   	retq   
    2aee:	83 e8 30             	sub    $0x30,%eax
    2af1:	3c 09                	cmp    $0x9,%al
    2af3:	77 0c                	ja     2b01 <core_state_transition+0x150>
    2af5:	83 46 18 01          	addl   $0x1,0x18(%rsi)
    2af9:	45 89 e8             	mov    %r13d,%r8d
    2afc:	e9 31 ff ff ff       	jmpq   2a32 <core_state_transition+0x81>
    2b01:	83 46 18 01          	addl   $0x1,0x18(%rsi)
    2b05:	eb ce                	jmp    2ad5 <core_state_transition+0x124>
    2b07:	83 e8 30             	sub    $0x30,%eax
    2b0a:	3c 09                	cmp    $0x9,%al
    2b0c:	0f 86 20 ff ff ff    	jbe    2a32 <core_state_transition+0x81>
    2b12:	83 46 04 01          	addl   $0x1,0x4(%rsi)
    2b16:	eb bd                	jmp    2ad5 <core_state_transition+0x124>
    2b18:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2b1e:	48 89 0f             	mov    %rcx,(%rdi)
    2b21:	44 89 c0             	mov    %r8d,%eax
    2b24:	c3                   	retq   

0000000000002b25 <core_bench_state>:
    2b25:	f3 0f 1e fa          	endbr64 
    2b29:	41 57                	push   %r15
    2b2b:	41 56                	push   %r14
    2b2d:	41 55                	push   %r13
    2b2f:	41 54                	push   %r12
    2b31:	55                   	push   %rbp
    2b32:	53                   	push   %rbx
    2b33:	48 83 ec 78          	sub    $0x78,%rsp
    2b37:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    2b3b:	48 89 f5             	mov    %rsi,%rbp
    2b3e:	41 89 d7             	mov    %edx,%r15d
    2b41:	41 89 ce             	mov    %ecx,%r14d
    2b44:	45 89 c4             	mov    %r8d,%r12d
    2b47:	44 89 cb             	mov    %r9d,%ebx
    2b4a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2b51:	00 00 
    2b53:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    2b58:	31 c0                	xor    %eax,%eax
    2b5a:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    2b5f:	c7 44 04 40 00 00 00 	movl   $0x0,0x40(%rsp,%rax,1)
    2b66:	00 
    2b67:	c7 44 04 20 00 00 00 	movl   $0x0,0x20(%rsp,%rax,1)
    2b6e:	00 
    2b6f:	48 83 c0 04          	add    $0x4,%rax
    2b73:	48 83 f8 20          	cmp    $0x20,%rax
    2b77:	75 e6                	jne    2b5f <core_bench_state+0x3a>
    2b79:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    2b7d:	74 23                	je     2ba2 <core_bench_state+0x7d>
    2b7f:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    2b84:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    2b89:	4c 89 ee             	mov    %r13,%rsi
    2b8c:	e8 20 fe ff ff       	callq  29b1 <core_state_transition>
    2b91:	89 c0                	mov    %eax,%eax
    2b93:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    2b98:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b9d:	80 38 00             	cmpb   $0x0,(%rax)
    2ba0:	75 e2                	jne    2b84 <core_bench_state+0x5f>
    2ba2:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    2ba7:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    2bac:	49 01 ed             	add    %rbp,%r13
    2baf:	4c 39 ed             	cmp    %r13,%rbp
    2bb2:	0f 83 8e 00 00 00    	jae    2c46 <core_bench_state+0x121>
    2bb8:	48 89 e8             	mov    %rbp,%rax
    2bbb:	49 0f bf cc          	movswq %r12w,%rcx
    2bbf:	eb 17                	jmp    2bd8 <core_bench_state+0xb3>
    2bc1:	44 31 fa             	xor    %r15d,%edx
    2bc4:	88 10                	mov    %dl,(%rax)
    2bc6:	48 89 c8             	mov    %rcx,%rax
    2bc9:	48 03 44 24 18       	add    0x18(%rsp),%rax
    2bce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2bd3:	4c 39 e8             	cmp    %r13,%rax
    2bd6:	73 0a                	jae    2be2 <core_bench_state+0xbd>
    2bd8:	0f b6 10             	movzbl (%rax),%edx
    2bdb:	80 fa 2c             	cmp    $0x2c,%dl
    2bde:	75 e1                	jne    2bc1 <core_bench_state+0x9c>
    2be0:	eb e4                	jmp    2bc6 <core_bench_state+0xa1>
    2be2:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    2be7:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    2beb:	0f 84 a5 00 00 00    	je     2c96 <core_bench_state+0x171>
    2bf1:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    2bf6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    2bfb:	4c 89 fe             	mov    %r15,%rsi
    2bfe:	e8 ae fd ff ff       	callq  29b1 <core_state_transition>
    2c03:	89 c0                	mov    %eax,%eax
    2c05:	83 44 84 20 01       	addl   $0x1,0x20(%rsp,%rax,4)
    2c0a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2c0f:	80 38 00             	cmpb   $0x0,(%rax)
    2c12:	75 e2                	jne    2bf6 <core_bench_state+0xd1>
    2c14:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    2c19:	4c 39 ed             	cmp    %r13,%rbp
    2c1c:	73 2e                	jae    2c4c <core_bench_state+0x127>
    2c1e:	4d 0f bf e4          	movswq %r12w,%r12
    2c22:	eb 18                	jmp    2c3c <core_bench_state+0x117>
    2c24:	44 31 f0             	xor    %r14d,%eax
    2c27:	88 45 00             	mov    %al,0x0(%rbp)
    2c2a:	4c 89 e5             	mov    %r12,%rbp
    2c2d:	48 03 6c 24 18       	add    0x18(%rsp),%rbp
    2c32:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    2c37:	4c 39 ed             	cmp    %r13,%rbp
    2c3a:	73 10                	jae    2c4c <core_bench_state+0x127>
    2c3c:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    2c40:	3c 2c                	cmp    $0x2c,%al
    2c42:	75 e0                	jne    2c24 <core_bench_state+0xff>
    2c44:	eb e4                	jmp    2c2a <core_bench_state+0x105>
    2c46:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    2c4a:	75 a5                	jne    2bf1 <core_bench_state+0xcc>
    2c4c:	bd 00 00 00 00       	mov    $0x0,%ebp
    2c51:	0f b7 f3             	movzwl %bx,%esi
    2c54:	8b 7c 2c 20          	mov    0x20(%rsp,%rbp,1),%edi
    2c58:	e8 d6 00 00 00       	callq  2d33 <crcu32>
    2c5d:	0f b7 f0             	movzwl %ax,%esi
    2c60:	8b 7c 2c 40          	mov    0x40(%rsp,%rbp,1),%edi
    2c64:	e8 ca 00 00 00       	callq  2d33 <crcu32>
    2c69:	89 c3                	mov    %eax,%ebx
    2c6b:	48 83 c5 04          	add    $0x4,%rbp
    2c6f:	48 83 fd 20          	cmp    $0x20,%rbp
    2c73:	75 dc                	jne    2c51 <core_bench_state+0x12c>
    2c75:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    2c7a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2c81:	00 00 
    2c83:	75 18                	jne    2c9d <core_bench_state+0x178>
    2c85:	89 d8                	mov    %ebx,%eax
    2c87:	48 83 c4 78          	add    $0x78,%rsp
    2c8b:	5b                   	pop    %rbx
    2c8c:	5d                   	pop    %rbp
    2c8d:	41 5c                	pop    %r12
    2c8f:	41 5d                	pop    %r13
    2c91:	41 5e                	pop    %r14
    2c93:	41 5f                	pop    %r15
    2c95:	c3                   	retq   
    2c96:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
    2c9b:	eb 81                	jmp    2c1e <core_bench_state+0xf9>
    2c9d:	e8 4e e4 ff ff       	callq  10f0 <__stack_chk_fail@plt>

0000000000002ca2 <get_seed_32>:
    2ca2:	f3 0f 1e fa          	endbr64 
    2ca6:	83 ff 05             	cmp    $0x5,%edi
    2ca9:	77 36                	ja     2ce1 <get_seed_32+0x3f>
    2cab:	89 ff                	mov    %edi,%edi
    2cad:	48 8d 15 9c 08 00 00 	lea    0x89c(%rip),%rdx        # 3550 <list_known_crc+0xc8>
    2cb4:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
    2cb8:	48 01 d0             	add    %rdx,%rax
    2cbb:	3e ff e0             	notrack jmpq *%rax
    2cbe:	8b 05 88 33 00 00    	mov    0x3388(%rip),%eax        # 604c <seed1_volatile>
    2cc4:	c3                   	retq   
    2cc5:	8b 05 7d 33 00 00    	mov    0x337d(%rip),%eax        # 6048 <seed2_volatile>
    2ccb:	c3                   	retq   
    2ccc:	8b 05 5a 33 00 00    	mov    0x335a(%rip),%eax        # 602c <seed3_volatile>
    2cd2:	c3                   	retq   
    2cd3:	8b 05 6b 33 00 00    	mov    0x336b(%rip),%eax        # 6044 <seed4_volatile>
    2cd9:	c3                   	retq   
    2cda:	8b 05 60 33 00 00    	mov    0x3360(%rip),%eax        # 6040 <seed5_volatile>
    2ce0:	c3                   	retq   
    2ce1:	b8 00 00 00 00       	mov    $0x0,%eax
    2ce6:	c3                   	retq   

0000000000002ce7 <crcu8>:
    2ce7:	f3 0f 1e fa          	endbr64 
    2ceb:	89 f0                	mov    %esi,%eax
    2ced:	b9 08 00 00 00       	mov    $0x8,%ecx
    2cf2:	89 fe                	mov    %edi,%esi
    2cf4:	31 c6                	xor    %eax,%esi
    2cf6:	40 d0 ef             	shr    %dil
    2cf9:	89 c2                	mov    %eax,%edx
    2cfb:	66 d1 ea             	shr    %dx
    2cfe:	66 81 f2 01 a0       	xor    $0xa001,%dx
    2d03:	66 d1 e8             	shr    %ax
    2d06:	40 f6 c6 01          	test   $0x1,%sil
    2d0a:	0f 45 c2             	cmovne %edx,%eax
    2d0d:	80 e9 01             	sub    $0x1,%cl
    2d10:	75 e0                	jne    2cf2 <crcu8+0xb>
    2d12:	c3                   	retq   

0000000000002d13 <crcu16>:
    2d13:	f3 0f 1e fa          	endbr64 
    2d17:	53                   	push   %rbx
    2d18:	89 fb                	mov    %edi,%ebx
    2d1a:	0f b7 f6             	movzwl %si,%esi
    2d1d:	40 0f b6 ff          	movzbl %dil,%edi
    2d21:	e8 c1 ff ff ff       	callq  2ce7 <crcu8>
    2d26:	0f b7 f0             	movzwl %ax,%esi
    2d29:	0f b6 ff             	movzbl %bh,%edi
    2d2c:	e8 b6 ff ff ff       	callq  2ce7 <crcu8>
    2d31:	5b                   	pop    %rbx
    2d32:	c3                   	retq   

0000000000002d33 <crcu32>:
    2d33:	f3 0f 1e fa          	endbr64 
    2d37:	53                   	push   %rbx
    2d38:	89 fb                	mov    %edi,%ebx
    2d3a:	0f b7 f6             	movzwl %si,%esi
    2d3d:	0f b7 ff             	movzwl %di,%edi
    2d40:	e8 ce ff ff ff       	callq  2d13 <crcu16>
    2d45:	0f b7 f0             	movzwl %ax,%esi
    2d48:	c1 eb 10             	shr    $0x10,%ebx
    2d4b:	89 df                	mov    %ebx,%edi
    2d4d:	e8 c1 ff ff ff       	callq  2d13 <crcu16>
    2d52:	5b                   	pop    %rbx
    2d53:	c3                   	retq   

0000000000002d54 <crc16>:
    2d54:	f3 0f 1e fa          	endbr64 
    2d58:	0f b7 f6             	movzwl %si,%esi
    2d5b:	0f b7 ff             	movzwl %di,%edi
    2d5e:	e8 b0 ff ff ff       	callq  2d13 <crcu16>
    2d63:	c3                   	retq   

0000000000002d64 <check_data_types>:
    2d64:	f3 0f 1e fa          	endbr64 
    2d68:	b8 00 00 00 00       	mov    $0x0,%eax
    2d6d:	c3                   	retq   

0000000000002d6e <portable_malloc>:
    2d6e:	f3 0f 1e fa          	endbr64 
    2d72:	48 83 ec 08          	sub    $0x8,%rsp
    2d76:	e8 85 e3 ff ff       	callq  1100 <malloc@plt>
    2d7b:	48 83 c4 08          	add    $0x8,%rsp
    2d7f:	c3                   	retq   

0000000000002d80 <portable_free>:
    2d80:	f3 0f 1e fa          	endbr64 
    2d84:	48 83 ec 08          	sub    $0x8,%rsp
    2d88:	e8 23 e3 ff ff       	callq  10b0 <free@plt>
    2d8d:	48 83 c4 08          	add    $0x8,%rsp
    2d91:	c3                   	retq   

0000000000002d92 <start_time>:
    2d92:	f3 0f 1e fa          	endbr64 
    2d96:	48 83 ec 08          	sub    $0x8,%rsp
    2d9a:	48 8d 35 bf 32 00 00 	lea    0x32bf(%rip),%rsi        # 6060 <start_time_val>
    2da1:	bf 00 00 00 00       	mov    $0x0,%edi
    2da6:	e8 35 e3 ff ff       	callq  10e0 <clock_gettime@plt>
    2dab:	48 83 c4 08          	add    $0x8,%rsp
    2daf:	c3                   	retq   

0000000000002db0 <stop_time>:
    2db0:	f3 0f 1e fa          	endbr64 
    2db4:	48 83 ec 08          	sub    $0x8,%rsp
    2db8:	48 8d 35 91 32 00 00 	lea    0x3291(%rip),%rsi        # 6050 <stop_time_val>
    2dbf:	bf 00 00 00 00       	mov    $0x0,%edi
    2dc4:	e8 17 e3 ff ff       	callq  10e0 <clock_gettime@plt>
    2dc9:	48 83 c4 08          	add    $0x8,%rsp
    2dcd:	c3                   	retq   

0000000000002dce <get_time>:
    2dce:	f3 0f 1e fa          	endbr64 
    2dd2:	48 8b 0d 77 32 00 00 	mov    0x3277(%rip),%rcx        # 6050 <stop_time_val>
    2dd9:	48 2b 0d 80 32 00 00 	sub    0x3280(%rip),%rcx        # 6060 <start_time_val>
    2de0:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
    2de7:	48 8b 35 6a 32 00 00 	mov    0x326a(%rip),%rsi        # 6058 <stop_time_val+0x8>
    2dee:	48 2b 35 73 32 00 00 	sub    0x3273(%rip),%rsi        # 6068 <start_time_val+0x8>
    2df5:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    2dfc:	de 1b 43 
    2dff:	48 89 f0             	mov    %rsi,%rax
    2e02:	48 f7 ea             	imul   %rdx
    2e05:	48 c1 fa 12          	sar    $0x12,%rdx
    2e09:	48 c1 fe 3f          	sar    $0x3f,%rsi
    2e0d:	48 29 f2             	sub    %rsi,%rdx
    2e10:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    2e14:	c3                   	retq   

0000000000002e15 <time_in_secs>:
    2e15:	f3 0f 1e fa          	endbr64 
    2e19:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2e1d:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
    2e22:	f2 0f 5e 05 3e 07 00 	divsd  0x73e(%rip),%xmm0        # 3568 <list_known_crc+0xe0>
    2e29:	00 
    2e2a:	c3                   	retq   

0000000000002e2b <portable_init>:
    2e2b:	f3 0f 1e fa          	endbr64 
    2e2f:	c6 07 01             	movb   $0x1,(%rdi)
    2e32:	c3                   	retq   

0000000000002e33 <portable_fini>:
    2e33:	f3 0f 1e fa          	endbr64 
    2e37:	c6 07 00             	movb   $0x0,(%rdi)
    2e3a:	c3                   	retq   
    2e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002e40 <__libc_csu_init>:
    2e40:	f3 0f 1e fa          	endbr64 
    2e44:	41 57                	push   %r15
    2e46:	4c 8d 3d a3 2e 00 00 	lea    0x2ea3(%rip),%r15        # 5cf0 <__frame_dummy_init_array_entry>
    2e4d:	41 56                	push   %r14
    2e4f:	49 89 d6             	mov    %rdx,%r14
    2e52:	41 55                	push   %r13
    2e54:	49 89 f5             	mov    %rsi,%r13
    2e57:	41 54                	push   %r12
    2e59:	41 89 fc             	mov    %edi,%r12d
    2e5c:	55                   	push   %rbp
    2e5d:	48 8d 2d 94 2e 00 00 	lea    0x2e94(%rip),%rbp        # 5cf8 <__do_global_dtors_aux_fini_array_entry>
    2e64:	53                   	push   %rbx
    2e65:	4c 29 fd             	sub    %r15,%rbp
    2e68:	48 83 ec 08          	sub    $0x8,%rsp
    2e6c:	e8 8f e1 ff ff       	callq  1000 <_init>
    2e71:	48 c1 fd 03          	sar    $0x3,%rbp
    2e75:	74 1f                	je     2e96 <__libc_csu_init+0x56>
    2e77:	31 db                	xor    %ebx,%ebx
    2e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2e80:	4c 89 f2             	mov    %r14,%rdx
    2e83:	4c 89 ee             	mov    %r13,%rsi
    2e86:	44 89 e7             	mov    %r12d,%edi
    2e89:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    2e8d:	48 83 c3 01          	add    $0x1,%rbx
    2e91:	48 39 dd             	cmp    %rbx,%rbp
    2e94:	75 ea                	jne    2e80 <__libc_csu_init+0x40>
    2e96:	48 83 c4 08          	add    $0x8,%rsp
    2e9a:	5b                   	pop    %rbx
    2e9b:	5d                   	pop    %rbp
    2e9c:	41 5c                	pop    %r12
    2e9e:	41 5d                	pop    %r13
    2ea0:	41 5e                	pop    %r14
    2ea2:	41 5f                	pop    %r15
    2ea4:	c3                   	retq   
    2ea5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    2eac:	00 00 00 00 

0000000000002eb0 <__libc_csu_fini>:
    2eb0:	f3 0f 1e fa          	endbr64 
    2eb4:	c3                   	retq   

Disassembly of section .fini:

0000000000002eb8 <_fini>:
    2eb8:	f3 0f 1e fa          	endbr64 
    2ebc:	48 83 ec 08          	sub    $0x8,%rsp
    2ec0:	48 83 c4 08          	add    $0x8,%rsp
    2ec4:	c3                   	retq   

Disassembly of section .rodata:

0000000000003000 <_IO_stdin_used>:
    3000:	01 00                	add    %eax,(%rax)
    3002:	02 00                	add    (%rax),%al
    3004:	00 00                	add    %al,(%rax)
    3006:	00 00                	add    %al,(%rax)
    3008:	36 6b 20 70          	imul   $0x70,%ss:(%rax),%esp
    300c:	65 72 66             	gs jb  3075 <_IO_stdin_used+0x75>
    300f:	6f                   	outsl  %ds:(%rsi),(%dx)
    3010:	72 6d                	jb     307f <_IO_stdin_used+0x7f>
    3012:	61                   	(bad)  
    3013:	6e                   	outsb  %ds:(%rsi),(%dx)
    3014:	63 65 20             	movslq 0x20(%rbp),%esp
    3017:	72 75                	jb     308e <_IO_stdin_used+0x8e>
    3019:	6e                   	outsb  %ds:(%rsi),(%dx)
    301a:	20 70 61             	and    %dh,0x61(%rax)
    301d:	72 61                	jb     3080 <_IO_stdin_used+0x80>
    301f:	6d                   	insl   (%dx),%es:(%rdi)
    3020:	65 74 65             	gs je  3088 <_IO_stdin_used+0x88>
    3023:	72 73                	jb     3098 <_IO_stdin_used+0x98>
    3025:	20 66 6f             	and    %ah,0x6f(%rsi)
    3028:	72 20                	jb     304a <_IO_stdin_used+0x4a>
    302a:	63 6f 72             	movslq 0x72(%rdi),%ebp
    302d:	65 6d                	gs insl (%dx),%es:(%rdi)
    302f:	61                   	(bad)  
    3030:	72 6b                	jb     309d <_IO_stdin_used+0x9d>
    3032:	2e 00 00             	add    %al,%cs:(%rax)
    3035:	00 00                	add    %al,(%rax)
    3037:	00 36                	add    %dh,(%rsi)
    3039:	6b 20 76             	imul   $0x76,(%rax),%esp
    303c:	61                   	(bad)  
    303d:	6c                   	insb   (%dx),%es:(%rdi)
    303e:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    3045:	20 
    3046:	72 75                	jb     30bd <_IO_stdin_used+0xbd>
    3048:	6e                   	outsb  %ds:(%rsi),(%dx)
    3049:	20 70 61             	and    %dh,0x61(%rax)
    304c:	72 61                	jb     30af <_IO_stdin_used+0xaf>
    304e:	6d                   	insl   (%dx),%es:(%rdi)
    304f:	65 74 65             	gs je  30b7 <_IO_stdin_used+0xb7>
    3052:	72 73                	jb     30c7 <_IO_stdin_used+0xc7>
    3054:	20 66 6f             	and    %ah,0x6f(%rsi)
    3057:	72 20                	jb     3079 <_IO_stdin_used+0x79>
    3059:	63 6f 72             	movslq 0x72(%rdi),%ebp
    305c:	65 6d                	gs insl (%dx),%es:(%rdi)
    305e:	61                   	(bad)  
    305f:	72 6b                	jb     30cc <_IO_stdin_used+0xcc>
    3061:	2e 00 00             	add    %al,%cs:(%rax)
    3064:	00 00                	add    %al,(%rax)
    3066:	00 00                	add    %al,(%rax)
    3068:	50                   	push   %rax
    3069:	72 6f                	jb     30da <_IO_stdin_used+0xda>
    306b:	66 69 6c 65 20 67 65 	imul   $0x6567,0x20(%rbp,%riz,2),%bp
    3072:	6e                   	outsb  %ds:(%rsi),(%dx)
    3073:	65 72 61             	gs jb  30d7 <_IO_stdin_used+0xd7>
    3076:	74 69                	je     30e1 <_IO_stdin_used+0xe1>
    3078:	6f                   	outsl  %ds:(%rsi),(%dx)
    3079:	6e                   	outsb  %ds:(%rsi),(%dx)
    307a:	20 72 75             	and    %dh,0x75(%rdx)
    307d:	6e                   	outsb  %ds:(%rsi),(%dx)
    307e:	20 70 61             	and    %dh,0x61(%rax)
    3081:	72 61                	jb     30e4 <_IO_stdin_used+0xe4>
    3083:	6d                   	insl   (%dx),%es:(%rdi)
    3084:	65 74 65             	gs je  30ec <_IO_stdin_used+0xec>
    3087:	72 73                	jb     30fc <_IO_stdin_used+0xfc>
    3089:	20 66 6f             	and    %ah,0x6f(%rsi)
    308c:	72 20                	jb     30ae <_IO_stdin_used+0xae>
    308e:	63 6f 72             	movslq 0x72(%rdi),%ebp
    3091:	65 6d                	gs insl (%dx),%es:(%rdi)
    3093:	61                   	(bad)  
    3094:	72 6b                	jb     3101 <_IO_stdin_used+0x101>
    3096:	2e 00 32             	add    %dh,%cs:(%rdx)
    3099:	4b 20 70 65          	rex.WXB and %sil,0x65(%r8)
    309d:	72 66                	jb     3105 <_IO_stdin_used+0x105>
    309f:	6f                   	outsl  %ds:(%rsi),(%dx)
    30a0:	72 6d                	jb     310f <_IO_stdin_used+0x10f>
    30a2:	61                   	(bad)  
    30a3:	6e                   	outsb  %ds:(%rsi),(%dx)
    30a4:	63 65 20             	movslq 0x20(%rbp),%esp
    30a7:	72 75                	jb     311e <_IO_stdin_used+0x11e>
    30a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    30aa:	20 70 61             	and    %dh,0x61(%rax)
    30ad:	72 61                	jb     3110 <_IO_stdin_used+0x110>
    30af:	6d                   	insl   (%dx),%es:(%rdi)
    30b0:	65 74 65             	gs je  3118 <_IO_stdin_used+0x118>
    30b3:	72 73                	jb     3128 <_IO_stdin_used+0x128>
    30b5:	20 66 6f             	and    %ah,0x6f(%rsi)
    30b8:	72 20                	jb     30da <_IO_stdin_used+0xda>
    30ba:	63 6f 72             	movslq 0x72(%rdi),%ebp
    30bd:	65 6d                	gs insl (%dx),%es:(%rdi)
    30bf:	61                   	(bad)  
    30c0:	72 6b                	jb     312d <_IO_stdin_used+0x12d>
    30c2:	2e 00 00             	add    %al,%cs:(%rax)
    30c5:	00 00                	add    %al,(%rax)
    30c7:	00 32                	add    %dh,(%rdx)
    30c9:	4b 20 76 61          	rex.WXB and %sil,0x61(%r14)
    30cd:	6c                   	insb   (%dx),%es:(%rdi)
    30ce:	69 64 61 74 69 6f 6e 	imul   $0x206e6f69,0x74(%rcx,%riz,2),%esp
    30d5:	20 
    30d6:	72 75                	jb     314d <_IO_stdin_used+0x14d>
    30d8:	6e                   	outsb  %ds:(%rsi),(%dx)
    30d9:	20 70 61             	and    %dh,0x61(%rax)
    30dc:	72 61                	jb     313f <_IO_stdin_used+0x13f>
    30de:	6d                   	insl   (%dx),%es:(%rdi)
    30df:	65 74 65             	gs je  3147 <_IO_stdin_used+0x147>
    30e2:	72 73                	jb     3157 <_IO_stdin_used+0x157>
    30e4:	20 66 6f             	and    %ah,0x6f(%rsi)
    30e7:	72 20                	jb     3109 <_IO_stdin_used+0x109>
    30e9:	63 6f 72             	movslq 0x72(%rdi),%ebp
    30ec:	65 6d                	gs insl (%dx),%es:(%rdi)
    30ee:	61                   	(bad)  
    30ef:	72 6b                	jb     315c <_IO_stdin_used+0x15c>
    30f1:	2e 00 00             	add    %al,%cs:(%rax)
    30f4:	00 00                	add    %al,(%rax)
    30f6:	00 00                	add    %al,(%rax)
    30f8:	5b                   	pop    %rbx
    30f9:	25 75 5d 45 52       	and    $0x52455d75,%eax
    30fe:	52                   	push   %rdx
    30ff:	4f 52                	rex.WRXB push %r10
    3101:	21 20                	and    %esp,(%rax)
    3103:	6c                   	insb   (%dx),%es:(%rdi)
    3104:	69 73 74 20 63 72 63 	imul   $0x63726320,0x74(%rbx),%esi
    310b:	20 30                	and    %dh,(%rax)
    310d:	78 25                	js     3134 <_IO_stdin_used+0x134>
    310f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3112:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68a438 <_end+0x6f6843c8>
    3118:	75 6c                	jne    3186 <_IO_stdin_used+0x186>
    311a:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    311e:	20 30                	and    %dh,(%rax)
    3120:	78 25                	js     3147 <_IO_stdin_used+0x147>
    3122:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3125:	0a 00                	or     (%rax),%al
    3127:	00 5b 25             	add    %bl,0x25(%rbx)
    312a:	75 5d                	jne    3189 <_IO_stdin_used+0x189>
    312c:	45 52                	rex.RB push %r10
    312e:	52                   	push   %rdx
    312f:	4f 52                	rex.WRXB push %r10
    3131:	21 20                	and    %esp,(%rax)
    3133:	6d                   	insl   (%dx),%es:(%rdi)
    3134:	61                   	(bad)  
    3135:	74 72                	je     31a9 <_IO_stdin_used+0x1a9>
    3137:	69 78 20 63 72 63 20 	imul   $0x20637263,0x20(%rax),%edi
    313e:	30 78 25             	xor    %bh,0x25(%rax)
    3141:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3144:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68a46a <_end+0x6f6843fa>
    314a:	75 6c                	jne    31b8 <_IO_stdin_used+0x1b8>
    314c:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    3150:	20 30                	and    %dh,(%rax)
    3152:	78 25                	js     3179 <_IO_stdin_used+0x179>
    3154:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3157:	0a 00                	or     (%rax),%al
    3159:	00 00                	add    %al,(%rax)
    315b:	00 00                	add    %al,(%rax)
    315d:	00 00                	add    %al,(%rax)
    315f:	00 5b 25             	add    %bl,0x25(%rbx)
    3162:	75 5d                	jne    31c1 <_IO_stdin_used+0x1c1>
    3164:	45 52                	rex.RB push %r10
    3166:	52                   	push   %rdx
    3167:	4f 52                	rex.WRXB push %r10
    3169:	21 20                	and    %esp,(%rax)
    316b:	73 74                	jae    31e1 <_IO_stdin_used+0x1e1>
    316d:	61                   	(bad)  
    316e:	74 65                	je     31d5 <_IO_stdin_used+0x1d5>
    3170:	20 63 72             	and    %ah,0x72(%rbx)
    3173:	63 20                	movslq (%rax),%esp
    3175:	30 78 25             	xor    %bh,0x25(%rax)
    3178:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    317b:	20 2d 20 73 68 6f    	and    %ch,0x6f687320(%rip)        # 6f68a4a1 <_end+0x6f684431>
    3181:	75 6c                	jne    31ef <_IO_stdin_used+0x1ef>
    3183:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    3187:	20 30                	and    %dh,(%rax)
    3189:	78 25                	js     31b0 <_IO_stdin_used+0x1b0>
    318b:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    318e:	0a 00                	or     (%rax),%al
    3190:	45 52                	rex.RB push %r10
    3192:	52                   	push   %rdx
    3193:	4f 52                	rex.WRXB push %r10
    3195:	21 20                	and    %esp,(%rax)
    3197:	4d 75 73             	rex.WRB jne 320d <_IO_stdin_used+0x20d>
    319a:	74 20                	je     31bc <_IO_stdin_used+0x1bc>
    319c:	65 78 65             	gs js  3204 <_IO_stdin_used+0x204>
    319f:	63 75 74             	movslq 0x74(%rbp),%esi
    31a2:	65 20 66 6f          	and    %ah,%gs:0x6f(%rsi)
    31a6:	72 20                	jb     31c8 <_IO_stdin_used+0x1c8>
    31a8:	61                   	(bad)  
    31a9:	74 20                	je     31cb <_IO_stdin_used+0x1cb>
    31ab:	6c                   	insb   (%dx),%es:(%rdi)
    31ac:	65 61                	gs (bad) 
    31ae:	73 74                	jae    3224 <_IO_stdin_used+0x224>
    31b0:	20 31                	and    %dh,(%rcx)
    31b2:	30 20                	xor    %ah,(%rax)
    31b4:	73 65                	jae    321b <_IO_stdin_used+0x21b>
    31b6:	63 73 20             	movslq 0x20(%rbx),%esi
    31b9:	66 6f                	outsw  %ds:(%rsi),(%dx)
    31bb:	72 20                	jb     31dd <_IO_stdin_used+0x1dd>
    31bd:	61                   	(bad)  
    31be:	20 76 61             	and    %dh,0x61(%rsi)
    31c1:	6c                   	insb   (%dx),%es:(%rdi)
    31c2:	69 64 20 72 65 73 75 	imul   $0x6c757365,0x72(%rax,%riz,1),%esp
    31c9:	6c 
    31ca:	74 21                	je     31ed <_IO_stdin_used+0x1ed>
    31cc:	00 00                	add    %al,(%rax)
    31ce:	00 00                	add    %al,(%rax)
    31d0:	50                   	push   %rax
    31d1:	6c                   	insb   (%dx),%es:(%rdi)
    31d2:	65 61                	gs (bad) 
    31d4:	73 65                	jae    323b <_IO_stdin_used+0x23b>
    31d6:	20 70 75             	and    %dh,0x75(%rax)
    31d9:	74 20                	je     31fb <_IO_stdin_used+0x1fb>
    31db:	64 61                	fs (bad) 
    31dd:	74 61                	je     3240 <_IO_stdin_used+0x240>
    31df:	20 6d 65             	and    %ch,0x65(%rbp)
    31e2:	6d                   	insl   (%dx),%es:(%rdi)
    31e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    31e4:	72 79                	jb     325f <_IO_stdin_used+0x25f>
    31e6:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    31ea:	61                   	(bad)  
    31eb:	74 69                	je     3256 <_IO_stdin_used+0x256>
    31ed:	6f                   	outsl  %ds:(%rsi),(%dx)
    31ee:	6e                   	outsb  %ds:(%rsi),(%dx)
    31ef:	20 68 65             	and    %ch,0x65(%rax)
    31f2:	72 65                	jb     3259 <_IO_stdin_used+0x259>
    31f4:	0a 09                	or     (%rcx),%cl
    31f6:	09 09                	or     %ecx,(%rcx)
    31f8:	28 65 2e             	sub    %ah,0x2e(%rbp)
    31fb:	67 2e 20 63 6f       	and    %ah,%cs:0x6f(%ebx)
    3200:	64 65 20 69 6e       	fs and %ch,%gs:0x6e(%rcx)
    3205:	20 66 6c             	and    %ah,0x6c(%rsi)
    3208:	61                   	(bad)  
    3209:	73 68                	jae    3273 <_IO_stdin_used+0x273>
    320b:	2c 20                	sub    $0x20,%al
    320d:	64 61                	fs (bad) 
    320f:	74 61                	je     3272 <_IO_stdin_used+0x272>
    3211:	20 6f 6e             	and    %ch,0x6e(%rdi)
    3214:	20 68 65             	and    %ch,0x65(%rax)
    3217:	61                   	(bad)  
    3218:	70 20                	jo     323a <_IO_stdin_used+0x23a>
    321a:	65 74 63             	gs je  3280 <_IO_stdin_used+0x280>
    321d:	29 00                	sub    %eax,(%rax)
    321f:	00 43 6f             	add    %al,0x6f(%rbx)
    3222:	72 72                	jb     3296 <_IO_stdin_used+0x296>
    3224:	65 63 74 20 6f       	movslq %gs:0x6f(%rax,%riz,1),%esi
    3229:	70 65                	jo     3290 <_IO_stdin_used+0x290>
    322b:	72 61                	jb     328e <_IO_stdin_used+0x28e>
    322d:	74 69                	je     3298 <_IO_stdin_used+0x298>
    322f:	6f                   	outsl  %ds:(%rsi),(%dx)
    3230:	6e                   	outsb  %ds:(%rsi),(%dx)
    3231:	20 76 61             	and    %dh,0x61(%rsi)
    3234:	6c                   	insb   (%dx),%es:(%rdi)
    3235:	69 64 61 74 65 64 2e 	imul   $0x202e6465,0x74(%rcx,%riz,2),%esp
    323c:	20 
    323d:	53                   	push   %rbx
    323e:	65 65 20 52 45       	gs and %dl,%gs:0x45(%rdx)
    3243:	41                   	rex.B
    3244:	44                   	rex.R
    3245:	4d                   	rex.WRB
    3246:	45                   	rex.RB
    3247:	2e 6d                	cs insl (%dx),%es:(%rdi)
    3249:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    324d:	72 20                	jb     326f <_IO_stdin_used+0x26f>
    324f:	72 75                	jb     32c6 <_IO_stdin_used+0x2c6>
    3251:	6e                   	outsb  %ds:(%rsi),(%dx)
    3252:	20 61 6e             	and    %ah,0x6e(%rcx)
    3255:	64 20 72 65          	and    %dh,%fs:0x65(%rdx)
    3259:	70 6f                	jo     32ca <_IO_stdin_used+0x2ca>
    325b:	72 74                	jb     32d1 <_IO_stdin_used+0x2d1>
    325d:	69 6e 67 20 72 75 6c 	imul   $0x6c757220,0x67(%rsi),%ebp
    3264:	65 73 2e             	gs jae 3295 <_IO_stdin_used+0x295>
    3267:	00 43 61             	add    %al,0x61(%rbx)
    326a:	6e                   	outsb  %ds:(%rsi),(%dx)
    326b:	6e                   	outsb  %ds:(%rsi),(%dx)
    326c:	6f                   	outsl  %ds:(%rsi),(%dx)
    326d:	74 20                	je     328f <_IO_stdin_used+0x28f>
    326f:	76 61                	jbe    32d2 <_IO_stdin_used+0x2d2>
    3271:	6c                   	insb   (%dx),%es:(%rdi)
    3272:	69 64 61 74 65 20 6f 	imul   $0x706f2065,0x74(%rcx,%riz,2),%esp
    3279:	70 
    327a:	65 72 61             	gs jb  32de <_IO_stdin_used+0x2de>
    327d:	74 69                	je     32e8 <_IO_stdin_used+0x2e8>
    327f:	6f                   	outsl  %ds:(%rsi),(%dx)
    3280:	6e                   	outsb  %ds:(%rsi),(%dx)
    3281:	20 66 6f             	and    %ah,0x6f(%rsi)
    3284:	72 20                	jb     32a6 <_IO_stdin_used+0x2a6>
    3286:	74 68                	je     32f0 <_IO_stdin_used+0x2f0>
    3288:	65 73 65             	gs jae 32f0 <_IO_stdin_used+0x2f0>
    328b:	20 73 65             	and    %dh,0x65(%rbx)
    328e:	65 64 20 76 61       	gs and %dh,%fs:0x61(%rsi)
    3293:	6c                   	insb   (%dx),%es:(%rdi)
    3294:	75 65                	jne    32fb <_IO_stdin_used+0x2fb>
    3296:	73 2c                	jae    32c4 <_IO_stdin_used+0x2c4>
    3298:	20 70 6c             	and    %dh,0x6c(%rax)
    329b:	65 61                	gs (bad) 
    329d:	73 65                	jae    3304 <_IO_stdin_used+0x304>
    329f:	20 63 6f             	and    %ah,0x6f(%rbx)
    32a2:	6d                   	insl   (%dx),%es:(%rdi)
    32a3:	70 61                	jo     3306 <_IO_stdin_used+0x306>
    32a5:	72 65                	jb     330c <_IO_stdin_used+0x30c>
    32a7:	20 77 69             	and    %dh,0x69(%rdi)
    32aa:	74 68                	je     3314 <_IO_stdin_used+0x314>
    32ac:	20 72 65             	and    %dh,0x65(%rdx)
    32af:	73 75                	jae    3326 <_IO_stdin_used+0x326>
    32b1:	6c                   	insb   (%dx),%es:(%rdi)
    32b2:	74 73                	je     3327 <_IO_stdin_used+0x327>
    32b4:	20 6f 6e             	and    %ch,0x6e(%rdi)
    32b7:	20 61 20             	and    %ah,0x20(%rcx)
    32ba:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    32be:	6e                   	outsb  %ds:(%rsi),(%dx)
    32bf:	20 70 6c             	and    %dh,0x6c(%rax)
    32c2:	61                   	(bad)  
    32c3:	74 66                	je     332b <_IO_stdin_used+0x32b>
    32c5:	6f                   	outsl  %ds:(%rsi),(%dx)
    32c6:	72 6d                	jb     3335 <_IO_stdin_used+0x335>
    32c8:	2e 00 43 6f          	add    %al,%cs:0x6f(%rbx)
    32cc:	72 65                	jb     3333 <_IO_stdin_used+0x333>
    32ce:	4d 61                	rex.WRB (bad) 
    32d0:	72 6b                	jb     333d <_IO_stdin_used+0x33d>
    32d2:	20 53 69             	and    %dl,0x69(%rbx)
    32d5:	7a 65                	jp     333c <_IO_stdin_used+0x33c>
    32d7:	20 20                	and    %ah,(%rax)
    32d9:	20 20                	and    %ah,(%rax)
    32db:	3a 20                	cmp    (%rax),%ah
    32dd:	25 6c 75 0a 00       	and    $0xa756c,%eax
    32e2:	54                   	push   %rsp
    32e3:	6f                   	outsl  %ds:(%rsi),(%dx)
    32e4:	74 61                	je     3347 <_IO_stdin_used+0x347>
    32e6:	6c                   	insb   (%dx),%es:(%rdi)
    32e7:	20 74 69 63          	and    %dh,0x63(%rcx,%rbp,2)
    32eb:	6b 73 20 20          	imul   $0x20,0x20(%rbx),%esi
    32ef:	20 20                	and    %ah,(%rax)
    32f1:	20 20                	and    %ah,(%rax)
    32f3:	3a 20                	cmp    (%rax),%ah
    32f5:	25 6c 75 0a 00       	and    $0xa756c,%eax
    32fa:	54                   	push   %rsp
    32fb:	6f                   	outsl  %ds:(%rsi),(%dx)
    32fc:	74 61                	je     335f <_IO_stdin_used+0x35f>
    32fe:	6c                   	insb   (%dx),%es:(%rdi)
    32ff:	20 74 69 6d          	and    %dh,0x6d(%rcx,%rbp,2)
    3303:	65 20 28             	and    %ch,%gs:(%rax)
    3306:	73 65                	jae    336d <_IO_stdin_used+0x36d>
    3308:	63 73 29             	movslq 0x29(%rbx),%esi
    330b:	3a 20                	cmp    (%rax),%ah
    330d:	25 66 0a 00 49       	and    $0x49000a66,%eax
    3312:	74 65                	je     3379 <_IO_stdin_used+0x379>
    3314:	72 61                	jb     3377 <_IO_stdin_used+0x377>
    3316:	74 69                	je     3381 <_IO_stdin_used+0x381>
    3318:	6f                   	outsl  %ds:(%rsi),(%dx)
    3319:	6e                   	outsb  %ds:(%rsi),(%dx)
    331a:	73 2f                	jae    334b <_IO_stdin_used+0x34b>
    331c:	53                   	push   %rbx
    331d:	65 63 20             	movslq %gs:(%rax),%esp
    3320:	20 20                	and    %ah,(%rax)
    3322:	3a 20                	cmp    (%rax),%ah
    3324:	25 66 0a 00 49       	and    $0x49000a66,%eax
    3329:	74 65                	je     3390 <_IO_stdin_used+0x390>
    332b:	72 61                	jb     338e <_IO_stdin_used+0x38e>
    332d:	74 69                	je     3398 <_IO_stdin_used+0x398>
    332f:	6f                   	outsl  %ds:(%rsi),(%dx)
    3330:	6e                   	outsb  %ds:(%rsi),(%dx)
    3331:	73 20                	jae    3353 <_IO_stdin_used+0x353>
    3333:	20 20                	and    %ah,(%rax)
    3335:	20 20                	and    %ah,(%rax)
    3337:	20 20                	and    %ah,(%rax)
    3339:	3a 20                	cmp    (%rax),%ah
    333b:	25 6c 75 0a 00       	and    $0xa756c,%eax
    3340:	47                   	rex.RXB
    3341:	43                   	rex.XB
    3342:	43 39 2e             	rex.XB cmp %ebp,(%r14)
    3345:	34 2e                	xor    $0x2e,%al
    3347:	30 00                	xor    %al,(%rax)
    3349:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    334b:	6d                   	insl   (%dx),%es:(%rdi)
    334c:	70 69                	jo     33b7 <_IO_stdin_used+0x3b7>
    334e:	6c                   	insb   (%dx),%es:(%rdi)
    334f:	65 72 20             	gs jb  3372 <_IO_stdin_used+0x372>
    3352:	76 65                	jbe    33b9 <_IO_stdin_used+0x3b9>
    3354:	72 73                	jb     33c9 <_IO_stdin_used+0x3c9>
    3356:	69 6f 6e 20 3a 20 25 	imul   $0x25203a20,0x6e(%rdi),%ebp
    335d:	73 0a                	jae    3369 <_IO_stdin_used+0x369>
    335f:	00 2d 4f 31 20 20    	add    %ch,0x2020314f(%rip)        # 202064b4 <_end+0x20200444>
    3365:	20 2d 6c 72 74 00    	and    %ch,0x74726c(%rip)        # 74a5d7 <_end+0x744567>
    336b:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    336d:	6d                   	insl   (%dx),%es:(%rdi)
    336e:	70 69                	jo     33d9 <_IO_stdin_used+0x3d9>
    3370:	6c                   	insb   (%dx),%es:(%rdi)
    3371:	65 72 20             	gs jb  3394 <_IO_stdin_used+0x394>
    3374:	66 6c                	data16 insb (%dx),%es:(%rdi)
    3376:	61                   	(bad)  
    3377:	67 73 20             	addr32 jae 339a <_IO_stdin_used+0x39a>
    337a:	20 20                	and    %ah,(%rax)
    337c:	3a 20                	cmp    (%rax),%ah
    337e:	25 73 0a 00 4d       	and    $0x4d000a73,%eax
    3383:	65 6d                	gs insl (%dx),%es:(%rdi)
    3385:	6f                   	outsl  %ds:(%rsi),(%dx)
    3386:	72 79                	jb     3401 <_IO_stdin_used+0x401>
    3388:	20 6c 6f 63          	and    %ch,0x63(%rdi,%rbp,2)
    338c:	61                   	(bad)  
    338d:	74 69                	je     33f8 <_IO_stdin_used+0x3f8>
    338f:	6f                   	outsl  %ds:(%rsi),(%dx)
    3390:	6e                   	outsb  %ds:(%rsi),(%dx)
    3391:	20 20                	and    %ah,(%rax)
    3393:	3a 20                	cmp    (%rax),%ah
    3395:	25 73 0a 00 73       	and    $0x73000a73,%eax
    339a:	65 65 64 63 72 63    	gs gs movslq %fs:0x63(%rdx),%esi
    33a0:	20 20                	and    %ah,(%rax)
    33a2:	20 20                	and    %ah,(%rax)
    33a4:	20 20                	and    %ah,(%rax)
    33a6:	20 20                	and    %ah,(%rax)
    33a8:	20 20                	and    %ah,(%rax)
    33aa:	3a 20                	cmp    (%rax),%ah
    33ac:	30 78 25             	xor    %bh,0x25(%rax)
    33af:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    33b2:	0a 00                	or     (%rax),%al
    33b4:	5b                   	pop    %rbx
    33b5:	25 64 5d 63 72       	and    $0x72635d64,%eax
    33ba:	63 6c 69 73          	movslq 0x73(%rcx,%rbp,2),%ebp
    33be:	74 20                	je     33e0 <_IO_stdin_used+0x3e0>
    33c0:	20 20                	and    %ah,(%rax)
    33c2:	20 20                	and    %ah,(%rax)
    33c4:	20 20                	and    %ah,(%rax)
    33c6:	3a 20                	cmp    (%rax),%ah
    33c8:	30 78 25             	xor    %bh,0x25(%rax)
    33cb:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    33ce:	0a 00                	or     (%rax),%al
    33d0:	5b                   	pop    %rbx
    33d1:	25 64 5d 63 72       	and    $0x72635d64,%eax
    33d6:	63 6d 61             	movslq 0x61(%rbp),%ebp
    33d9:	74 72                	je     344d <_IO_stdin_used+0x44d>
    33db:	69 78 20 20 20 20 20 	imul   $0x20202020,0x20(%rax),%edi
    33e2:	3a 20                	cmp    (%rax),%ah
    33e4:	30 78 25             	xor    %bh,0x25(%rax)
    33e7:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    33ea:	0a 00                	or     (%rax),%al
    33ec:	5b                   	pop    %rbx
    33ed:	25 64 5d 63 72       	and    $0x72635d64,%eax
    33f2:	63 73 74             	movslq 0x74(%rbx),%esi
    33f5:	61                   	(bad)  
    33f6:	74 65                	je     345d <_IO_stdin_used+0x45d>
    33f8:	20 20                	and    %ah,(%rax)
    33fa:	20 20                	and    %ah,(%rax)
    33fc:	20 20                	and    %ah,(%rax)
    33fe:	3a 20                	cmp    (%rax),%ah
    3400:	30 78 25             	xor    %bh,0x25(%rax)
    3403:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3406:	0a 00                	or     (%rax),%al
    3408:	5b                   	pop    %rbx
    3409:	25 64 5d 63 72       	and    $0x72635d64,%eax
    340e:	63 66 69             	movslq 0x69(%rsi),%esp
    3411:	6e                   	outsb  %ds:(%rsi),(%dx)
    3412:	61                   	(bad)  
    3413:	6c                   	insb   (%dx),%es:(%rdi)
    3414:	20 20                	and    %ah,(%rax)
    3416:	20 20                	and    %ah,(%rax)
    3418:	20 20                	and    %ah,(%rax)
    341a:	3a 20                	cmp    (%rax),%ah
    341c:	30 78 25             	xor    %bh,0x25(%rax)
    341f:	30 34 78             	xor    %dh,(%rax,%rdi,2)
    3422:	0a 00                	or     (%rax),%al
    3424:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    3426:	72 65                	jb     348d <list_known_crc+0x5>
    3428:	4d 61                	rex.WRB (bad) 
    342a:	72 6b                	jb     3497 <list_known_crc+0xf>
    342c:	20 31                	and    %dh,(%rcx)
    342e:	2e 30 20             	xor    %ah,%cs:(%rax)
    3431:	3a 20                	cmp    (%rax),%ah
    3433:	25 66 20 2f 20       	and    $0x202f2066,%eax
    3438:	25 73 20 25 73       	and    $0x73252073,%eax
    343d:	00 20                	add    %ah,(%rax)
    343f:	2f                   	(bad)  
    3440:	20 25 73 00 45 72    	and    %ah,0x72450073(%rip)        # 724534b9 <_end+0x7244d449>
    3446:	72 6f                	jb     34b7 <list_known_crc+0x2f>
    3448:	72 73                	jb     34bd <list_known_crc+0x35>
    344a:	20 64 65 74          	and    %ah,0x74(%rbp,%riz,2)
    344e:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    3453:	00 53 74             	add    %dl,0x74(%rbx)
    3456:	61                   	(bad)  
    3457:	74 69                	je     34c2 <list_known_crc+0x3a>
    3459:	63 00                	movslq (%rax),%eax
    345b:	48                   	rex.W
    345c:	65 61                	gs (bad) 
    345e:	70 00                	jo     3460 <_IO_stdin_used+0x460>
    3460:	53                   	push   %rbx
    3461:	74 61                	je     34c4 <list_known_crc+0x3c>
    3463:	63 6b 00             	movslq 0x0(%rbx),%ebp
	...

0000000000003468 <state_known_crc>:
    3468:	47 5e                	rex.RXB pop %r14
    346a:	bf 39 a4 e5 3a       	mov    $0x3ae5a439,%edi
    346f:	8e 84 8d 00 00 00 00 	mov    0x0(%rbp,%rcx,4),%es
	...

0000000000003478 <matrix_known_crc>:
    3478:	52                   	push   %rdx
    3479:	be 99 11 08 56       	mov    $0x56081199,%esi
    347e:	d7                   	xlat   %ds:(%rbx)
    347f:	1f                   	(bad)  
    3480:	47 07                	rex.RXB (bad) 
    3482:	00 00                	add    %al,(%rax)
    3484:	00 00                	add    %al,(%rax)
	...

0000000000003488 <list_known_crc>:
    3488:	b0 d4                	mov    $0xd4,%al
    348a:	40 33 79 6a          	rex xor 0x6a(%rcx),%edi
    348e:	14 e7                	adc    $0xe7,%al
    3490:	c1 e3 00             	shl    $0x0,%ebx
	...
    349b:	00 00                	add    %al,(%rax)
    349d:	00 f0                	add    %dh,%al
    349f:	3f                   	(bad)  
	...
    34ac:	00 00                	add    %al,(%rax)
    34ae:	24 40                	and    $0x40,%al
    34b0:	5b                   	pop    %rbx
    34b1:	f5                   	cmc    
    34b2:	ff                   	(bad)  
    34b3:	ff 82 f5 ff ff ac    	incl   -0x5300000b(%rdx)
    34b9:	f5                   	cmc    
    34ba:	ff                   	(bad)  
    34bb:	ff 0e                	decl   (%rsi)
    34bd:	f6 ff                	idiv   %bh
    34bf:	ff d0                	callq  *%rax
    34c1:	f5                   	cmc    
    34c2:	ff                   	(bad)  
    34c3:	ff                   	(bad)  
    34c4:	ea                   	(bad)  
    34c5:	f5                   	cmc    
    34c6:	ff                   	(bad)  
    34c7:	ff                   	(bad)  
    34c8:	3e f6 ff             	ds idiv %bh
    34cb:	ff 57 f6             	callq  *-0xa(%rdi)
    34ce:	ff                   	(bad)  
    34cf:	ff 54 30 2e          	callq  *0x2e(%rax,%rsi,1)
    34d3:	33 65 2d             	xor    0x2d(%rbp),%esp
    34d6:	31 46 00             	xor    %eax,0x0(%rsi)
    34d9:	2d 54 2e 54 2b       	sub    $0x2b542e54,%eax
    34de:	2b 54 71 00          	sub    0x0(%rcx,%rsi,2),%edx
    34e2:	31 54 33 2e          	xor    %edx,0x2e(%rbx,%rsi,1)
    34e6:	34 65                	xor    $0x65,%al
    34e8:	34 7a                	xor    $0x7a,%al
    34ea:	00 33                	add    %dh,(%rbx)
    34ec:	34 2e                	xor    $0x2e,%al
    34ee:	30 65 2d             	xor    %ah,0x2d(%rbp)
    34f1:	54                   	push   %rsp
    34f2:	5e                   	pop    %rsi
    34f3:	00 35 2e 35 30 30    	add    %dh,0x3030352e(%rip)        # 30306a27 <_end+0x303009b7>
    34f9:	65 2b 33             	sub    %gs:(%rbx),%esi
    34fc:	00 2d 2e 31 32 33    	add    %ch,0x3332312e(%rip)        # 33326630 <_end+0x333205c0>
    3502:	65 2d 32 00 2d 38    	gs sub $0x382d0032,%eax
    3508:	37                   	(bad)  
    3509:	65 2b 38             	sub    %gs:(%rax),%edi
    350c:	33 32                	xor    (%rdx),%esi
    350e:	00 2b                	add    %ch,(%rbx)
    3510:	30 2e                	xor    %ch,(%rsi)
    3512:	36 65 2d 31 32 00 33 	ss gs sub $0x33003231,%eax
    3519:	35 2e 35 34 34       	xor    $0x3434352e,%eax
    351e:	30 30                	xor    %dh,(%rax)
    3520:	00 2e                	add    %ch,(%rsi)
    3522:	31 32                	xor    %esi,(%rdx)
    3524:	33 34 35 30 30 00 2d 	xor    0x2d003030(,%rsi,1),%esi
    352b:	31 31                	xor    %esi,(%rcx)
    352d:	30 2e                	xor    %ch,(%rsi)
    352f:	37                   	(bad)  
    3530:	30 30                	xor    %dh,(%rax)
    3532:	00 2b                	add    %ch,(%rbx)
    3534:	30 2e                	xor    %ch,(%rsi)
    3536:	36 34 34             	ss xor $0x34,%al
    3539:	30 30                	xor    %dh,(%rax)
    353b:	00 35 30 31 32 00    	add    %dh,0x323130(%rip)        # 326671 <_end+0x320601>
    3541:	31 32                	xor    %esi,(%rdx)
    3543:	33 34 00             	xor    (%rax,%rax,1),%esi
    3546:	2d 38 37 34 00       	sub    $0x343738,%eax
    354b:	2b 31                	sub    (%rcx),%esi
    354d:	32 32                	xor    (%rdx),%dh
    354f:	00 91 f7 ff ff 6e    	add    %dl,0x6efffff7(%rcx)
    3555:	f7 ff                	idiv   %edi
    3557:	ff 75 f7             	pushq  -0x9(%rbp)
    355a:	ff                   	(bad)  
    355b:	ff                   	(bad)  
    355c:	7c f7                	jl     3555 <list_known_crc+0xcd>
    355e:	ff                   	(bad)  
    355f:	ff 83 f7 ff ff 8a    	incl   -0x75000009(%rbx)
    3565:	f7 ff                	idiv   %edi
    3567:	ff 00                	incl   (%rax)
    3569:	00 00                	add    %al,(%rax)
    356b:	00 00                	add    %al,(%rax)
    356d:	40                   	rex
    356e:	8f                   	.byte 0x8f
    356f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000003570 <__GNU_EH_FRAME_HDR>:
    3570:	01 1b                	add    %ebx,(%rbx)
    3572:	03 3b                	add    (%rbx),%edi
    3574:	7c 01                	jl     3577 <__GNU_EH_FRAME_HDR+0x7>
    3576:	00 00                	add    %al,(%rax)
    3578:	2e 00 00             	add    %al,%cs:(%rax)
    357b:	00 b0 da ff ff b0    	add    %dh,-0x4f000026(%rax)
    3581:	01 00                	add    %eax,(%rax)
    3583:	00 30                	add    %dh,(%rax)
    3585:	db ff                	(bad)  
    3587:	ff                   	(bad)  
    3588:	d8 01                	fadds  (%rcx)
    358a:	00 00                	add    %al,(%rax)
    358c:	40 db ff             	rex (bad) 
    358f:	ff f0                	push   %rax
    3591:	01 00                	add    %eax,(%rax)
    3593:	00 b0 db ff ff 98    	add    %dh,-0x67000025(%rax)
    3599:	01 00                	add    %eax,(%rax)
    359b:	00 99 dc ff ff 08    	add    %bl,0x8ffffdc(%rcx)
    35a1:	02 00                	add    (%rax),%al
    35a3:	00 cf                	add    %cl,%bh
    35a5:	dc ff                	fdivr  %st,%st(7)
    35a7:	ff 1c 02             	lcall  *(%rdx,%rax,1)
    35aa:	00 00                	add    %al,(%rax)
    35ac:	9d                   	popfq  
    35ad:	dd ff                	(bad)  
    35af:	ff 58 02             	lcall  *0x2(%rax)
    35b2:	00 00                	add    %al,(%rax)
    35b4:	cf                   	iret   
    35b5:	dd ff                	(bad)  
    35b7:	ff 84 02 00 00 e2 dd 	incl   -0x221e0000(%rdx,%rax,1)
    35be:	ff                   	(bad)  
    35bf:	ff 98 02 00 00 37    	lcall  *0x37000002(%rax)
    35c5:	de ff                	fdivrp %st,%st(7)
    35c7:	ff ac 02 00 00 5f de 	ljmp   *-0x21a10000(%rdx,%rax,1)
    35ce:	ff                   	(bad)  
    35cf:	ff c0                	inc    %eax
    35d1:	02 00                	add    (%rax),%al
    35d3:	00 80 de ff ff d4    	add    %al,-0x2b000022(%rax)
    35d9:	02 00                	add    (%rax),%al
    35db:	00 d6                	add    %dl,%dh
    35dd:	de ff                	fdivrp %st,%st(7)
    35df:	ff                   	(bad)  
    35e0:	e8 02 00 00 fb       	callq  fffffffffb0035e7 <_end+0xfffffffffaffd577>
    35e5:	de ff                	fdivrp %st,%st(7)
    35e7:	ff                   	(bad)  
    35e8:	fc                   	cld    
    35e9:	02 00                	add    (%rax),%al
    35eb:	00 3b                	add    %bh,(%rbx)
    35ed:	e0 ff                	loopne 35ee <__GNU_EH_FRAME_HDR+0x7e>
    35ef:	ff 48 03             	decl   0x3(%rax)
    35f2:	00 00                	add    %al,(%rax)
    35f4:	40 e2 ff             	rex loop 35f6 <__GNU_EH_FRAME_HDR+0x86>
    35f7:	ff 94 03 00 00 c8 e3 	callq  *-0x1c380000(%rbx,%rax,1)
    35fe:	ff                   	(bad)  
    35ff:	ff e0                	jmpq   *%rax
    3601:	03 00                	add    (%rax),%eax
    3603:	00 51 e4             	add    %dl,-0x1c(%rcx)
    3606:	ff                   	(bad)  
    3607:	ff 0c 04             	decl   (%rsp,%rax,1)
    360a:	00 00                	add    %al,(%rax)
    360c:	21 ee                	and    %ebp,%esi
    360e:	ff                   	(bad)  
    360f:	ff 60 04             	jmpq   *0x4(%rax)
    3612:	00 00                	add    %al,(%rax)
    3614:	45 ef                	rex.RB out %eax,(%dx)
    3616:	ff                   	(bad)  
    3617:	ff a4 04 00 00 cb ef 	jmpq   *-0x10350000(%rsp,%rax,1)
    361e:	ff                   	(bad)  
    361f:	ff e0                	jmpq   *%rax
    3621:	04 00                	add    $0x0,%al
    3623:	00 12                	add    %dl,(%rdx)
    3625:	f0 ff                	lock (bad) 
    3627:	ff                   	(bad)  
    3628:	fc                   	cld    
    3629:	04 00                	add    $0x0,%al
    362b:	00 4d f0             	add    %cl,-0x10(%rbp)
    362e:	ff                   	(bad)  
    362f:	ff 10                	callq  *(%rax)
    3631:	05 00 00 b4 f0       	add    $0xf0b40000,%eax
    3636:	ff                   	(bad)  
    3637:	ff 40 05             	incl   0x5(%rax)
    363a:	00 00                	add    %al,(%rax)
    363c:	3f                   	(bad)  
    363d:	f1                   	icebp  
    363e:	ff                   	(bad)  
    363f:	ff                   	(bad)  
    3640:	7c 05                	jl     3647 <__GNU_EH_FRAME_HDR+0xd7>
    3642:	00 00                	add    %al,(%rax)
    3644:	db f1                	fcomi  %st(1),%st
    3646:	ff                   	(bad)  
    3647:	ff                   	(bad)  
    3648:	b8 05 00 00 06       	mov    $0x6000005,%eax
    364d:	f3 ff                	repz (bad) 
    364f:	ff 04 06             	incl   (%rsi,%rax,1)
    3652:	00 00                	add    %al,(%rax)
    3654:	31 f3                	xor    %esi,%ebx
    3656:	ff                   	(bad)  
    3657:	ff 20                	jmpq   *(%rax)
    3659:	06                   	(bad)  
    365a:	00 00                	add    %al,(%rax)
    365c:	41 f4                	rex.B hlt 
    365e:	ff                   	(bad)  
    365f:	ff 68 06             	ljmp   *0x6(%rax)
    3662:	00 00                	add    %al,(%rax)
    3664:	b5 f5                	mov    $0xf5,%ch
    3666:	ff                   	(bad)  
    3667:	ff b0 06 00 00 32    	pushq  0x32000006(%rax)
    366d:	f7 ff                	idiv   %edi
    366f:	ff 00                	incl   (%rax)
    3671:	07                   	(bad)  
    3672:	00 00                	add    %al,(%rax)
    3674:	77 f7                	ja     366d <__GNU_EH_FRAME_HDR+0xfd>
    3676:	ff                   	(bad)  
    3677:	ff 14 07             	callq  *(%rdi,%rax,1)
    367a:	00 00                	add    %al,(%rax)
    367c:	a3 f7 ff ff 28 07 00 	movabs %eax,0xc300000728fffff7
    3683:	00 c3 
    3685:	f7 ff                	idiv   %edi
    3687:	ff 44 07 00          	incl   0x0(%rdi,%rax,1)
    368b:	00 e4                	add    %ah,%ah
    368d:	f7 ff                	idiv   %edi
    368f:	ff 60 07             	jmpq   *0x7(%rax)
    3692:	00 00                	add    %al,(%rax)
    3694:	f4                   	hlt    
    3695:	f7 ff                	idiv   %edi
    3697:	ff 74 07 00          	pushq  0x0(%rdi,%rax,1)
    369b:	00 fe                	add    %bh,%dh
    369d:	f7 ff                	idiv   %edi
    369f:	ff 88 07 00 00 10    	decl   0x10000007(%rax)
    36a5:	f8                   	clc    
    36a6:	ff                   	(bad)  
    36a7:	ff a0 07 00 00 22    	jmpq   *0x22000007(%rax)
    36ad:	f8                   	clc    
    36ae:	ff                   	(bad)  
    36af:	ff                   	(bad)  
    36b0:	b8 07 00 00 40       	mov    $0x40000007,%eax
    36b5:	f8                   	clc    
    36b6:	ff                   	(bad)  
    36b7:	ff d0                	callq  *%rax
    36b9:	07                   	(bad)  
    36ba:	00 00                	add    %al,(%rax)
    36bc:	5e                   	pop    %rsi
    36bd:	f8                   	clc    
    36be:	ff                   	(bad)  
    36bf:	ff                   	(bad)  
    36c0:	e8 07 00 00 a5       	callq  ffffffffa50036cc <_end+0xffffffffa4ffd65c>
    36c5:	f8                   	clc    
    36c6:	ff                   	(bad)  
    36c7:	ff                   	(bad)  
    36c8:	fc                   	cld    
    36c9:	07                   	(bad)  
    36ca:	00 00                	add    %al,(%rax)
    36cc:	bb f8 ff ff 10       	mov    $0x10fffff8,%ebx
    36d1:	08 00                	or     %al,(%rax)
    36d3:	00 c3                	add    %al,%bl
    36d5:	f8                   	clc    
    36d6:	ff                   	(bad)  
    36d7:	ff 24 08             	jmpq   *(%rax,%rcx,1)
    36da:	00 00                	add    %al,(%rax)
    36dc:	d0 f8                	sar    %al
    36de:	ff                   	(bad)  
    36df:	ff                   	(bad)  
    36e0:	38 08                	cmp    %cl,(%rax)
    36e2:	00 00                	add    %al,(%rax)
    36e4:	40 f9                	rex stc 
    36e6:	ff                   	(bad)  
    36e7:	ff                   	.byte 0xff
    36e8:	80 08 00             	orb    $0x0,(%rax)
	...

Disassembly of section .eh_frame:

00000000000036f0 <__FRAME_END__-0x714>:
    36f0:	14 00                	adc    $0x0,%al
    36f2:	00 00                	add    %al,(%rax)
    36f4:	00 00                	add    %al,(%rax)
    36f6:	00 00                	add    %al,(%rax)
    36f8:	01 7a 52             	add    %edi,0x52(%rdx)
    36fb:	00 01                	add    %al,(%rcx)
    36fd:	78 10                	js     370f <__GNU_EH_FRAME_HDR+0x19f>
    36ff:	01 1b                	add    %ebx,(%rbx)
    3701:	0c 07                	or     $0x7,%al
    3703:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    3709:	00 00                	add    %al,(%rax)
    370b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    370e:	00 00                	add    %al,(%rax)
    3710:	10 da                	adc    %bl,%dl
    3712:	ff                   	(bad)  
    3713:	ff 2f                	ljmp   *(%rdi)
    3715:	00 00                	add    %al,(%rax)
    3717:	00 00                	add    %al,(%rax)
    3719:	44 07                	rex.R (bad) 
    371b:	10 00                	adc    %al,(%rax)
    371d:	00 00                	add    %al,(%rax)
    371f:	00 24 00             	add    %ah,(%rax,%rax,1)
    3722:	00 00                	add    %al,(%rax)
    3724:	34 00                	xor    $0x0,%al
    3726:	00 00                	add    %al,(%rax)
    3728:	f8                   	clc    
    3729:	d8 ff                	fdivr  %st(7),%st
    372b:	ff 80 00 00 00 00    	incl   0x0(%rax)
    3731:	0e                   	(bad)  
    3732:	10 46 0e             	adc    %al,0xe(%rsi)
    3735:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    3738:	0b 77 08             	or     0x8(%rdi),%esi
    373b:	80 00 3f             	addb   $0x3f,(%rax)
    373e:	1a 3a                	sbb    (%rdx),%bh
    3740:	2a 33                	sub    (%rbx),%dh
    3742:	24 22                	and    $0x22,%al
    3744:	00 00                	add    %al,(%rax)
    3746:	00 00                	add    %al,(%rax)
    3748:	14 00                	adc    $0x0,%al
    374a:	00 00                	add    %al,(%rax)
    374c:	5c                   	pop    %rsp
    374d:	00 00                	add    %al,(%rax)
    374f:	00 50 d9             	add    %dl,-0x27(%rax)
    3752:	ff                   	(bad)  
    3753:	ff 10                	callq  *(%rax)
	...
    375d:	00 00                	add    %al,(%rax)
    375f:	00 14 00             	add    %dl,(%rax,%rax,1)
    3762:	00 00                	add    %al,(%rax)
    3764:	74 00                	je     3766 <__GNU_EH_FRAME_HDR+0x1f6>
    3766:	00 00                	add    %al,(%rax)
    3768:	48 d9 ff             	rex.W fcos 
    376b:	ff 70 00             	pushq  0x0(%rax)
	...
    3776:	00 00                	add    %al,(%rax)
    3778:	10 00                	adc    %al,(%rax)
    377a:	00 00                	add    %al,(%rax)
    377c:	8c 00                	mov    %es,(%rax)
    377e:	00 00                	add    %al,(%rax)
    3780:	89 da                	mov    %ebx,%edx
    3782:	ff                   	(bad)  
    3783:	ff 36                	pushq  (%rsi)
    3785:	00 00                	add    %al,(%rax)
    3787:	00 00                	add    %al,(%rax)
    3789:	00 00                	add    %al,(%rax)
    378b:	00 38                	add    %bh,(%rax)
    378d:	00 00                	add    %al,(%rax)
    378f:	00 a0 00 00 00 ab    	add    %ah,-0x55000000(%rax)
    3795:	da ff                	(bad)  
    3797:	ff ce                	dec    %esi
    3799:	00 00                	add    %al,(%rax)
    379b:	00 00                	add    %al,(%rax)
    379d:	46 0e                	rex.RX (bad) 
    379f:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    37a5:	8c 03                	mov    %es,(%rbx)
    37a7:	41 0e                	rex.B (bad) 
    37a9:	20 86 04 41 0e 28    	and    %al,0x280e4104(%rsi)
    37af:	83 05 44 0e 30 50 0a 	addl   $0xa,0x50300e44(%rip)        # 503045fa <_end+0x502fe58a>
    37b6:	0e                   	(bad)  
    37b7:	28 41 0e             	sub    %al,0xe(%rcx)
    37ba:	20 41 0e             	and    %al,0xe(%rcx)
    37bd:	18 42 0e             	sbb    %al,0xe(%rdx)
    37c0:	10 42 0e             	adc    %al,0xe(%rdx)
    37c3:	08 41 0b             	or     %al,0xb(%rcx)
    37c6:	00 00                	add    %al,(%rax)
    37c8:	28 00                	sub    %al,(%rax)
    37ca:	00 00                	add    %al,(%rax)
    37cc:	dc 00                	faddl  (%rax)
    37ce:	00 00                	add    %al,(%rax)
    37d0:	3d db ff ff 32       	cmp    $0x32ffffdb,%eax
    37d5:	00 00                	add    %al,(%rax)
    37d7:	00 00                	add    %al,(%rax)
    37d9:	46 0e                	rex.RX (bad) 
    37db:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    37e2:	03 41 0e             	add    0xe(%rcx),%eax
    37e5:	20 83 04 66 0e 18    	and    %al,0x180e6604(%rbx)
    37eb:	41 0e                	rex.B (bad) 
    37ed:	10 42 0e             	adc    %al,0xe(%rdx)
    37f0:	08 00                	or     %al,(%rax)
    37f2:	00 00                	add    %al,(%rax)
    37f4:	10 00                	adc    %al,(%rax)
    37f6:	00 00                	add    %al,(%rax)
    37f8:	08 01                	or     %al,(%rcx)
    37fa:	00 00                	add    %al,(%rax)
    37fc:	43 db ff             	rex.XB (bad) 
    37ff:	ff 13                	callq  *(%rbx)
    3801:	00 00                	add    %al,(%rax)
    3803:	00 00                	add    %al,(%rax)
    3805:	00 00                	add    %al,(%rax)
    3807:	00 10                	add    %dl,(%rax)
    3809:	00 00                	add    %al,(%rax)
    380b:	00 1c 01             	add    %bl,(%rcx,%rax,1)
    380e:	00 00                	add    %al,(%rax)
    3810:	42 db ff             	rex.X (bad) 
    3813:	ff 55 00             	callq  *0x0(%rbp)
    3816:	00 00                	add    %al,(%rax)
    3818:	00 00                	add    %al,(%rax)
    381a:	00 00                	add    %al,(%rax)
    381c:	10 00                	adc    %al,(%rax)
    381e:	00 00                	add    %al,(%rax)
    3820:	30 01                	xor    %al,(%rcx)
    3822:	00 00                	add    %al,(%rax)
    3824:	83 db ff             	sbb    $0xffffffff,%ebx
    3827:	ff 28                	ljmp   *(%rax)
    3829:	00 00                	add    %al,(%rax)
    382b:	00 00                	add    %al,(%rax)
    382d:	00 00                	add    %al,(%rax)
    382f:	00 10                	add    %dl,(%rax)
    3831:	00 00                	add    %al,(%rax)
    3833:	00 44 01 00          	add    %al,0x0(%rcx,%rax,1)
    3837:	00 97 db ff ff 21    	add    %dl,0x21ffffdb(%rdi)
    383d:	00 00                	add    %al,(%rax)
    383f:	00 00                	add    %al,(%rax)
    3841:	00 00                	add    %al,(%rax)
    3843:	00 10                	add    %dl,(%rax)
    3845:	00 00                	add    %al,(%rax)
    3847:	00 58 01             	add    %bl,0x1(%rax)
    384a:	00 00                	add    %al,(%rax)
    384c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    384d:	db ff                	(bad)  
    384f:	ff 56 00             	callq  *0x0(%rsi)
    3852:	00 00                	add    %al,(%rax)
    3854:	00 00                	add    %al,(%rax)
    3856:	00 00                	add    %al,(%rax)
    3858:	10 00                	adc    %al,(%rax)
    385a:	00 00                	add    %al,(%rax)
    385c:	6c                   	insb   (%dx),%es:(%rdi)
    385d:	01 00                	add    %eax,(%rax)
    385f:	00 e6                	add    %ah,%dh
    3861:	db ff                	(bad)  
    3863:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 3869 <__GNU_EH_FRAME_HDR+0x2f9>
    3869:	00 00                	add    %al,(%rax)
    386b:	00 48 00             	add    %cl,0x0(%rax)
    386e:	00 00                	add    %al,(%rax)
    3870:	80 01 00             	addb   $0x0,(%rcx)
    3873:	00 f7                	add    %dh,%bh
    3875:	db ff                	(bad)  
    3877:	ff 40 01             	incl   0x1(%rax)
    387a:	00 00                	add    %al,(%rax)
    387c:	00 46 0e             	add    %al,0xe(%rsi)
    387f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    3885:	8e 03                	mov    (%rbx),%es
    3887:	42 0e                	rex.X (bad) 
    3889:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    388f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863046d6 <_end+0xffffffff862fe666>
    3895:	06                   	(bad)  
    3896:	41 0e                	rex.B (bad) 
    3898:	38 83 07 44 0e 60    	cmp    %al,0x600e4407(%rbx)
    389e:	03 05 01 0a 0e 38    	add    0x380e0a01(%rip),%eax        # 380e42a5 <_end+0x380de235>
    38a4:	41 0e                	rex.B (bad) 
    38a6:	30 41 0e             	xor    %al,0xe(%rcx)
    38a9:	28 42 0e             	sub    %al,0xe(%rdx)
    38ac:	20 42 0e             	and    %al,0xe(%rdx)
    38af:	18 42 0e             	sbb    %al,0xe(%rdx)
    38b2:	10 42 0e             	adc    %al,0xe(%rdx)
    38b5:	08 41 0b             	or     %al,0xb(%rcx)
    38b8:	48 00 00             	rex.W add %al,(%rax)
    38bb:	00 cc                	add    %cl,%ah
    38bd:	01 00                	add    %eax,(%rax)
    38bf:	00 eb                	add    %ch,%bl
    38c1:	dc ff                	fdivr  %st,%st(7)
    38c3:	ff 05 02 00 00 00    	incl   0x2(%rip)        # 38cb <__GNU_EH_FRAME_HDR+0x35b>
    38c9:	46 0e                	rex.RX (bad) 
    38cb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    38d1:	8e 03                	mov    (%rbx),%es
    38d3:	42 0e                	rex.X (bad) 
    38d5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    38db:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86304722 <_end+0xffffffff862fe6b2>
    38e1:	06                   	(bad)  
    38e2:	41 0e                	rex.B (bad) 
    38e4:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
    38ea:	03 b5 01 0a 0e 38    	add    0x380e0a01(%rbp),%esi
    38f0:	41 0e                	rex.B (bad) 
    38f2:	30 41 0e             	xor    %al,0xe(%rcx)
    38f5:	28 42 0e             	sub    %al,0xe(%rdx)
    38f8:	20 42 0e             	and    %al,0xe(%rdx)
    38fb:	18 42 0e             	sbb    %al,0xe(%rdx)
    38fe:	10 42 0e             	adc    %al,0xe(%rdx)
    3901:	08 41 0b             	or     %al,0xb(%rcx)
    3904:	48 00 00             	rex.W add %al,(%rax)
    3907:	00 18                	add    %bl,(%rax)
    3909:	02 00                	add    (%rax),%al
    390b:	00 a4 de ff ff 88 01 	add    %ah,0x188ffff(%rsi,%rbx,8)
    3912:	00 00                	add    %al,(%rax)
    3914:	00 46 0e             	add    %al,0xe(%rsi)
    3917:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    391d:	8e 03                	mov    (%rbx),%es
    391f:	42 0e                	rex.X (bad) 
    3921:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    3927:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8630476e <_end+0xffffffff862fe6fe>
    392d:	06                   	(bad)  
    392e:	41 0e                	rex.B (bad) 
    3930:	38 83 07 44 0e 70    	cmp    %al,0x700e4407(%rbx)
    3936:	03 66 01             	add    0x1(%rsi),%esp
    3939:	0a 0e                	or     (%rsi),%cl
    393b:	38 41 0e             	cmp    %al,0xe(%rcx)
    393e:	30 41 0e             	xor    %al,0xe(%rcx)
    3941:	28 42 0e             	sub    %al,0xe(%rdx)
    3944:	20 42 0e             	and    %al,0xe(%rdx)
    3947:	18 42 0e             	sbb    %al,0xe(%rdx)
    394a:	10 42 0e             	adc    %al,0xe(%rdx)
    394d:	08 41 0b             	or     %al,0xb(%rcx)
    3950:	28 00                	sub    %al,(%rax)
    3952:	00 00                	add    %al,(%rax)
    3954:	64 02 00             	add    %fs:(%rax),%al
    3957:	00 e0                	add    %ah,%al
    3959:	df ff                	(bad)  
    395b:	ff 89 00 00 00 00    	decl   0x0(%rcx)
    3961:	46 0e                	rex.RX (bad) 
    3963:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    396a:	03 41 0e             	add    0xe(%rcx),%eax
    396d:	20 83 04 02 7d 0e    	and    %al,0xe7d0204(%rbx)
    3973:	18 41 0e             	sbb    %al,0xe(%rcx)
    3976:	10 42 0e             	adc    %al,0xe(%rdx)
    3979:	08 00                	or     %al,(%rax)
    397b:	00 50 00             	add    %dl,0x0(%rax)
    397e:	00 00                	add    %al,(%rax)
    3980:	90                   	nop
    3981:	02 00                	add    (%rax),%al
    3983:	00 3d e0 ff ff d0    	add    %bh,-0x2f000020(%rip)        # ffffffffd1003969 <_end+0xffffffffd0ffd8f9>
    3989:	09 00                	or     %eax,(%rax)
    398b:	00 00                	add    %al,(%rax)
    398d:	46 0e                	rex.RX (bad) 
    398f:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    3995:	8e 03                	mov    (%rbx),%es
    3997:	42 0e                	rex.X (bad) 
    3999:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    399f:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863047e6 <_end+0xffffffff862fe776>
    39a5:	06                   	(bad)  
    39a6:	41 0e                	rex.B (bad) 
    39a8:	38 83 07 47 0e f0    	cmp    %al,-0xff1b8f9(%rbx)
    39ae:	01 03                	add    %eax,(%rbx)
    39b0:	6f                   	outsl  %ds:(%rsi),(%dx)
    39b1:	06                   	(bad)  
    39b2:	0a 0e                	or     (%rsi),%cl
    39b4:	38 41 0e             	cmp    %al,0xe(%rcx)
    39b7:	30 41 0e             	xor    %al,0xe(%rcx)
    39ba:	28 42 0e             	sub    %al,0xe(%rdx)
    39bd:	20 42 0e             	and    %al,0xe(%rdx)
    39c0:	18 42 0e             	sbb    %al,0xe(%rdx)
    39c3:	10 42 0e             	adc    %al,0xe(%rdx)
    39c6:	08 41 0b             	or     %al,0xb(%rcx)
    39c9:	00 00                	add    %al,(%rax)
    39cb:	00 00                	add    %al,(%rax)
    39cd:	00 00                	add    %al,(%rax)
    39cf:	00 40 00             	add    %al,0x0(%rax)
    39d2:	00 00                	add    %al,(%rax)
    39d4:	e4 02                	in     $0x2,%al
    39d6:	00 00                	add    %al,(%rax)
    39d8:	b9 e9 ff ff 24       	mov    $0x24ffffe9,%ecx
    39dd:	01 00                	add    %eax,(%rax)
    39df:	00 00                	add    %al,(%rax)
    39e1:	46 0e                	rex.RX (bad) 
    39e3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    39e9:	8e 03                	mov    (%rbx),%es
    39eb:	42 0e                	rex.X (bad) 
    39ed:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    39f3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff8630483a <_end+0xffffffff862fe7ca>
    39f9:	06                   	(bad)  
    39fa:	41 0e                	rex.B (bad) 
    39fc:	38 83 07 03 0c 01    	cmp    %al,0x10c0307(%rbx)
    3a02:	0e                   	(bad)  
    3a03:	30 41 0e             	xor    %al,0xe(%rcx)
    3a06:	28 42 0e             	sub    %al,0xe(%rdx)
    3a09:	20 42 0e             	and    %al,0xe(%rdx)
    3a0c:	18 42 0e             	sbb    %al,0xe(%rdx)
    3a0f:	10 42 0e             	adc    %al,0xe(%rdx)
    3a12:	08 00                	or     %al,(%rax)
    3a14:	38 00                	cmp    %al,(%rax)
    3a16:	00 00                	add    %al,(%rax)
    3a18:	28 03                	sub    %al,(%rbx)
    3a1a:	00 00                	add    %al,(%rax)
    3a1c:	99                   	cltd   
    3a1d:	ea                   	(bad)  
    3a1e:	ff                   	(bad)  
    3a1f:	ff 86 00 00 00 00    	incl   0x0(%rsi)
    3a25:	4a 0e                	rex.WX (bad) 
    3a27:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    3a2e:	03 41 0e             	add    0xe(%rcx),%eax
    3a31:	20 83 04 67 0e 08    	and    %al,0x80e6704(%rbx)
    3a37:	c3                   	retq   
    3a38:	c6                   	(bad)  
    3a39:	cc                   	int3   
    3a3a:	4a 0e                	rex.WX (bad) 
    3a3c:	20 83 04 86 03 8c    	and    %al,-0x73fc79fc(%rbx)
    3a42:	02 02                	add    (%rdx),%al
    3a44:	45 0e                	rex.RB (bad) 
    3a46:	18 41 0e             	sbb    %al,0xe(%rcx)
    3a49:	10 42 0e             	adc    %al,0xe(%rdx)
    3a4c:	08 00                	or     %al,(%rax)
    3a4e:	00 00                	add    %al,(%rax)
    3a50:	18 00                	sbb    %al,(%rax)
    3a52:	00 00                	add    %al,(%rax)
    3a54:	64 03 00             	add    %fs:(%rax),%eax
    3a57:	00 e3                	add    %ah,%bl
    3a59:	ea                   	(bad)  
    3a5a:	ff                   	(bad)  
    3a5b:	ff 47 00             	incl   0x0(%rdi)
    3a5e:	00 00                	add    %al,(%rax)
    3a60:	00 45 0e             	add    %al,0xe(%rbp)
    3a63:	10 83 02 57 0a 0e    	adc    %al,0xe0a5702(%rbx)
    3a69:	08 41 0b             	or     %al,0xb(%rcx)
    3a6c:	10 00                	adc    %al,(%rax)
    3a6e:	00 00                	add    %al,(%rax)
    3a70:	80 03 00             	addb   $0x0,(%rbx)
    3a73:	00 0e                	add    %cl,(%rsi)
    3a75:	eb ff                	jmp    3a76 <__GNU_EH_FRAME_HDR+0x506>
    3a77:	ff                   	(bad)  
    3a78:	3b 00                	cmp    (%rax),%eax
    3a7a:	00 00                	add    %al,(%rax)
    3a7c:	00 00                	add    %al,(%rax)
    3a7e:	00 00                	add    %al,(%rax)
    3a80:	2c 00                	sub    $0x0,%al
    3a82:	00 00                	add    %al,(%rax)
    3a84:	94                   	xchg   %eax,%esp
    3a85:	03 00                	add    (%rax),%eax
    3a87:	00 35 eb ff ff 67    	add    %dh,0x67ffffeb(%rip)        # 68003a78 <_end+0x67ffda08>
    3a8d:	00 00                	add    %al,(%rax)
    3a8f:	00 00                	add    %al,(%rax)
    3a91:	4a 0e                	rex.WX (bad) 
    3a93:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    3a9a:	03 41 0e             	add    0xe(%rcx),%eax
    3a9d:	20 83 04 02 56 0e    	and    %al,0xe560204(%rbx)
    3aa3:	18 41 0e             	sbb    %al,0xe(%rcx)
    3aa6:	10 42 0e             	adc    %al,0xe(%rdx)
    3aa9:	08 41 c3             	or     %al,-0x3d(%rcx)
    3aac:	c6                   	(bad)  
    3aad:	cc                   	int3   
    3aae:	00 00                	add    %al,(%rax)
    3ab0:	38 00                	cmp    %al,(%rax)
    3ab2:	00 00                	add    %al,(%rax)
    3ab4:	c4 03 00 00          	(bad)
    3ab8:	6c                   	insb   (%dx),%es:(%rdi)
    3ab9:	eb ff                	jmp    3aba <__GNU_EH_FRAME_HDR+0x54a>
    3abb:	ff 8b 00 00 00 00    	decl   0x0(%rbx)
    3ac1:	46 0e                	rex.RX (bad) 
    3ac3:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    3ac9:	8d 03                	lea    (%rbx),%eax
    3acb:	42 0e                	rex.X (bad) 
    3acd:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
    3ad4:	05 41 0e 30 83       	add    $0x83300e41,%eax
    3ad9:	06                   	(bad)  
    3ada:	65 0a 0e             	or     %gs:(%rsi),%cl
    3add:	28 41 0e             	sub    %al,0xe(%rcx)
    3ae0:	20 42 0e             	and    %al,0xe(%rdx)
    3ae3:	18 42 0e             	sbb    %al,0xe(%rdx)
    3ae6:	10 42 0e             	adc    %al,0xe(%rdx)
    3ae9:	08 41 0b             	or     %al,0xb(%rcx)
    3aec:	38 00                	cmp    %al,(%rax)
    3aee:	00 00                	add    %al,(%rax)
    3af0:	00 04 00             	add    %al,(%rax,%rax,1)
    3af3:	00 bb eb ff ff 9c    	add    %bh,-0x63000015(%rbx)
    3af9:	00 00                	add    %al,(%rax)
    3afb:	00 00                	add    %al,(%rax)
    3afd:	46 0e                	rex.RX (bad) 
    3aff:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    3b05:	8d 03                	lea    (%rbx),%eax
    3b07:	42 0e                	rex.X (bad) 
    3b09:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
    3b10:	05 41 0e 30 83       	add    $0x83300e41,%eax
    3b15:	06                   	(bad)  
    3b16:	65 0a 0e             	or     %gs:(%rsi),%cl
    3b19:	28 41 0e             	sub    %al,0xe(%rcx)
    3b1c:	20 42 0e             	and    %al,0xe(%rdx)
    3b1f:	18 42 0e             	sbb    %al,0xe(%rdx)
    3b22:	10 42 0e             	adc    %al,0xe(%rdx)
    3b25:	08 41 0b             	or     %al,0xb(%rcx)
    3b28:	48 00 00             	rex.W add %al,(%rax)
    3b2b:	00 3c 04             	add    %bh,(%rsp,%rax,1)
    3b2e:	00 00                	add    %al,(%rax)
    3b30:	1b ec                	sbb    %esp,%ebp
    3b32:	ff                   	(bad)  
    3b33:	ff 2b                	ljmp   *(%rbx)
    3b35:	01 00                	add    %eax,(%rax)
    3b37:	00 00                	add    %al,(%rax)
    3b39:	46 0e                	rex.RX (bad) 
    3b3b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    3b41:	8e 03                	mov    (%rbx),%es
    3b43:	42 0e                	rex.X (bad) 
    3b45:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    3b4b:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86304992 <_end+0xffffffff862fe922>
    3b51:	06                   	(bad)  
    3b52:	41 0e                	rex.B (bad) 
    3b54:	38 83 07 44 0e 50    	cmp    %al,0x500e4407(%rbx)
    3b5a:	03 0e                	add    (%rsi),%ecx
    3b5c:	01 0e                	add    %ecx,(%rsi)
    3b5e:	38 41 0e             	cmp    %al,0xe(%rcx)
    3b61:	30 41 0e             	xor    %al,0xe(%rcx)
    3b64:	28 42 0e             	sub    %al,0xe(%rdx)
    3b67:	20 42 0e             	and    %al,0xe(%rdx)
    3b6a:	18 42 0e             	sbb    %al,0xe(%rdx)
    3b6d:	10 42 0e             	adc    %al,0xe(%rdx)
    3b70:	08 00                	or     %al,(%rax)
    3b72:	00 00                	add    %al,(%rax)
    3b74:	18 00                	sbb    %al,(%rax)
    3b76:	00 00                	add    %al,(%rax)
    3b78:	88 04 00             	mov    %al,(%rax,%rax,1)
    3b7b:	00 fa                	add    %bh,%dl
    3b7d:	ec                   	in     (%dx),%al
    3b7e:	ff                   	(bad)  
    3b7f:	ff 2b                	ljmp   *(%rbx)
    3b81:	00 00                	add    %al,(%rax)
    3b83:	00 00                	add    %al,(%rax)
    3b85:	45 0e                	rex.RB (bad) 
    3b87:	10 83 02 65 0e 08    	adc    %al,0x80e6502(%rbx)
    3b8d:	00 00                	add    %al,(%rax)
    3b8f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    3b93:	00 a4 04 00 00 09 ed 	add    %ah,-0x12f70000(%rsp,%rax,1)
    3b9a:	ff                   	(bad)  
    3b9b:	ff 10                	callq  *(%rax)
    3b9d:	01 00                	add    %eax,(%rax)
    3b9f:	00 00                	add    %al,(%rax)
    3ba1:	46 0e                	rex.RX (bad) 
    3ba3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    3ba9:	8e 03                	mov    (%rbx),%es
    3bab:	42 0e                	rex.X (bad) 
    3bad:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    3bb3:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff863049fa <_end+0xffffffff862fe98a>
    3bb9:	06                   	(bad)  
    3bba:	41 0e                	rex.B (bad) 
    3bbc:	38 83 07 02 52 0a    	cmp    %al,0xa520207(%rbx)
    3bc2:	0e                   	(bad)  
    3bc3:	30 41 0e             	xor    %al,0xe(%rcx)
    3bc6:	28 42 0e             	sub    %al,0xe(%rdx)
    3bc9:	20 42 0e             	and    %al,0xe(%rdx)
    3bcc:	18 42 0e             	sbb    %al,0xe(%rdx)
    3bcf:	10 42 0e             	adc    %al,0xe(%rdx)
    3bd2:	08 41 0b             	or     %al,0xb(%rcx)
    3bd5:	00 00                	add    %al,(%rax)
    3bd7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    3bdb:	00 ec                	add    %ch,%ah
    3bdd:	04 00                	add    $0x0,%al
    3bdf:	00 d1                	add    %dl,%cl
    3be1:	ed                   	in     (%dx),%eax
    3be2:	ff                   	(bad)  
    3be3:	ff 74 01 00          	pushq  0x0(%rcx,%rax,1)
    3be7:	00 00                	add    %al,(%rax)
    3be9:	54                   	push   %rsp
    3bea:	0e                   	(bad)  
    3beb:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    3bf1:	8d 03                	lea    (%rbx),%eax
    3bf3:	42 0e                	rex.X (bad) 
    3bf5:	20 8c 04 41 0e 28 86 	and    %cl,-0x79d7f1bf(%rsp,%rax,1)
    3bfc:	05 41 0e 30 83       	add    $0x83300e41,%eax
    3c01:	06                   	(bad)  
    3c02:	03 1b                	add    (%rbx),%ebx
    3c04:	01 0a                	add    %ecx,(%rdx)
    3c06:	0e                   	(bad)  
    3c07:	28 41 0e             	sub    %al,0xe(%rcx)
    3c0a:	20 42 0e             	and    %al,0xe(%rdx)
    3c0d:	18 42 0e             	sbb    %al,0xe(%rdx)
    3c10:	10 42 0e             	adc    %al,0xe(%rdx)
    3c13:	08 41 0b             	or     %al,0xb(%rcx)
    3c16:	6a 0e                	pushq  $0xe
    3c18:	08 c3                	or     %al,%bl
    3c1a:	c6                   	(bad)  
    3c1b:	cc                   	int3   
    3c1c:	cd ce                	int    $0xce
    3c1e:	00 00                	add    %al,(%rax)
    3c20:	4c 00 00             	rex.WR add %r8b,(%rax)
    3c23:	00 34 05 00 00 fd ee 	add    %dh,-0x11030000(,%rax,1)
    3c2a:	ff                   	(bad)  
    3c2b:	ff                   	(bad)  
    3c2c:	7d 01                	jge    3c2f <__GNU_EH_FRAME_HDR+0x6bf>
    3c2e:	00 00                	add    %al,(%rax)
    3c30:	00 46 0e             	add    %al,0xe(%rsi)
    3c33:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    3c39:	8e 03                	mov    (%rbx),%es
    3c3b:	42 0e                	rex.X (bad) 
    3c3d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    3c43:	8c 05 41 0e 30 86    	mov    %es,-0x79cff1bf(%rip)        # ffffffff86304a8a <_end+0xffffffff862fea1a>
    3c49:	06                   	(bad)  
    3c4a:	41 0e                	rex.B (bad) 
    3c4c:	38 83 07 44 0e b0    	cmp    %al,-0x4ff1bbf9(%rbx)
    3c52:	01 03                	add    %eax,(%rbx)
    3c54:	54                   	push   %rsp
    3c55:	01 0a                	add    %ecx,(%rdx)
    3c57:	0e                   	(bad)  
    3c58:	38 41 0e             	cmp    %al,0xe(%rcx)
    3c5b:	30 41 0e             	xor    %al,0xe(%rcx)
    3c5e:	28 42 0e             	sub    %al,0xe(%rdx)
    3c61:	20 42 0e             	and    %al,0xe(%rdx)
    3c64:	18 42 0e             	sbb    %al,0xe(%rdx)
    3c67:	10 42 0e             	adc    %al,0xe(%rdx)
    3c6a:	08 41 0b             	or     %al,0xb(%rcx)
    3c6d:	00 00                	add    %al,(%rax)
    3c6f:	00 10                	add    %dl,(%rax)
    3c71:	00 00                	add    %al,(%rax)
    3c73:	00 84 05 00 00 2a f0 	add    %al,-0xfd60000(%rbp,%rax,1)
    3c7a:	ff                   	(bad)  
    3c7b:	ff 45 00             	incl   0x0(%rbp)
    3c7e:	00 00                	add    %al,(%rax)
    3c80:	00 00                	add    %al,(%rax)
    3c82:	00 00                	add    %al,(%rax)
    3c84:	10 00                	adc    %al,(%rax)
    3c86:	00 00                	add    %al,(%rax)
    3c88:	98                   	cwtl   
    3c89:	05 00 00 5b f0       	add    $0xf05b0000,%eax
    3c8e:	ff                   	(bad)  
    3c8f:	ff 2c 00             	ljmp   *(%rax,%rax,1)
    3c92:	00 00                	add    %al,(%rax)
    3c94:	00 00                	add    %al,(%rax)
    3c96:	00 00                	add    %al,(%rax)
    3c98:	18 00                	sbb    %al,(%rax)
    3c9a:	00 00                	add    %al,(%rax)
    3c9c:	ac                   	lods   %ds:(%rsi),%al
    3c9d:	05 00 00 73 f0       	add    $0xf0730000,%eax
    3ca2:	ff                   	(bad)  
    3ca3:	ff 20                	jmpq   *(%rax)
    3ca5:	00 00                	add    %al,(%rax)
    3ca7:	00 00                	add    %al,(%rax)
    3ca9:	45 0e                	rex.RB (bad) 
    3cab:	10 83 02 5a 0e 08    	adc    %al,0x80e5a02(%rbx)
    3cb1:	00 00                	add    %al,(%rax)
    3cb3:	00 18                	add    %bl,(%rax)
    3cb5:	00 00                	add    %al,(%rax)
    3cb7:	00 c8                	add    %cl,%al
    3cb9:	05 00 00 77 f0       	add    $0xf0770000,%eax
    3cbe:	ff                   	(bad)  
    3cbf:	ff 21                	jmpq   *(%rcx)
    3cc1:	00 00                	add    %al,(%rax)
    3cc3:	00 00                	add    %al,(%rax)
    3cc5:	45 0e                	rex.RB (bad) 
    3cc7:	10 83 02 5b 0e 08    	adc    %al,0x80e5b02(%rbx)
    3ccd:	00 00                	add    %al,(%rax)
    3ccf:	00 10                	add    %dl,(%rax)
    3cd1:	00 00                	add    %al,(%rax)
    3cd3:	00 e4                	add    %ah,%ah
    3cd5:	05 00 00 7c f0       	add    $0xf07c0000,%eax
    3cda:	ff                   	(bad)  
    3cdb:	ff 10                	callq  *(%rax)
    3cdd:	00 00                	add    %al,(%rax)
    3cdf:	00 00                	add    %al,(%rax)
    3ce1:	00 00                	add    %al,(%rax)
    3ce3:	00 10                	add    %dl,(%rax)
    3ce5:	00 00                	add    %al,(%rax)
    3ce7:	00 f8                	add    %bh,%al
    3ce9:	05 00 00 78 f0       	add    $0xf0780000,%eax
    3cee:	ff                   	(bad)  
    3cef:	ff 0a                	decl   (%rdx)
    3cf1:	00 00                	add    %al,(%rax)
    3cf3:	00 00                	add    %al,(%rax)
    3cf5:	00 00                	add    %al,(%rax)
    3cf7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3cfa:	00 00                	add    %al,(%rax)
    3cfc:	0c 06                	or     $0x6,%al
    3cfe:	00 00                	add    %al,(%rax)
    3d00:	6e                   	outsb  %ds:(%rsi),(%dx)
    3d01:	f0 ff                	lock (bad) 
    3d03:	ff 12                	callq  *(%rdx)
    3d05:	00 00                	add    %al,(%rax)
    3d07:	00 00                	add    %al,(%rax)
    3d09:	48 0e                	rex.W (bad) 
    3d0b:	10 49 0e             	adc    %cl,0xe(%rcx)
    3d0e:	08 00                	or     %al,(%rax)
    3d10:	14 00                	adc    $0x0,%al
    3d12:	00 00                	add    %al,(%rax)
    3d14:	24 06                	and    $0x6,%al
    3d16:	00 00                	add    %al,(%rax)
    3d18:	68 f0 ff ff 12       	pushq  $0x12fffff0
    3d1d:	00 00                	add    %al,(%rax)
    3d1f:	00 00                	add    %al,(%rax)
    3d21:	48 0e                	rex.W (bad) 
    3d23:	10 49 0e             	adc    %cl,0xe(%rcx)
    3d26:	08 00                	or     %al,(%rax)
    3d28:	14 00                	adc    $0x0,%al
    3d2a:	00 00                	add    %al,(%rax)
    3d2c:	3c 06                	cmp    $0x6,%al
    3d2e:	00 00                	add    %al,(%rax)
    3d30:	62                   	(bad)  
    3d31:	f0 ff                	lock (bad) 
    3d33:	ff 1e                	lcall  *(%rsi)
    3d35:	00 00                	add    %al,(%rax)
    3d37:	00 00                	add    %al,(%rax)
    3d39:	48 0e                	rex.W (bad) 
    3d3b:	10 55 0e             	adc    %dl,0xe(%rbp)
    3d3e:	08 00                	or     %al,(%rax)
    3d40:	14 00                	adc    $0x0,%al
    3d42:	00 00                	add    %al,(%rax)
    3d44:	54                   	push   %rsp
    3d45:	06                   	(bad)  
    3d46:	00 00                	add    %al,(%rax)
    3d48:	68 f0 ff ff 1e       	pushq  $0x1efffff0
    3d4d:	00 00                	add    %al,(%rax)
    3d4f:	00 00                	add    %al,(%rax)
    3d51:	48 0e                	rex.W (bad) 
    3d53:	10 55 0e             	adc    %dl,0xe(%rbp)
    3d56:	08 00                	or     %al,(%rax)
    3d58:	10 00                	adc    %al,(%rax)
    3d5a:	00 00                	add    %al,(%rax)
    3d5c:	6c                   	insb   (%dx),%es:(%rdi)
    3d5d:	06                   	(bad)  
    3d5e:	00 00                	add    %al,(%rax)
    3d60:	6e                   	outsb  %ds:(%rsi),(%dx)
    3d61:	f0 ff                	lock (bad) 
    3d63:	ff 47 00             	incl   0x0(%rdi)
    3d66:	00 00                	add    %al,(%rax)
    3d68:	00 00                	add    %al,(%rax)
    3d6a:	00 00                	add    %al,(%rax)
    3d6c:	10 00                	adc    %al,(%rax)
    3d6e:	00 00                	add    %al,(%rax)
    3d70:	80 06 00             	addb   $0x0,(%rsi)
    3d73:	00 a1 f0 ff ff 16    	add    %ah,0x16fffff0(%rcx)
    3d79:	00 00                	add    %al,(%rax)
    3d7b:	00 00                	add    %al,(%rax)
    3d7d:	00 00                	add    %al,(%rax)
    3d7f:	00 10                	add    %dl,(%rax)
    3d81:	00 00                	add    %al,(%rax)
    3d83:	00 94 06 00 00 a3 f0 	add    %dl,-0xf5d0000(%rsi,%rax,1)
    3d8a:	ff                   	(bad)  
    3d8b:	ff 08                	decl   (%rax)
    3d8d:	00 00                	add    %al,(%rax)
    3d8f:	00 00                	add    %al,(%rax)
    3d91:	00 00                	add    %al,(%rax)
    3d93:	00 10                	add    %dl,(%rax)
    3d95:	00 00                	add    %al,(%rax)
    3d97:	00 a8 06 00 00 97    	add    %ch,-0x68fffffa(%rax)
    3d9d:	f0 ff                	lock (bad) 
    3d9f:	ff 08                	decl   (%rax)
    3da1:	00 00                	add    %al,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    3dab:	00 bc 06 00 00 90 f0 	add    %bh,-0xf700000(%rsi,%rax,1)
    3db2:	ff                   	(bad)  
    3db3:	ff 65 00             	jmpq   *0x0(%rbp)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	00 46 0e             	add    %al,0xe(%rsi)
    3dbb:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    3dc1:	8e 03                	mov    (%rbx),%es
    3dc3:	45 0e                	rex.RB (bad) 
    3dc5:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    3dcb:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86304c15 <_end+0xffffffff862feba5>
    3dd1:	06                   	(bad)  
    3dd2:	48 0e                	rex.W (bad) 
    3dd4:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    3dda:	6e                   	outsb  %ds:(%rsi),(%dx)
    3ddb:	0e                   	(bad)  
    3ddc:	38 41 0e             	cmp    %al,0xe(%rcx)
    3ddf:	30 41 0e             	xor    %al,0xe(%rcx)
    3de2:	28 42 0e             	sub    %al,0xe(%rdx)
    3de5:	20 42 0e             	and    %al,0xe(%rdx)
    3de8:	18 42 0e             	sbb    %al,0xe(%rdx)
    3deb:	10 42 0e             	adc    %al,0xe(%rdx)
    3dee:	08 00                	or     %al,(%rax)
    3df0:	10 00                	adc    %al,(%rax)
    3df2:	00 00                	add    %al,(%rax)
    3df4:	04 07                	add    $0x7,%al
    3df6:	00 00                	add    %al,(%rax)
    3df8:	b8 f0 ff ff 05       	mov    $0x5fffff0,%eax
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 00                	add    %al,(%rax)
    3e01:	00 00                	add    %al,(%rax)
	...

0000000000003e04 <__FRAME_END__>:
    3e04:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000005cf0 <__frame_dummy_init_array_entry>:
    5cf0:	00 12                	add    %dl,(%rdx)
    5cf2:	00 00                	add    %al,(%rax)
    5cf4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000005cf8 <__do_global_dtors_aux_fini_array_entry>:
    5cf8:	c0 11 00             	rclb   $0x0,(%rcx)
    5cfb:	00 00                	add    %al,(%rax)
    5cfd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.rel.ro:

0000000000005d00 <errpat>:
    5d00:	d0 34 00             	shlb   (%rax,%rax,1)
    5d03:	00 00                	add    %al,(%rax)
    5d05:	00 00                	add    %al,(%rax)
    5d07:	00 d9                	add    %bl,%cl
    5d09:	34 00                	xor    $0x0,%al
    5d0b:	00 00                	add    %al,(%rax)
    5d0d:	00 00                	add    %al,(%rax)
    5d0f:	00 e2                	add    %ah,%dl
    5d11:	34 00                	xor    $0x0,%al
    5d13:	00 00                	add    %al,(%rax)
    5d15:	00 00                	add    %al,(%rax)
    5d17:	00 eb                	add    %ch,%bl
    5d19:	34 00                	xor    $0x0,%al
    5d1b:	00 00                	add    %al,(%rax)
    5d1d:	00 00                	add    %al,(%rax)
	...

0000000000005d20 <scipat>:
    5d20:	f4                   	hlt    
    5d21:	34 00                	xor    $0x0,%al
    5d23:	00 00                	add    %al,(%rax)
    5d25:	00 00                	add    %al,(%rax)
    5d27:	00 fd                	add    %bh,%ch
    5d29:	34 00                	xor    $0x0,%al
    5d2b:	00 00                	add    %al,(%rax)
    5d2d:	00 00                	add    %al,(%rax)
    5d2f:	00 06                	add    %al,(%rsi)
    5d31:	35 00 00 00 00       	xor    $0x0,%eax
    5d36:	00 00                	add    %al,(%rax)
    5d38:	0f 35                	sysexit 
    5d3a:	00 00                	add    %al,(%rax)
    5d3c:	00 00                	add    %al,(%rax)
	...

0000000000005d40 <floatpat>:
    5d40:	18 35 00 00 00 00    	sbb    %dh,0x0(%rip)        # 5d46 <floatpat+0x6>
    5d46:	00 00                	add    %al,(%rax)
    5d48:	21 35 00 00 00 00    	and    %esi,0x0(%rip)        # 5d4e <floatpat+0xe>
    5d4e:	00 00                	add    %al,(%rax)
    5d50:	2a 35 00 00 00 00    	sub    0x0(%rip),%dh        # 5d56 <floatpat+0x16>
    5d56:	00 00                	add    %al,(%rax)
    5d58:	33 35 00 00 00 00    	xor    0x0(%rip),%esi        # 5d5e <floatpat+0x1e>
	...

0000000000005d60 <intpat>:
    5d60:	3c 35                	cmp    $0x35,%al
    5d62:	00 00                	add    %al,(%rax)
    5d64:	00 00                	add    %al,(%rax)
    5d66:	00 00                	add    %al,(%rax)
    5d68:	41 35 00 00 00 00    	rex.B xor $0x0,%eax
    5d6e:	00 00                	add    %al,(%rax)
    5d70:	46 35 00 00 00 00    	rex.RX xor $0x0,%eax
    5d76:	00 00                	add    %al,(%rax)
    5d78:	4b 35 00 00 00 00    	rex.WXB xor $0x0,%rax
	...

Disassembly of section .dynamic:

0000000000005d80 <_DYNAMIC>:
    5d80:	01 00                	add    %eax,(%rax)
    5d82:	00 00                	add    %al,(%rax)
    5d84:	00 00                	add    %al,(%rax)
    5d86:	00 00                	add    %al,(%rax)
    5d88:	01 00                	add    %eax,(%rax)
    5d8a:	00 00                	add    %al,(%rax)
    5d8c:	00 00                	add    %al,(%rax)
    5d8e:	00 00                	add    %al,(%rax)
    5d90:	0c 00                	or     $0x0,%al
    5d92:	00 00                	add    %al,(%rax)
    5d94:	00 00                	add    %al,(%rax)
    5d96:	00 00                	add    %al,(%rax)
    5d98:	00 10                	add    %dl,(%rax)
    5d9a:	00 00                	add    %al,(%rax)
    5d9c:	00 00                	add    %al,(%rax)
    5d9e:	00 00                	add    %al,(%rax)
    5da0:	0d 00 00 00 00       	or     $0x0,%eax
    5da5:	00 00                	add    %al,(%rax)
    5da7:	00 b8 2e 00 00 00    	add    %bh,0x2e(%rax)
    5dad:	00 00                	add    %al,(%rax)
    5daf:	00 19                	add    %bl,(%rcx)
    5db1:	00 00                	add    %al,(%rax)
    5db3:	00 00                	add    %al,(%rax)
    5db5:	00 00                	add    %al,(%rax)
    5db7:	00 f0                	add    %dh,%al
    5db9:	5c                   	pop    %rsp
    5dba:	00 00                	add    %al,(%rax)
    5dbc:	00 00                	add    %al,(%rax)
    5dbe:	00 00                	add    %al,(%rax)
    5dc0:	1b 00                	sbb    (%rax),%eax
    5dc2:	00 00                	add    %al,(%rax)
    5dc4:	00 00                	add    %al,(%rax)
    5dc6:	00 00                	add    %al,(%rax)
    5dc8:	08 00                	or     %al,(%rax)
    5dca:	00 00                	add    %al,(%rax)
    5dcc:	00 00                	add    %al,(%rax)
    5dce:	00 00                	add    %al,(%rax)
    5dd0:	1a 00                	sbb    (%rax),%al
    5dd2:	00 00                	add    %al,(%rax)
    5dd4:	00 00                	add    %al,(%rax)
    5dd6:	00 00                	add    %al,(%rax)
    5dd8:	f8                   	clc    
    5dd9:	5c                   	pop    %rsp
    5dda:	00 00                	add    %al,(%rax)
    5ddc:	00 00                	add    %al,(%rax)
    5dde:	00 00                	add    %al,(%rax)
    5de0:	1c 00                	sbb    $0x0,%al
    5de2:	00 00                	add    %al,(%rax)
    5de4:	00 00                	add    %al,(%rax)
    5de6:	00 00                	add    %al,(%rax)
    5de8:	08 00                	or     %al,(%rax)
    5dea:	00 00                	add    %al,(%rax)
    5dec:	00 00                	add    %al,(%rax)
    5dee:	00 00                	add    %al,(%rax)
    5df0:	f5                   	cmc    
    5df1:	fe                   	(bad)  
    5df2:	ff 6f 00             	ljmp   *0x0(%rdi)
    5df5:	00 00                	add    %al,(%rax)
    5df7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    5dfd:	00 00                	add    %al,(%rax)
    5dff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5e05 <_DYNAMIC+0x85>
    5e05:	00 00                	add    %al,(%rax)
    5e07:	00 00                	add    %al,(%rax)
    5e09:	05 00 00 00 00       	add    $0x0,%eax
    5e0e:	00 00                	add    %al,(%rax)
    5e10:	06                   	(bad)  
    5e11:	00 00                	add    %al,(%rax)
    5e13:	00 00                	add    %al,(%rax)
    5e15:	00 00                	add    %al,(%rax)
    5e17:	00 c8                	add    %cl,%al
    5e19:	03 00                	add    (%rax),%eax
    5e1b:	00 00                	add    %al,(%rax)
    5e1d:	00 00                	add    %al,(%rax)
    5e1f:	00 0a                	add    %cl,(%rdx)
    5e21:	00 00                	add    %al,(%rax)
    5e23:	00 00                	add    %al,(%rax)
    5e25:	00 00                	add    %al,(%rax)
    5e27:	00 e3                	add    %ah,%bl
    5e29:	00 00                	add    %al,(%rax)
    5e2b:	00 00                	add    %al,(%rax)
    5e2d:	00 00                	add    %al,(%rax)
    5e2f:	00 0b                	add    %cl,(%rbx)
    5e31:	00 00                	add    %al,(%rax)
    5e33:	00 00                	add    %al,(%rax)
    5e35:	00 00                	add    %al,(%rax)
    5e37:	00 18                	add    %bl,(%rax)
    5e39:	00 00                	add    %al,(%rax)
    5e3b:	00 00                	add    %al,(%rax)
    5e3d:	00 00                	add    %al,(%rax)
    5e3f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 5e45 <_DYNAMIC+0xc5>
	...
    5e4d:	00 00                	add    %al,(%rax)
    5e4f:	00 03                	add    %al,(%rbx)
    5e51:	00 00                	add    %al,(%rax)
    5e53:	00 00                	add    %al,(%rax)
    5e55:	00 00                	add    %al,(%rax)
    5e57:	00 70 5f             	add    %dh,0x5f(%rax)
    5e5a:	00 00                	add    %al,(%rax)
    5e5c:	00 00                	add    %al,(%rax)
    5e5e:	00 00                	add    %al,(%rax)
    5e60:	02 00                	add    (%rax),%al
    5e62:	00 00                	add    %al,(%rax)
    5e64:	00 00                	add    %al,(%rax)
    5e66:	00 00                	add    %al,(%rax)
    5e68:	a8 00                	test   $0x0,%al
    5e6a:	00 00                	add    %al,(%rax)
    5e6c:	00 00                	add    %al,(%rax)
    5e6e:	00 00                	add    %al,(%rax)
    5e70:	14 00                	adc    $0x0,%al
    5e72:	00 00                	add    %al,(%rax)
    5e74:	00 00                	add    %al,(%rax)
    5e76:	00 00                	add    %al,(%rax)
    5e78:	07                   	(bad)  
    5e79:	00 00                	add    %al,(%rax)
    5e7b:	00 00                	add    %al,(%rax)
    5e7d:	00 00                	add    %al,(%rax)
    5e7f:	00 17                	add    %dl,(%rdi)
    5e81:	00 00                	add    %al,(%rax)
    5e83:	00 00                	add    %al,(%rax)
    5e85:	00 00                	add    %al,(%rax)
    5e87:	00 d8                	add    %bl,%al
    5e89:	08 00                	or     %al,(%rax)
    5e8b:	00 00                	add    %al,(%rax)
    5e8d:	00 00                	add    %al,(%rax)
    5e8f:	00 07                	add    %al,(%rdi)
    5e91:	00 00                	add    %al,(%rax)
    5e93:	00 00                	add    %al,(%rax)
    5e95:	00 00                	add    %al,(%rax)
    5e97:	00 50 06             	add    %dl,0x6(%rax)
    5e9a:	00 00                	add    %al,(%rax)
    5e9c:	00 00                	add    %al,(%rax)
    5e9e:	00 00                	add    %al,(%rax)
    5ea0:	08 00                	or     %al,(%rax)
    5ea2:	00 00                	add    %al,(%rax)
    5ea4:	00 00                	add    %al,(%rax)
    5ea6:	00 00                	add    %al,(%rax)
    5ea8:	88 02                	mov    %al,(%rdx)
    5eaa:	00 00                	add    %al,(%rax)
    5eac:	00 00                	add    %al,(%rax)
    5eae:	00 00                	add    %al,(%rax)
    5eb0:	09 00                	or     %eax,(%rax)
    5eb2:	00 00                	add    %al,(%rax)
    5eb4:	00 00                	add    %al,(%rax)
    5eb6:	00 00                	add    %al,(%rax)
    5eb8:	18 00                	sbb    %al,(%rax)
    5eba:	00 00                	add    %al,(%rax)
    5ebc:	00 00                	add    %al,(%rax)
    5ebe:	00 00                	add    %al,(%rax)
    5ec0:	1e                   	(bad)  
    5ec1:	00 00                	add    %al,(%rax)
    5ec3:	00 00                	add    %al,(%rax)
    5ec5:	00 00                	add    %al,(%rax)
    5ec7:	00 08                	add    %cl,(%rax)
    5ec9:	00 00                	add    %al,(%rax)
    5ecb:	00 00                	add    %al,(%rax)
    5ecd:	00 00                	add    %al,(%rax)
    5ecf:	00 fb                	add    %bh,%bl
    5ed1:	ff                   	(bad)  
    5ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    5ed5:	00 00                	add    %al,(%rax)
    5ed7:	00 01                	add    %al,(%rcx)
    5ed9:	00 00                	add    %al,(%rax)
    5edb:	08 00                	or     %al,(%rax)
    5edd:	00 00                	add    %al,(%rax)
    5edf:	00 fe                	add    %bh,%dh
    5ee1:	ff                   	(bad)  
    5ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
    5ee5:	00 00                	add    %al,(%rax)
    5ee7:	00 00                	add    %al,(%rax)
    5ee9:	06                   	(bad)  
    5eea:	00 00                	add    %al,(%rax)
    5eec:	00 00                	add    %al,(%rax)
    5eee:	00 00                	add    %al,(%rax)
    5ef0:	ff                   	(bad)  
    5ef1:	ff                   	(bad)  
    5ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    5ef5:	00 00                	add    %al,(%rax)
    5ef7:	00 01                	add    %al,(%rcx)
    5ef9:	00 00                	add    %al,(%rax)
    5efb:	00 00                	add    %al,(%rax)
    5efd:	00 00                	add    %al,(%rax)
    5eff:	00 f0                	add    %dh,%al
    5f01:	ff                   	(bad)  
    5f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f05:	00 00                	add    %al,(%rax)
    5f07:	00 e4                	add    %ah,%ah
    5f09:	05 00 00 00 00       	add    $0x0,%eax
    5f0e:	00 00                	add    %al,(%rax)
    5f10:	f9                   	stc    
    5f11:	ff                   	(bad)  
    5f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    5f15:	00 00                	add    %al,(%rax)
    5f17:	00 16                	add    %dl,(%rsi)
	...

Disassembly of section .got:

0000000000005f70 <_GLOBAL_OFFSET_TABLE_>:
    5f70:	80 5d 00 00          	sbbb   $0x0,0x0(%rbp)
	...
    5f88:	30 10                	xor    %dl,(%rax)
    5f8a:	00 00                	add    %al,(%rax)
    5f8c:	00 00                	add    %al,(%rax)
    5f8e:	00 00                	add    %al,(%rax)
    5f90:	40 10 00             	adc    %al,(%rax)
    5f93:	00 00                	add    %al,(%rax)
    5f95:	00 00                	add    %al,(%rax)
    5f97:	00 50 10             	add    %dl,0x10(%rax)
    5f9a:	00 00                	add    %al,(%rax)
    5f9c:	00 00                	add    %al,(%rax)
    5f9e:	00 00                	add    %al,(%rax)
    5fa0:	60                   	(bad)  
    5fa1:	10 00                	adc    %al,(%rax)
    5fa3:	00 00                	add    %al,(%rax)
    5fa5:	00 00                	add    %al,(%rax)
    5fa7:	00 70 10             	add    %dh,0x10(%rax)
    5faa:	00 00                	add    %al,(%rax)
    5fac:	00 00                	add    %al,(%rax)
    5fae:	00 00                	add    %al,(%rax)
    5fb0:	80 10 00             	adcb   $0x0,(%rax)
    5fb3:	00 00                	add    %al,(%rax)
    5fb5:	00 00                	add    %al,(%rax)
    5fb7:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     %ah,0x0(%rax)
    600b:	00 00                	add    %al,(%rax)
    600d:	00 00                	add    %al,(%rax)
	...

0000000000006010 <mem_name>:
    6010:	54                   	push   %rsp
    6011:	34 00                	xor    $0x0,%al
    6013:	00 00                	add    %al,(%rax)
    6015:	00 00                	add    %al,(%rax)
    6017:	00 5b 34             	add    %bl,0x34(%rbx)
    601a:	00 00                	add    %al,(%rax)
    601c:	00 00                	add    %al,(%rax)
    601e:	00 00                	add    %al,(%rax)
    6020:	60                   	(bad)  
    6021:	34 00                	xor    $0x0,%al
    6023:	00 00                	add    %al,(%rax)
    6025:	00 00                	add    %al,(%rax)
	...

0000000000006028 <default_num_contexts>:
    6028:	01 00                	add    %eax,(%rax)
	...

000000000000602c <seed3_volatile>:
    602c:	66 00 00             	data16 add %al,(%rax)
	...

Disassembly of section .bss:

0000000000006030 <completed.8061>:
	...

0000000000006040 <seed5_volatile>:
    6040:	00 00                	add    %al,(%rax)
	...

0000000000006044 <seed4_volatile>:
    6044:	00 00                	add    %al,(%rax)
	...

0000000000006048 <seed2_volatile>:
    6048:	00 00                	add    %al,(%rax)
	...

000000000000604c <seed1_volatile>:
    604c:	00 00                	add    %al,(%rax)
	...

0000000000006050 <stop_time_val>:
	...

0000000000006060 <start_time_val>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x756214d8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
